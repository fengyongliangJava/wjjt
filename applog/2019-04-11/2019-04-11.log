2019-04-11 08:30:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 13208 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 08:30:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 08:30:31 -The following profiles are active: dev
2019-04-11 08:30:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 08:30:31 CST 2019]; root of context hierarchy
2019-04-11 08:30:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 08:30:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$98b2b292] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8b0be139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 08:30:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 08:30:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 08:30:45 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 08:30:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 08:30:45 -Starting service [Tomcat]
2019-04-11 08:30:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 08:30:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 08:30:46 -Initializing Spring embedded WebApplicationContext
2019-04-11 08:30:46 -Root WebApplicationContext: initialization completed in 14182 ms
2019-04-11 08:30:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 08:30:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 08:30:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 08:30:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 08:30:47 -Filter xssFilter was not registered (disabled)
2019-04-11 08:30:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 08:30:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 08:30:47 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 08:30:47 -Servlet dispatcherServlet mapped to [/]
2019-04-11 08:30:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 08:30:31 CST 2019]; root of context hierarchy
2019-04-11 08:30:51 -Using default implementation for ThreadExecutor
2019-04-11 08:30:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 08:30:51 -Quartz Scheduler v.2.2.1 created.
2019-04-11 08:30:51 -RAMJobStore initialized.
2019-04-11 08:30:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 08:30:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 08:30:51 -Quartz scheduler version: 2.2.1
2019-04-11 08:30:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@f95d64d
2019-04-11 08:30:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 08:30:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 08:30:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 08:30:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 08:30:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 08:30:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 08:30:55 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 08:30:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 08:30:55 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 08:30:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 08:30:55 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableElecMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 08:30:55 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 08:30:55 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 08:30:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 08:30:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 08:30:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 08:30:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 08:30:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 08:30:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 08:30:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 08:30:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 08:30:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 08:30:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 08:30:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 08:30:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 08:30:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 08:30:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 08:30:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 08:30:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 08:30:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 08:30:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 08:30:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 08:30:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 08:30:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 08:30:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 08:30:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 08:30:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 08:30:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 08:30:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 08:30:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 08:30:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 08:30:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 08:30:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 08:30:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 08:30:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 08:30:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 08:30:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 08:30:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 08:30:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 08:30:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 08:30:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 08:30:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 08:30:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 08:30:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 08:30:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 08:30:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 08:30:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 08:30:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 08:30:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 08:30:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 08:30:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 08:30:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 08:30:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 08:30:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 08:30:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 08:30:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 08:30:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 08:30:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 08:30:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 08:30:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 08:30:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 08:30:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 08:30:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 08:30:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 08:30:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 08:30:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 08:30:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 08:30:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 08:30:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 08:30:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 08:30:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 08:30:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 08:30:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 08:30:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 08:30:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 08:30:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 08:30:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 08:30:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 08:30:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 08:30:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 08:30:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 08:30:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 08:30:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 08:30:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 08:30:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 08:30:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 08:30:31 CST 2019]; root of context hierarchy
2019-04-11 08:30:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 08:30:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 08:30:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 08:30:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 08:30:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 08:31:00 -Registering beans for JMX exposure on startup
2019-04-11 08:31:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 08:31:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 08:31:00 -Starting beans in phase 2147483647
2019-04-11 08:31:00 -Context refreshed
2019-04-11 08:31:01 -Found 1 custom documentation plugin(s)
2019-04-11 08:31:01 -Scanning for api listing references
2019-04-11 08:31:01 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 08:31:01 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 08:31:01 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 08:31:01 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 08:31:01 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 08:31:01 -Generating unique operation named: removeUsingPOST_1
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_2
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_3
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_2
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_2
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_2
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_4
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_5
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_2
2019-04-11 08:31:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_6
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_7
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_4
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_4
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_4
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_8
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_9
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 08:31:02 -Generating unique operation named: ElecUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_5
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_5
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_5
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_10
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_11
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_6
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_6
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_6
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_7
2019-04-11 08:31:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_7
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_12
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_13
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 08:31:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_7
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_8
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_8
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_14
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_15
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_8
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_8
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_9
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_9
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_16
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_17
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_8
2019-04-11 08:31:02 -Generating unique operation named: updateUsingGET_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_9
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPUT_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 08:31:02 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_9
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_10
2019-04-11 08:31:02 -Generating unique operation named: infoUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingPOST_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingPUT_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 08:31:02 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_10
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_18
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_19
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_9
2019-04-11 08:31:02 -Generating unique operation named: updateUsingPOST_10
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_11
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_20
2019-04-11 08:31:02 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: addUsingGET_10
2019-04-11 08:31:02 -Generating unique operation named: editUsingGET_11
2019-04-11 08:31:02 -Generating unique operation named: listUsingGET_12
2019-04-11 08:31:02 -Generating unique operation named: removeUsingPOST_21
2019-04-11 08:31:02 -Generating unique operation named: saveUsingPOST_10
2019-04-11 08:31:02 -Generating unique operation named: treeUsingGET_1
2019-04-11 08:31:02 -Generating unique operation named: treeUsingGET_2
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_11
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_11
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_12
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_13
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_22
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_23
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingGET_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPUT_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 08:31:03 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_12
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_13
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_14
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_24
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_25
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingGET_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_13
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPUT_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 08:31:03 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_13
2019-04-11 08:31:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_14
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_15
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_13
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_14
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_14
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_16
2019-04-11 08:31:03 -Generating unique operation named: listUsingHEAD_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingPOST_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingPUT_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingPATCH_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingDELETE_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 08:31:03 -Generating unique operation named: listUsingTRACE_1
2019-04-11 08:31:03 -Generating unique operation named: countDDUsingGET_1
2019-04-11 08:31:03 -Generating unique operation named: exprotDDUsingGET_1
2019-04-11 08:31:03 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 08:31:03 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 08:31:03 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 08:31:03 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 08:31:03 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 08:31:03 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 08:31:03 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_14
2019-04-11 08:31:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_15
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_17
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_26
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_15
2019-04-11 08:31:03 -Generating unique operation named: treeUsingGET_3
2019-04-11 08:31:03 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_15
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_15
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_16
2019-04-11 08:31:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_18
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_27
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_28
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_16
2019-04-11 08:31:03 -Generating unique operation named: updateUsingGET_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_16
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPUT_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 08:31:03 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 08:31:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_16
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_17
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_19
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_29
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_30
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_17
2019-04-11 08:31:03 -Generating unique operation named: updateUsingGET_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_17
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPUT_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 08:31:03 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 08:31:03 -Generating unique operation named: addUsingGET_17
2019-04-11 08:31:03 -Generating unique operation named: editUsingGET_18
2019-04-11 08:31:03 -Generating unique operation named: listUsingGET_20
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_31
2019-04-11 08:31:03 -Generating unique operation named: removeUsingPOST_32
2019-04-11 08:31:03 -Generating unique operation named: saveUsingPOST_18
2019-04-11 08:31:03 -Generating unique operation named: updateUsingGET_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPOST_18
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPUT_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 08:31:03 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 08:31:03 -Starting Quartz Scheduler now
2019-04-11 08:31:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 08:31:03 -Starting...
2019-04-11 08:31:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 08:31:03 -Started.
2019-04-11 08:31:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 08:31:03 -Using a shared selector for servlet write/read
2019-04-11 08:31:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 08:31:03 -Started BootdoApplication in 33.838 seconds (JVM running for 34.84)
2019-04-11 08:31:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 08:31:04 -==> Parameters: 
2019-04-11 08:31:04 -<==      Total: 1
2019-04-11 08:31:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-11 08:33:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 08:33:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 08:33:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-04-11 08:33:35 -Enabling session validation scheduler...
2019-04-11 08:33:35 -请求地址 : http://localhost:8081/login;JSESSIONID=6213691e-8021-4d87-a103-234b764db5c2
2019-04-11 08:33:35 -HTTP METHOD : GET
2019-04-11 08:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 08:33:35 -参数 : [{}]
2019-04-11 08:33:35 -耗时 : 3
2019-04-11 08:33:35 -返回值 : login
2019-04-11 08:33:38 -请求地址 : http://localhost:8081/getVerify
2019-04-11 08:33:38 -HTTP METHOD : GET
2019-04-11 08:33:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 08:33:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e0eb388, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f903957]
2019-04-11 08:33:48 -9970
2019-04-11 08:33:48 -耗时 : 9531
2019-04-11 08:33:48 -返回值 : null
2019-04-11 08:33:54 -请求地址 : http://localhost:8081/login
2019-04-11 08:33:54 -HTTP METHOD : POST
2019-04-11 08:33:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 08:33:54 -参数 : [admin, 111111, 9970, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2405ca8d]
2019-04-11 08:33:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 08:33:54 -==> Parameters: admin(String)
2019-04-11 08:33:54 -<==      Total: 1
2019-04-11 08:33:54 -耗时 : 230
2019-04-11 08:33:54 -返回值 : {msg=操作成功, code=0}
2019-04-11 08:33:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 08:33:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:33:54 -==> Parameters: 1(Long), admin(String), 登录(String), 231(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 08:33:54.781(Timestamp)
2019-04-11 08:33:54 -<==    Updates: 1
2019-04-11 08:33:55 -请求地址 : http://localhost:8081/index
2019-04-11 08:33:55 -HTTP METHOD : GET
2019-04-11 08:33:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:33:55 -参数 : [{}]
2019-04-11 08:33:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:33:55 -==> Parameters: 1(Long)
2019-04-11 08:33:55 -<==      Total: 48
2019-04-11 08:33:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:33:55 -==> Parameters: 138(Long)
2019-04-11 08:33:55 -<==      Total: 1
2019-04-11 08:33:55 -耗时 : 505
2019-04-11 08:33:55 -返回值 : index_v1
2019-04-11 08:33:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:33:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 505(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:33:55.777(Timestamp)
2019-04-11 08:33:55 -<==    Updates: 1
2019-04-11 08:33:56 -请求地址 : http://localhost:8081/main
2019-04-11 08:33:56 -HTTP METHOD : GET
2019-04-11 08:33:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:33:56 -参数 : []
2019-04-11 08:33:56 -耗时 : 2
2019-04-11 08:33:56 -返回值 : main
2019-04-11 08:33:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:33:58 -HTTP METHOD : GET
2019-04-11 08:33:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:33:58 -参数 : []
2019-04-11 08:33:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:33:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:33:58 -<==      Total: 0
2019-04-11 08:33:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:33:58 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:33:58 -<==      Total: 1
2019-04-11 08:33:58 -耗时 : 35
2019-04-11 08:33:58 -返回值 : com.bootdo.common.utils.PageUtils@7879e7ea
2019-04-11 08:33:58 -请求地址 : http://localhost:8081/main
2019-04-11 08:33:58 -HTTP METHOD : GET
2019-04-11 08:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:33:58 -参数 : []
2019-04-11 08:33:58 -耗时 : 1
2019-04-11 08:33:58 -返回值 : main
2019-04-11 08:34:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 08:34:26 -==> Parameters: 1(Long)
2019-04-11 08:34:26 -<==      Total: 92
2019-04-11 08:34:26 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 08:34:26 -HTTP METHOD : GET
2019-04-11 08:34:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 08:34:26 -参数 : []
2019-04-11 08:34:26 -耗时 : 1
2019-04-11 08:34:26 -返回值 : /moneyList/moneyList
2019-04-11 08:35:10 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 08:35:10 -HTTP METHOD : GET
2019-04-11 08:35:10 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 08:35:10 -参数 : []
2019-04-11 08:35:10 -耗时 : 16
2019-04-11 08:35:10 -返回值 : charts/countDD
2019-04-11 08:35:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 08:35:11 -HTTP METHOD : GET
2019-04-11 08:35:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 08:35:11 -参数 : [userType]
2019-04-11 08:35:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 08:35:11 -==> Parameters: userType(String)
2019-04-11 08:35:11 -<==      Total: 4
2019-04-11 08:35:11 -耗时 : 23
2019-04-11 08:35:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 08:35:12 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 08:35:12 -HTTP METHOD : GET
2019-04-11 08:35:12 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 08:35:12 -参数 : []
2019-04-11 08:35:12 -耗时 : 8
2019-04-11 08:35:12 -返回值 : charts/tableDD
2019-04-11 08:35:12 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 08:35:12 -HTTP METHOD : GET
2019-04-11 08:35:12 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 08:35:12 -参数 : []
2019-04-11 08:35:12 -耗时 : 11
2019-04-11 08:35:12 -返回值 : charts/countMM
2019-04-11 08:35:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:35:41 -HTTP METHOD : GET
2019-04-11 08:35:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:35:41 -参数 : []
2019-04-11 08:35:41 -耗时 : 9
2019-04-11 08:35:41 -返回值 : charts/tableElecMM
2019-04-11 08:38:16 -请求地址 : http://localhost:8081/index
2019-04-11 08:38:16 -HTTP METHOD : GET
2019-04-11 08:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:38:16 -参数 : [{}]
2019-04-11 08:38:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:38:16 -==> Parameters: 1(Long)
2019-04-11 08:38:16 -<==      Total: 48
2019-04-11 08:38:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:38:16 -==> Parameters: 138(Long)
2019-04-11 08:38:16 -<==      Total: 1
2019-04-11 08:38:16 -耗时 : 37
2019-04-11 08:38:16 -返回值 : index_v1
2019-04-11 08:38:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:38:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:38:16.41(Timestamp)
2019-04-11 08:38:16 -<==    Updates: 1
2019-04-11 08:38:16 -请求地址 : http://localhost:8081/main
2019-04-11 08:38:16 -HTTP METHOD : GET
2019-04-11 08:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:38:16 -参数 : []
2019-04-11 08:38:16 -耗时 : 1
2019-04-11 08:38:16 -返回值 : main
2019-04-11 08:38:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:38:17 -HTTP METHOD : GET
2019-04-11 08:38:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:38:17 -参数 : []
2019-04-11 08:38:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:38:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:38:17 -<==      Total: 0
2019-04-11 08:38:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:38:17 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:38:17 -<==      Total: 1
2019-04-11 08:38:17 -耗时 : 11
2019-04-11 08:38:17 -返回值 : com.bootdo.common.utils.PageUtils@5a1b443b
2019-04-11 08:38:17 -请求地址 : http://localhost:8081/main
2019-04-11 08:38:17 -HTTP METHOD : GET
2019-04-11 08:38:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:38:17 -参数 : []
2019-04-11 08:38:17 -耗时 : 0
2019-04-11 08:38:17 -返回值 : main
2019-04-11 08:38:20 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 08:38:20 -HTTP METHOD : GET
2019-04-11 08:38:20 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 08:38:20 -参数 : []
2019-04-11 08:38:20 -耗时 : 1
2019-04-11 08:38:20 -返回值 : charts/countMM
2019-04-11 08:38:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:38:22 -HTTP METHOD : GET
2019-04-11 08:38:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:38:22 -参数 : []
2019-04-11 08:38:22 -耗时 : 0
2019-04-11 08:38:22 -返回值 : charts/tableElecMM
2019-04-11 08:39:00 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 08:39:14 -请求地址 : http://localhost:8081/index
2019-04-11 08:39:14 -HTTP METHOD : GET
2019-04-11 08:39:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:39:14 -参数 : [{}]
2019-04-11 08:39:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:39:14 -==> Parameters: 1(Long)
2019-04-11 08:39:14 -<==      Total: 48
2019-04-11 08:39:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:39:14 -==> Parameters: 138(Long)
2019-04-11 08:39:14 -<==      Total: 1
2019-04-11 08:39:14 -耗时 : 36
2019-04-11 08:39:14 -返回值 : index_v1
2019-04-11 08:39:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:39:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:39:14.942(Timestamp)
2019-04-11 08:39:15 -<==    Updates: 1
2019-04-11 08:39:15 -请求地址 : http://localhost:8081/main
2019-04-11 08:39:15 -HTTP METHOD : GET
2019-04-11 08:39:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:39:15 -参数 : []
2019-04-11 08:39:15 -耗时 : 0
2019-04-11 08:39:15 -返回值 : main
2019-04-11 08:39:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:39:15 -HTTP METHOD : GET
2019-04-11 08:39:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:39:15 -参数 : []
2019-04-11 08:39:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:39:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:39:15 -<==      Total: 0
2019-04-11 08:39:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:39:15 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:39:15 -<==      Total: 1
2019-04-11 08:39:15 -耗时 : 13
2019-04-11 08:39:15 -返回值 : com.bootdo.common.utils.PageUtils@545ef075
2019-04-11 08:39:15 -请求地址 : http://localhost:8081/main
2019-04-11 08:39:15 -HTTP METHOD : GET
2019-04-11 08:39:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:39:15 -参数 : []
2019-04-11 08:39:15 -耗时 : 0
2019-04-11 08:39:15 -返回值 : main
2019-04-11 08:39:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:39:19 -HTTP METHOD : GET
2019-04-11 08:39:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:39:19 -参数 : []
2019-04-11 08:39:19 -耗时 : 0
2019-04-11 08:39:19 -返回值 : charts/tableElecMM
2019-04-11 08:47:00 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 08:47:00 -HTTP METHOD : GET
2019-04-11 08:47:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 08:47:00 -参数 : []
2019-04-11 08:47:00 -耗时 : 8
2019-04-11 08:47:00 -返回值 : charts/tableHeatMM
2019-04-11 08:48:06 -请求地址 : http://localhost:8081/index
2019-04-11 08:48:06 -HTTP METHOD : GET
2019-04-11 08:48:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:48:06 -参数 : [{}]
2019-04-11 08:48:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:48:06 -==> Parameters: 1(Long)
2019-04-11 08:48:06 -<==      Total: 48
2019-04-11 08:48:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:48:06 -==> Parameters: 138(Long)
2019-04-11 08:48:06 -<==      Total: 1
2019-04-11 08:48:06 -耗时 : 34
2019-04-11 08:48:06 -返回值 : index_v1
2019-04-11 08:48:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:48:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:48:06.856(Timestamp)
2019-04-11 08:48:06 -请求地址 : http://localhost:8081/main
2019-04-11 08:48:06 -HTTP METHOD : GET
2019-04-11 08:48:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:48:06 -参数 : []
2019-04-11 08:48:06 -耗时 : 0
2019-04-11 08:48:06 -返回值 : main
2019-04-11 08:48:07 -<==    Updates: 1
2019-04-11 08:48:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:48:07 -HTTP METHOD : GET
2019-04-11 08:48:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:48:07 -参数 : []
2019-04-11 08:48:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:48:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:48:07 -<==      Total: 0
2019-04-11 08:48:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:48:07 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:48:07 -<==      Total: 1
2019-04-11 08:48:07 -耗时 : 25
2019-04-11 08:48:07 -返回值 : com.bootdo.common.utils.PageUtils@7e55368e
2019-04-11 08:48:07 -请求地址 : http://localhost:8081/main
2019-04-11 08:48:07 -HTTP METHOD : GET
2019-04-11 08:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:48:07 -参数 : []
2019-04-11 08:48:07 -耗时 : 1
2019-04-11 08:48:07 -返回值 : main
2019-04-11 08:48:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 08:48:09 -==> Parameters: 1(Long)
2019-04-11 08:48:09 -<==      Total: 92
2019-04-11 08:48:09 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 08:48:09 -HTTP METHOD : GET
2019-04-11 08:48:09 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 08:48:09 -参数 : []
2019-04-11 08:48:09 -耗时 : 0
2019-04-11 08:48:09 -返回值 : charts/countMM
2019-04-11 08:48:10 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:48:10 -HTTP METHOD : GET
2019-04-11 08:48:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:48:10 -参数 : []
2019-04-11 08:48:10 -耗时 : 0
2019-04-11 08:48:10 -返回值 : charts/tableElecMM
2019-04-11 08:48:11 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 08:48:11 -HTTP METHOD : GET
2019-04-11 08:48:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 08:48:11 -参数 : []
2019-04-11 08:48:11 -耗时 : 0
2019-04-11 08:48:11 -返回值 : charts/tableHeatMM
2019-04-11 08:48:41 -请求地址 : http://localhost:8081/index
2019-04-11 08:48:41 -HTTP METHOD : GET
2019-04-11 08:48:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:48:41 -参数 : [{}]
2019-04-11 08:48:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:48:41 -==> Parameters: 1(Long)
2019-04-11 08:48:41 -<==      Total: 48
2019-04-11 08:48:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:48:41 -==> Parameters: 138(Long)
2019-04-11 08:48:41 -<==      Total: 1
2019-04-11 08:48:41 -耗时 : 29
2019-04-11 08:48:41 -返回值 : index_v1
2019-04-11 08:48:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:48:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:48:41.857(Timestamp)
2019-04-11 08:48:41 -请求地址 : http://localhost:8081/main
2019-04-11 08:48:41 -HTTP METHOD : GET
2019-04-11 08:48:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:48:41 -参数 : []
2019-04-11 08:48:41 -耗时 : 1
2019-04-11 08:48:41 -返回值 : main
2019-04-11 08:48:41 -<==    Updates: 1
2019-04-11 08:48:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:48:42 -HTTP METHOD : GET
2019-04-11 08:48:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:48:42 -参数 : []
2019-04-11 08:48:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:48:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:48:42 -<==      Total: 0
2019-04-11 08:48:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:48:42 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:48:42 -<==      Total: 1
2019-04-11 08:48:42 -耗时 : 10
2019-04-11 08:48:42 -返回值 : com.bootdo.common.utils.PageUtils@1d07410d
2019-04-11 08:48:42 -请求地址 : http://localhost:8081/main
2019-04-11 08:48:42 -HTTP METHOD : GET
2019-04-11 08:48:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:48:42 -参数 : []
2019-04-11 08:48:42 -耗时 : 0
2019-04-11 08:48:42 -返回值 : main
2019-04-11 08:48:45 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:48:45 -HTTP METHOD : GET
2019-04-11 08:48:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:48:45 -参数 : []
2019-04-11 08:48:45 -耗时 : 0
2019-04-11 08:48:45 -返回值 : charts/tableElecMM
2019-04-11 08:48:51 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 08:48:51 -HTTP METHOD : GET
2019-04-11 08:48:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 08:48:51 -参数 : []
2019-04-11 08:48:51 -耗时 : 1
2019-04-11 08:48:51 -返回值 : charts/tableHeatMM
2019-04-11 08:49:26 -请求地址 : http://localhost:8081/index
2019-04-11 08:49:26 -HTTP METHOD : GET
2019-04-11 08:49:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:49:26 -参数 : [{}]
2019-04-11 08:49:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:49:26 -==> Parameters: 1(Long)
2019-04-11 08:49:26 -<==      Total: 48
2019-04-11 08:49:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:49:26 -==> Parameters: 138(Long)
2019-04-11 08:49:26 -<==      Total: 1
2019-04-11 08:49:26 -耗时 : 87
2019-04-11 08:49:26 -返回值 : index_v1
2019-04-11 08:49:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:49:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 87(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:49:26.354(Timestamp)
2019-04-11 08:49:26 -<==    Updates: 1
2019-04-11 08:49:26 -请求地址 : http://localhost:8081/main
2019-04-11 08:49:26 -HTTP METHOD : GET
2019-04-11 08:49:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:49:26 -参数 : []
2019-04-11 08:49:26 -耗时 : 1
2019-04-11 08:49:26 -返回值 : main
2019-04-11 08:49:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:49:26 -HTTP METHOD : GET
2019-04-11 08:49:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:49:26 -参数 : []
2019-04-11 08:49:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:49:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:49:26 -<==      Total: 0
2019-04-11 08:49:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:49:26 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:49:26 -<==      Total: 1
2019-04-11 08:49:26 -耗时 : 6
2019-04-11 08:49:26 -返回值 : com.bootdo.common.utils.PageUtils@7c7783d0
2019-04-11 08:49:26 -请求地址 : http://localhost:8081/main
2019-04-11 08:49:26 -HTTP METHOD : GET
2019-04-11 08:49:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:49:26 -参数 : []
2019-04-11 08:49:26 -耗时 : 1
2019-04-11 08:49:26 -返回值 : main
2019-04-11 08:49:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 08:49:32 -HTTP METHOD : GET
2019-04-11 08:49:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 08:49:32 -参数 : []
2019-04-11 08:49:32 -耗时 : 0
2019-04-11 08:49:32 -返回值 : charts/tableElecMM
2019-04-11 08:49:33 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 08:49:33 -HTTP METHOD : GET
2019-04-11 08:49:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 08:49:33 -参数 : []
2019-04-11 08:49:33 -耗时 : 1
2019-04-11 08:49:33 -返回值 : charts/tableHeatMM
2019-04-11 08:50:14 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 08:50:14 -HTTP METHOD : GET
2019-04-11 08:50:14 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 08:50:14 -参数 : []
2019-04-11 08:50:14 -耗时 : 8
2019-04-11 08:50:14 -返回值 : charts/tableWaterMM
2019-04-11 08:51:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 08:51:27 -HTTP METHOD : GET
2019-04-11 08:51:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 08:51:27 -参数 : []
2019-04-11 08:51:27 -耗时 : 1
2019-04-11 08:51:27 -返回值 : /moneyList/moneyList
2019-04-11 08:51:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 08:51:46 -HTTP METHOD : GET
2019-04-11 08:51:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 08:51:46 -参数 : []
2019-04-11 08:51:46 -耗时 : 1
2019-04-11 08:51:46 -返回值 : system/dept/deptTree
2019-04-11 08:51:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 08:51:46 -HTTP METHOD : GET
2019-04-11 08:51:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 08:51:46 -参数 : []
2019-04-11 08:51:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 08:51:46 -==> Parameters: 
2019-04-11 08:51:47 -<==      Total: 3
2019-04-11 08:51:47 -耗时 : 68
2019-04-11 08:51:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 08:54:30 -请求地址 : http://localhost:8081/index
2019-04-11 08:54:30 -HTTP METHOD : GET
2019-04-11 08:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 08:54:30 -参数 : [{}]
2019-04-11 08:54:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 08:54:30 -==> Parameters: 1(Long)
2019-04-11 08:54:30 -<==      Total: 48
2019-04-11 08:54:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 08:54:30 -==> Parameters: 138(Long)
2019-04-11 08:54:30 -<==      Total: 1
2019-04-11 08:54:30 -耗时 : 25
2019-04-11 08:54:30 -返回值 : index_v1
2019-04-11 08:54:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 08:54:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 08:54:30.86(Timestamp)
2019-04-11 08:54:31 -请求地址 : http://localhost:8081/main
2019-04-11 08:54:31 -HTTP METHOD : GET
2019-04-11 08:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:54:31 -参数 : []
2019-04-11 08:54:31 -耗时 : 1
2019-04-11 08:54:31 -返回值 : main
2019-04-11 08:54:31 -<==    Updates: 1
2019-04-11 08:54:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 08:54:31 -HTTP METHOD : GET
2019-04-11 08:54:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 08:54:31 -参数 : []
2019-04-11 08:54:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 08:54:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 08:54:31 -<==      Total: 0
2019-04-11 08:54:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 08:54:31 -==> Parameters: 1(Long), 0(String)
2019-04-11 08:54:31 -<==      Total: 1
2019-04-11 08:54:31 -耗时 : 7
2019-04-11 08:54:31 -返回值 : com.bootdo.common.utils.PageUtils@a999ce3
2019-04-11 08:54:31 -请求地址 : http://localhost:8081/main
2019-04-11 08:54:31 -HTTP METHOD : GET
2019-04-11 08:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 08:54:31 -参数 : []
2019-04-11 08:54:31 -耗时 : 1
2019-04-11 08:54:31 -返回值 : main
2019-04-11 08:54:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 08:54:33 -HTTP METHOD : GET
2019-04-11 08:54:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 08:54:33 -参数 : []
2019-04-11 08:54:33 -耗时 : 4
2019-04-11 08:54:33 -返回值 : /moneyList/moneyList
2019-04-11 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 08:54:38 -HTTP METHOD : GET
2019-04-11 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 08:54:38 -参数 : []
2019-04-11 08:54:38 -耗时 : 1
2019-04-11 08:54:38 -返回值 : system/dept/deptTree
2019-04-11 08:54:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 08:54:39 -HTTP METHOD : GET
2019-04-11 08:54:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 08:54:39 -参数 : []
2019-04-11 08:54:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 08:54:39 -==> Parameters: 
2019-04-11 08:54:39 -<==      Total: 3
2019-04-11 08:54:39 -耗时 : 5
2019-04-11 08:54:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 08:54:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 08:54:49 -HTTP METHOD : POST
2019-04-11 08:54:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 08:54:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@58c220a3]
2019-04-11 08:54:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-11 08:54:49 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-11 08:54:50 -<==      Total: 3
2019-04-11 08:54:50 -耗时 : 476
2019-04-11 08:54:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ad01ae3, com.bootdo.moneyList.damain.MoneyListDO@578182f8, com.bootdo.moneyList.damain.MoneyListDO@818db62]
2019-04-11 08:54:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 08:54:50 -HTTP METHOD : POST
2019-04-11 08:54:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 08:54:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6a1dee3a]
2019-04-11 08:54:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-11 08:54:50 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-11 08:54:50 -<==      Total: 3
2019-04-11 08:54:50 -耗时 : 6
2019-04-11 08:54:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@d68fdb2, com.bootdo.moneyList.damain.MoneyListDO@5f5f50b5, com.bootdo.moneyList.damain.MoneyListDO@4e5c5f6a]
2019-04-11 09:01:55 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 403]
2019-04-11 09:13:52 -请求地址 : http://localhost:8081/index
2019-04-11 09:13:52 -HTTP METHOD : GET
2019-04-11 09:13:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:13:52 -参数 : [{}]
2019-04-11 09:13:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:13:52 -==> Parameters: 1(Long)
2019-04-11 09:13:52 -<==      Total: 48
2019-04-11 09:13:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:13:52 -==> Parameters: 138(Long)
2019-04-11 09:13:52 -<==      Total: 1
2019-04-11 09:13:52 -耗时 : 127
2019-04-11 09:13:52 -返回值 : index_v1
2019-04-11 09:13:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:13:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 127(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:13:52.2(Timestamp)
2019-04-11 09:13:52 -<==    Updates: 1
2019-04-11 09:13:52 -请求地址 : http://localhost:8081/main
2019-04-11 09:13:52 -HTTP METHOD : GET
2019-04-11 09:13:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:13:52 -参数 : []
2019-04-11 09:13:52 -耗时 : 1
2019-04-11 09:13:52 -返回值 : main
2019-04-11 09:13:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:13:52 -HTTP METHOD : GET
2019-04-11 09:13:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:13:52 -参数 : []
2019-04-11 09:13:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:13:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:13:52 -<==      Total: 0
2019-04-11 09:13:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:13:52 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:13:52 -<==      Total: 1
2019-04-11 09:13:52 -耗时 : 8
2019-04-11 09:13:52 -返回值 : com.bootdo.common.utils.PageUtils@2859f37c
2019-04-11 09:13:52 -请求地址 : http://localhost:8081/main
2019-04-11 09:13:52 -HTTP METHOD : GET
2019-04-11 09:13:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:13:52 -参数 : []
2019-04-11 09:13:52 -耗时 : 1
2019-04-11 09:13:52 -返回值 : main
2019-04-11 09:13:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 09:13:55 -==> Parameters: 1(Long)
2019-04-11 09:13:55 -<==      Total: 92
2019-04-11 09:13:55 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:13:55 -HTTP METHOD : GET
2019-04-11 09:13:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:13:55 -参数 : []
2019-04-11 09:13:55 -耗时 : 1
2019-04-11 09:13:55 -返回值 : /moneyList/moneyList
2019-04-11 09:19:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 5360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 09:19:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 09:19:26 -The following profiles are active: dev
2019-04-11 09:19:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:19:27 CST 2019]; root of context hierarchy
2019-04-11 09:19:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 09:19:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f27e339] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$818111e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 09:19:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 09:19:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:19:35 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 09:19:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 09:19:35 -Starting service [Tomcat]
2019-04-11 09:19:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 09:19:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 09:19:35 -Initializing Spring embedded WebApplicationContext
2019-04-11 09:19:35 -Root WebApplicationContext: initialization completed in 8884 ms
2019-04-11 09:19:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 09:19:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 09:19:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 09:19:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 09:19:36 -Filter xssFilter was not registered (disabled)
2019-04-11 09:19:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 09:19:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 09:19:36 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 09:19:36 -Servlet dispatcherServlet mapped to [/]
2019-04-11 09:19:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:19:27 CST 2019]; root of context hierarchy
2019-04-11 09:19:40 -Using default implementation for ThreadExecutor
2019-04-11 09:19:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 09:19:40 -Quartz Scheduler v.2.2.1 created.
2019-04-11 09:19:40 -RAMJobStore initialized.
2019-04-11 09:19:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 09:19:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 09:19:40 -Quartz scheduler version: 2.2.1
2019-04-11 09:19:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@45984654
2019-04-11 09:19:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 09:19:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 09:19:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 09:19:43 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 09:19:43 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 09:19:43 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 09:19:43 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:19:43 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 09:19:43 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:19:43 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 09:19:43 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 09:19:43 -Mapped "{[/charts/tableElecMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 09:19:43 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 09:19:43 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 09:19:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 09:19:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 09:19:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 09:19:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 09:19:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 09:19:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 09:19:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:19:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 09:19:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:19:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 09:19:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 09:19:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 09:19:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 09:19:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 09:19:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 09:19:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 09:19:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 09:19:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 09:19:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 09:19:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 09:19:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 09:19:43 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 09:19:43 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 09:19:43 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 09:19:43 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 09:19:43 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 09:19:43 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:19:43 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:19:43 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 09:19:43 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 09:19:43 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:43 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 09:19:43 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:19:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 09:19:43 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:19:43 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:19:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 09:19:43 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 09:19:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 09:19:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 09:19:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 09:19:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 09:19:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 09:19:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 09:19:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 09:19:43 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 09:19:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 09:19:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 09:19:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 09:19:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 09:19:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 09:19:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 09:19:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 09:19:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 09:19:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 09:19:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 09:19:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 09:19:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 09:19:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 09:19:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 09:19:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 09:19:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 09:19:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 09:19:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 09:19:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 09:19:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 09:19:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 09:19:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:19:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:19:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 09:19:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 09:19:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 09:19:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 09:19:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 09:19:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 09:19:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:19:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 09:19:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 09:19:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:19:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 09:19:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:19:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:19:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 09:19:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 09:19:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 09:19:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 09:19:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 09:19:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 09:19:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:19:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:19:27 CST 2019]; root of context hierarchy
2019-04-11 09:19:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:19:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:19:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:19:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 09:19:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 09:19:47 -Registering beans for JMX exposure on startup
2019-04-11 09:19:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 09:19:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 09:19:47 -Starting beans in phase 2147483647
2019-04-11 09:19:47 -Context refreshed
2019-04-11 09:19:47 -Found 1 custom documentation plugin(s)
2019-04-11 09:19:47 -Scanning for api listing references
2019-04-11 09:19:48 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 09:19:48 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 09:19:48 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 09:19:48 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_1
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_2
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_3
2019-04-11 09:19:48 -Generating unique operation named: saveUsingPOST_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPUT_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 09:19:48 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_2
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_2
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_2
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_4
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_5
2019-04-11 09:19:48 -Generating unique operation named: saveUsingPOST_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_2
2019-04-11 09:19:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_3
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_3
2019-04-11 09:19:48 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_3
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_6
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_7
2019-04-11 09:19:48 -Generating unique operation named: saveUsingPOST_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingGET_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPUT_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 09:19:48 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_4
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_4
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_4
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_8
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_9
2019-04-11 09:19:48 -Generating unique operation named: saveUsingPOST_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingGET_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPUT_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 09:19:48 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 09:19:48 -Generating unique operation named: ElecUsingGET_1
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_5
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_5
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_5
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_10
2019-04-11 09:19:48 -Generating unique operation named: removeUsingPOST_11
2019-04-11 09:19:48 -Generating unique operation named: saveUsingPOST_5
2019-04-11 09:19:48 -Generating unique operation named: updateUsingGET_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_5
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPUT_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 09:19:48 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 09:19:48 -Generating unique operation named: editUsingGET_6
2019-04-11 09:19:48 -Generating unique operation named: listUsingGET_6
2019-04-11 09:19:48 -Generating unique operation named: updateUsingPOST_6
2019-04-11 09:19:48 -Generating unique operation named: addUsingGET_6
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_7
2019-04-11 09:19:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_7
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_12
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_13
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 09:19:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_7
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_8
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_8
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_14
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_15
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_8
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_9
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_9
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_16
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_17
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_9
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_10
2019-04-11 09:19:49 -Generating unique operation named: infoUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingPOST_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingPUT_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 09:19:49 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_10
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_18
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_19
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_10
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_11
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_20
2019-04-11 09:19:49 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_10
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_11
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_12
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_21
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_10
2019-04-11 09:19:49 -Generating unique operation named: treeUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: treeUsingGET_2
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_11
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_11
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_12
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_13
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_22
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_23
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_12
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_12
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_13
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_14
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_24
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_25
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_12
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_13
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_13
2019-04-11 09:19:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_14
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_15
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_13
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_14
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_14
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_16
2019-04-11 09:19:49 -Generating unique operation named: listUsingHEAD_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingPOST_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingPUT_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingPATCH_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingDELETE_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 09:19:49 -Generating unique operation named: listUsingTRACE_1
2019-04-11 09:19:49 -Generating unique operation named: countDDUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: exprotDDUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 09:19:49 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 09:19:49 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 09:19:49 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 09:19:49 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 09:19:49 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 09:19:49 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_14
2019-04-11 09:19:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_15
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_17
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_26
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_15
2019-04-11 09:19:49 -Generating unique operation named: treeUsingGET_3
2019-04-11 09:19:49 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_15
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_15
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_16
2019-04-11 09:19:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_18
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_27
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_28
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_16
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_16
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 09:19:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_16
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_17
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_19
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_29
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_30
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_17
2019-04-11 09:19:49 -Generating unique operation named: updateUsingGET_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPOST_17
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPUT_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 09:19:49 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 09:19:49 -Generating unique operation named: addUsingGET_17
2019-04-11 09:19:49 -Generating unique operation named: editUsingGET_18
2019-04-11 09:19:49 -Generating unique operation named: listUsingGET_20
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_31
2019-04-11 09:19:49 -Generating unique operation named: removeUsingPOST_32
2019-04-11 09:19:49 -Generating unique operation named: saveUsingPOST_18
2019-04-11 09:19:50 -Generating unique operation named: updateUsingGET_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingPOST_18
2019-04-11 09:19:50 -Generating unique operation named: updateUsingPUT_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 09:19:50 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 09:19:50 -Starting Quartz Scheduler now
2019-04-11 09:19:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 09:19:50 -Starting...
2019-04-11 09:19:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 09:19:50 -Started.
2019-04-11 09:19:50 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 09:19:50 -Using a shared selector for servlet write/read
2019-04-11 09:19:50 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 09:19:50 -Started BootdoApplication in 24.364 seconds (JVM running for 25.175)
2019-04-11 09:19:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 09:19:50 -==> Parameters: 
2019-04-11 09:19:50 -<==      Total: 1
2019-04-11 09:20:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 09:20:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 09:20:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-04-11 09:20:06 -Enabling session validation scheduler...
2019-04-11 09:20:06 -请求地址 : http://localhost:8081/login;JSESSIONID=36843727-1163-4756-be6d-0c54887ec650
2019-04-11 09:20:06 -HTTP METHOD : GET
2019-04-11 09:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:20:06 -参数 : [{}]
2019-04-11 09:20:06 -耗时 : 2
2019-04-11 09:20:06 -返回值 : login
2019-04-11 09:20:08 -请求地址 : http://localhost:8081/getVerify
2019-04-11 09:20:08 -HTTP METHOD : GET
2019-04-11 09:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 09:20:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@529fe761, org.apache.shiro.web.servlet.ShiroHttpServletResponse@56a079ea]
2019-04-11 09:20:22 -7635
2019-04-11 09:20:22 -耗时 : 14083
2019-04-11 09:20:22 -返回值 : null
2019-04-11 09:20:22 -请求地址 : http://localhost:8081/login
2019-04-11 09:20:22 -HTTP METHOD : GET
2019-04-11 09:20:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:20:22 -参数 : [{}]
2019-04-11 09:20:22 -耗时 : 1
2019-04-11 09:20:22 -返回值 : login
2019-04-11 09:20:29 -请求地址 : http://localhost:8081/login
2019-04-11 09:20:29 -HTTP METHOD : POST
2019-04-11 09:20:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 09:20:29 -参数 : [admin, 111111, 7635, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dc8af99]
2019-04-11 09:20:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 09:20:29 -==> Parameters: admin(String)
2019-04-11 09:20:29 -<==      Total: 1
2019-04-11 09:20:29 -耗时 : 151
2019-04-11 09:20:29 -返回值 : {msg=操作成功, code=0}
2019-04-11 09:20:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 09:20:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:20:29 -==> Parameters: 1(Long), admin(String), 登录(String), 152(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 09:20:29.489(Timestamp)
2019-04-11 09:20:29 -<==    Updates: 1
2019-04-11 09:20:29 -请求地址 : http://localhost:8081/index
2019-04-11 09:20:29 -HTTP METHOD : GET
2019-04-11 09:20:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:20:29 -参数 : [{}]
2019-04-11 09:20:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:20:30 -==> Parameters: 1(Long)
2019-04-11 09:20:30 -<==      Total: 48
2019-04-11 09:20:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:20:30 -==> Parameters: 138(Long)
2019-04-11 09:20:30 -<==      Total: 1
2019-04-11 09:20:30 -耗时 : 326
2019-04-11 09:20:30 -返回值 : index_v1
2019-04-11 09:20:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:20:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 327(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:20:30.265(Timestamp)
2019-04-11 09:20:30 -<==    Updates: 1
2019-04-11 09:20:30 -请求地址 : http://localhost:8081/main
2019-04-11 09:20:30 -HTTP METHOD : GET
2019-04-11 09:20:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:20:30 -参数 : []
2019-04-11 09:20:30 -耗时 : 1
2019-04-11 09:20:30 -返回值 : main
2019-04-11 09:20:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:20:30 -HTTP METHOD : GET
2019-04-11 09:20:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:20:30 -参数 : []
2019-04-11 09:20:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:20:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:20:31 -请求地址 : http://localhost:8081/main
2019-04-11 09:20:31 -HTTP METHOD : GET
2019-04-11 09:20:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:20:31 -参数 : []
2019-04-11 09:20:31 -耗时 : 3
2019-04-11 09:20:31 -返回值 : main
2019-04-11 09:20:31 -<==      Total: 0
2019-04-11 09:20:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:20:31 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:20:31 -<==      Total: 1
2019-04-11 09:20:31 -耗时 : 151
2019-04-11 09:20:31 -返回值 : com.bootdo.common.utils.PageUtils@6f8cee6
2019-04-11 09:20:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 09:20:33 -==> Parameters: 1(Long)
2019-04-11 09:20:33 -<==      Total: 92
2019-04-11 09:20:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:20:33 -HTTP METHOD : GET
2019-04-11 09:20:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:20:33 -参数 : []
2019-04-11 09:20:33 -耗时 : 0
2019-04-11 09:20:33 -返回值 : /moneyList/moneyList
2019-04-11 09:20:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:20:40 -HTTP METHOD : GET
2019-04-11 09:20:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:20:40 -参数 : []
2019-04-11 09:20:40 -耗时 : 1
2019-04-11 09:20:40 -返回值 : system/dept/deptTree
2019-04-11 09:20:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:20:41 -HTTP METHOD : GET
2019-04-11 09:20:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:20:41 -参数 : []
2019-04-11 09:20:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:20:41 -==> Parameters: 
2019-04-11 09:20:41 -<==      Total: 3
2019-04-11 09:20:41 -耗时 : 104
2019-04-11 09:20:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:20:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:20:44 -HTTP METHOD : POST
2019-04-11 09:20:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:20:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d6c413b]
2019-04-11 09:20:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:20:44 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 09:20:44 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-11 09:20:44 -<==      Total: 3
2019-04-11 09:20:44 -耗时 : 492
2019-04-11 09:20:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1db20ab4, com.bootdo.moneyList.damain.MoneyListDO@61aa3e14, com.bootdo.moneyList.damain.MoneyListDO@75ca5433]
2019-04-11 09:25:05 -请求地址 : http://localhost:8081/index
2019-04-11 09:25:05 -HTTP METHOD : GET
2019-04-11 09:25:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:25:05 -参数 : [{}]
2019-04-11 09:25:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:25:05 -==> Parameters: 1(Long)
2019-04-11 09:25:05 -<==      Total: 48
2019-04-11 09:25:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:25:05 -==> Parameters: 138(Long)
2019-04-11 09:25:05 -<==      Total: 1
2019-04-11 09:25:05 -耗时 : 36
2019-04-11 09:25:05 -返回值 : index_v1
2019-04-11 09:25:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:25:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:25:05.281(Timestamp)
2019-04-11 09:25:05 -<==    Updates: 1
2019-04-11 09:25:05 -请求地址 : http://localhost:8081/main
2019-04-11 09:25:05 -HTTP METHOD : GET
2019-04-11 09:25:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:25:05 -参数 : []
2019-04-11 09:25:05 -耗时 : 0
2019-04-11 09:25:05 -返回值 : main
2019-04-11 09:25:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:25:06 -HTTP METHOD : GET
2019-04-11 09:25:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:25:06 -参数 : []
2019-04-11 09:25:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:25:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:25:06 -<==      Total: 0
2019-04-11 09:25:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:25:06 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:25:06 -<==      Total: 1
2019-04-11 09:25:06 -耗时 : 44
2019-04-11 09:25:06 -返回值 : com.bootdo.common.utils.PageUtils@5db7362e
2019-04-11 09:25:06 -请求地址 : http://localhost:8081/main
2019-04-11 09:25:06 -HTTP METHOD : GET
2019-04-11 09:25:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:25:06 -参数 : []
2019-04-11 09:25:06 -耗时 : 2
2019-04-11 09:25:06 -返回值 : main
2019-04-11 09:25:08 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:25:08 -HTTP METHOD : GET
2019-04-11 09:25:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:25:08 -参数 : []
2019-04-11 09:25:08 -耗时 : 0
2019-04-11 09:25:08 -返回值 : /moneyList/moneyList
2019-04-11 09:25:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:25:11 -HTTP METHOD : GET
2019-04-11 09:25:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:25:11 -参数 : []
2019-04-11 09:25:11 -耗时 : 0
2019-04-11 09:25:11 -返回值 : system/dept/deptTree
2019-04-11 09:25:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:25:12 -HTTP METHOD : GET
2019-04-11 09:25:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:25:12 -参数 : []
2019-04-11 09:25:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:25:12 -==> Parameters: 
2019-04-11 09:25:12 -<==      Total: 3
2019-04-11 09:25:12 -耗时 : 5
2019-04-11 09:25:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:25:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:25:14 -HTTP METHOD : POST
2019-04-11 09:25:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:25:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@9422ad5]
2019-04-11 09:25:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:25:14 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 09:25:14 -<==      Total: 3
2019-04-11 09:25:14 -耗时 : 10
2019-04-11 09:25:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@12e014d0, com.bootdo.moneyList.damain.MoneyListDO@297fb08f, com.bootdo.moneyList.damain.MoneyListDO@6e195f53]
2019-04-11 09:25:36 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 09:26:17 -请求地址 : http://localhost:8081/login;JSESSIONID=69251ab6-f78c-4e3f-a5fa-1ece2f5206e7
2019-04-11 09:26:17 -HTTP METHOD : GET
2019-04-11 09:26:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:26:17 -参数 : [{}]
2019-04-11 09:26:17 -耗时 : 1
2019-04-11 09:26:17 -返回值 : login
2019-04-11 09:26:18 -请求地址 : http://localhost:8081/getVerify
2019-04-11 09:26:18 -HTTP METHOD : GET
2019-04-11 09:26:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 09:26:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@432aed9c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6911f322]
2019-04-11 09:26:18 -0502
2019-04-11 09:26:18 -耗时 : 17
2019-04-11 09:26:18 -返回值 : null
2019-04-11 09:26:18 -请求地址 : http://localhost:8081/login
2019-04-11 09:26:18 -HTTP METHOD : GET
2019-04-11 09:26:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:26:18 -参数 : [{}]
2019-04-11 09:26:18 -耗时 : 0
2019-04-11 09:26:18 -返回值 : login
2019-04-11 09:26:23 -请求地址 : http://localhost:8081/login
2019-04-11 09:26:23 -HTTP METHOD : POST
2019-04-11 09:26:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 09:26:23 -参数 : [admin, 111111, 0502, org.apache.shiro.web.servlet.ShiroHttpServletRequest@621718f]
2019-04-11 09:26:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 09:26:23 -==> Parameters: admin(String)
2019-04-11 09:26:23 -<==      Total: 1
2019-04-11 09:26:23 -耗时 : 9
2019-04-11 09:26:23 -返回值 : {msg=操作成功, code=0}
2019-04-11 09:26:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:26:23 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 09:26:23.807(Timestamp)
2019-04-11 09:26:23 -请求地址 : http://localhost:8081/index
2019-04-11 09:26:23 -HTTP METHOD : GET
2019-04-11 09:26:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:26:23 -参数 : [{}]
2019-04-11 09:26:23 -<==    Updates: 1
2019-04-11 09:26:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:26:23 -==> Parameters: 1(Long)
2019-04-11 09:26:24 -<==      Total: 48
2019-04-11 09:26:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:26:24 -==> Parameters: 138(Long)
2019-04-11 09:26:24 -<==      Total: 1
2019-04-11 09:26:24 -耗时 : 166
2019-04-11 09:26:24 -返回值 : index_v1
2019-04-11 09:26:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:26:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 167(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:26:24.007(Timestamp)
2019-04-11 09:26:24 -请求地址 : http://localhost:8081/main
2019-04-11 09:26:24 -HTTP METHOD : GET
2019-04-11 09:26:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:26:24 -参数 : []
2019-04-11 09:26:24 -耗时 : 0
2019-04-11 09:26:24 -返回值 : main
2019-04-11 09:26:24 -<==    Updates: 1
2019-04-11 09:26:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:26:24 -HTTP METHOD : GET
2019-04-11 09:26:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:26:24 -参数 : []
2019-04-11 09:26:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:26:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:26:24 -<==      Total: 0
2019-04-11 09:26:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:26:24 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:26:24 -<==      Total: 1
2019-04-11 09:26:24 -耗时 : 6
2019-04-11 09:26:24 -返回值 : com.bootdo.common.utils.PageUtils@735b52ae
2019-04-11 09:26:24 -请求地址 : http://localhost:8081/main
2019-04-11 09:26:24 -HTTP METHOD : GET
2019-04-11 09:26:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:26:24 -参数 : []
2019-04-11 09:26:24 -耗时 : 1
2019-04-11 09:26:24 -返回值 : main
2019-04-11 09:26:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 09:26:47 -==> Parameters: 1(Long)
2019-04-11 09:26:47 -<==      Total: 92
2019-04-11 09:26:47 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:26:47 -HTTP METHOD : GET
2019-04-11 09:26:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:26:47 -参数 : []
2019-04-11 09:26:47 -耗时 : 0
2019-04-11 09:26:47 -返回值 : /moneyList/moneyList
2019-04-11 09:26:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:26:51 -HTTP METHOD : GET
2019-04-11 09:26:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:26:51 -参数 : []
2019-04-11 09:26:51 -耗时 : 1
2019-04-11 09:26:51 -返回值 : system/dept/deptTree
2019-04-11 09:26:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:26:52 -HTTP METHOD : GET
2019-04-11 09:26:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:26:52 -参数 : []
2019-04-11 09:26:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:26:52 -==> Parameters: 
2019-04-11 09:26:52 -<==      Total: 3
2019-04-11 09:26:52 -耗时 : 37
2019-04-11 09:26:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:26:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:26:57 -HTTP METHOD : POST
2019-04-11 09:26:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:26:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14823797]
2019-04-11 09:26:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:26:57 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 09:26:57 -<==      Total: 3
2019-04-11 09:26:57 -耗时 : 335
2019-04-11 09:26:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@25186eb, com.bootdo.moneyList.damain.MoneyListDO@3db66ce2, com.bootdo.moneyList.damain.MoneyListDO@388dda4c]
2019-04-11 09:31:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 1184 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 09:31:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 09:31:31 -The following profiles are active: dev
2019-04-11 09:31:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:31:32 CST 2019]; root of context hierarchy
2019-04-11 09:31:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 09:31:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f4dc304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81a6f1ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 09:31:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 09:31:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:31:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 09:31:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 09:31:40 -Starting service [Tomcat]
2019-04-11 09:31:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 09:31:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 09:31:40 -Initializing Spring embedded WebApplicationContext
2019-04-11 09:31:40 -Root WebApplicationContext: initialization completed in 8940 ms
2019-04-11 09:31:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 09:31:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 09:31:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 09:31:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 09:31:41 -Filter xssFilter was not registered (disabled)
2019-04-11 09:31:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 09:31:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 09:31:41 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 09:31:41 -Servlet dispatcherServlet mapped to [/]
2019-04-11 09:31:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:31:32 CST 2019]; root of context hierarchy
2019-04-11 09:31:45 -Using default implementation for ThreadExecutor
2019-04-11 09:31:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 09:31:45 -Quartz Scheduler v.2.2.1 created.
2019-04-11 09:31:45 -RAMJobStore initialized.
2019-04-11 09:31:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 09:31:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 09:31:45 -Quartz scheduler version: 2.2.1
2019-04-11 09:31:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c0c8f96
2019-04-11 09:31:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 09:31:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 09:31:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 09:31:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 09:31:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 09:31:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:31:48 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 09:31:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:31:48 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 09:31:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 09:31:48 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableElecMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 09:31:48 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 09:31:48 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 09:31:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 09:31:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 09:31:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 09:31:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 09:31:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 09:31:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 09:31:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 09:31:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:31:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:31:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 09:31:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 09:31:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 09:31:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 09:31:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 09:31:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 09:31:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 09:31:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 09:31:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 09:31:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 09:31:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 09:31:48 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 09:31:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 09:31:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 09:31:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 09:31:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 09:31:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 09:31:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 09:31:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:31:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:31:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 09:31:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 09:31:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:31:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 09:31:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 09:31:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 09:31:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:31:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:31:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 09:31:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 09:31:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 09:31:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 09:31:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 09:31:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 09:31:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 09:31:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 09:31:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 09:31:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 09:31:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 09:31:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 09:31:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 09:31:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 09:31:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 09:31:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 09:31:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 09:31:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 09:31:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 09:31:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 09:31:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 09:31:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 09:31:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 09:31:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 09:31:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 09:31:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 09:31:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 09:31:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:31:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 09:31:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 09:31:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:31:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 09:31:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:31:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 09:31:49 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 09:31:49 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 09:31:49 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 09:31:49 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 09:31:49 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 09:31:49 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:49 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 09:31:49 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:49 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:49 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 09:31:49 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:49 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:31:49 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 09:31:49 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 09:31:49 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 09:31:49 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:31:49 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:31:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:31:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 09:31:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 09:31:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 09:31:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 09:31:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 09:31:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 09:31:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:31:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:31:32 CST 2019]; root of context hierarchy
2019-04-11 09:31:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:31:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:31:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:31:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 09:31:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 09:31:52 -Registering beans for JMX exposure on startup
2019-04-11 09:31:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 09:31:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 09:31:52 -Starting beans in phase 2147483647
2019-04-11 09:31:52 -Context refreshed
2019-04-11 09:31:53 -Found 1 custom documentation plugin(s)
2019-04-11 09:31:53 -Scanning for api listing references
2019-04-11 09:31:53 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 09:31:53 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 09:31:53 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 09:31:53 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 09:31:53 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 09:31:53 -Generating unique operation named: removeUsingPOST_1
2019-04-11 09:31:53 -Generating unique operation named: addUsingGET_1
2019-04-11 09:31:53 -Generating unique operation named: editUsingGET_1
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_1
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_2
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_3
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingGET_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPUT_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 09:31:54 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 09:31:54 -Generating unique operation named: addUsingGET_2
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_2
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_2
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_4
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_5
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_2
2019-04-11 09:31:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 09:31:54 -Generating unique operation named: addUsingGET_3
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_3
2019-04-11 09:31:54 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_3
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_6
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_7
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingGET_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPUT_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 09:31:54 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 09:31:54 -Generating unique operation named: addUsingGET_4
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_4
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_4
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_8
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_9
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingGET_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPUT_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 09:31:54 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 09:31:54 -Generating unique operation named: ElecUsingGET_1
2019-04-11 09:31:54 -Generating unique operation named: addUsingGET_5
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_5
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_5
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_10
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_11
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_5
2019-04-11 09:31:54 -Generating unique operation named: updateUsingGET_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_5
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPUT_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 09:31:54 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_6
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_6
2019-04-11 09:31:54 -Generating unique operation named: updateUsingPOST_6
2019-04-11 09:31:54 -Generating unique operation named: addUsingGET_6
2019-04-11 09:31:54 -Generating unique operation named: editUsingGET_7
2019-04-11 09:31:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 09:31:54 -Generating unique operation named: listUsingGET_7
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_12
2019-04-11 09:31:54 -Generating unique operation named: removeUsingPOST_13
2019-04-11 09:31:54 -Generating unique operation named: saveUsingPOST_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingGET_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPUT_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 09:31:55 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 09:31:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_7
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_8
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_8
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_14
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_15
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingGET_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPUT_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 09:31:55 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_8
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_9
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_9
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_16
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_17
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingGET_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_9
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPUT_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 09:31:55 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_9
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_10
2019-04-11 09:31:55 -Generating unique operation named: infoUsingGET_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingPOST_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingPUT_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 09:31:55 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_10
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_18
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_19
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_9
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_10
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_11
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_20
2019-04-11 09:31:55 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_10
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_11
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_12
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_21
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_10
2019-04-11 09:31:55 -Generating unique operation named: treeUsingGET_1
2019-04-11 09:31:55 -Generating unique operation named: treeUsingGET_2
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_11
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_11
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_12
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_13
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_22
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_23
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_11
2019-04-11 09:31:55 -Generating unique operation named: updateUsingGET_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_12
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPUT_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 09:31:55 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 09:31:55 -Generating unique operation named: addUsingGET_12
2019-04-11 09:31:55 -Generating unique operation named: editUsingGET_13
2019-04-11 09:31:55 -Generating unique operation named: listUsingGET_14
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_24
2019-04-11 09:31:55 -Generating unique operation named: removeUsingPOST_25
2019-04-11 09:31:55 -Generating unique operation named: saveUsingPOST_12
2019-04-11 09:31:55 -Generating unique operation named: updateUsingGET_9
2019-04-11 09:31:55 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 09:31:55 -Generating unique operation named: updateUsingPOST_13
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPUT_9
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 09:31:56 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 09:31:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 09:31:56 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 09:31:56 -Generating unique operation named: addUsingGET_13
2019-04-11 09:31:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 09:31:56 -Generating unique operation named: editUsingGET_14
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_15
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_13
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_14
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPOST_14
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_16
2019-04-11 09:31:56 -Generating unique operation named: listUsingHEAD_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingPOST_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingPUT_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingPATCH_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingDELETE_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 09:31:56 -Generating unique operation named: listUsingTRACE_1
2019-04-11 09:31:56 -Generating unique operation named: countDDUsingGET_1
2019-04-11 09:31:56 -Generating unique operation named: exprotDDUsingGET_1
2019-04-11 09:31:56 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 09:31:56 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 09:31:56 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 09:31:56 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 09:31:56 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 09:31:56 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 09:31:56 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 09:31:56 -Generating unique operation named: addUsingGET_14
2019-04-11 09:31:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 09:31:56 -Generating unique operation named: editUsingGET_15
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_17
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_26
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_15
2019-04-11 09:31:56 -Generating unique operation named: treeUsingGET_3
2019-04-11 09:31:56 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPOST_15
2019-04-11 09:31:56 -Generating unique operation named: addUsingGET_15
2019-04-11 09:31:56 -Generating unique operation named: editUsingGET_16
2019-04-11 09:31:56 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_18
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_27
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_28
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_16
2019-04-11 09:31:56 -Generating unique operation named: updateUsingGET_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPOST_16
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPUT_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 09:31:56 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 09:31:56 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 09:31:56 -Generating unique operation named: addUsingGET_16
2019-04-11 09:31:56 -Generating unique operation named: editUsingGET_17
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_19
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_29
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_30
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_17
2019-04-11 09:31:56 -Generating unique operation named: updateUsingGET_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPOST_17
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPUT_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 09:31:56 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 09:31:56 -Generating unique operation named: addUsingGET_17
2019-04-11 09:31:56 -Generating unique operation named: editUsingGET_18
2019-04-11 09:31:56 -Generating unique operation named: listUsingGET_20
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_31
2019-04-11 09:31:56 -Generating unique operation named: removeUsingPOST_32
2019-04-11 09:31:56 -Generating unique operation named: saveUsingPOST_18
2019-04-11 09:31:56 -Generating unique operation named: updateUsingGET_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPOST_18
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPUT_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 09:31:56 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 09:31:56 -Starting Quartz Scheduler now
2019-04-11 09:31:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 09:31:56 -Starting...
2019-04-11 09:31:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 09:31:56 -Started.
2019-04-11 09:31:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 09:31:57 -Using a shared selector for servlet write/read
2019-04-11 09:31:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 09:31:57 -Started BootdoApplication in 26.426 seconds (JVM running for 27.35)
2019-04-11 09:31:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 09:31:57 -==> Parameters: 
2019-04-11 09:31:57 -<==      Total: 1
2019-04-11 09:32:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 09:32:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 09:32:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-04-11 09:32:30 -Enabling session validation scheduler...
2019-04-11 09:32:30 -请求地址 : http://localhost:8081/login;JSESSIONID=47746365-05c1-46bb-b8f9-09a961beddeb
2019-04-11 09:32:30 -HTTP METHOD : GET
2019-04-11 09:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:32:30 -参数 : [{}]
2019-04-11 09:32:30 -耗时 : 3
2019-04-11 09:32:30 -返回值 : login
2019-04-11 09:32:31 -请求地址 : http://localhost:8081/getVerify
2019-04-11 09:32:31 -HTTP METHOD : GET
2019-04-11 09:32:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 09:32:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@150094b1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75b4b996]
2019-04-11 09:32:32 -4917
2019-04-11 09:32:32 -耗时 : 752
2019-04-11 09:32:32 -返回值 : null
2019-04-11 09:32:38 -请求地址 : http://localhost:8081/login
2019-04-11 09:32:38 -HTTP METHOD : POST
2019-04-11 09:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 09:32:38 -参数 : [admin, 111111, 4917, org.apache.shiro.web.servlet.ShiroHttpServletRequest@114204f0]
2019-04-11 09:32:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 09:32:38 -==> Parameters: admin(String)
2019-04-11 09:32:38 -<==      Total: 1
2019-04-11 09:32:38 -耗时 : 180
2019-04-11 09:32:38 -返回值 : {msg=操作成功, code=0}
2019-04-11 09:32:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 09:32:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:32:39 -==> Parameters: 1(Long), admin(String), 登录(String), 180(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 09:32:39.055(Timestamp)
2019-04-11 09:32:39 -<==    Updates: 1
2019-04-11 09:32:39 -请求地址 : http://localhost:8081/index
2019-04-11 09:32:39 -HTTP METHOD : GET
2019-04-11 09:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:32:39 -参数 : [{}]
2019-04-11 09:32:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:32:39 -==> Parameters: 1(Long)
2019-04-11 09:32:39 -<==      Total: 48
2019-04-11 09:32:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:32:39 -==> Parameters: 138(Long)
2019-04-11 09:32:39 -<==      Total: 1
2019-04-11 09:32:39 -耗时 : 241
2019-04-11 09:32:39 -返回值 : index_v1
2019-04-11 09:32:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:32:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 241(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:32:39.505(Timestamp)
2019-04-11 09:32:39 -<==    Updates: 1
2019-04-11 09:32:39 -请求地址 : http://localhost:8081/main
2019-04-11 09:32:39 -HTTP METHOD : GET
2019-04-11 09:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:32:39 -参数 : []
2019-04-11 09:32:39 -耗时 : 0
2019-04-11 09:32:39 -返回值 : main
2019-04-11 09:32:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:32:39 -HTTP METHOD : GET
2019-04-11 09:32:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:32:39 -参数 : []
2019-04-11 09:32:39 -请求地址 : http://localhost:8081/main
2019-04-11 09:32:39 -HTTP METHOD : GET
2019-04-11 09:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:32:39 -参数 : []
2019-04-11 09:32:39 -耗时 : 0
2019-04-11 09:32:39 -返回值 : main
2019-04-11 09:32:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:32:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:32:40 -<==      Total: 0
2019-04-11 09:32:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:32:40 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:32:40 -<==      Total: 1
2019-04-11 09:32:40 -耗时 : 282
2019-04-11 09:32:40 -返回值 : com.bootdo.common.utils.PageUtils@71b74b99
2019-04-11 09:32:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 09:32:42 -==> Parameters: 1(Long)
2019-04-11 09:32:42 -<==      Total: 92
2019-04-11 09:32:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:32:42 -HTTP METHOD : GET
2019-04-11 09:32:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:32:42 -参数 : []
2019-04-11 09:32:42 -耗时 : 0
2019-04-11 09:32:42 -返回值 : /moneyList/moneyList
2019-04-11 09:32:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:32:48 -HTTP METHOD : GET
2019-04-11 09:32:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:32:48 -参数 : []
2019-04-11 09:32:48 -耗时 : 0
2019-04-11 09:32:48 -返回值 : system/dept/deptTree
2019-04-11 09:32:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:32:48 -HTTP METHOD : GET
2019-04-11 09:32:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:32:48 -参数 : []
2019-04-11 09:32:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:32:48 -==> Parameters: 
2019-04-11 09:32:48 -<==      Total: 3
2019-04-11 09:32:48 -耗时 : 33
2019-04-11 09:32:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:32:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-04-11 09:32:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:32:50 -HTTP METHOD : GET
2019-04-11 09:32:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:32:50 -参数 : []
2019-04-11 09:32:50 -耗时 : 0
2019-04-11 09:32:50 -返回值 : system/dept/deptTree
2019-04-11 09:32:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:32:50 -HTTP METHOD : GET
2019-04-11 09:32:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:32:50 -参数 : []
2019-04-11 09:32:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:32:50 -==> Parameters: 
2019-04-11 09:32:50 -<==      Total: 3
2019-04-11 09:32:50 -耗时 : 4
2019-04-11 09:32:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:32:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:53 -HTTP METHOD : POST
2019-04-11 09:32:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35fc6475]
2019-04-11 09:32:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:53 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:53 -<==      Total: 3
2019-04-11 09:32:53 -耗时 : 210
2019-04-11 09:32:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ba3a701, com.bootdo.moneyList.damain.MoneyListDO@44bd240b, com.bootdo.moneyList.damain.MoneyListDO@1583c65c]
2019-04-11 09:32:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:54 -HTTP METHOD : POST
2019-04-11 09:32:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@75585ac6]
2019-04-11 09:32:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:54 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:54 -<==      Total: 3
2019-04-11 09:32:54 -耗时 : 6
2019-04-11 09:32:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7b6ee3c2, com.bootdo.moneyList.damain.MoneyListDO@3d8fb0a0, com.bootdo.moneyList.damain.MoneyListDO@38a1bc1]
2019-04-11 09:32:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:54 -HTTP METHOD : POST
2019-04-11 09:32:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7a9a7d18]
2019-04-11 09:32:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:54 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:54 -<==      Total: 3
2019-04-11 09:32:54 -耗时 : 6
2019-04-11 09:32:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5b93d926, com.bootdo.moneyList.damain.MoneyListDO@7987b2bc, com.bootdo.moneyList.damain.MoneyListDO@50dc7229]
2019-04-11 09:32:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:55 -HTTP METHOD : POST
2019-04-11 09:32:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4ad3b54c]
2019-04-11 09:32:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:55 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:55 -<==      Total: 3
2019-04-11 09:32:55 -耗时 : 6
2019-04-11 09:32:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5dc891d, com.bootdo.moneyList.damain.MoneyListDO@5272353f, com.bootdo.moneyList.damain.MoneyListDO@2495c3cc]
2019-04-11 09:32:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:55 -HTTP METHOD : POST
2019-04-11 09:32:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35190382]
2019-04-11 09:32:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:55 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:55 -<==      Total: 3
2019-04-11 09:32:55 -耗时 : 7
2019-04-11 09:32:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@14d2a4e2, com.bootdo.moneyList.damain.MoneyListDO@25ea8d1d, com.bootdo.moneyList.damain.MoneyListDO@70387b4a]
2019-04-11 09:32:56 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:32:56 -HTTP METHOD : POST
2019-04-11 09:32:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:32:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@387a162d]
2019-04-11 09:32:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:32:56 -==> Parameters: 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String), 2019-04(String), 五九(String), 1-0001(String)
2019-04-11 09:32:56 -<==      Total: 3
2019-04-11 09:32:56 -耗时 : 9
2019-04-11 09:32:56 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4f988961, com.bootdo.moneyList.damain.MoneyListDO@18abd6a7, com.bootdo.moneyList.damain.MoneyListDO@4b85b7a9]
2019-04-11 09:46:42 -请求地址 : http://localhost:8081/index
2019-04-11 09:46:42 -HTTP METHOD : GET
2019-04-11 09:46:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:46:42 -参数 : [{}]
2019-04-11 09:46:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:46:42 -==> Parameters: 1(Long)
2019-04-11 09:46:42 -<==      Total: 48
2019-04-11 09:46:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:46:42 -==> Parameters: 138(Long)
2019-04-11 09:46:42 -<==      Total: 1
2019-04-11 09:46:42 -耗时 : 107
2019-04-11 09:46:42 -返回值 : index_v1
2019-04-11 09:46:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:46:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 107(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:46:42.336(Timestamp)
2019-04-11 09:46:42 -<==    Updates: 1
2019-04-11 09:46:42 -请求地址 : http://localhost:8081/main
2019-04-11 09:46:42 -HTTP METHOD : GET
2019-04-11 09:46:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:46:42 -参数 : []
2019-04-11 09:46:42 -耗时 : 0
2019-04-11 09:46:42 -返回值 : main
2019-04-11 09:46:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:46:42 -HTTP METHOD : GET
2019-04-11 09:46:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:46:42 -参数 : []
2019-04-11 09:46:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:46:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:46:42 -<==      Total: 0
2019-04-11 09:46:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:46:42 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:46:42 -<==      Total: 1
2019-04-11 09:46:42 -耗时 : 31
2019-04-11 09:46:42 -返回值 : com.bootdo.common.utils.PageUtils@605f20df
2019-04-11 09:46:42 -请求地址 : http://localhost:8081/main
2019-04-11 09:46:42 -HTTP METHOD : GET
2019-04-11 09:46:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:46:42 -参数 : []
2019-04-11 09:46:42 -耗时 : 1
2019-04-11 09:46:42 -返回值 : main
2019-04-11 09:47:07 -Starting BootdoApplication on ZJZL-20180906VX with PID 712 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 09:47:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 09:47:07 -The following profiles are active: dev
2019-04-11 09:47:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:47:07 CST 2019]; root of context hierarchy
2019-04-11 09:47:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 09:47:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8592ad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77ebdbda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 09:47:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 09:47:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 09:47:14 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 09:47:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 09:47:14 -Starting service [Tomcat]
2019-04-11 09:47:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 09:47:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 09:47:15 -Initializing Spring embedded WebApplicationContext
2019-04-11 09:47:15 -Root WebApplicationContext: initialization completed in 7836 ms
2019-04-11 09:47:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 09:47:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 09:47:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 09:47:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 09:47:15 -Filter xssFilter was not registered (disabled)
2019-04-11 09:47:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 09:47:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 09:47:15 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 09:47:15 -Servlet dispatcherServlet mapped to [/]
2019-04-11 09:47:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:47:07 CST 2019]; root of context hierarchy
2019-04-11 09:47:19 -Using default implementation for ThreadExecutor
2019-04-11 09:47:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 09:47:19 -Quartz Scheduler v.2.2.1 created.
2019-04-11 09:47:19 -RAMJobStore initialized.
2019-04-11 09:47:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 09:47:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 09:47:19 -Quartz scheduler version: 2.2.1
2019-04-11 09:47:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5170bc02
2019-04-11 09:47:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 09:47:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 09:47:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 09:47:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 09:47:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 09:47:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:47:22 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 09:47:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 09:47:22 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 09:47:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 09:47:22 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableElecMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 09:47:22 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 09:47:22 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 09:47:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 09:47:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 09:47:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 09:47:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 09:47:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 09:47:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 09:47:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:47:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 09:47:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 09:47:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 09:47:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 09:47:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 09:47:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 09:47:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 09:47:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 09:47:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 09:47:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 09:47:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 09:47:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 09:47:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 09:47:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 09:47:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 09:47:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 09:47:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 09:47:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 09:47:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:47:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 09:47:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 09:47:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 09:47:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 09:47:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 09:47:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 09:47:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:47:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:47:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 09:47:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 09:47:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 09:47:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 09:47:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 09:47:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 09:47:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 09:47:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 09:47:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 09:47:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 09:47:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 09:47:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 09:47:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 09:47:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 09:47:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 09:47:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 09:47:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 09:47:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 09:47:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 09:47:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 09:47:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 09:47:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 09:47:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 09:47:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 09:47:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 09:47:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 09:47:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 09:47:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 09:47:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 09:47:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:47:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 09:47:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 09:47:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 09:47:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 09:47:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 09:47:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 09:47:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 09:47:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 09:47:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 09:47:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 09:47:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 09:47:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 09:47:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 09:47:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 09:47:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 09:47:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 09:47:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 09:47:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 09:47:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 09:47:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:47:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 09:47:07 CST 2019]; root of context hierarchy
2019-04-11 09:47:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:47:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:47:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 09:47:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 09:47:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 09:47:25 -Registering beans for JMX exposure on startup
2019-04-11 09:47:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 09:47:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 09:47:25 -Starting beans in phase 2147483647
2019-04-11 09:47:25 -Context refreshed
2019-04-11 09:47:26 -Found 1 custom documentation plugin(s)
2019-04-11 09:47:26 -Scanning for api listing references
2019-04-11 09:47:26 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 09:47:26 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 09:47:26 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 09:47:26 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 09:47:26 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 09:47:26 -Generating unique operation named: removeUsingPOST_1
2019-04-11 09:47:26 -Generating unique operation named: addUsingGET_1
2019-04-11 09:47:26 -Generating unique operation named: editUsingGET_1
2019-04-11 09:47:26 -Generating unique operation named: listUsingGET_1
2019-04-11 09:47:26 -Generating unique operation named: removeUsingPOST_2
2019-04-11 09:47:26 -Generating unique operation named: removeUsingPOST_3
2019-04-11 09:47:26 -Generating unique operation named: saveUsingPOST_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingGET_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingPOST_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingPUT_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 09:47:26 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 09:47:26 -Generating unique operation named: addUsingGET_2
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_2
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_2
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_4
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_5
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_2
2019-04-11 09:47:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_6
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_7
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_4
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_4
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_4
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_8
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_9
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 09:47:27 -Generating unique operation named: ElecUsingGET_1
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_5
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_5
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_5
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_10
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_11
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_6
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_6
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_6
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_7
2019-04-11 09:47:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_7
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_12
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_13
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 09:47:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_7
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_8
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_8
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_14
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_15
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_8
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_8
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_9
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_9
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_16
2019-04-11 09:47:27 -Generating unique operation named: removeUsingPOST_17
2019-04-11 09:47:27 -Generating unique operation named: saveUsingPOST_8
2019-04-11 09:47:27 -Generating unique operation named: updateUsingGET_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPOST_9
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPUT_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 09:47:27 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 09:47:27 -Generating unique operation named: addUsingGET_9
2019-04-11 09:47:27 -Generating unique operation named: editUsingGET_10
2019-04-11 09:47:27 -Generating unique operation named: infoUsingGET_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingPOST_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingPUT_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 09:47:27 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 09:47:27 -Generating unique operation named: listUsingGET_10
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_18
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_19
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_10
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_11
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_20
2019-04-11 09:47:28 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_10
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_11
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_12
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_21
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_10
2019-04-11 09:47:28 -Generating unique operation named: treeUsingGET_1
2019-04-11 09:47:28 -Generating unique operation named: treeUsingGET_2
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_11
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_11
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_12
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_13
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_22
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_23
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingGET_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPUT_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 09:47:28 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_12
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_13
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_14
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_24
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_25
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingGET_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_13
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPUT_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 09:47:28 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_13
2019-04-11 09:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_14
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_15
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_13
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_14
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_14
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_16
2019-04-11 09:47:28 -Generating unique operation named: listUsingHEAD_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingPOST_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingPUT_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingPATCH_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingDELETE_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 09:47:28 -Generating unique operation named: listUsingTRACE_1
2019-04-11 09:47:28 -Generating unique operation named: countDDUsingGET_1
2019-04-11 09:47:28 -Generating unique operation named: exprotDDUsingGET_1
2019-04-11 09:47:28 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 09:47:28 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 09:47:28 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 09:47:28 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 09:47:28 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 09:47:28 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 09:47:28 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_14
2019-04-11 09:47:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_15
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_17
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_26
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_15
2019-04-11 09:47:28 -Generating unique operation named: treeUsingGET_3
2019-04-11 09:47:28 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_15
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_15
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_16
2019-04-11 09:47:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_18
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_27
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_28
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_16
2019-04-11 09:47:28 -Generating unique operation named: updateUsingGET_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_16
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPUT_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 09:47:28 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 09:47:28 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_16
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_17
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_19
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_29
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_30
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_17
2019-04-11 09:47:28 -Generating unique operation named: updateUsingGET_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_17
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPUT_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 09:47:28 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 09:47:28 -Generating unique operation named: addUsingGET_17
2019-04-11 09:47:28 -Generating unique operation named: editUsingGET_18
2019-04-11 09:47:28 -Generating unique operation named: listUsingGET_20
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_31
2019-04-11 09:47:28 -Generating unique operation named: removeUsingPOST_32
2019-04-11 09:47:28 -Generating unique operation named: saveUsingPOST_18
2019-04-11 09:47:28 -Generating unique operation named: updateUsingGET_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPOST_18
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPUT_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 09:47:28 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 09:47:29 -Starting Quartz Scheduler now
2019-04-11 09:47:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 09:47:29 -Starting...
2019-04-11 09:47:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 09:47:29 -Started.
2019-04-11 09:47:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 09:47:29 -Using a shared selector for servlet write/read
2019-04-11 09:47:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 09:47:29 -Started BootdoApplication in 23.04 seconds (JVM running for 23.908)
2019-04-11 09:47:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 09:47:29 -==> Parameters: 
2019-04-11 09:47:29 -<==      Total: 1
2019-04-11 09:47:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 09:47:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 09:47:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2019-04-11 09:47:49 -Enabling session validation scheduler...
2019-04-11 09:47:49 -请求地址 : http://localhost:8081/login;JSESSIONID=060d9318-cb1c-4d94-abff-ecfbe656e8df
2019-04-11 09:47:49 -HTTP METHOD : GET
2019-04-11 09:47:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 09:47:49 -参数 : [{}]
2019-04-11 09:47:49 -耗时 : 2
2019-04-11 09:47:49 -返回值 : login
2019-04-11 09:47:51 -请求地址 : http://localhost:8081/getVerify
2019-04-11 09:47:51 -HTTP METHOD : GET
2019-04-11 09:47:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 09:47:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1365ef0e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d9992db]
2019-04-11 09:47:51 -2660
2019-04-11 09:47:51 -耗时 : 595
2019-04-11 09:47:51 -返回值 : null
2019-04-11 09:47:57 -请求地址 : http://localhost:8081/login
2019-04-11 09:47:57 -HTTP METHOD : POST
2019-04-11 09:47:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 09:47:57 -参数 : [admin, 111111, 2660, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a8bbf8e]
2019-04-11 09:47:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 09:47:57 -==> Parameters: admin(String)
2019-04-11 09:47:57 -<==      Total: 1
2019-04-11 09:47:57 -耗时 : 211
2019-04-11 09:47:57 -返回值 : {msg=操作成功, code=0}
2019-04-11 09:47:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 09:47:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:47:57 -==> Parameters: 1(Long), admin(String), 登录(String), 212(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 09:47:57.489(Timestamp)
2019-04-11 09:47:57 -请求地址 : http://localhost:8081/index
2019-04-11 09:47:57 -HTTP METHOD : GET
2019-04-11 09:47:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 09:47:57 -参数 : [{}]
2019-04-11 09:47:57 -<==    Updates: 1
2019-04-11 09:47:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 09:47:57 -==> Parameters: 1(Long)
2019-04-11 09:47:57 -<==      Total: 48
2019-04-11 09:47:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 09:47:57 -==> Parameters: 138(Long)
2019-04-11 09:47:57 -<==      Total: 1
2019-04-11 09:47:57 -耗时 : 384
2019-04-11 09:47:57 -返回值 : index_v1
2019-04-11 09:47:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 09:47:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 386(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 09:47:57.985(Timestamp)
2019-04-11 09:47:58 -<==    Updates: 1
2019-04-11 09:47:58 -请求地址 : http://localhost:8081/main
2019-04-11 09:47:58 -HTTP METHOD : GET
2019-04-11 09:47:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:47:58 -参数 : []
2019-04-11 09:47:58 -耗时 : 1
2019-04-11 09:47:58 -返回值 : main
2019-04-11 09:47:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 09:47:58 -HTTP METHOD : GET
2019-04-11 09:47:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 09:47:58 -参数 : []
2019-04-11 09:47:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 09:47:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 09:47:58 -<==      Total: 0
2019-04-11 09:47:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 09:47:58 -==> Parameters: 1(Long), 0(String)
2019-04-11 09:47:58 -请求地址 : http://localhost:8081/main
2019-04-11 09:47:58 -HTTP METHOD : GET
2019-04-11 09:47:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 09:47:58 -参数 : []
2019-04-11 09:47:58 -耗时 : 1
2019-04-11 09:47:58 -返回值 : main
2019-04-11 09:47:58 -<==      Total: 1
2019-04-11 09:47:58 -耗时 : 126
2019-04-11 09:47:58 -返回值 : com.bootdo.common.utils.PageUtils@2142c37b
2019-04-11 09:48:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 09:48:02 -==> Parameters: 1(Long)
2019-04-11 09:48:02 -<==      Total: 92
2019-04-11 09:48:02 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 09:48:02 -HTTP METHOD : GET
2019-04-11 09:48:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 09:48:02 -参数 : []
2019-04-11 09:48:02 -耗时 : 1
2019-04-11 09:48:02 -返回值 : /moneyList/moneyList
2019-04-11 09:48:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:48:07 -HTTP METHOD : GET
2019-04-11 09:48:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:48:07 -参数 : []
2019-04-11 09:48:07 -耗时 : 4
2019-04-11 09:48:07 -返回值 : system/dept/deptTree
2019-04-11 09:48:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:48:07 -HTTP METHOD : GET
2019-04-11 09:48:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:48:07 -参数 : []
2019-04-11 09:48:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:48:07 -==> Parameters: 
2019-04-11 09:48:07 -<==      Total: 3
2019-04-11 09:48:07 -耗时 : 84
2019-04-11 09:48:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:48:09 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:48:09 -HTTP METHOD : POST
2019-04-11 09:48:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:48:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@41fcec4e]
2019-04-11 09:48:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:48:09 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 09:48:09 -<==      Total: 3
2019-04-11 09:48:09 -耗时 : 204
2019-04-11 09:48:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@265da830, com.bootdo.moneyList.damain.MoneyListDO@4eb4754d, com.bootdo.moneyList.damain.MoneyListDO@40e82b9a]
2019-04-11 09:48:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 09:48:10 -HTTP METHOD : POST
2019-04-11 09:48:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 09:48:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14caf54b]
2019-04-11 09:48:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 09:48:10 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 09:48:10 -<==      Total: 3
2019-04-11 09:48:10 -耗时 : 8
2019-04-11 09:48:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6b7acb4, com.bootdo.moneyList.damain.MoneyListDO@2025d389, com.bootdo.moneyList.damain.MoneyListDO@5beab491]
2019-04-11 09:48:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-11 09:50:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 09:50:02 -HTTP METHOD : GET
2019-04-11 09:50:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 09:50:02 -参数 : []
2019-04-11 09:50:02 -耗时 : 13
2019-04-11 09:50:02 -返回值 : charts/tableElecMM
2019-04-11 09:51:48 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:51:48 -HTTP METHOD : GET
2019-04-11 09:51:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:51:48 -参数 : []
2019-04-11 09:51:48 -耗时 : 6
2019-04-11 09:51:48 -返回值 : charts/tableHeatMM
2019-04-11 09:51:52 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 09:51:52 -HTTP METHOD : GET
2019-04-11 09:51:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 09:51:52 -参数 : []
2019-04-11 09:51:52 -耗时 : 6
2019-04-11 09:51:52 -返回值 : charts/tableWaterMM
2019-04-11 09:52:31 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:52:31 -HTTP METHOD : GET
2019-04-11 09:52:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:52:31 -参数 : []
2019-04-11 09:52:31 -耗时 : 1
2019-04-11 09:52:31 -返回值 : charts/tableHeatMM
2019-04-11 09:52:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 09:52:32 -HTTP METHOD : GET
2019-04-11 09:52:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 09:52:32 -参数 : []
2019-04-11 09:52:32 -耗时 : 1
2019-04-11 09:52:32 -返回值 : charts/tableElecMM
2019-04-11 09:54:09 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:54:09 -HTTP METHOD : GET
2019-04-11 09:54:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:54:09 -参数 : []
2019-04-11 09:54:09 -耗时 : 0
2019-04-11 09:54:09 -返回值 : charts/tableHeatMM
2019-04-11 09:54:09 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 09:54:09 -HTTP METHOD : GET
2019-04-11 09:54:09 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 09:54:09 -参数 : []
2019-04-11 09:54:09 -耗时 : 0
2019-04-11 09:54:09 -返回值 : charts/tableWaterMM
2019-04-11 09:54:10 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:54:10 -HTTP METHOD : GET
2019-04-11 09:54:10 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:54:10 -参数 : []
2019-04-11 09:54:10 -耗时 : 1
2019-04-11 09:54:10 -返回值 : charts/tableHeatMM
2019-04-11 09:54:11 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 09:54:11 -HTTP METHOD : GET
2019-04-11 09:54:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 09:54:11 -参数 : []
2019-04-11 09:54:11 -耗时 : 0
2019-04-11 09:54:11 -返回值 : charts/tableElecMM
2019-04-11 09:54:11 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 09:54:11 -HTTP METHOD : GET
2019-04-11 09:54:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 09:54:11 -参数 : []
2019-04-11 09:54:11 -耗时 : 1
2019-04-11 09:54:11 -返回值 : charts/tableWaterMM
2019-04-11 09:54:12 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:54:12 -HTTP METHOD : GET
2019-04-11 09:54:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:54:12 -参数 : []
2019-04-11 09:54:12 -耗时 : 0
2019-04-11 09:54:12 -返回值 : charts/tableHeatMM
2019-04-11 09:54:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 09:54:13 -HTTP METHOD : GET
2019-04-11 09:54:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 09:54:13 -参数 : []
2019-04-11 09:54:13 -耗时 : 0
2019-04-11 09:54:13 -返回值 : charts/tableElecMM
2019-04-11 09:54:14 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 09:54:14 -HTTP METHOD : GET
2019-04-11 09:54:14 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 09:54:14 -参数 : []
2019-04-11 09:54:14 -耗时 : 0
2019-04-11 09:54:14 -返回值 : charts/tableWaterMM
2019-04-11 09:54:15 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:54:15 -HTTP METHOD : GET
2019-04-11 09:54:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:54:15 -参数 : []
2019-04-11 09:54:15 -耗时 : 0
2019-04-11 09:54:15 -返回值 : charts/tableHeatMM
2019-04-11 09:54:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 09:54:16 -HTTP METHOD : GET
2019-04-11 09:54:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 09:54:16 -参数 : []
2019-04-11 09:54:16 -耗时 : 0
2019-04-11 09:54:16 -返回值 : charts/tableElecMM
2019-04-11 09:55:32 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 09:55:32 -HTTP METHOD : GET
2019-04-11 09:55:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 09:55:32 -参数 : []
2019-04-11 09:55:32 -耗时 : 0
2019-04-11 09:55:32 -返回值 : charts/tableHeatMM
2019-04-11 09:55:34 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 09:55:34 -HTTP METHOD : GET
2019-04-11 09:55:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 09:55:34 -参数 : []
2019-04-11 09:55:34 -耗时 : 0
2019-04-11 09:55:34 -返回值 : charts/tableWaterMM
2019-04-11 09:55:43 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 09:55:43 -HTTP METHOD : GET
2019-04-11 09:55:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 09:55:43 -参数 : []
2019-04-11 09:55:43 -耗时 : 11
2019-04-11 09:55:43 -返回值 : charts/tableDD
2019-04-11 09:57:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 09:57:33 -HTTP METHOD : GET
2019-04-11 09:57:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 09:57:33 -参数 : []
2019-04-11 09:57:33 -耗时 : 1
2019-04-11 09:57:33 -返回值 : system/dept/deptTree
2019-04-11 09:57:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 09:57:34 -HTTP METHOD : GET
2019-04-11 09:57:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 09:57:34 -参数 : []
2019-04-11 09:57:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 09:57:34 -==> Parameters: 
2019-04-11 09:57:34 -<==      Total: 3
2019-04-11 09:57:34 -耗时 : 6
2019-04-11 09:57:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 09:57:47 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 09:57:47 -HTTP METHOD : GET
2019-04-11 09:57:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 09:57:47 -参数 : []
2019-04-11 09:57:47 -耗时 : 12
2019-04-11 09:57:47 -返回值 : charts/countDD
2019-04-11 09:57:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 09:57:48 -HTTP METHOD : GET
2019-04-11 09:57:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 09:57:48 -参数 : [userType]
2019-04-11 09:57:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 09:57:48 -==> Parameters: userType(String)
2019-04-11 09:57:48 -<==      Total: 4
2019-04-11 09:57:48 -耗时 : 84
2019-04-11 09:57:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:02:32 -请求地址 : http://localhost:8081/index
2019-04-11 10:02:32 -HTTP METHOD : GET
2019-04-11 10:02:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 10:02:32 -参数 : [{}]
2019-04-11 10:02:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 10:02:32 -==> Parameters: 1(Long)
2019-04-11 10:02:32 -<==      Total: 48
2019-04-11 10:02:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 10:02:32 -==> Parameters: 138(Long)
2019-04-11 10:02:32 -<==      Total: 1
2019-04-11 10:02:32 -耗时 : 34
2019-04-11 10:02:32 -返回值 : index_v1
2019-04-11 10:02:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 10:02:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 10:02:32.67(Timestamp)
2019-04-11 10:02:33 -请求地址 : http://localhost:8081/main
2019-04-11 10:02:33 -HTTP METHOD : GET
2019-04-11 10:02:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 10:02:33 -参数 : []
2019-04-11 10:02:33 -耗时 : 0
2019-04-11 10:02:33 -返回值 : main
2019-04-11 10:02:33 -<==    Updates: 1
2019-04-11 10:02:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 10:02:33 -HTTP METHOD : GET
2019-04-11 10:02:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 10:02:33 -参数 : []
2019-04-11 10:02:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 10:02:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 10:02:33 -<==      Total: 0
2019-04-11 10:02:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 10:02:33 -==> Parameters: 1(Long), 0(String)
2019-04-11 10:02:33 -<==      Total: 1
2019-04-11 10:02:33 -耗时 : 13
2019-04-11 10:02:33 -返回值 : com.bootdo.common.utils.PageUtils@54741172
2019-04-11 10:02:33 -请求地址 : http://localhost:8081/main
2019-04-11 10:02:33 -HTTP METHOD : GET
2019-04-11 10:02:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 10:02:33 -参数 : []
2019-04-11 10:02:33 -耗时 : 0
2019-04-11 10:02:33 -返回值 : main
2019-04-11 10:02:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 10:02:35 -==> Parameters: 1(Long)
2019-04-11 10:02:35 -<==      Total: 92
2019-04-11 10:02:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 10:02:35 -HTTP METHOD : GET
2019-04-11 10:02:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 10:02:35 -参数 : []
2019-04-11 10:02:35 -耗时 : 0
2019-04-11 10:02:35 -返回值 : /moneyList/moneyList
2019-04-11 10:02:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 10:02:39 -HTTP METHOD : GET
2019-04-11 10:02:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 10:02:39 -参数 : []
2019-04-11 10:02:39 -耗时 : 1
2019-04-11 10:02:39 -返回值 : system/dept/deptTree
2019-04-11 10:02:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 10:02:39 -HTTP METHOD : GET
2019-04-11 10:02:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 10:02:39 -参数 : []
2019-04-11 10:02:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 10:02:39 -==> Parameters: 
2019-04-11 10:02:39 -<==      Total: 3
2019-04-11 10:02:39 -耗时 : 3
2019-04-11 10:02:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 10:02:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-11 10:02:42 -HTTP METHOD : POST
2019-04-11 10:02:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-11 10:02:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@b79c719]
2019-04-11 10:02:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-11 10:02:42 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-11 10:02:42 -<==      Total: 3
2019-04-11 10:02:42 -耗时 : 6
2019-04-11 10:02:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@35f3425c, com.bootdo.moneyList.damain.MoneyListDO@165f86e5, com.bootdo.moneyList.damain.MoneyListDO@535bca38]
2019-04-11 10:16:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 10:16:45 -==> Parameters: 1(Long)
2019-04-11 10:16:45 -<==      Total: 92
2019-04-11 10:16:45 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-04-11 10:16:45 -HTTP METHOD : GET
2019-04-11 10:16:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-04-11 10:16:45 -参数 : []
2019-04-11 10:16:45 -耗时 : 0
2019-04-11 10:16:45 -返回值 : elec/elecUpLoad/elecUpLoad
2019-04-11 10:17:52 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 10:17:52 -HTTP METHOD : GET
2019-04-11 10:17:52 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 10:17:52 -参数 : []
2019-04-11 10:17:52 -耗时 : 10
2019-04-11 10:17:52 -返回值 : charts/countMM
2019-04-11 10:17:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:17:53 -HTTP METHOD : GET
2019-04-11 10:17:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:17:53 -参数 : []
2019-04-11 10:17:53 -耗时 : 1
2019-04-11 10:17:53 -返回值 : charts/tableElecMM
2019-04-11 10:17:54 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:17:54 -HTTP METHOD : GET
2019-04-11 10:17:54 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:17:54 -参数 : []
2019-04-11 10:17:54 -耗时 : 0
2019-04-11 10:17:54 -返回值 : charts/tableHeatMM
2019-04-11 10:17:55 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:17:55 -HTTP METHOD : GET
2019-04-11 10:17:55 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:17:55 -参数 : []
2019-04-11 10:17:55 -耗时 : 1
2019-04-11 10:17:55 -返回值 : charts/tableWaterMM
2019-04-11 10:17:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:17:56 -HTTP METHOD : GET
2019-04-11 10:17:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:17:56 -参数 : []
2019-04-11 10:17:56 -耗时 : 1
2019-04-11 10:17:56 -返回值 : charts/tableElecMM
2019-04-11 10:17:57 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:17:57 -HTTP METHOD : GET
2019-04-11 10:17:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:17:57 -参数 : []
2019-04-11 10:17:57 -耗时 : 0
2019-04-11 10:17:57 -返回值 : charts/tableHeatMM
2019-04-11 10:17:57 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:17:57 -HTTP METHOD : GET
2019-04-11 10:17:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:17:57 -参数 : []
2019-04-11 10:17:57 -耗时 : 0
2019-04-11 10:17:57 -返回值 : charts/tableWaterMM
2019-04-11 10:17:58 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:17:58 -HTTP METHOD : GET
2019-04-11 10:17:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:17:58 -参数 : []
2019-04-11 10:17:58 -耗时 : 1
2019-04-11 10:17:58 -返回值 : charts/tableHeatMM
2019-04-11 10:17:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:17:59 -HTTP METHOD : GET
2019-04-11 10:17:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:17:59 -参数 : []
2019-04-11 10:17:59 -耗时 : 0
2019-04-11 10:17:59 -返回值 : charts/tableElecMM
2019-04-11 10:18:00 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:18:00 -HTTP METHOD : GET
2019-04-11 10:18:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:18:00 -参数 : []
2019-04-11 10:18:00 -耗时 : 1
2019-04-11 10:18:00 -返回值 : charts/tableHeatMM
2019-04-11 10:18:00 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:18:00 -HTTP METHOD : GET
2019-04-11 10:18:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:18:00 -参数 : []
2019-04-11 10:18:00 -耗时 : 0
2019-04-11 10:18:00 -返回值 : charts/tableWaterMM
2019-04-11 10:18:01 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:18:01 -HTTP METHOD : GET
2019-04-11 10:18:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:18:01 -参数 : []
2019-04-11 10:18:01 -耗时 : 1
2019-04-11 10:18:01 -返回值 : charts/tableHeatMM
2019-04-11 10:18:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:18:01 -HTTP METHOD : GET
2019-04-11 10:18:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:18:01 -参数 : []
2019-04-11 10:18:01 -耗时 : 1
2019-04-11 10:18:01 -返回值 : charts/tableElecMM
2019-04-11 10:18:02 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:18:02 -HTTP METHOD : GET
2019-04-11 10:18:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:18:02 -参数 : []
2019-04-11 10:18:02 -耗时 : 1
2019-04-11 10:18:02 -返回值 : charts/tableHeatMM
2019-04-11 10:18:02 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:18:02 -HTTP METHOD : GET
2019-04-11 10:18:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:18:02 -参数 : []
2019-04-11 10:18:02 -耗时 : 2
2019-04-11 10:18:02 -返回值 : charts/tableWaterMM
2019-04-11 10:18:03 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:18:03 -HTTP METHOD : GET
2019-04-11 10:18:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:18:03 -参数 : []
2019-04-11 10:18:03 -耗时 : 1
2019-04-11 10:18:03 -返回值 : charts/tableHeatMM
2019-04-11 10:18:03 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:18:03 -HTTP METHOD : GET
2019-04-11 10:18:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:18:03 -参数 : []
2019-04-11 10:18:03 -耗时 : 0
2019-04-11 10:18:03 -返回值 : charts/tableElecMM
2019-04-11 10:18:07 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:18:07 -HTTP METHOD : GET
2019-04-11 10:18:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:18:07 -参数 : []
2019-04-11 10:18:07 -耗时 : 0
2019-04-11 10:18:07 -返回值 : charts/tableHeatMM
2019-04-11 10:18:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:18:08 -HTTP METHOD : GET
2019-04-11 10:18:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:18:08 -参数 : []
2019-04-11 10:18:08 -耗时 : 1
2019-04-11 10:18:08 -返回值 : charts/tableElecMM
2019-04-11 10:18:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 437]
2019-04-11 10:23:20 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 10:23:20 -HTTP METHOD : GET
2019-04-11 10:23:20 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 10:23:20 -参数 : []
2019-04-11 10:23:20 -耗时 : 1
2019-04-11 10:23:20 -返回值 : charts/countDD
2019-04-11 10:23:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:23:20 -HTTP METHOD : GET
2019-04-11 10:23:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:23:20 -参数 : [userType]
2019-04-11 10:23:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:23:20 -==> Parameters: userType(String)
2019-04-11 10:23:20 -<==      Total: 4
2019-04-11 10:23:20 -耗时 : 9
2019-04-11 10:23:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:23:25 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 10:23:25 -HTTP METHOD : GET
2019-04-11 10:23:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 10:23:25 -参数 : []
2019-04-11 10:23:25 -耗时 : 1
2019-04-11 10:23:25 -返回值 : charts/tableDD
2019-04-11 10:23:30 -请求地址 : http://localhost:8081/charts/countYY
2019-04-11 10:23:30 -HTTP METHOD : GET
2019-04-11 10:23:30 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-11 10:23:30 -参数 : []
2019-04-11 10:23:30 -耗时 : 2
2019-04-11 10:23:30 -返回值 : charts/countYY
2019-04-11 10:23:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:23:30 -HTTP METHOD : GET
2019-04-11 10:23:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:23:30 -参数 : [userType]
2019-04-11 10:23:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:23:30 -==> Parameters: userType(String)
2019-04-11 10:23:30 -<==      Total: 4
2019-04-11 10:23:30 -耗时 : 7
2019-04-11 10:23:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:23:35 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-11 10:23:35 -HTTP METHOD : GET
2019-04-11 10:23:35 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-11 10:23:35 -参数 : []
2019-04-11 10:23:35 -耗时 : 0
2019-04-11 10:23:35 -返回值 : charts/countOwe
2019-04-11 10:23:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:23:35 -HTTP METHOD : GET
2019-04-11 10:23:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:23:35 -参数 : [userType]
2019-04-11 10:23:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:23:35 -==> Parameters: userType(String)
2019-04-11 10:23:35 -<==      Total: 4
2019-04-11 10:23:35 -耗时 : 9
2019-04-11 10:23:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:23:36 -请求地址 : http://localhost:8081/charts/countRun
2019-04-11 10:23:36 -HTTP METHOD : GET
2019-04-11 10:23:36 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-11 10:23:36 -参数 : []
2019-04-11 10:23:36 -耗时 : 1
2019-04-11 10:23:36 -返回值 : charts/countRun
2019-04-11 10:24:15 -请求地址 : http://localhost:8081/elec/elec
2019-04-11 10:24:15 -HTTP METHOD : GET
2019-04-11 10:24:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-11 10:24:15 -参数 : []
2019-04-11 10:24:15 -耗时 : 0
2019-04-11 10:24:15 -返回值 : elec/elec/elec
2019-04-11 10:24:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:24:15 -HTTP METHOD : GET
2019-04-11 10:24:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:24:15 -参数 : [userType]
2019-04-11 10:24:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:24:15 -==> Parameters: userType(String)
2019-04-11 10:24:15 -<==      Total: 4
2019-04-11 10:24:15 -耗时 : 5
2019-04-11 10:24:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:24:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-11 10:24:15 -HTTP METHOD : GET
2019-04-11 10:24:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-11 10:24:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@f2ce25b]
2019-04-11 10:24:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-11 10:24:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-11 10:24:15 -<==      Total: 10
2019-04-11 10:24:15 -==>  Preparing: select count(*) from elec 
2019-04-11 10:24:15 -==> Parameters: 
2019-04-11 10:24:15 -<==      Total: 1
2019-04-11 10:24:15 -耗时 : 86
2019-04-11 10:24:15 -返回值 : com.bootdo.common.utils.PageUtils@255ab724
2019-04-11 10:24:31 -请求地址 : http://localhost:8081/print/print
2019-04-11 10:24:31 -HTTP METHOD : GET
2019-04-11 10:24:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-11 10:24:31 -参数 : []
2019-04-11 10:24:31 -耗时 : 0
2019-04-11 10:24:31 -返回值 : print/print/print
2019-04-11 10:24:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:24:31 -HTTP METHOD : GET
2019-04-11 10:24:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:24:31 -参数 : [userType]
2019-04-11 10:24:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:24:31 -==> Parameters: userType(String)
2019-04-11 10:24:31 -<==      Total: 4
2019-04-11 10:24:31 -耗时 : 6
2019-04-11 10:24:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:24:31 -请求地址 : http://localhost:8081/print/print/list
2019-04-11 10:24:31 -HTTP METHOD : GET
2019-04-11 10:24:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-11 10:24:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-11 10:24:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-11 10:24:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-11 10:24:31 -<==      Total: 4
2019-04-11 10:24:31 -==>  Preparing: select count(*) from print 
2019-04-11 10:24:31 -==> Parameters: 
2019-04-11 10:24:32 -<==      Total: 1
2019-04-11 10:24:32 -耗时 : 134
2019-04-11 10:24:32 -返回值 : com.bootdo.common.utils.PageUtils@5b71d6c4
2019-04-11 10:24:33 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-11 10:24:33 -HTTP METHOD : GET
2019-04-11 10:24:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-11 10:24:33 -参数 : [1, {}]
2019-04-11 10:24:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-11 10:24:33 -==> Parameters: 1(Long)
2019-04-11 10:24:33 -<==      Total: 1
2019-04-11 10:24:33 -耗时 : 8
2019-04-11 10:24:33 -返回值 : print/print/edit
2019-04-11 10:24:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:24:33 -HTTP METHOD : GET
2019-04-11 10:24:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:24:33 -参数 : [userType]
2019-04-11 10:24:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:24:33 -==> Parameters: userType(String)
2019-04-11 10:24:33 -<==      Total: 4
2019-04-11 10:24:33 -耗时 : 4
2019-04-11 10:24:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:24:38 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-11 10:24:38 -HTTP METHOD : GET
2019-04-11 10:24:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-11 10:24:38 -参数 : [1, {}]
2019-04-11 10:24:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-11 10:24:38 -==> Parameters: 1(Long)
2019-04-11 10:24:38 -<==      Total: 1
2019-04-11 10:24:38 -耗时 : 9
2019-04-11 10:24:38 -返回值 : print/print/printEdit
2019-04-11 10:25:01 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 10:25:01 -HTTP METHOD : GET
2019-04-11 10:25:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 10:25:01 -参数 : []
2019-04-11 10:25:01 -耗时 : 1
2019-04-11 10:25:01 -返回值 : charts/countMM
2019-04-11 10:25:03 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:25:03 -HTTP METHOD : GET
2019-04-11 10:25:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:25:03 -参数 : []
2019-04-11 10:25:03 -耗时 : 1
2019-04-11 10:25:03 -返回值 : charts/tableElecMM
2019-04-11 10:25:28 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-11 10:25:28 -HTTP METHOD : GET
2019-04-11 10:25:28 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-11 10:25:28 -参数 : []
2019-04-11 10:25:28 -耗时 : 1
2019-04-11 10:25:28 -返回值 : charts/countOwe
2019-04-11 10:25:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:25:28 -HTTP METHOD : GET
2019-04-11 10:25:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:25:28 -参数 : [userType]
2019-04-11 10:25:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:25:28 -==> Parameters: userType(String)
2019-04-11 10:25:28 -<==      Total: 4
2019-04-11 10:25:28 -耗时 : 7
2019-04-11 10:25:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 10:25:29 -请求地址 : http://localhost:8081/charts/countRun
2019-04-11 10:25:29 -HTTP METHOD : GET
2019-04-11 10:25:29 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-11 10:25:29 -参数 : []
2019-04-11 10:25:29 -耗时 : 0
2019-04-11 10:25:29 -返回值 : charts/countRun
2019-04-11 10:29:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 10:29:23 -==> Parameters: 1(Long)
2019-04-11 10:29:23 -<==      Total: 92
2019-04-11 10:29:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:23 -HTTP METHOD : GET
2019-04-11 10:29:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:23 -参数 : []
2019-04-11 10:29:23 -耗时 : 0
2019-04-11 10:29:23 -返回值 : charts/tableElecMM
2019-04-11 10:29:35 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:35 -HTTP METHOD : GET
2019-04-11 10:29:35 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:35 -参数 : []
2019-04-11 10:29:35 -耗时 : 0
2019-04-11 10:29:35 -返回值 : charts/tableHeatMM
2019-04-11 10:29:36 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:29:36 -HTTP METHOD : GET
2019-04-11 10:29:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:29:36 -参数 : []
2019-04-11 10:29:36 -耗时 : 1
2019-04-11 10:29:36 -返回值 : charts/tableWaterMM
2019-04-11 10:29:37 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:37 -HTTP METHOD : GET
2019-04-11 10:29:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:37 -参数 : []
2019-04-11 10:29:37 -耗时 : 0
2019-04-11 10:29:37 -返回值 : charts/tableHeatMM
2019-04-11 10:29:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:38 -HTTP METHOD : GET
2019-04-11 10:29:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:38 -参数 : []
2019-04-11 10:29:38 -耗时 : 0
2019-04-11 10:29:38 -返回值 : charts/tableElecMM
2019-04-11 10:29:38 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:38 -HTTP METHOD : GET
2019-04-11 10:29:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:38 -参数 : []
2019-04-11 10:29:38 -耗时 : 1
2019-04-11 10:29:38 -返回值 : charts/tableHeatMM
2019-04-11 10:29:39 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:29:39 -HTTP METHOD : GET
2019-04-11 10:29:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:29:39 -参数 : []
2019-04-11 10:29:39 -耗时 : 3
2019-04-11 10:29:39 -返回值 : charts/tableWaterMM
2019-04-11 10:29:39 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:39 -HTTP METHOD : GET
2019-04-11 10:29:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:39 -参数 : []
2019-04-11 10:29:39 -耗时 : 1
2019-04-11 10:29:39 -返回值 : charts/tableHeatMM
2019-04-11 10:29:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:40 -HTTP METHOD : GET
2019-04-11 10:29:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:40 -参数 : []
2019-04-11 10:29:40 -耗时 : 0
2019-04-11 10:29:40 -返回值 : charts/tableElecMM
2019-04-11 10:29:40 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:40 -HTTP METHOD : GET
2019-04-11 10:29:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:40 -参数 : []
2019-04-11 10:29:40 -耗时 : 1
2019-04-11 10:29:40 -返回值 : charts/tableHeatMM
2019-04-11 10:29:41 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:29:41 -HTTP METHOD : GET
2019-04-11 10:29:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:29:41 -参数 : []
2019-04-11 10:29:41 -耗时 : 1
2019-04-11 10:29:41 -返回值 : charts/tableWaterMM
2019-04-11 10:29:41 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:41 -HTTP METHOD : GET
2019-04-11 10:29:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:41 -参数 : []
2019-04-11 10:29:41 -耗时 : 1
2019-04-11 10:29:41 -返回值 : charts/tableHeatMM
2019-04-11 10:29:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:42 -HTTP METHOD : GET
2019-04-11 10:29:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:42 -参数 : []
2019-04-11 10:29:42 -耗时 : 1
2019-04-11 10:29:42 -返回值 : charts/tableElecMM
2019-04-11 10:29:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:43 -HTTP METHOD : GET
2019-04-11 10:29:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:43 -参数 : []
2019-04-11 10:29:43 -耗时 : 0
2019-04-11 10:29:43 -返回值 : charts/tableHeatMM
2019-04-11 10:29:43 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:29:43 -HTTP METHOD : GET
2019-04-11 10:29:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:29:43 -参数 : []
2019-04-11 10:29:43 -耗时 : 0
2019-04-11 10:29:43 -返回值 : charts/tableWaterMM
2019-04-11 10:29:44 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:44 -HTTP METHOD : GET
2019-04-11 10:29:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:44 -参数 : []
2019-04-11 10:29:44 -耗时 : 1
2019-04-11 10:29:44 -返回值 : charts/tableHeatMM
2019-04-11 10:29:45 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:45 -HTTP METHOD : GET
2019-04-11 10:29:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:45 -参数 : []
2019-04-11 10:29:45 -耗时 : 0
2019-04-11 10:29:45 -返回值 : charts/tableHeatMM
2019-04-11 10:29:46 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:46 -HTTP METHOD : GET
2019-04-11 10:29:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:46 -参数 : []
2019-04-11 10:29:46 -耗时 : 1
2019-04-11 10:29:46 -返回值 : charts/tableElecMM
2019-04-11 10:29:47 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:47 -HTTP METHOD : GET
2019-04-11 10:29:47 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:47 -参数 : []
2019-04-11 10:29:47 -耗时 : 0
2019-04-11 10:29:47 -返回值 : charts/tableHeatMM
2019-04-11 10:29:51 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:29:51 -HTTP METHOD : GET
2019-04-11 10:29:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:29:51 -参数 : []
2019-04-11 10:29:51 -耗时 : 1
2019-04-11 10:29:51 -返回值 : charts/tableWaterMM
2019-04-11 10:29:52 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:52 -HTTP METHOD : GET
2019-04-11 10:29:52 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:52 -参数 : []
2019-04-11 10:29:52 -耗时 : 0
2019-04-11 10:29:52 -返回值 : charts/tableHeatMM
2019-04-11 10:29:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:29:53 -HTTP METHOD : GET
2019-04-11 10:29:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:29:53 -参数 : []
2019-04-11 10:29:53 -耗时 : 1
2019-04-11 10:29:53 -返回值 : charts/tableElecMM
2019-04-11 10:29:53 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:29:53 -HTTP METHOD : GET
2019-04-11 10:29:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:29:53 -参数 : []
2019-04-11 10:29:53 -耗时 : 0
2019-04-11 10:29:53 -返回值 : charts/tableHeatMM
2019-04-11 10:30:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:30:08 -HTTP METHOD : GET
2019-04-11 10:30:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:30:08 -参数 : []
2019-04-11 10:30:08 -耗时 : 1
2019-04-11 10:30:08 -返回值 : charts/tableElecMM
2019-04-11 10:30:09 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:30:09 -HTTP METHOD : GET
2019-04-11 10:30:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:30:09 -参数 : []
2019-04-11 10:30:09 -耗时 : 0
2019-04-11 10:30:09 -返回值 : charts/tableHeatMM
2019-04-11 10:30:09 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-11 10:30:09 -HTTP METHOD : GET
2019-04-11 10:30:09 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-11 10:30:09 -参数 : []
2019-04-11 10:30:09 -耗时 : 2
2019-04-11 10:30:09 -返回值 : charts/tableWaterMM
2019-04-11 10:30:10 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:30:10 -HTTP METHOD : GET
2019-04-11 10:30:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:30:10 -参数 : []
2019-04-11 10:30:10 -耗时 : 0
2019-04-11 10:30:10 -返回值 : charts/tableElecMM
2019-04-11 10:30:11 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-11 10:30:11 -HTTP METHOD : GET
2019-04-11 10:30:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-11 10:30:11 -参数 : []
2019-04-11 10:30:11 -耗时 : 2
2019-04-11 10:30:11 -返回值 : charts/tableHeatMM
2019-04-11 10:39:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 10:39:50 -==> Parameters: 1(Long)
2019-04-11 10:39:50 -<==      Total: 92
2019-04-11 10:39:50 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 10:39:50 -HTTP METHOD : GET
2019-04-11 10:39:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 10:39:50 -参数 : []
2019-04-11 10:39:50 -耗时 : 1
2019-04-11 10:39:50 -返回值 : charts/tableElecMM
2019-04-11 10:39:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 10:39:59 -HTTP METHOD : GET
2019-04-11 10:39:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 10:39:59 -参数 : []
2019-04-11 10:39:59 -耗时 : 1
2019-04-11 10:39:59 -返回值 : system/dept/deptTree
2019-04-11 10:39:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 10:39:59 -HTTP METHOD : GET
2019-04-11 10:39:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 10:39:59 -参数 : []
2019-04-11 10:39:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 10:39:59 -==> Parameters: 
2019-04-11 10:39:59 -<==      Total: 3
2019-04-11 10:39:59 -耗时 : 7
2019-04-11 10:39:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 10:47:49 -Validating all active sessions...
2019-04-11 10:47:49 -Finished session validation.  No sessions were stopped.
2019-04-11 10:48:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 870]
2019-04-11 10:50:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 10:50:57 -==> Parameters: 1(Long)
2019-04-11 10:50:57 -<==      Total: 92
2019-04-11 10:50:57 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 10:50:57 -HTTP METHOD : GET
2019-04-11 10:50:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 10:50:57 -参数 : []
2019-04-11 10:50:57 -耗时 : 1
2019-04-11 10:50:57 -返回值 : charts/countDD
2019-04-11 10:50:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 10:50:57 -HTTP METHOD : GET
2019-04-11 10:50:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 10:50:57 -参数 : [userType]
2019-04-11 10:50:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 10:50:57 -==> Parameters: userType(String)
2019-04-11 10:50:57 -<==      Total: 4
2019-04-11 10:50:57 -耗时 : 5
2019-04-11 10:50:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:00:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:00:24 -HTTP METHOD : GET
2019-04-11 11:00:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:00:24 -参数 : []
2019-04-11 11:00:24 -耗时 : 2
2019-04-11 11:00:24 -返回值 : system/dept/deptTree
2019-04-11 11:00:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:00:24 -HTTP METHOD : GET
2019-04-11 11:00:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:00:24 -参数 : []
2019-04-11 11:00:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:00:24 -==> Parameters: 
2019-04-11 11:00:24 -<==      Total: 3
2019-04-11 11:00:24 -耗时 : 138
2019-04-11 11:00:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:00:26 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 11:00:26 -HTTP METHOD : GET
2019-04-11 11:00:26 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exprotDD
2019-04-11 11:00:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@69c483d3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2883a288, org.apache.shiro.web.servlet.ShiroHttpServletRequest@bd51b1d]
2019-04-11 11:00:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 11:00:26 -==> Parameters: A(String), 2(String), 2019-03-11 00:00:00(String), 2019-03-11 23:59:59(String)
2019-04-11 11:00:26 -<==      Total: 0
2019-04-11 11:00:27 -耗时 : 1086
2019-04-11 11:00:27 -返回值 : null
2019-04-11 11:02:31 -请求地址 : http://localhost:8081/index
2019-04-11 11:02:31 -HTTP METHOD : GET
2019-04-11 11:02:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:02:31 -参数 : [{}]
2019-04-11 11:02:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:02:31 -==> Parameters: 1(Long)
2019-04-11 11:02:31 -<==      Total: 48
2019-04-11 11:02:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:02:31 -==> Parameters: 138(Long)
2019-04-11 11:02:31 -<==      Total: 1
2019-04-11 11:02:31 -耗时 : 34
2019-04-11 11:02:31 -返回值 : index_v1
2019-04-11 11:02:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:02:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:02:31.894(Timestamp)
2019-04-11 11:02:31 -<==    Updates: 1
2019-04-11 11:02:32 -请求地址 : http://localhost:8081/main
2019-04-11 11:02:32 -HTTP METHOD : GET
2019-04-11 11:02:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:02:32 -参数 : []
2019-04-11 11:02:32 -耗时 : 0
2019-04-11 11:02:32 -返回值 : main
2019-04-11 11:02:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:02:32 -HTTP METHOD : GET
2019-04-11 11:02:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:02:32 -参数 : []
2019-04-11 11:02:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:02:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:02:32 -<==      Total: 0
2019-04-11 11:02:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:02:32 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:02:32 -<==      Total: 1
2019-04-11 11:02:32 -耗时 : 24
2019-04-11 11:02:32 -返回值 : com.bootdo.common.utils.PageUtils@19781eca
2019-04-11 11:02:32 -请求地址 : http://localhost:8081/main
2019-04-11 11:02:32 -HTTP METHOD : GET
2019-04-11 11:02:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:02:32 -参数 : []
2019-04-11 11:02:32 -耗时 : 0
2019-04-11 11:02:32 -返回值 : main
2019-04-11 11:03:24 -Starting BootdoApplication on ZJZL-20180906VX with PID 10468 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 11:03:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 11:03:24 -The following profiles are active: dev
2019-04-11 11:03:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:03:24 CST 2019]; root of context hierarchy
2019-04-11 11:03:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 11:03:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5402751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f79955f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 11:03:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 11:03:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:03:32 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 11:03:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 11:03:32 -Starting service [Tomcat]
2019-04-11 11:03:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 11:03:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 11:03:32 -Initializing Spring embedded WebApplicationContext
2019-04-11 11:03:32 -Root WebApplicationContext: initialization completed in 7995 ms
2019-04-11 11:03:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 11:03:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 11:03:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 11:03:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 11:03:33 -Filter xssFilter was not registered (disabled)
2019-04-11 11:03:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 11:03:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 11:03:33 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 11:03:33 -Servlet dispatcherServlet mapped to [/]
2019-04-11 11:03:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:03:24 CST 2019]; root of context hierarchy
2019-04-11 11:03:38 -Using default implementation for ThreadExecutor
2019-04-11 11:03:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 11:03:38 -Quartz Scheduler v.2.2.1 created.
2019-04-11 11:03:38 -RAMJobStore initialized.
2019-04-11 11:03:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 11:03:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 11:03:38 -Quartz scheduler version: 2.2.1
2019-04-11 11:03:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66b0e207
2019-04-11 11:03:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 11:03:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 11:03:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 11:03:47 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportCountDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 11:03:47 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 11:03:47 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 11:03:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 11:03:47 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 11:03:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 11:03:47 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 11:03:47 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 11:03:47 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 11:03:47 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 11:03:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 11:03:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 11:03:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 11:03:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 11:03:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 11:03:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 11:03:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 11:03:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 11:03:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 11:03:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 11:03:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 11:03:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 11:03:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 11:03:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 11:03:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 11:03:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 11:03:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 11:03:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 11:03:47 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 11:03:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 11:03:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 11:03:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 11:03:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 11:03:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 11:03:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 11:03:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 11:03:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 11:03:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 11:03:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 11:03:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 11:03:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 11:03:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:03:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 11:03:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:03:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 11:03:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 11:03:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 11:03:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 11:03:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 11:03:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 11:03:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 11:03:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 11:03:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 11:03:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 11:03:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 11:03:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 11:03:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 11:03:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 11:03:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 11:03:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 11:03:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 11:03:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 11:03:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 11:03:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 11:03:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 11:03:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 11:03:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 11:03:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 11:03:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 11:03:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 11:03:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 11:03:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 11:03:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 11:03:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 11:03:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 11:03:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 11:03:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 11:03:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 11:03:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 11:03:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 11:03:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:03:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 11:03:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 11:03:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 11:03:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:03:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 11:03:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:03:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 11:03:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 11:03:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 11:03:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 11:03:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 11:03:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 11:03:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:03:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:03:24 CST 2019]; root of context hierarchy
2019-04-11 11:03:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:03:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:03:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:03:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 11:03:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 11:03:51 -Registering beans for JMX exposure on startup
2019-04-11 11:03:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 11:03:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 11:03:51 -Starting beans in phase 2147483647
2019-04-11 11:03:51 -Context refreshed
2019-04-11 11:03:51 -Found 1 custom documentation plugin(s)
2019-04-11 11:03:51 -Scanning for api listing references
2019-04-11 11:03:52 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 11:03:52 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 11:03:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_1
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_2
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_3
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_4
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_5
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_2
2019-04-11 11:03:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_6
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_7
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_4
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_4
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_4
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_8
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_9
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 11:03:52 -Generating unique operation named: ElecUsingGET_1
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_5
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_5
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_5
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_10
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_11
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_6
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_6
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_6
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_7
2019-04-11 11:03:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_7
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_12
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_13
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_7
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 11:03:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_7
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_8
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_8
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_14
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_15
2019-04-11 11:03:52 -Generating unique operation named: saveUsingPOST_7
2019-04-11 11:03:52 -Generating unique operation named: updateUsingGET_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPOST_8
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPUT_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 11:03:52 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 11:03:52 -Generating unique operation named: addUsingGET_8
2019-04-11 11:03:52 -Generating unique operation named: editUsingGET_9
2019-04-11 11:03:52 -Generating unique operation named: listUsingGET_9
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_16
2019-04-11 11:03:52 -Generating unique operation named: removeUsingPOST_17
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_9
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_10
2019-04-11 11:03:53 -Generating unique operation named: infoUsingGET_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingPOST_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingPUT_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 11:03:53 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_10
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_18
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_19
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_10
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_11
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_20
2019-04-11 11:03:53 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_10
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_11
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_12
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_21
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_10
2019-04-11 11:03:53 -Generating unique operation named: treeUsingGET_1
2019-04-11 11:03:53 -Generating unique operation named: treeUsingGET_2
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_11
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_11
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_12
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_13
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_22
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_23
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_12
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_13
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_14
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_24
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_25
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_13
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_13
2019-04-11 11:03:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_14
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_15
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_13
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_14
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_14
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_16
2019-04-11 11:03:53 -Generating unique operation named: listUsingHEAD_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingPOST_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingPUT_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingPATCH_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingDELETE_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 11:03:53 -Generating unique operation named: listUsingTRACE_1
2019-04-11 11:03:53 -Generating unique operation named: countDDUsingGET_1
2019-04-11 11:03:53 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 11:03:53 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 11:03:53 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 11:03:53 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 11:03:53 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 11:03:53 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 11:03:53 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_14
2019-04-11 11:03:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_15
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_17
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_26
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_15
2019-04-11 11:03:53 -Generating unique operation named: treeUsingGET_3
2019-04-11 11:03:53 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_15
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_15
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_16
2019-04-11 11:03:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_18
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_27
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_28
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_16
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_16
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 11:03:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_16
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_17
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_19
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_29
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_30
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_17
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_17
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 11:03:53 -Generating unique operation named: addUsingGET_17
2019-04-11 11:03:53 -Generating unique operation named: editUsingGET_18
2019-04-11 11:03:53 -Generating unique operation named: listUsingGET_20
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_31
2019-04-11 11:03:53 -Generating unique operation named: removeUsingPOST_32
2019-04-11 11:03:53 -Generating unique operation named: saveUsingPOST_18
2019-04-11 11:03:53 -Generating unique operation named: updateUsingGET_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPOST_18
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPUT_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 11:03:53 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 11:03:53 -Starting Quartz Scheduler now
2019-04-11 11:03:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 11:03:53 -Starting...
2019-04-11 11:03:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 11:03:53 -Started.
2019-04-11 11:03:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 11:03:54 -Using a shared selector for servlet write/read
2019-04-11 11:03:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 11:03:54 -Started BootdoApplication in 30.653 seconds (JVM running for 31.446)
2019-04-11 11:03:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 11:03:54 -==> Parameters: 
2019-04-11 11:03:54 -<==      Total: 1
2019-04-11 11:04:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 11:04:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 11:04:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 103 ms
2019-04-11 11:04:11 -Enabling session validation scheduler...
2019-04-11 11:04:12 -请求地址 : http://localhost:8081/login;JSESSIONID=15a85ccc-a368-4154-be62-eab2c3165ec6
2019-04-11 11:04:12 -HTTP METHOD : GET
2019-04-11 11:04:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 11:04:12 -参数 : [{}]
2019-04-11 11:04:12 -耗时 : 3
2019-04-11 11:04:12 -返回值 : login
2019-04-11 11:04:13 -请求地址 : http://localhost:8081/getVerify
2019-04-11 11:04:13 -HTTP METHOD : GET
2019-04-11 11:04:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 11:04:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@50771be4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@15758f8e]
2019-04-11 11:04:20 -6624
2019-04-11 11:04:21 -耗时 : 7706
2019-04-11 11:04:21 -返回值 : null
2019-04-11 11:04:31 -请求地址 : http://localhost:8081/login
2019-04-11 11:04:31 -HTTP METHOD : POST
2019-04-11 11:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 11:04:31 -参数 : [admin, 111111, 6624, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2395988]
2019-04-11 11:04:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 11:04:31 -==> Parameters: admin(String)
2019-04-11 11:04:31 -<==      Total: 1
2019-04-11 11:04:31 -耗时 : 181
2019-04-11 11:04:31 -返回值 : {msg=操作成功, code=0}
2019-04-11 11:04:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 11:04:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:04:32 -==> Parameters: 1(Long), admin(String), 登录(String), 181(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 11:04:32.108(Timestamp)
2019-04-11 11:04:32 -<==    Updates: 1
2019-04-11 11:04:32 -请求地址 : http://localhost:8081/index
2019-04-11 11:04:32 -HTTP METHOD : GET
2019-04-11 11:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:04:32 -参数 : [{}]
2019-04-11 11:04:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:04:32 -==> Parameters: 1(Long)
2019-04-11 11:04:32 -<==      Total: 48
2019-04-11 11:04:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:04:32 -==> Parameters: 138(Long)
2019-04-11 11:04:32 -<==      Total: 1
2019-04-11 11:04:32 -耗时 : 310
2019-04-11 11:04:32 -返回值 : index_v1
2019-04-11 11:04:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:04:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 311(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:04:32.805(Timestamp)
2019-04-11 11:04:32 -<==    Updates: 1
2019-04-11 11:04:32 -请求地址 : http://localhost:8081/main
2019-04-11 11:04:32 -HTTP METHOD : GET
2019-04-11 11:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:04:32 -参数 : []
2019-04-11 11:04:32 -耗时 : 1
2019-04-11 11:04:32 -返回值 : main
2019-04-11 11:04:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:04:33 -HTTP METHOD : GET
2019-04-11 11:04:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:04:33 -参数 : []
2019-04-11 11:04:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:04:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:04:33 -<==      Total: 0
2019-04-11 11:04:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:04:33 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:04:33 -<==      Total: 1
2019-04-11 11:04:33 -耗时 : 78
2019-04-11 11:04:33 -返回值 : com.bootdo.common.utils.PageUtils@5ca0417f
2019-04-11 11:04:33 -请求地址 : http://localhost:8081/main
2019-04-11 11:04:33 -HTTP METHOD : GET
2019-04-11 11:04:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:04:33 -参数 : []
2019-04-11 11:04:33 -耗时 : 3
2019-04-11 11:04:33 -返回值 : main
2019-04-11 11:04:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 11:04:43 -==> Parameters: 1(Long)
2019-04-11 11:04:43 -<==      Total: 92
2019-04-11 11:04:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-11 11:04:43 -HTTP METHOD : GET
2019-04-11 11:04:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-11 11:04:43 -参数 : []
2019-04-11 11:04:43 -耗时 : 0
2019-04-11 11:04:43 -返回值 : /moneyList/moneyList
2019-04-11 11:04:47 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:04:47 -HTTP METHOD : GET
2019-04-11 11:04:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:04:47 -参数 : []
2019-04-11 11:04:47 -耗时 : 16
2019-04-11 11:04:47 -返回值 : charts/countDD
2019-04-11 11:04:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:04:47 -HTTP METHOD : GET
2019-04-11 11:04:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:04:47 -参数 : [userType]
2019-04-11 11:04:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:04:47 -==> Parameters: userType(String)
2019-04-11 11:04:47 -<==      Total: 4
2019-04-11 11:04:47 -耗时 : 71
2019-04-11 11:04:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:04:48 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-11 11:05:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:05:03 -HTTP METHOD : GET
2019-04-11 11:05:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:05:03 -参数 : []
2019-04-11 11:05:03 -耗时 : 0
2019-04-11 11:05:03 -返回值 : system/dept/deptTree
2019-04-11 11:05:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:05:03 -HTTP METHOD : GET
2019-04-11 11:05:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:05:03 -参数 : []
2019-04-11 11:05:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:05:03 -==> Parameters: 
2019-04-11 11:05:03 -<==      Total: 3
2019-04-11 11:05:03 -耗时 : 23
2019-04-11 11:05:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:05:31 -请求地址 : http://localhost:8081/index
2019-04-11 11:05:31 -HTTP METHOD : GET
2019-04-11 11:05:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:05:31 -参数 : [{}]
2019-04-11 11:05:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:05:31 -==> Parameters: 1(Long)
2019-04-11 11:05:31 -<==      Total: 48
2019-04-11 11:05:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:05:31 -==> Parameters: 138(Long)
2019-04-11 11:05:31 -<==      Total: 1
2019-04-11 11:05:31 -耗时 : 34
2019-04-11 11:05:31 -返回值 : index_v1
2019-04-11 11:05:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:05:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:05:31.217(Timestamp)
2019-04-11 11:05:31 -<==    Updates: 1
2019-04-11 11:05:31 -请求地址 : http://localhost:8081/main
2019-04-11 11:05:31 -HTTP METHOD : GET
2019-04-11 11:05:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:05:31 -参数 : []
2019-04-11 11:05:31 -耗时 : 1
2019-04-11 11:05:31 -返回值 : main
2019-04-11 11:05:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:05:31 -HTTP METHOD : GET
2019-04-11 11:05:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:05:31 -参数 : []
2019-04-11 11:05:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:05:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:05:31 -<==      Total: 0
2019-04-11 11:05:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:05:31 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:05:31 -<==      Total: 1
2019-04-11 11:05:31 -耗时 : 27
2019-04-11 11:05:31 -返回值 : com.bootdo.common.utils.PageUtils@41fd3da9
2019-04-11 11:05:31 -请求地址 : http://localhost:8081/main
2019-04-11 11:05:31 -HTTP METHOD : GET
2019-04-11 11:05:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:05:31 -参数 : []
2019-04-11 11:05:31 -耗时 : 1
2019-04-11 11:05:31 -返回值 : main
2019-04-11 11:05:35 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:05:35 -HTTP METHOD : GET
2019-04-11 11:05:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:05:35 -参数 : []
2019-04-11 11:05:35 -耗时 : 0
2019-04-11 11:05:35 -返回值 : charts/countDD
2019-04-11 11:05:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:05:35 -HTTP METHOD : GET
2019-04-11 11:05:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:05:35 -参数 : [userType]
2019-04-11 11:05:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:05:35 -==> Parameters: userType(String)
2019-04-11 11:05:35 -<==      Total: 4
2019-04-11 11:05:35 -耗时 : 7
2019-04-11 11:05:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:05:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:05:46 -HTTP METHOD : GET
2019-04-11 11:05:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:05:46 -参数 : []
2019-04-11 11:05:46 -耗时 : 0
2019-04-11 11:05:46 -返回值 : system/dept/deptTree
2019-04-11 11:05:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:05:47 -HTTP METHOD : GET
2019-04-11 11:05:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:05:47 -参数 : []
2019-04-11 11:05:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:05:47 -==> Parameters: 
2019-04-11 11:05:47 -<==      Total: 3
2019-04-11 11:05:47 -耗时 : 4
2019-04-11 11:05:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:06:16 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 11:08:38 -请求地址 : http://localhost:8081/index
2019-04-11 11:08:38 -HTTP METHOD : GET
2019-04-11 11:08:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:08:38 -参数 : [{}]
2019-04-11 11:08:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:08:38 -==> Parameters: 1(Long)
2019-04-11 11:08:38 -<==      Total: 48
2019-04-11 11:08:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:08:38 -==> Parameters: 138(Long)
2019-04-11 11:08:38 -<==      Total: 1
2019-04-11 11:08:38 -耗时 : 24
2019-04-11 11:08:38 -返回值 : index_v1
2019-04-11 11:08:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:08:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:08:38.926(Timestamp)
2019-04-11 11:08:39 -请求地址 : http://localhost:8081/main
2019-04-11 11:08:39 -HTTP METHOD : GET
2019-04-11 11:08:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:08:39 -参数 : []
2019-04-11 11:08:39 -耗时 : 0
2019-04-11 11:08:39 -返回值 : main
2019-04-11 11:08:39 -<==    Updates: 1
2019-04-11 11:08:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:08:39 -HTTP METHOD : GET
2019-04-11 11:08:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:08:39 -参数 : []
2019-04-11 11:08:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:08:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:08:39 -<==      Total: 0
2019-04-11 11:08:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:08:39 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:08:39 -<==      Total: 1
2019-04-11 11:08:39 -耗时 : 14
2019-04-11 11:08:39 -返回值 : com.bootdo.common.utils.PageUtils@1c3a4f6b
2019-04-11 11:08:39 -请求地址 : http://localhost:8081/main
2019-04-11 11:08:39 -HTTP METHOD : GET
2019-04-11 11:08:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:08:39 -参数 : []
2019-04-11 11:08:39 -耗时 : 1
2019-04-11 11:08:39 -返回值 : main
2019-04-11 11:08:41 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:08:41 -HTTP METHOD : GET
2019-04-11 11:08:41 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:08:41 -参数 : []
2019-04-11 11:08:41 -耗时 : 1
2019-04-11 11:08:41 -返回值 : charts/countDD
2019-04-11 11:08:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:08:42 -HTTP METHOD : GET
2019-04-11 11:08:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:08:42 -参数 : [userType]
2019-04-11 11:08:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:08:42 -==> Parameters: userType(String)
2019-04-11 11:08:42 -<==      Total: 4
2019-04-11 11:08:42 -耗时 : 5
2019-04-11 11:08:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:10:05 -请求地址 : http://localhost:8081/index
2019-04-11 11:10:05 -HTTP METHOD : GET
2019-04-11 11:10:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:10:05 -参数 : [{}]
2019-04-11 11:10:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:10:05 -==> Parameters: 1(Long)
2019-04-11 11:10:05 -<==      Total: 48
2019-04-11 11:10:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:10:05 -==> Parameters: 138(Long)
2019-04-11 11:10:05 -<==      Total: 1
2019-04-11 11:10:05 -耗时 : 110
2019-04-11 11:10:05 -返回值 : index_v1
2019-04-11 11:10:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:10:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 111(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:10:05.917(Timestamp)
2019-04-11 11:10:05 -<==    Updates: 1
2019-04-11 11:10:06 -请求地址 : http://localhost:8081/main
2019-04-11 11:10:06 -HTTP METHOD : GET
2019-04-11 11:10:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:10:06 -参数 : []
2019-04-11 11:10:06 -耗时 : 1
2019-04-11 11:10:06 -返回值 : main
2019-04-11 11:10:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:10:06 -HTTP METHOD : GET
2019-04-11 11:10:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:10:06 -参数 : []
2019-04-11 11:10:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:10:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:10:06 -<==      Total: 0
2019-04-11 11:10:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:10:06 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:10:06 -<==      Total: 1
2019-04-11 11:10:06 -耗时 : 7
2019-04-11 11:10:06 -返回值 : com.bootdo.common.utils.PageUtils@2da244c2
2019-04-11 11:10:06 -请求地址 : http://localhost:8081/main
2019-04-11 11:10:06 -HTTP METHOD : GET
2019-04-11 11:10:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:10:06 -参数 : []
2019-04-11 11:10:06 -耗时 : 1
2019-04-11 11:10:06 -返回值 : main
2019-04-11 11:10:08 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:10:08 -HTTP METHOD : GET
2019-04-11 11:10:08 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:10:08 -参数 : []
2019-04-11 11:10:08 -耗时 : 0
2019-04-11 11:10:08 -返回值 : charts/countDD
2019-04-11 11:10:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:10:08 -HTTP METHOD : GET
2019-04-11 11:10:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:10:08 -参数 : [userType]
2019-04-11 11:10:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:10:08 -==> Parameters: userType(String)
2019-04-11 11:10:08 -<==      Total: 4
2019-04-11 11:10:08 -耗时 : 8
2019-04-11 11:10:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:10:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:10:19 -HTTP METHOD : GET
2019-04-11 11:10:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:10:19 -参数 : []
2019-04-11 11:10:19 -耗时 : 1
2019-04-11 11:10:19 -返回值 : system/dept/deptTree
2019-04-11 11:10:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:10:20 -HTTP METHOD : GET
2019-04-11 11:10:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:10:20 -参数 : []
2019-04-11 11:10:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:10:20 -==> Parameters: 
2019-04-11 11:10:20 -<==      Total: 3
2019-04-11 11:10:20 -耗时 : 4
2019-04-11 11:10:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:11:26 -请求地址 : http://localhost:8081/index
2019-04-11 11:11:26 -HTTP METHOD : GET
2019-04-11 11:11:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:11:26 -参数 : [{}]
2019-04-11 11:11:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:11:26 -==> Parameters: 1(Long)
2019-04-11 11:11:26 -<==      Total: 48
2019-04-11 11:11:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:11:26 -==> Parameters: 138(Long)
2019-04-11 11:11:26 -<==      Total: 1
2019-04-11 11:11:26 -耗时 : 47
2019-04-11 11:11:26 -返回值 : index_v1
2019-04-11 11:11:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:11:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:11:26.192(Timestamp)
2019-04-11 11:11:26 -请求地址 : http://localhost:8081/main
2019-04-11 11:11:26 -HTTP METHOD : GET
2019-04-11 11:11:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:11:26 -参数 : []
2019-04-11 11:11:26 -耗时 : 1
2019-04-11 11:11:26 -返回值 : main
2019-04-11 11:11:26 -<==    Updates: 1
2019-04-11 11:11:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:11:26 -HTTP METHOD : GET
2019-04-11 11:11:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:11:26 -参数 : []
2019-04-11 11:11:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:11:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:11:26 -<==      Total: 0
2019-04-11 11:11:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:11:26 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:11:26 -<==      Total: 1
2019-04-11 11:11:26 -耗时 : 10
2019-04-11 11:11:26 -返回值 : com.bootdo.common.utils.PageUtils@8d0ab38
2019-04-11 11:11:26 -请求地址 : http://localhost:8081/main
2019-04-11 11:11:26 -HTTP METHOD : GET
2019-04-11 11:11:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:11:26 -参数 : []
2019-04-11 11:11:26 -耗时 : 0
2019-04-11 11:11:26 -返回值 : main
2019-04-11 11:11:53 -请求地址 : http://localhost:8081/login;JSESSIONID=abd2a9bf-be8a-46c8-ac92-ce8859fb6ff7
2019-04-11 11:11:53 -HTTP METHOD : GET
2019-04-11 11:11:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 11:11:53 -参数 : [{}]
2019-04-11 11:11:53 -耗时 : 1
2019-04-11 11:11:53 -返回值 : login
2019-04-11 11:11:53 -请求地址 : http://localhost:8081/getVerify
2019-04-11 11:11:53 -HTTP METHOD : GET
2019-04-11 11:11:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 11:11:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a8c8efa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a326b5e]
2019-04-11 11:11:53 -7605
2019-04-11 11:11:53 -耗时 : 23
2019-04-11 11:11:53 -返回值 : null
2019-04-11 11:11:54 -请求地址 : http://localhost:8081/login
2019-04-11 11:11:54 -HTTP METHOD : GET
2019-04-11 11:11:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 11:11:54 -参数 : [{}]
2019-04-11 11:11:54 -耗时 : 0
2019-04-11 11:11:54 -返回值 : login
2019-04-11 11:11:59 -请求地址 : http://localhost:8081/login
2019-04-11 11:11:59 -HTTP METHOD : POST
2019-04-11 11:11:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 11:11:59 -参数 : [admin, 111111, 7605, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76bc1a3e]
2019-04-11 11:11:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 11:11:59 -==> Parameters: admin(String)
2019-04-11 11:11:59 -<==      Total: 1
2019-04-11 11:11:59 -耗时 : 8
2019-04-11 11:11:59 -返回值 : {msg=操作成功, code=0}
2019-04-11 11:11:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:11:59 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 11:11:59.684(Timestamp)
2019-04-11 11:11:59 -请求地址 : http://localhost:8081/index
2019-04-11 11:11:59 -HTTP METHOD : GET
2019-04-11 11:11:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:11:59 -参数 : [{}]
2019-04-11 11:11:59 -<==    Updates: 1
2019-04-11 11:11:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:11:59 -==> Parameters: 1(Long)
2019-04-11 11:11:59 -<==      Total: 48
2019-04-11 11:11:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:11:59 -==> Parameters: 138(Long)
2019-04-11 11:11:59 -<==      Total: 1
2019-04-11 11:12:00 -耗时 : 293
2019-04-11 11:12:00 -返回值 : index_v1
2019-04-11 11:12:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:12:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 293(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:12:00.001(Timestamp)
2019-04-11 11:12:00 -请求地址 : http://localhost:8081/main
2019-04-11 11:12:00 -HTTP METHOD : GET
2019-04-11 11:12:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:12:00 -参数 : []
2019-04-11 11:12:00 -耗时 : 1
2019-04-11 11:12:00 -返回值 : main
2019-04-11 11:12:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:12:00 -HTTP METHOD : GET
2019-04-11 11:12:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:12:00 -参数 : []
2019-04-11 11:12:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:12:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:12:00 -请求地址 : http://localhost:8081/main
2019-04-11 11:12:00 -HTTP METHOD : GET
2019-04-11 11:12:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:12:00 -参数 : []
2019-04-11 11:12:00 -耗时 : 1
2019-04-11 11:12:00 -返回值 : main
2019-04-11 11:12:00 -<==    Updates: 1
2019-04-11 11:12:00 -<==      Total: 0
2019-04-11 11:12:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:12:00 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:12:00 -<==      Total: 1
2019-04-11 11:12:00 -耗时 : 338
2019-04-11 11:12:00 -返回值 : com.bootdo.common.utils.PageUtils@45a4d59e
2019-04-11 11:12:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 11:12:08 -==> Parameters: 1(Long)
2019-04-11 11:12:08 -<==      Total: 92
2019-04-11 11:12:08 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:12:08 -HTTP METHOD : GET
2019-04-11 11:12:08 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:12:08 -参数 : []
2019-04-11 11:12:08 -耗时 : 1
2019-04-11 11:12:08 -返回值 : charts/countDD
2019-04-11 11:12:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:12:09 -HTTP METHOD : GET
2019-04-11 11:12:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:12:09 -参数 : [userType]
2019-04-11 11:12:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:12:09 -==> Parameters: userType(String)
2019-04-11 11:12:09 -<==      Total: 4
2019-04-11 11:12:09 -耗时 : 82
2019-04-11 11:12:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:12:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:12:17 -HTTP METHOD : GET
2019-04-11 11:12:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:12:17 -参数 : []
2019-04-11 11:12:17 -耗时 : 1
2019-04-11 11:12:17 -返回值 : system/dept/deptTree
2019-04-11 11:12:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:12:18 -HTTP METHOD : GET
2019-04-11 11:12:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:12:18 -参数 : []
2019-04-11 11:12:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:12:18 -==> Parameters: 
2019-04-11 11:12:18 -<==      Total: 3
2019-04-11 11:12:18 -耗时 : 4
2019-04-11 11:12:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:13:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 9964 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 11:13:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 11:13:31 -The following profiles are active: dev
2019-04-11 11:13:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:13:31 CST 2019]; root of context hierarchy
2019-04-11 11:13:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 11:13:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c4ad4ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ea40375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 11:13:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 11:13:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 11:13:41 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 11:13:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 11:13:41 -Starting service [Tomcat]
2019-04-11 11:13:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 11:13:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 11:13:41 -Initializing Spring embedded WebApplicationContext
2019-04-11 11:13:41 -Root WebApplicationContext: initialization completed in 9741 ms
2019-04-11 11:13:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 11:13:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 11:13:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 11:13:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 11:13:42 -Filter xssFilter was not registered (disabled)
2019-04-11 11:13:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 11:13:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 11:13:42 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 11:13:42 -Servlet dispatcherServlet mapped to [/]
2019-04-11 11:13:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:13:31 CST 2019]; root of context hierarchy
2019-04-11 11:13:46 -Using default implementation for ThreadExecutor
2019-04-11 11:13:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 11:13:46 -Quartz Scheduler v.2.2.1 created.
2019-04-11 11:13:46 -RAMJobStore initialized.
2019-04-11 11:13:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 11:13:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 11:13:46 -Quartz scheduler version: 2.2.1
2019-04-11 11:13:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7308c820
2019-04-11 11:13:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 11:13:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 11:13:53 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 11:13:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 11:13:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 11:13:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 11:13:53 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 11:13:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 11:13:53 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 11:13:53 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 11:13:53 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 11:13:53 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 11:13:53 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 11:13:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 11:13:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 11:13:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 11:13:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 11:13:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 11:13:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 11:13:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 11:13:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 11:13:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 11:13:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 11:13:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 11:13:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 11:13:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 11:13:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 11:13:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 11:13:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 11:13:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 11:13:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 11:13:53 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 11:13:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 11:13:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 11:13:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 11:13:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 11:13:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 11:13:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 11:13:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 11:13:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 11:13:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 11:13:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 11:13:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 11:13:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 11:13:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 11:13:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:13:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:13:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 11:13:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 11:13:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 11:13:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 11:13:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 11:13:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 11:13:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 11:13:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 11:13:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 11:13:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 11:13:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 11:13:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 11:13:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 11:13:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 11:13:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 11:13:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 11:13:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 11:13:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 11:13:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 11:13:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 11:13:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 11:13:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 11:13:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 11:13:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 11:13:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 11:13:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 11:13:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 11:13:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 11:13:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 11:13:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 11:13:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 11:13:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 11:13:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 11:13:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 11:13:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 11:13:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 11:13:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 11:13:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 11:13:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 11:13:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 11:13:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 11:13:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 11:13:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 11:13:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 11:13:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 11:13:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 11:13:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 11:13:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 11:13:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 11:13:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 11:13:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:13:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 11:13:31 CST 2019]; root of context hierarchy
2019-04-11 11:13:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:13:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:13:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 11:13:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 11:13:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 11:13:57 -Registering beans for JMX exposure on startup
2019-04-11 11:13:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 11:13:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 11:13:57 -Starting beans in phase 2147483647
2019-04-11 11:13:57 -Context refreshed
2019-04-11 11:13:57 -Found 1 custom documentation plugin(s)
2019-04-11 11:13:57 -Scanning for api listing references
2019-04-11 11:13:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 11:13:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 11:13:58 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 11:13:58 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_1
2019-04-11 11:13:58 -Generating unique operation named: addUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: editUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: listUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_2
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_3
2019-04-11 11:13:58 -Generating unique operation named: saveUsingPOST_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPOST_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPUT_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 11:13:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 11:13:58 -Generating unique operation named: addUsingGET_2
2019-04-11 11:13:58 -Generating unique operation named: editUsingGET_2
2019-04-11 11:13:58 -Generating unique operation named: listUsingGET_2
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_4
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_5
2019-04-11 11:13:58 -Generating unique operation named: saveUsingPOST_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPOST_2
2019-04-11 11:13:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: addUsingGET_3
2019-04-11 11:13:58 -Generating unique operation named: editUsingGET_3
2019-04-11 11:13:58 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 11:13:58 -Generating unique operation named: listUsingGET_3
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_6
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_7
2019-04-11 11:13:58 -Generating unique operation named: saveUsingPOST_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingGET_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPOST_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPUT_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 11:13:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 11:13:58 -Generating unique operation named: addUsingGET_4
2019-04-11 11:13:58 -Generating unique operation named: editUsingGET_4
2019-04-11 11:13:58 -Generating unique operation named: listUsingGET_4
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_8
2019-04-11 11:13:58 -Generating unique operation named: removeUsingPOST_9
2019-04-11 11:13:58 -Generating unique operation named: saveUsingPOST_4
2019-04-11 11:13:58 -Generating unique operation named: updateUsingGET_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPOST_4
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPUT_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 11:13:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 11:13:58 -Generating unique operation named: ElecUsingGET_1
2019-04-11 11:13:58 -Generating unique operation named: addUsingGET_5
2019-04-11 11:13:58 -Generating unique operation named: editUsingGET_5
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_5
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_10
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_11
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 11:13:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_6
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_6
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_6
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_7
2019-04-11 11:13:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_7
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_12
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_13
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 11:13:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 11:13:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_7
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_8
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_8
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_14
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_15
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 11:13:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_8
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_9
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_9
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_16
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_17
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_9
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 11:13:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_9
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_10
2019-04-11 11:13:59 -Generating unique operation named: infoUsingGET_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingPOST_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingPUT_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 11:13:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_10
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_18
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_19
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_9
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_10
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_11
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_20
2019-04-11 11:13:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_10
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_11
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_12
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_21
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_10
2019-04-11 11:13:59 -Generating unique operation named: treeUsingGET_1
2019-04-11 11:13:59 -Generating unique operation named: treeUsingGET_2
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_11
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_11
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_12
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_13
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_22
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_23
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_11
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_12
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 11:13:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 11:13:59 -Generating unique operation named: addUsingGET_12
2019-04-11 11:13:59 -Generating unique operation named: editUsingGET_13
2019-04-11 11:13:59 -Generating unique operation named: listUsingGET_14
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_24
2019-04-11 11:13:59 -Generating unique operation named: removeUsingPOST_25
2019-04-11 11:13:59 -Generating unique operation named: saveUsingPOST_12
2019-04-11 11:13:59 -Generating unique operation named: updateUsingGET_9
2019-04-11 11:13:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPOST_13
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPUT_9
2019-04-11 11:13:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 11:14:00 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 11:14:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 11:14:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 11:14:00 -Generating unique operation named: addUsingGET_13
2019-04-11 11:14:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 11:14:00 -Generating unique operation named: editUsingGET_14
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_15
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_13
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_14
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPOST_14
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_16
2019-04-11 11:14:00 -Generating unique operation named: listUsingHEAD_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingPOST_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingPUT_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingPATCH_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingDELETE_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 11:14:00 -Generating unique operation named: listUsingTRACE_1
2019-04-11 11:14:00 -Generating unique operation named: countDDUsingGET_1
2019-04-11 11:14:00 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 11:14:00 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 11:14:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 11:14:00 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 11:14:00 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 11:14:00 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 11:14:00 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 11:14:00 -Generating unique operation named: addUsingGET_14
2019-04-11 11:14:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 11:14:00 -Generating unique operation named: editUsingGET_15
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_17
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_26
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_15
2019-04-11 11:14:00 -Generating unique operation named: treeUsingGET_3
2019-04-11 11:14:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPOST_15
2019-04-11 11:14:00 -Generating unique operation named: addUsingGET_15
2019-04-11 11:14:00 -Generating unique operation named: editUsingGET_16
2019-04-11 11:14:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_18
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_27
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_28
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_16
2019-04-11 11:14:00 -Generating unique operation named: updateUsingGET_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPOST_16
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPUT_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 11:14:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 11:14:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 11:14:00 -Generating unique operation named: addUsingGET_16
2019-04-11 11:14:00 -Generating unique operation named: editUsingGET_17
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_19
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_29
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_30
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_17
2019-04-11 11:14:00 -Generating unique operation named: updateUsingGET_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPOST_17
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPUT_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 11:14:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 11:14:00 -Generating unique operation named: addUsingGET_17
2019-04-11 11:14:00 -Generating unique operation named: editUsingGET_18
2019-04-11 11:14:00 -Generating unique operation named: listUsingGET_20
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_31
2019-04-11 11:14:00 -Generating unique operation named: removeUsingPOST_32
2019-04-11 11:14:00 -Generating unique operation named: saveUsingPOST_18
2019-04-11 11:14:00 -Generating unique operation named: updateUsingGET_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPOST_18
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPUT_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 11:14:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 11:14:00 -Starting Quartz Scheduler now
2019-04-11 11:14:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 11:14:00 -Starting...
2019-04-11 11:14:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 11:14:00 -Started.
2019-04-11 11:14:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 11:14:00 -Using a shared selector for servlet write/read
2019-04-11 11:14:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 11:14:00 -Started BootdoApplication in 30.476 seconds (JVM running for 31.392)
2019-04-11 11:14:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 11:14:01 -==> Parameters: 
2019-04-11 11:14:01 -<==      Total: 1
2019-04-11 11:14:54 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-11 11:16:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 11:16:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 11:16:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-11 11:16:28 -Enabling session validation scheduler...
2019-04-11 11:16:28 -请求地址 : http://localhost:8081/login;JSESSIONID=190963d8-74c9-4c7f-b16c-382445f9ddba
2019-04-11 11:16:28 -HTTP METHOD : GET
2019-04-11 11:16:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 11:16:28 -参数 : [{}]
2019-04-11 11:16:28 -耗时 : 3
2019-04-11 11:16:28 -返回值 : login
2019-04-11 11:16:30 -请求地址 : http://localhost:8081/getVerify
2019-04-11 11:16:30 -HTTP METHOD : GET
2019-04-11 11:16:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 11:16:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e6e2122, org.apache.shiro.web.servlet.ShiroHttpServletResponse@537c51f2]
2019-04-11 11:16:33 -5728
2019-04-11 11:16:33 -耗时 : 3410
2019-04-11 11:16:33 -返回值 : null
2019-04-11 11:16:39 -请求地址 : http://localhost:8081/login
2019-04-11 11:16:39 -HTTP METHOD : POST
2019-04-11 11:16:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 11:16:39 -参数 : [admin, 111111, 5728, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65a37607]
2019-04-11 11:16:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 11:16:39 -==> Parameters: admin(String)
2019-04-11 11:16:39 -<==      Total: 1
2019-04-11 11:16:39 -耗时 : 154
2019-04-11 11:16:39 -返回值 : {msg=操作成功, code=0}
2019-04-11 11:16:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 11:16:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:16:39 -==> Parameters: 1(Long), admin(String), 登录(String), 155(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 11:16:39.528(Timestamp)
2019-04-11 11:16:39 -请求地址 : http://localhost:8081/index
2019-04-11 11:16:39 -HTTP METHOD : GET
2019-04-11 11:16:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:16:39 -参数 : [{}]
2019-04-11 11:16:39 -<==    Updates: 1
2019-04-11 11:16:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:16:39 -==> Parameters: 1(Long)
2019-04-11 11:16:40 -<==      Total: 48
2019-04-11 11:16:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:16:40 -==> Parameters: 138(Long)
2019-04-11 11:16:40 -<==      Total: 1
2019-04-11 11:16:40 -耗时 : 554
2019-04-11 11:16:40 -返回值 : index_v1
2019-04-11 11:16:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:16:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 554(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:16:40.212(Timestamp)
2019-04-11 11:16:40 -<==    Updates: 1
2019-04-11 11:16:40 -请求地址 : http://localhost:8081/main
2019-04-11 11:16:40 -HTTP METHOD : GET
2019-04-11 11:16:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:16:40 -参数 : []
2019-04-11 11:16:40 -耗时 : 0
2019-04-11 11:16:40 -返回值 : main
2019-04-11 11:16:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:16:40 -HTTP METHOD : GET
2019-04-11 11:16:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:16:40 -参数 : []
2019-04-11 11:16:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:16:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:16:40 -<==      Total: 0
2019-04-11 11:16:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:16:40 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:16:40 -<==      Total: 1
2019-04-11 11:16:40 -耗时 : 54
2019-04-11 11:16:40 -返回值 : com.bootdo.common.utils.PageUtils@5bb6198d
2019-04-11 11:16:40 -请求地址 : http://localhost:8081/main
2019-04-11 11:16:40 -HTTP METHOD : GET
2019-04-11 11:16:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:16:40 -参数 : []
2019-04-11 11:16:40 -耗时 : 0
2019-04-11 11:16:40 -返回值 : main
2019-04-11 11:17:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 11:17:05 -==> Parameters: 1(Long)
2019-04-11 11:17:05 -<==      Total: 92
2019-04-11 11:17:05 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:17:05 -HTTP METHOD : GET
2019-04-11 11:17:05 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:17:05 -参数 : []
2019-04-11 11:17:05 -耗时 : 10
2019-04-11 11:17:05 -返回值 : charts/countDD
2019-04-11 11:17:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:17:05 -HTTP METHOD : GET
2019-04-11 11:17:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:17:05 -参数 : [userType]
2019-04-11 11:17:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:17:05 -==> Parameters: userType(String)
2019-04-11 11:17:05 -<==      Total: 4
2019-04-11 11:17:05 -耗时 : 83
2019-04-11 11:17:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:17:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:17:16 -HTTP METHOD : GET
2019-04-11 11:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:17:16 -参数 : []
2019-04-11 11:17:16 -耗时 : 1
2019-04-11 11:17:16 -返回值 : system/dept/deptTree
2019-04-11 11:17:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:17:16 -HTTP METHOD : GET
2019-04-11 11:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:17:16 -参数 : []
2019-04-11 11:17:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:17:16 -==> Parameters: 
2019-04-11 11:17:16 -<==      Total: 3
2019-04-11 11:17:16 -耗时 : 25
2019-04-11 11:17:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:17:23 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 11:17:23 -HTTP METHOD : GET
2019-04-11 11:17:23 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 11:17:23 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5f2e828d, com.bootdo.moneyLog.vo.HeatLogVo@17cc92da, com.bootdo.moneyLog.vo.WaterLogVo@5eebca67, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41101f31]
2019-04-11 11:17:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 11:17:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:17:24 -<==      Total: 3
2019-04-11 11:17:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 11:17:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:17:24 -<==      Total: 1
2019-04-11 11:17:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 11:17:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:17:24 -<==      Total: 1
2019-04-11 11:17:25 -耗时 : 1352
2019-04-11 11:17:25 -返回值 : null
2019-04-11 11:19:15 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 11:19:15 -HTTP METHOD : GET
2019-04-11 11:19:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 11:19:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7d015f65, com.bootdo.moneyLog.vo.HeatLogVo@50687551, com.bootdo.moneyLog.vo.WaterLogVo@2de91949, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c0ff1eb]
2019-04-11 11:19:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 11:19:15 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:19:15 -<==      Total: 3
2019-04-11 11:19:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 11:19:15 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:19:15 -<==      Total: 1
2019-04-11 11:19:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 11:19:15 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:19:15 -<==      Total: 1
2019-04-11 11:19:15 -耗时 : 36
2019-04-11 11:19:15 -返回值 : null
2019-04-11 11:22:38 -请求地址 : http://localhost:8081/index
2019-04-11 11:22:38 -HTTP METHOD : GET
2019-04-11 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 11:22:38 -参数 : [{}]
2019-04-11 11:22:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 11:22:38 -==> Parameters: 1(Long)
2019-04-11 11:22:38 -<==      Total: 48
2019-04-11 11:22:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 11:22:38 -==> Parameters: 138(Long)
2019-04-11 11:22:38 -<==      Total: 1
2019-04-11 11:22:38 -耗时 : 35
2019-04-11 11:22:38 -返回值 : index_v1
2019-04-11 11:22:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 11:22:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 11:22:38.375(Timestamp)
2019-04-11 11:22:38 -请求地址 : http://localhost:8081/main
2019-04-11 11:22:38 -HTTP METHOD : GET
2019-04-11 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:22:38 -参数 : []
2019-04-11 11:22:38 -耗时 : 0
2019-04-11 11:22:38 -返回值 : main
2019-04-11 11:22:38 -<==    Updates: 1
2019-04-11 11:22:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 11:22:38 -HTTP METHOD : GET
2019-04-11 11:22:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 11:22:38 -参数 : []
2019-04-11 11:22:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 11:22:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 11:22:38 -<==      Total: 0
2019-04-11 11:22:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 11:22:38 -==> Parameters: 1(Long), 0(String)
2019-04-11 11:22:38 -<==      Total: 1
2019-04-11 11:22:38 -耗时 : 9
2019-04-11 11:22:38 -返回值 : com.bootdo.common.utils.PageUtils@63bbc102
2019-04-11 11:22:38 -请求地址 : http://localhost:8081/main
2019-04-11 11:22:38 -HTTP METHOD : GET
2019-04-11 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 11:22:38 -参数 : []
2019-04-11 11:22:38 -耗时 : 0
2019-04-11 11:22:38 -返回值 : main
2019-04-11 11:22:40 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 11:22:40 -HTTP METHOD : GET
2019-04-11 11:22:40 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 11:22:40 -参数 : []
2019-04-11 11:22:40 -耗时 : 1
2019-04-11 11:22:40 -返回值 : charts/countDD
2019-04-11 11:22:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 11:22:41 -HTTP METHOD : GET
2019-04-11 11:22:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 11:22:41 -参数 : [userType]
2019-04-11 11:22:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 11:22:41 -==> Parameters: userType(String)
2019-04-11 11:22:41 -<==      Total: 4
2019-04-11 11:22:41 -耗时 : 7
2019-04-11 11:22:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 11:22:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 11:22:52 -HTTP METHOD : GET
2019-04-11 11:22:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 11:22:52 -参数 : []
2019-04-11 11:22:52 -耗时 : 0
2019-04-11 11:22:52 -返回值 : system/dept/deptTree
2019-04-11 11:22:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 11:22:52 -HTTP METHOD : GET
2019-04-11 11:22:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 11:22:52 -参数 : []
2019-04-11 11:22:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 11:22:52 -==> Parameters: 
2019-04-11 11:22:52 -<==      Total: 3
2019-04-11 11:22:52 -耗时 : 4
2019-04-11 11:22:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 11:22:54 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 11:22:54 -HTTP METHOD : GET
2019-04-11 11:22:54 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 11:22:54 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@20294dcf, com.bootdo.moneyLog.vo.HeatLogVo@cddb1e6, com.bootdo.moneyLog.vo.WaterLogVo@551bb547, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1486f3ed]
2019-04-11 11:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 11:22:54 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:22:54 -<==      Total: 3
2019-04-11 11:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 11:22:54 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:22:54 -<==      Total: 1
2019-04-11 11:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 11:22:54 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 11:22:54 -<==      Total: 1
2019-04-11 11:22:54 -耗时 : 34
2019-04-11 11:22:54 -返回值 : null
2019-04-11 11:44:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 407]
2019-04-11 12:14:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 840]
2019-04-11 12:16:28 -Validating all active sessions...
2019-04-11 12:16:28 -Finished session validation.  [1] sessions were stopped.
2019-04-11 12:44:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1273]
2019-04-11 13:14:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1706]
2019-04-11 13:16:28 -Validating all active sessions...
2019-04-11 13:16:28 -Finished session validation.  No sessions were stopped.
2019-04-11 13:19:29 -Starting BootdoApplication on ZJZL-20180906VX with PID 11244 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 13:19:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 13:19:29 -The following profiles are active: dev
2019-04-11 13:19:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu Apr 11 13:19:30 CST 2019]; root of context hierarchy
2019-04-11 13:19:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 13:19:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c4ad4ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ea40375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 13:19:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 13:19:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:19:36 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 13:19:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 13:19:36 -Starting service [Tomcat]
2019-04-11 13:19:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 13:19:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 13:19:36 -Initializing Spring embedded WebApplicationContext
2019-04-11 13:19:36 -Root WebApplicationContext: initialization completed in 6567 ms
2019-04-11 13:19:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 13:19:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 13:19:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 13:19:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 13:19:37 -Filter xssFilter was not registered (disabled)
2019-04-11 13:19:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 13:19:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 13:19:37 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 13:19:37 -Servlet dispatcherServlet mapped to [/]
2019-04-11 13:19:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu Apr 11 13:19:30 CST 2019]; root of context hierarchy
2019-04-11 13:19:39 -Using default implementation for ThreadExecutor
2019-04-11 13:19:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 13:19:39 -Quartz Scheduler v.2.2.1 created.
2019-04-11 13:19:39 -RAMJobStore initialized.
2019-04-11 13:19:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 13:19:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 13:19:39 -Quartz scheduler version: 2.2.1
2019-04-11 13:19:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7308c820
2019-04-11 13:19:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 13:19:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 13:19:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 13:19:42 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 13:19:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 13:19:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:19:42 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 13:19:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:19:42 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 13:19:42 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 13:19:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 13:19:42 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 13:19:42 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 13:19:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 13:19:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 13:19:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 13:19:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 13:19:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 13:19:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 13:19:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:19:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:19:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 13:19:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 13:19:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 13:19:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 13:19:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 13:19:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 13:19:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 13:19:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 13:19:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 13:19:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 13:19:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 13:19:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 13:19:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 13:19:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 13:19:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 13:19:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 13:19:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 13:19:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:19:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:19:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 13:19:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 13:19:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 13:19:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 13:19:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 13:19:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:19:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 13:19:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:19:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 13:19:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 13:19:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:19:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:19:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 13:19:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 13:19:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 13:19:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 13:19:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 13:19:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 13:19:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 13:19:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 13:19:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 13:19:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 13:19:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 13:19:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 13:19:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 13:19:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 13:19:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 13:19:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 13:19:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 13:19:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 13:19:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 13:19:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 13:19:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 13:19:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 13:19:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 13:19:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 13:19:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 13:19:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 13:19:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:19:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 13:19:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:19:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 13:19:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 13:19:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 13:19:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 13:19:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:19:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 13:19:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:19:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 13:19:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:19:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 13:19:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:19:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 13:19:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 13:19:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 13:19:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 13:19:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 13:19:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 13:19:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:19:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu Apr 11 13:19:30 CST 2019]; root of context hierarchy
2019-04-11 13:19:44 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:19:44 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:19:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:19:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 13:19:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 13:19:46 -Registering beans for JMX exposure on startup
2019-04-11 13:19:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 13:19:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 13:19:46 -Starting beans in phase 2147483647
2019-04-11 13:19:46 -Context refreshed
2019-04-11 13:19:46 -Found 1 custom documentation plugin(s)
2019-04-11 13:19:46 -Scanning for api listing references
2019-04-11 13:19:46 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 13:19:46 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 13:19:46 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 13:19:46 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 13:19:46 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 13:19:46 -Generating unique operation named: removeUsingPOST_1
2019-04-11 13:19:46 -Generating unique operation named: addUsingGET_1
2019-04-11 13:19:46 -Generating unique operation named: editUsingGET_1
2019-04-11 13:19:46 -Generating unique operation named: listUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_2
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_3
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_2
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_2
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_2
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_4
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_5
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_2
2019-04-11 13:19:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_6
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_7
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_4
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_4
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_4
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_8
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_9
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 13:19:47 -Generating unique operation named: ElecUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_5
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_5
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_5
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_10
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_11
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_6
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_6
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_6
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_7
2019-04-11 13:19:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_7
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_12
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_13
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 13:19:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_7
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_8
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_8
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_14
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_15
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_8
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_8
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_9
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_9
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_16
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_17
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_8
2019-04-11 13:19:47 -Generating unique operation named: updateUsingGET_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_9
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPUT_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 13:19:47 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_9
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_10
2019-04-11 13:19:47 -Generating unique operation named: infoUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingPOST_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingPUT_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 13:19:47 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_10
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_18
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_19
2019-04-11 13:19:47 -Generating unique operation named: saveUsingPOST_9
2019-04-11 13:19:47 -Generating unique operation named: updateUsingPOST_10
2019-04-11 13:19:47 -Generating unique operation named: listUsingGET_11
2019-04-11 13:19:47 -Generating unique operation named: removeUsingPOST_20
2019-04-11 13:19:47 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 13:19:47 -Generating unique operation named: addUsingGET_10
2019-04-11 13:19:47 -Generating unique operation named: editUsingGET_11
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_12
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_21
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_10
2019-04-11 13:19:48 -Generating unique operation named: treeUsingGET_1
2019-04-11 13:19:48 -Generating unique operation named: treeUsingGET_2
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_11
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_11
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_12
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_13
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_22
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_23
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingGET_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPUT_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 13:19:48 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_12
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_13
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_14
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_24
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_25
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingGET_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_13
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPUT_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 13:19:48 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_13
2019-04-11 13:19:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_14
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_15
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_13
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_14
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_14
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_16
2019-04-11 13:19:48 -Generating unique operation named: listUsingHEAD_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingPOST_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingPUT_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingPATCH_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingDELETE_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 13:19:48 -Generating unique operation named: listUsingTRACE_1
2019-04-11 13:19:48 -Generating unique operation named: countDDUsingGET_1
2019-04-11 13:19:48 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 13:19:48 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 13:19:48 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 13:19:48 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 13:19:48 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 13:19:48 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 13:19:48 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_14
2019-04-11 13:19:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_15
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_17
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_26
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_15
2019-04-11 13:19:48 -Generating unique operation named: treeUsingGET_3
2019-04-11 13:19:48 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_15
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_15
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_16
2019-04-11 13:19:48 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_18
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_27
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_28
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_16
2019-04-11 13:19:48 -Generating unique operation named: updateUsingGET_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_16
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPUT_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 13:19:48 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 13:19:48 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_16
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_17
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_19
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_29
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_30
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_17
2019-04-11 13:19:48 -Generating unique operation named: updateUsingGET_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_17
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPUT_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 13:19:48 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 13:19:48 -Generating unique operation named: addUsingGET_17
2019-04-11 13:19:48 -Generating unique operation named: editUsingGET_18
2019-04-11 13:19:48 -Generating unique operation named: listUsingGET_20
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_31
2019-04-11 13:19:48 -Generating unique operation named: removeUsingPOST_32
2019-04-11 13:19:48 -Generating unique operation named: saveUsingPOST_18
2019-04-11 13:19:48 -Generating unique operation named: updateUsingGET_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPOST_18
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPUT_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 13:19:48 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 13:19:49 -Starting Quartz Scheduler now
2019-04-11 13:19:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 13:19:49 -Starting...
2019-04-11 13:19:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 13:19:49 -Started.
2019-04-11 13:19:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 13:19:49 -Using a shared selector for servlet write/read
2019-04-11 13:19:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 13:19:49 -Started BootdoApplication in 20.515 seconds (JVM running for 21.283)
2019-04-11 13:19:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 13:19:49 -==> Parameters: 
2019-04-11 13:19:49 -<==      Total: 1
2019-04-11 13:20:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 13:20:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 13:20:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-04-11 13:20:04 -Enabling session validation scheduler...
2019-04-11 13:20:04 -请求地址 : http://localhost:8081/login;JSESSIONID=c97c869c-8ab1-4907-b4ec-d5628edb72a6
2019-04-11 13:20:04 -HTTP METHOD : GET
2019-04-11 13:20:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 13:20:04 -参数 : [{}]
2019-04-11 13:20:04 -耗时 : 3
2019-04-11 13:20:04 -返回值 : login
2019-04-11 13:20:06 -请求地址 : http://localhost:8081/getVerify
2019-04-11 13:20:06 -HTTP METHOD : GET
2019-04-11 13:20:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 13:20:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@135a1cd6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1d9df0cd]
2019-04-11 13:20:22 -9405
2019-04-11 13:20:22 -耗时 : 16238
2019-04-11 13:20:22 -返回值 : null
2019-04-11 13:20:23 -请求地址 : http://localhost:8081/login
2019-04-11 13:20:23 -HTTP METHOD : GET
2019-04-11 13:20:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 13:20:23 -参数 : [{}]
2019-04-11 13:20:23 -耗时 : 0
2019-04-11 13:20:23 -返回值 : login
2019-04-11 13:20:41 -请求地址 : http://localhost:8081/login
2019-04-11 13:20:41 -HTTP METHOD : POST
2019-04-11 13:20:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 13:20:41 -参数 : [admin, 111111, 9405, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3beb101b]
2019-04-11 13:20:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 13:20:41 -==> Parameters: admin(String)
2019-04-11 13:20:41 -<==      Total: 1
2019-04-11 13:20:41 -耗时 : 194
2019-04-11 13:20:41 -返回值 : {msg=操作成功, code=0}
2019-04-11 13:20:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 13:20:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:20:42 -==> Parameters: 1(Long), admin(String), 登录(String), 194(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 13:20:41.997(Timestamp)
2019-04-11 13:20:42 -请求地址 : http://localhost:8081/index
2019-04-11 13:20:42 -HTTP METHOD : GET
2019-04-11 13:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 13:20:42 -参数 : [{}]
2019-04-11 13:20:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 13:20:42 -<==    Updates: 1
2019-04-11 13:20:42 -==> Parameters: 1(Long)
2019-04-11 13:20:42 -<==      Total: 48
2019-04-11 13:20:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 13:20:42 -==> Parameters: 138(Long)
2019-04-11 13:20:42 -<==      Total: 1
2019-04-11 13:20:42 -耗时 : 306
2019-04-11 13:20:42 -返回值 : index_v1
2019-04-11 13:20:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:20:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 307(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 13:20:42.443(Timestamp)
2019-04-11 13:20:42 -<==    Updates: 1
2019-04-11 13:20:42 -请求地址 : http://localhost:8081/main
2019-04-11 13:20:42 -HTTP METHOD : GET
2019-04-11 13:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:20:42 -参数 : []
2019-04-11 13:20:42 -耗时 : 0
2019-04-11 13:20:42 -返回值 : main
2019-04-11 13:20:43 -请求地址 : http://localhost:8081/main
2019-04-11 13:20:43 -HTTP METHOD : GET
2019-04-11 13:20:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:20:43 -参数 : []
2019-04-11 13:20:43 -耗时 : 0
2019-04-11 13:20:43 -返回值 : main
2019-04-11 13:20:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 13:20:43 -HTTP METHOD : GET
2019-04-11 13:20:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 13:20:43 -参数 : []
2019-04-11 13:20:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 13:20:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 13:20:43 -<==      Total: 0
2019-04-11 13:20:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 13:20:43 -==> Parameters: 1(Long), 0(String)
2019-04-11 13:20:43 -<==      Total: 1
2019-04-11 13:20:43 -耗时 : 168
2019-04-11 13:20:43 -返回值 : com.bootdo.common.utils.PageUtils@401a0e70
2019-04-11 13:20:43 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2019-04-11 13:21:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 13:21:29 -==> Parameters: 1(Long)
2019-04-11 13:21:29 -<==      Total: 92
2019-04-11 13:21:29 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 13:21:29 -HTTP METHOD : GET
2019-04-11 13:21:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 13:21:29 -参数 : []
2019-04-11 13:21:29 -耗时 : 15
2019-04-11 13:21:29 -返回值 : charts/countDD
2019-04-11 13:21:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 13:21:30 -HTTP METHOD : GET
2019-04-11 13:21:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 13:21:30 -参数 : [userType]
2019-04-11 13:21:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 13:21:30 -==> Parameters: userType(String)
2019-04-11 13:21:30 -<==      Total: 4
2019-04-11 13:21:30 -耗时 : 47
2019-04-11 13:21:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 13:21:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 13:21:37 -HTTP METHOD : GET
2019-04-11 13:21:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 13:21:37 -参数 : []
2019-04-11 13:21:37 -耗时 : 0
2019-04-11 13:21:37 -返回值 : system/dept/deptTree
2019-04-11 13:21:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 13:21:38 -HTTP METHOD : GET
2019-04-11 13:21:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 13:21:38 -参数 : []
2019-04-11 13:21:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 13:21:38 -==> Parameters: 
2019-04-11 13:21:38 -<==      Total: 3
2019-04-11 13:21:38 -耗时 : 24
2019-04-11 13:21:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 13:21:42 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 13:21:42 -HTTP METHOD : GET
2019-04-11 13:21:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 13:21:42 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@63e7c60c, com.bootdo.moneyLog.vo.HeatLogVo@5c53b808, com.bootdo.moneyLog.vo.WaterLogVo@20f6dc49, org.apache.shiro.web.servlet.ShiroHttpServletResponse@226338f6]
2019-04-11 13:21:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 13:21:43 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:21:43 -<==      Total: 3
2019-04-11 13:21:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 13:21:43 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:21:43 -<==      Total: 1
2019-04-11 13:21:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 13:21:43 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:21:43 -<==      Total: 1
2019-04-11 13:21:43 -耗时 : 1129
2019-04-11 13:21:43 -返回值 : null
2019-04-11 13:38:58 -请求地址 : http://localhost:8081/index
2019-04-11 13:38:58 -HTTP METHOD : GET
2019-04-11 13:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 13:38:58 -参数 : [{}]
2019-04-11 13:38:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 13:38:58 -==> Parameters: 1(Long)
2019-04-11 13:38:58 -<==      Total: 48
2019-04-11 13:38:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 13:38:58 -==> Parameters: 138(Long)
2019-04-11 13:38:58 -<==      Total: 1
2019-04-11 13:38:58 -耗时 : 55
2019-04-11 13:38:58 -返回值 : index_v1
2019-04-11 13:38:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:38:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 56(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 13:38:58.519(Timestamp)
2019-04-11 13:38:58 -<==    Updates: 1
2019-04-11 13:38:58 -请求地址 : http://localhost:8081/main
2019-04-11 13:38:58 -HTTP METHOD : GET
2019-04-11 13:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:38:58 -参数 : []
2019-04-11 13:38:58 -耗时 : 1
2019-04-11 13:38:58 -返回值 : main
2019-04-11 13:38:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 13:38:59 -HTTP METHOD : GET
2019-04-11 13:38:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 13:38:59 -参数 : []
2019-04-11 13:38:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 13:38:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 13:38:59 -<==      Total: 0
2019-04-11 13:38:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 13:38:59 -==> Parameters: 1(Long), 0(String)
2019-04-11 13:38:59 -<==      Total: 1
2019-04-11 13:38:59 -耗时 : 33
2019-04-11 13:38:59 -返回值 : com.bootdo.common.utils.PageUtils@2061c8ce
2019-04-11 13:38:59 -请求地址 : http://localhost:8081/main
2019-04-11 13:38:59 -HTTP METHOD : GET
2019-04-11 13:38:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:38:59 -参数 : []
2019-04-11 13:38:59 -耗时 : 1
2019-04-11 13:38:59 -返回值 : main
2019-04-11 13:39:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 13:39:04 -==> Parameters: 1(Long)
2019-04-11 13:39:04 -<==      Total: 92
2019-04-11 13:39:04 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 13:39:04 -HTTP METHOD : GET
2019-04-11 13:39:04 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 13:39:04 -参数 : []
2019-04-11 13:39:04 -耗时 : 0
2019-04-11 13:39:04 -返回值 : charts/countDD
2019-04-11 13:39:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 13:39:05 -HTTP METHOD : GET
2019-04-11 13:39:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 13:39:05 -参数 : [userType]
2019-04-11 13:39:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 13:39:05 -==> Parameters: userType(String)
2019-04-11 13:39:05 -<==      Total: 4
2019-04-11 13:39:05 -耗时 : 4
2019-04-11 13:39:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 13:39:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 13:39:23 -HTTP METHOD : GET
2019-04-11 13:39:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 13:39:23 -参数 : []
2019-04-11 13:39:23 -耗时 : 0
2019-04-11 13:39:23 -返回值 : system/dept/deptTree
2019-04-11 13:39:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 13:39:24 -HTTP METHOD : GET
2019-04-11 13:39:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 13:39:24 -参数 : []
2019-04-11 13:39:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 13:39:24 -==> Parameters: 
2019-04-11 13:39:24 -<==      Total: 3
2019-04-11 13:39:24 -耗时 : 4
2019-04-11 13:39:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 13:39:26 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 13:39:26 -HTTP METHOD : GET
2019-04-11 13:39:26 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 13:39:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4a2fb1b0, com.bootdo.moneyLog.vo.HeatLogVo@56937aac, com.bootdo.moneyLog.vo.WaterLogVo@33d890, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5cd8ec8e]
2019-04-11 13:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 13:39:26 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:39:26 -<==      Total: 3
2019-04-11 13:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 13:39:26 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:39:26 -<==      Total: 1
2019-04-11 13:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 13:39:26 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:39:26 -<==      Total: 1
2019-04-11 13:39:26 -耗时 : 46
2019-04-11 13:39:26 -返回值 : null
2019-04-11 13:40:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 5492 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 13:40:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 13:40:33 -The following profiles are active: dev
2019-04-11 13:40:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:40:33 CST 2019]; root of context hierarchy
2019-04-11 13:40:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 13:40:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef6fddab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e1c90c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 13:40:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 13:40:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:40:47 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 13:40:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 13:40:47 -Starting service [Tomcat]
2019-04-11 13:40:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 13:40:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 13:40:48 -Initializing Spring embedded WebApplicationContext
2019-04-11 13:40:48 -Root WebApplicationContext: initialization completed in 14171 ms
2019-04-11 13:40:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 13:40:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 13:40:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 13:40:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 13:40:49 -Filter xssFilter was not registered (disabled)
2019-04-11 13:40:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 13:40:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 13:40:49 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 13:40:49 -Servlet dispatcherServlet mapped to [/]
2019-04-11 13:40:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:40:33 CST 2019]; root of context hierarchy
2019-04-11 13:40:56 -Using default implementation for ThreadExecutor
2019-04-11 13:40:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 13:40:56 -Quartz Scheduler v.2.2.1 created.
2019-04-11 13:40:56 -RAMJobStore initialized.
2019-04-11 13:40:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 13:40:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 13:40:56 -Quartz scheduler version: 2.2.1
2019-04-11 13:40:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3d40498a
2019-04-11 13:40:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 13:40:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 13:41:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 13:41:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 13:41:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 13:41:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 13:41:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:41:00 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 13:41:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:41:00 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 13:41:00 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 13:41:00 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 13:41:00 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 13:41:00 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 13:41:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 13:41:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 13:41:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 13:41:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 13:41:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 13:41:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 13:41:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 13:41:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:41:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 13:41:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:41:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 13:41:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 13:41:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 13:41:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 13:41:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 13:41:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 13:41:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 13:41:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 13:41:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 13:41:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 13:41:00 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 13:41:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 13:41:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 13:41:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 13:41:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 13:41:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 13:41:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 13:41:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:41:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:41:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 13:41:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 13:41:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 13:41:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:41:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 13:41:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:41:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:41:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 13:41:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 13:41:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 13:41:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 13:41:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 13:41:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 13:41:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 13:41:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 13:41:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 13:41:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 13:41:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 13:41:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 13:41:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 13:41:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 13:41:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 13:41:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 13:41:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:41:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 13:41:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 13:41:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 13:41:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 13:41:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 13:41:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 13:41:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 13:41:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 13:41:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 13:41:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 13:41:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 13:41:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 13:41:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 13:41:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 13:41:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 13:41:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 13:41:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:41:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:41:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 13:41:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:41:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 13:41:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 13:41:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 13:41:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 13:41:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 13:41:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 13:41:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 13:41:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 13:41:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:41:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 13:41:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 13:41:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 13:41:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:41:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:41:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:41:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 13:41:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 13:41:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 13:41:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 13:41:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 13:41:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 13:41:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:41:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:40:33 CST 2019]; root of context hierarchy
2019-04-11 13:41:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:41:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:41:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:41:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 13:41:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 13:41:06 -Registering beans for JMX exposure on startup
2019-04-11 13:41:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 13:41:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 13:41:06 -Starting beans in phase 2147483647
2019-04-11 13:41:06 -Context refreshed
2019-04-11 13:41:06 -Found 1 custom documentation plugin(s)
2019-04-11 13:41:06 -Scanning for api listing references
2019-04-11 13:41:07 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 13:41:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 13:41:07 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 13:41:07 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_1
2019-04-11 13:41:07 -Generating unique operation named: addUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: editUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: listUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_2
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_3
2019-04-11 13:41:07 -Generating unique operation named: saveUsingPOST_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingPOST_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingPUT_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 13:41:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 13:41:07 -Generating unique operation named: addUsingGET_2
2019-04-11 13:41:07 -Generating unique operation named: editUsingGET_2
2019-04-11 13:41:07 -Generating unique operation named: listUsingGET_2
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_4
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_5
2019-04-11 13:41:07 -Generating unique operation named: saveUsingPOST_2
2019-04-11 13:41:07 -Generating unique operation named: updateUsingPOST_2
2019-04-11 13:41:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 13:41:07 -Generating unique operation named: addUsingGET_3
2019-04-11 13:41:07 -Generating unique operation named: editUsingGET_3
2019-04-11 13:41:07 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 13:41:07 -Generating unique operation named: listUsingGET_3
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_6
2019-04-11 13:41:07 -Generating unique operation named: removeUsingPOST_7
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_4
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_4
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_4
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_8
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_9
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 13:41:08 -Generating unique operation named: ElecUsingGET_1
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_5
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_5
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_5
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_10
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_11
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_6
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_6
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_6
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_7
2019-04-11 13:41:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_7
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_12
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_13
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 13:41:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_7
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_8
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_8
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_14
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_15
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_8
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_8
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_9
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_9
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_16
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_17
2019-04-11 13:41:08 -Generating unique operation named: saveUsingPOST_8
2019-04-11 13:41:08 -Generating unique operation named: updateUsingGET_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPOST_9
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPUT_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 13:41:08 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 13:41:08 -Generating unique operation named: addUsingGET_9
2019-04-11 13:41:08 -Generating unique operation named: editUsingGET_10
2019-04-11 13:41:08 -Generating unique operation named: infoUsingGET_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingPOST_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingPUT_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 13:41:08 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 13:41:08 -Generating unique operation named: listUsingGET_10
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_18
2019-04-11 13:41:08 -Generating unique operation named: removeUsingPOST_19
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPOST_10
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_11
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_20
2019-04-11 13:41:09 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 13:41:09 -Generating unique operation named: addUsingGET_10
2019-04-11 13:41:09 -Generating unique operation named: editUsingGET_11
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_12
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_21
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_10
2019-04-11 13:41:09 -Generating unique operation named: treeUsingGET_1
2019-04-11 13:41:09 -Generating unique operation named: treeUsingGET_2
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPOST_11
2019-04-11 13:41:09 -Generating unique operation named: addUsingGET_11
2019-04-11 13:41:09 -Generating unique operation named: editUsingGET_12
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_13
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_22
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_23
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_11
2019-04-11 13:41:09 -Generating unique operation named: updateUsingGET_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPOST_12
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPUT_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 13:41:09 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 13:41:09 -Generating unique operation named: addUsingGET_12
2019-04-11 13:41:09 -Generating unique operation named: editUsingGET_13
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_14
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_24
2019-04-11 13:41:09 -Generating unique operation named: removeUsingPOST_25
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_12
2019-04-11 13:41:09 -Generating unique operation named: updateUsingGET_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPOST_13
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPUT_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 13:41:09 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 13:41:09 -Generating unique operation named: addUsingGET_13
2019-04-11 13:41:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 13:41:09 -Generating unique operation named: editUsingGET_14
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_15
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_13
2019-04-11 13:41:09 -Generating unique operation named: saveUsingPOST_14
2019-04-11 13:41:09 -Generating unique operation named: updateUsingPOST_14
2019-04-11 13:41:09 -Generating unique operation named: listUsingGET_16
2019-04-11 13:41:09 -Generating unique operation named: listUsingHEAD_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingPOST_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingPUT_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingPATCH_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingDELETE_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 13:41:09 -Generating unique operation named: listUsingTRACE_1
2019-04-11 13:41:09 -Generating unique operation named: countDDUsingGET_1
2019-04-11 13:41:09 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 13:41:09 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 13:41:09 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 13:41:09 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 13:41:09 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 13:41:09 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 13:41:09 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 13:41:09 -Generating unique operation named: addUsingGET_14
2019-04-11 13:41:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 13:41:10 -Generating unique operation named: editUsingGET_15
2019-04-11 13:41:10 -Generating unique operation named: listUsingGET_17
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_26
2019-04-11 13:41:10 -Generating unique operation named: saveUsingPOST_15
2019-04-11 13:41:10 -Generating unique operation named: treeUsingGET_3
2019-04-11 13:41:10 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPOST_15
2019-04-11 13:41:10 -Generating unique operation named: addUsingGET_15
2019-04-11 13:41:10 -Generating unique operation named: editUsingGET_16
2019-04-11 13:41:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 13:41:10 -Generating unique operation named: listUsingGET_18
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_27
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_28
2019-04-11 13:41:10 -Generating unique operation named: saveUsingPOST_16
2019-04-11 13:41:10 -Generating unique operation named: updateUsingGET_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPOST_16
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPUT_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 13:41:10 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 13:41:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 13:41:10 -Generating unique operation named: addUsingGET_16
2019-04-11 13:41:10 -Generating unique operation named: editUsingGET_17
2019-04-11 13:41:10 -Generating unique operation named: listUsingGET_19
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_29
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_30
2019-04-11 13:41:10 -Generating unique operation named: saveUsingPOST_17
2019-04-11 13:41:10 -Generating unique operation named: updateUsingGET_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPOST_17
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPUT_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 13:41:10 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 13:41:10 -Generating unique operation named: addUsingGET_17
2019-04-11 13:41:10 -Generating unique operation named: editUsingGET_18
2019-04-11 13:41:10 -Generating unique operation named: listUsingGET_20
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_31
2019-04-11 13:41:10 -Generating unique operation named: removeUsingPOST_32
2019-04-11 13:41:10 -Generating unique operation named: saveUsingPOST_18
2019-04-11 13:41:10 -Generating unique operation named: updateUsingGET_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPOST_18
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPUT_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 13:41:10 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 13:41:10 -Starting Quartz Scheduler now
2019-04-11 13:41:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 13:41:10 -Starting...
2019-04-11 13:41:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 13:41:10 -Started.
2019-04-11 13:41:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 13:41:10 -Using a shared selector for servlet write/read
2019-04-11 13:41:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 13:41:11 -Started BootdoApplication in 38.712 seconds (JVM running for 39.798)
2019-04-11 13:41:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 13:41:11 -==> Parameters: 
2019-04-11 13:41:11 -<==      Total: 1
2019-04-11 13:41:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 13:41:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 13:41:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2019-04-11 13:41:48 -Enabling session validation scheduler...
2019-04-11 13:41:49 -请求地址 : http://localhost:8081/login;JSESSIONID=f9f7a100-2d80-42a4-a068-6c224f43cd60
2019-04-11 13:41:49 -HTTP METHOD : GET
2019-04-11 13:41:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 13:41:49 -参数 : [{}]
2019-04-11 13:41:49 -耗时 : 7
2019-04-11 13:41:49 -返回值 : login
2019-04-11 13:41:50 -请求地址 : http://localhost:8081/getVerify
2019-04-11 13:41:50 -HTTP METHOD : GET
2019-04-11 13:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 13:41:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11896115, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f4e9d54]
2019-04-11 13:41:55 -3020
2019-04-11 13:41:55 -耗时 : 4870
2019-04-11 13:41:55 -返回值 : null
2019-04-11 13:42:01 -请求地址 : http://localhost:8081/login
2019-04-11 13:42:01 -HTTP METHOD : POST
2019-04-11 13:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 13:42:01 -参数 : [admin, 111111, 3020, org.apache.shiro.web.servlet.ShiroHttpServletRequest@34e0f95c]
2019-04-11 13:42:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 13:42:01 -==> Parameters: admin(String)
2019-04-11 13:42:01 -<==      Total: 1
2019-04-11 13:42:01 -耗时 : 167
2019-04-11 13:42:01 -返回值 : {msg=操作成功, code=0}
2019-04-11 13:42:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 13:42:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:42:01 -==> Parameters: 1(Long), admin(String), 登录(String), 168(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 13:42:01.888(Timestamp)
2019-04-11 13:42:01 -请求地址 : http://localhost:8081/index
2019-04-11 13:42:01 -HTTP METHOD : GET
2019-04-11 13:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 13:42:01 -参数 : [{}]
2019-04-11 13:42:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-11 13:42:02 -<==    Updates: 1
2019-04-11 13:42:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 13:42:02 -==> Parameters: 1(Long)
2019-04-11 13:42:02 -<==      Total: 48
2019-04-11 13:42:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 13:42:02 -==> Parameters: 138(Long)
2019-04-11 13:42:02 -<==      Total: 1
2019-04-11 13:42:02 -耗时 : 553
2019-04-11 13:42:02 -返回值 : index_v1
2019-04-11 13:42:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:42:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 553(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 13:42:02.588(Timestamp)
2019-04-11 13:42:02 -<==    Updates: 1
2019-04-11 13:42:02 -请求地址 : http://localhost:8081/main
2019-04-11 13:42:02 -HTTP METHOD : GET
2019-04-11 13:42:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:42:02 -参数 : []
2019-04-11 13:42:02 -耗时 : 1
2019-04-11 13:42:02 -返回值 : main
2019-04-11 13:42:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 13:42:03 -HTTP METHOD : GET
2019-04-11 13:42:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 13:42:03 -参数 : []
2019-04-11 13:42:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 13:42:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 13:42:03 -<==      Total: 0
2019-04-11 13:42:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 13:42:03 -==> Parameters: 1(Long), 0(String)
2019-04-11 13:42:03 -<==      Total: 1
2019-04-11 13:42:03 -耗时 : 175
2019-04-11 13:42:03 -返回值 : com.bootdo.common.utils.PageUtils@5a65dfc
2019-04-11 13:42:03 -请求地址 : http://localhost:8081/main
2019-04-11 13:42:03 -HTTP METHOD : GET
2019-04-11 13:42:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:42:03 -参数 : []
2019-04-11 13:42:03 -耗时 : 10
2019-04-11 13:42:03 -返回值 : main
2019-04-11 13:42:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 13:42:10 -==> Parameters: 1(Long)
2019-04-11 13:42:10 -<==      Total: 92
2019-04-11 13:42:10 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 13:42:10 -HTTP METHOD : GET
2019-04-11 13:42:10 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 13:42:10 -参数 : []
2019-04-11 13:42:10 -耗时 : 10
2019-04-11 13:42:10 -返回值 : charts/countDD
2019-04-11 13:42:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 13:42:10 -HTTP METHOD : GET
2019-04-11 13:42:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 13:42:10 -参数 : [userType]
2019-04-11 13:42:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 13:42:10 -==> Parameters: userType(String)
2019-04-11 13:42:10 -<==      Total: 4
2019-04-11 13:42:10 -耗时 : 100
2019-04-11 13:42:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 13:42:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 13:42:36 -HTTP METHOD : GET
2019-04-11 13:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 13:42:36 -参数 : []
2019-04-11 13:42:36 -耗时 : 1
2019-04-11 13:42:36 -返回值 : system/dept/deptTree
2019-04-11 13:42:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 13:42:36 -HTTP METHOD : GET
2019-04-11 13:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 13:42:36 -参数 : []
2019-04-11 13:42:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 13:42:36 -==> Parameters: 
2019-04-11 13:42:36 -<==      Total: 3
2019-04-11 13:42:36 -耗时 : 19
2019-04-11 13:42:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 13:42:45 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-11 13:42:45 -HTTP METHOD : GET
2019-04-11 13:42:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-11 13:42:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1d223d7a, com.bootdo.moneyLog.vo.HeatLogVo@4871afbc, com.bootdo.moneyLog.vo.WaterLogVo@2d95786f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@71dbaeb]
2019-04-11 13:42:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 13:42:45 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:42:45 -<==      Total: 3
2019-04-11 13:42:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 13:42:45 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:42:45 -<==      Total: 1
2019-04-11 13:42:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 13:42:45 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 13:42:45 -<==      Total: 1
2019-04-11 13:42:46 -耗时 : 1087
2019-04-11 13:42:46 -返回值 : null
2019-04-11 13:44:57 -请求地址 : http://localhost:8081/index
2019-04-11 13:44:57 -HTTP METHOD : GET
2019-04-11 13:44:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 13:44:57 -参数 : [{}]
2019-04-11 13:44:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 13:44:57 -==> Parameters: 1(Long)
2019-04-11 13:44:57 -<==      Total: 48
2019-04-11 13:44:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 13:44:57 -==> Parameters: 138(Long)
2019-04-11 13:44:57 -<==      Total: 1
2019-04-11 13:44:57 -耗时 : 100
2019-04-11 13:44:57 -返回值 : index_v1
2019-04-11 13:44:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:44:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 13:44:57.978(Timestamp)
2019-04-11 13:44:58 -请求地址 : http://localhost:8081/main
2019-04-11 13:44:58 -HTTP METHOD : GET
2019-04-11 13:44:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:44:58 -参数 : []
2019-04-11 13:44:58 -耗时 : 1
2019-04-11 13:44:58 -返回值 : main
2019-04-11 13:44:58 -<==    Updates: 1
2019-04-11 13:44:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 13:44:58 -HTTP METHOD : GET
2019-04-11 13:44:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 13:44:58 -参数 : []
2019-04-11 13:44:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 13:44:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 13:44:58 -请求地址 : http://localhost:8081/main
2019-04-11 13:44:58 -HTTP METHOD : GET
2019-04-11 13:44:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:44:58 -参数 : []
2019-04-11 13:44:58 -耗时 : 3
2019-04-11 13:44:58 -返回值 : main
2019-04-11 13:44:58 -<==      Total: 0
2019-04-11 13:44:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 13:44:58 -==> Parameters: 1(Long), 0(String)
2019-04-11 13:44:58 -<==      Total: 1
2019-04-11 13:44:58 -耗时 : 103
2019-04-11 13:44:58 -返回值 : com.bootdo.common.utils.PageUtils@1b952c33
2019-04-11 13:45:01 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 13:45:01 -HTTP METHOD : GET
2019-04-11 13:45:01 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 13:45:01 -参数 : []
2019-04-11 13:45:01 -耗时 : 1
2019-04-11 13:45:01 -返回值 : charts/countDD
2019-04-11 13:45:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 13:45:01 -HTTP METHOD : GET
2019-04-11 13:45:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 13:45:01 -参数 : [userType]
2019-04-11 13:45:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 13:45:01 -==> Parameters: userType(String)
2019-04-11 13:45:01 -<==      Total: 4
2019-04-11 13:45:01 -耗时 : 8
2019-04-11 13:45:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 13:45:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 13:45:14 -HTTP METHOD : GET
2019-04-11 13:45:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 13:45:14 -参数 : []
2019-04-11 13:45:14 -耗时 : 0
2019-04-11 13:45:14 -返回值 : system/dept/deptTree
2019-04-11 13:45:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 13:45:14 -HTTP METHOD : GET
2019-04-11 13:45:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 13:45:14 -参数 : []
2019-04-11 13:45:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 13:45:14 -==> Parameters: 
2019-04-11 13:45:14 -<==      Total: 3
2019-04-11 13:45:14 -耗时 : 3
2019-04-11 13:45:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 13:45:16 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:45:16 -HTTP METHOD : POST
2019-04-11 13:45:16 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:45:16 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7ffb9fa0, com.bootdo.moneyLog.vo.WaterLogVo@1e6157d4, com.bootdo.moneyLog.vo.HeatLogVo@6808136a, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@7d80346a]
2019-04-11 13:45:16 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:16 -<==      Total: 1
2019-04-11 13:45:16 -耗时 : 120
2019-04-11 13:45:16 -返回值 : com.bootdo.charts.vo.CountDayVo@5590a582
2019-04-11 13:45:33 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:45:33 -HTTP METHOD : POST
2019-04-11 13:45:33 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:45:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@415663ba, com.bootdo.moneyLog.vo.WaterLogVo@69864d04, com.bootdo.moneyLog.vo.HeatLogVo@246b3387, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@6c4c818b]
2019-04-11 13:45:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:33 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:33 -<==      Total: 1
2019-04-11 13:45:33 -耗时 : 33
2019-04-11 13:45:33 -返回值 : com.bootdo.charts.vo.CountDayVo@7409c823
2019-04-11 13:45:34 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:45:34 -HTTP METHOD : POST
2019-04-11 13:45:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:45:34 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@556c1439, com.bootdo.moneyLog.vo.WaterLogVo@16654f50, com.bootdo.moneyLog.vo.HeatLogVo@1e438382, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1be40050]
2019-04-11 13:45:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:45:34 -==> Parameters: A(String), 2(String)
2019-04-11 13:45:34 -<==      Total: 1
2019-04-11 13:45:34 -耗时 : 17
2019-04-11 13:45:34 -返回值 : com.bootdo.charts.vo.CountDayVo@938f4de
2019-04-11 13:48:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 11788 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 13:48:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 13:48:46 -The following profiles are active: dev
2019-04-11 13:48:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:48:46 CST 2019]; root of context hierarchy
2019-04-11 13:48:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 13:48:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5402751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f79955f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 13:48:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 13:48:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 13:48:55 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 13:48:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 13:48:55 -Starting service [Tomcat]
2019-04-11 13:48:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 13:48:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 13:48:56 -Initializing Spring embedded WebApplicationContext
2019-04-11 13:48:56 -Root WebApplicationContext: initialization completed in 9586 ms
2019-04-11 13:48:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 13:48:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 13:48:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 13:48:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 13:48:57 -Filter xssFilter was not registered (disabled)
2019-04-11 13:48:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 13:48:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 13:48:57 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 13:48:57 -Servlet dispatcherServlet mapped to [/]
2019-04-11 13:49:00 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:48:46 CST 2019]; root of context hierarchy
2019-04-11 13:49:01 -Using default implementation for ThreadExecutor
2019-04-11 13:49:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 13:49:01 -Quartz Scheduler v.2.2.1 created.
2019-04-11 13:49:01 -RAMJobStore initialized.
2019-04-11 13:49:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 13:49:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 13:49:01 -Quartz scheduler version: 2.2.1
2019-04-11 13:49:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66b0e207
2019-04-11 13:49:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 13:49:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 13:49:05 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 13:49:05 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:49:05 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 13:49:05 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 13:49:05 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:49:05 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 13:49:05 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 13:49:05 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 13:49:05 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 13:49:05 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 13:49:05 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 13:49:05 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 13:49:05 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 13:49:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 13:49:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 13:49:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 13:49:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 13:49:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 13:49:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:49:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 13:49:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 13:49:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 13:49:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 13:49:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 13:49:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 13:49:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 13:49:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 13:49:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 13:49:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 13:49:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 13:49:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 13:49:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 13:49:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 13:49:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 13:49:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 13:49:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 13:49:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 13:49:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:49:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 13:49:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 13:49:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 13:49:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 13:49:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 13:49:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:49:05 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:49:05 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 13:49:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 13:49:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 13:49:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 13:49:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 13:49:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 13:49:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 13:49:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 13:49:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 13:49:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 13:49:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 13:49:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 13:49:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 13:49:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 13:49:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 13:49:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 13:49:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 13:49:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 13:49:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 13:49:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 13:49:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 13:49:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 13:49:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 13:49:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 13:49:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 13:49:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 13:49:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 13:49:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 13:49:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 13:49:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:49:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 13:49:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 13:49:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 13:49:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 13:49:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 13:49:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 13:49:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 13:49:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 13:49:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 13:49:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 13:49:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 13:49:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 13:49:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 13:49:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 13:49:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 13:49:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 13:49:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 13:49:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 13:49:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 13:49:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:49:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 13:48:46 CST 2019]; root of context hierarchy
2019-04-11 13:49:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:49:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:49:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 13:49:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 13:49:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 13:49:10 -Registering beans for JMX exposure on startup
2019-04-11 13:49:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 13:49:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 13:49:10 -Starting beans in phase 2147483647
2019-04-11 13:49:10 -Context refreshed
2019-04-11 13:49:10 -Found 1 custom documentation plugin(s)
2019-04-11 13:49:10 -Scanning for api listing references
2019-04-11 13:49:11 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 13:49:11 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 13:49:11 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 13:49:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 13:49:11 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 13:49:11 -Generating unique operation named: removeUsingPOST_1
2019-04-11 13:49:11 -Generating unique operation named: addUsingGET_1
2019-04-11 13:49:11 -Generating unique operation named: editUsingGET_1
2019-04-11 13:49:11 -Generating unique operation named: listUsingGET_1
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_2
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_3
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingGET_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPUT_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 13:49:12 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 13:49:12 -Generating unique operation named: addUsingGET_2
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_2
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_2
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_4
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_5
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_2
2019-04-11 13:49:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 13:49:12 -Generating unique operation named: addUsingGET_3
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_3
2019-04-11 13:49:12 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_3
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_6
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_7
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingGET_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPUT_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 13:49:12 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 13:49:12 -Generating unique operation named: addUsingGET_4
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_4
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_4
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_8
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_9
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingGET_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPUT_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 13:49:12 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 13:49:12 -Generating unique operation named: ElecUsingGET_1
2019-04-11 13:49:12 -Generating unique operation named: addUsingGET_5
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_5
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_5
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_10
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_11
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingGET_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPUT_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 13:49:12 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_6
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_6
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_6
2019-04-11 13:49:12 -Generating unique operation named: addUsingGET_6
2019-04-11 13:49:12 -Generating unique operation named: editUsingGET_7
2019-04-11 13:49:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 13:49:12 -Generating unique operation named: listUsingGET_7
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_12
2019-04-11 13:49:12 -Generating unique operation named: removeUsingPOST_13
2019-04-11 13:49:12 -Generating unique operation named: saveUsingPOST_6
2019-04-11 13:49:12 -Generating unique operation named: updateUsingGET_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPOST_7
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPUT_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 13:49:12 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 13:49:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_7
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_8
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_8
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_14
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_15
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingGET_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPUT_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 13:49:13 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_8
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_9
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_9
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_16
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_17
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingGET_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPUT_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 13:49:13 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_9
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_10
2019-04-11 13:49:13 -Generating unique operation named: infoUsingGET_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingPOST_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingPUT_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 13:49:13 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_10
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_18
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_19
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_10
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_11
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_20
2019-04-11 13:49:13 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_10
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_11
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_12
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_21
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_10
2019-04-11 13:49:13 -Generating unique operation named: treeUsingGET_1
2019-04-11 13:49:13 -Generating unique operation named: treeUsingGET_2
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_11
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_11
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_12
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_13
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_22
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_23
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_11
2019-04-11 13:49:13 -Generating unique operation named: updateUsingGET_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_12
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPUT_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 13:49:13 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_12
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_13
2019-04-11 13:49:13 -Generating unique operation named: listUsingGET_14
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_24
2019-04-11 13:49:13 -Generating unique operation named: removeUsingPOST_25
2019-04-11 13:49:13 -Generating unique operation named: saveUsingPOST_12
2019-04-11 13:49:13 -Generating unique operation named: updateUsingGET_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPOST_13
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPUT_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 13:49:13 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 13:49:13 -Generating unique operation named: addUsingGET_13
2019-04-11 13:49:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 13:49:13 -Generating unique operation named: editUsingGET_14
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_15
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_13
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_14
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPOST_14
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_16
2019-04-11 13:49:14 -Generating unique operation named: listUsingHEAD_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingPOST_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingPUT_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingPATCH_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingDELETE_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 13:49:14 -Generating unique operation named: listUsingTRACE_1
2019-04-11 13:49:14 -Generating unique operation named: countDDUsingGET_1
2019-04-11 13:49:14 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 13:49:14 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 13:49:14 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 13:49:14 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 13:49:14 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 13:49:14 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 13:49:14 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 13:49:14 -Generating unique operation named: addUsingGET_14
2019-04-11 13:49:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 13:49:14 -Generating unique operation named: editUsingGET_15
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_17
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_26
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_15
2019-04-11 13:49:14 -Generating unique operation named: treeUsingGET_3
2019-04-11 13:49:14 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPOST_15
2019-04-11 13:49:14 -Generating unique operation named: addUsingGET_15
2019-04-11 13:49:14 -Generating unique operation named: editUsingGET_16
2019-04-11 13:49:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_18
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_27
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_28
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_16
2019-04-11 13:49:14 -Generating unique operation named: updateUsingGET_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPOST_16
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPUT_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 13:49:14 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 13:49:14 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 13:49:14 -Generating unique operation named: addUsingGET_16
2019-04-11 13:49:14 -Generating unique operation named: editUsingGET_17
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_19
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_29
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_30
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_17
2019-04-11 13:49:14 -Generating unique operation named: updateUsingGET_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPOST_17
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPUT_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 13:49:14 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 13:49:14 -Generating unique operation named: addUsingGET_17
2019-04-11 13:49:14 -Generating unique operation named: editUsingGET_18
2019-04-11 13:49:14 -Generating unique operation named: listUsingGET_20
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_31
2019-04-11 13:49:14 -Generating unique operation named: removeUsingPOST_32
2019-04-11 13:49:14 -Generating unique operation named: saveUsingPOST_18
2019-04-11 13:49:14 -Generating unique operation named: updateUsingGET_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPOST_18
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPUT_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 13:49:14 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 13:49:14 -Starting Quartz Scheduler now
2019-04-11 13:49:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 13:49:14 -Starting...
2019-04-11 13:49:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 13:49:14 -Started.
2019-04-11 13:49:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 13:49:14 -Using a shared selector for servlet write/read
2019-04-11 13:49:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 13:49:14 -Started BootdoApplication in 29.844 seconds (JVM running for 30.837)
2019-04-11 13:49:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 13:49:15 -==> Parameters: 
2019-04-11 13:49:15 -<==      Total: 1
2019-04-11 13:50:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-11 13:56:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 13:56:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 13:56:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-04-11 13:56:27 -Enabling session validation scheduler...
2019-04-11 13:56:27 -请求地址 : http://localhost:8081/login;JSESSIONID=992c10c2-8e71-41fb-99a3-b3e357cd36be
2019-04-11 13:56:27 -HTTP METHOD : GET
2019-04-11 13:56:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 13:56:27 -参数 : [{}]
2019-04-11 13:56:27 -耗时 : 8
2019-04-11 13:56:27 -返回值 : login
2019-04-11 13:56:29 -请求地址 : http://localhost:8081/getVerify
2019-04-11 13:56:29 -HTTP METHOD : GET
2019-04-11 13:56:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 13:56:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4be96c6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30aa14a0]
2019-04-11 13:56:34 -9171
2019-04-11 13:56:34 -耗时 : 4850
2019-04-11 13:56:34 -返回值 : null
2019-04-11 13:56:41 -请求地址 : http://localhost:8081/login
2019-04-11 13:56:41 -HTTP METHOD : POST
2019-04-11 13:56:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 13:56:41 -参数 : [admin, 111111, 9171, org.apache.shiro.web.servlet.ShiroHttpServletRequest@63e7c60c]
2019-04-11 13:56:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 13:56:41 -==> Parameters: admin(String)
2019-04-11 13:56:41 -<==      Total: 1
2019-04-11 13:56:41 -耗时 : 163
2019-04-11 13:56:41 -返回值 : {msg=操作成功, code=0}
2019-04-11 13:56:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 13:56:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:56:41 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 13:56:41.647(Timestamp)
2019-04-11 13:56:41 -<==    Updates: 1
2019-04-11 13:56:41 -请求地址 : http://localhost:8081/index
2019-04-11 13:56:41 -HTTP METHOD : GET
2019-04-11 13:56:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 13:56:41 -参数 : [{}]
2019-04-11 13:56:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 13:56:42 -==> Parameters: 1(Long)
2019-04-11 13:56:42 -<==      Total: 48
2019-04-11 13:56:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 13:56:42 -==> Parameters: 138(Long)
2019-04-11 13:56:42 -<==      Total: 1
2019-04-11 13:56:42 -耗时 : 303
2019-04-11 13:56:42 -返回值 : index_v1
2019-04-11 13:56:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 13:56:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 304(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 13:56:42.254(Timestamp)
2019-04-11 13:56:42 -<==    Updates: 1
2019-04-11 13:56:42 -请求地址 : http://localhost:8081/main
2019-04-11 13:56:42 -HTTP METHOD : GET
2019-04-11 13:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:56:42 -参数 : []
2019-04-11 13:56:42 -耗时 : 1
2019-04-11 13:56:42 -返回值 : main
2019-04-11 13:56:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 13:56:42 -HTTP METHOD : GET
2019-04-11 13:56:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 13:56:42 -参数 : []
2019-04-11 13:56:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 13:56:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 13:56:42 -<==      Total: 0
2019-04-11 13:56:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 13:56:42 -请求地址 : http://localhost:8081/main
2019-04-11 13:56:42 -HTTP METHOD : GET
2019-04-11 13:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 13:56:42 -参数 : []
2019-04-11 13:56:42 -耗时 : 1
2019-04-11 13:56:42 -返回值 : main
2019-04-11 13:56:42 -==> Parameters: 1(Long), 0(String)
2019-04-11 13:56:42 -<==      Total: 1
2019-04-11 13:56:42 -耗时 : 162
2019-04-11 13:56:42 -返回值 : com.bootdo.common.utils.PageUtils@261008d
2019-04-11 13:56:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 13:56:55 -==> Parameters: 1(Long)
2019-04-11 13:56:56 -<==      Total: 92
2019-04-11 13:56:56 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 13:56:56 -HTTP METHOD : GET
2019-04-11 13:56:56 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 13:56:56 -参数 : []
2019-04-11 13:56:56 -耗时 : 13
2019-04-11 13:56:56 -返回值 : charts/countDD
2019-04-11 13:56:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 13:56:56 -HTTP METHOD : GET
2019-04-11 13:56:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 13:56:56 -参数 : [userType]
2019-04-11 13:56:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 13:56:56 -==> Parameters: userType(String)
2019-04-11 13:56:57 -<==      Total: 4
2019-04-11 13:56:57 -耗时 : 48
2019-04-11 13:56:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 13:57:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 13:57:05 -HTTP METHOD : GET
2019-04-11 13:57:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 13:57:05 -参数 : []
2019-04-11 13:57:05 -耗时 : 0
2019-04-11 13:57:05 -返回值 : system/dept/deptTree
2019-04-11 13:57:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 13:57:05 -HTTP METHOD : GET
2019-04-11 13:57:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 13:57:05 -参数 : []
2019-04-11 13:57:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 13:57:05 -==> Parameters: 
2019-04-11 13:57:05 -<==      Total: 3
2019-04-11 13:57:05 -耗时 : 40
2019-04-11 13:57:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 13:57:08 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:57:08 -HTTP METHOD : POST
2019-04-11 13:57:08 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:57:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@757c0b11, com.bootdo.moneyLog.vo.WaterLogVo@340197b7, com.bootdo.moneyLog.vo.HeatLogVo@116059a5]
2019-04-11 13:57:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:08 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:08 -<==      Total: 1
2019-04-11 13:57:08 -耗时 : 127
2019-04-11 13:57:08 -返回值 : com.bootdo.charts.vo.CountDayVo@55445063
2019-04-11 13:57:16 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:57:16 -HTTP METHOD : POST
2019-04-11 13:57:16 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:57:16 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@590dbde2, com.bootdo.moneyLog.vo.WaterLogVo@1403a531, com.bootdo.moneyLog.vo.HeatLogVo@6125092a]
2019-04-11 13:57:16 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:16 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:16 -<==      Total: 1
2019-04-11 13:57:16 -耗时 : 26
2019-04-11 13:57:16 -返回值 : com.bootdo.charts.vo.CountDayVo@b57ced8
2019-04-11 13:57:17 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:57:17 -HTTP METHOD : POST
2019-04-11 13:57:17 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:57:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@86ab8ee, com.bootdo.moneyLog.vo.WaterLogVo@5f82321a, com.bootdo.moneyLog.vo.HeatLogVo@1ec1f6c5]
2019-04-11 13:57:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:17 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:17 -<==      Total: 1
2019-04-11 13:57:17 -耗时 : 19
2019-04-11 13:57:17 -返回值 : com.bootdo.charts.vo.CountDayVo@c15f526
2019-04-11 13:57:18 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:57:18 -HTTP METHOD : POST
2019-04-11 13:57:18 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:57:18 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@21c8b38b, com.bootdo.moneyLog.vo.WaterLogVo@1e647577, com.bootdo.moneyLog.vo.HeatLogVo@2b83ea60]
2019-04-11 13:57:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:18 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:18 -<==      Total: 1
2019-04-11 13:57:18 -耗时 : 25
2019-04-11 13:57:18 -返回值 : com.bootdo.charts.vo.CountDayVo@6dc98cea
2019-04-11 13:57:19 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 13:57:19 -HTTP METHOD : POST
2019-04-11 13:57:19 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 13:57:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@41f4db4a, com.bootdo.moneyLog.vo.WaterLogVo@7cca8a51, com.bootdo.moneyLog.vo.HeatLogVo@61250991]
2019-04-11 13:57:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:19 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:19 -<==      Total: 1
2019-04-11 13:57:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:20 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:20 -<==      Total: 1
2019-04-11 13:57:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:20 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:20 -<==      Total: 1
2019-04-11 13:57:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:20 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:20 -<==      Total: 1
2019-04-11 13:57:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:20 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:20 -<==      Total: 1
2019-04-11 13:57:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 13:57:20 -==> Parameters: A(String), 2(String)
2019-04-11 13:57:20 -<==      Total: 1
2019-04-11 13:57:20 -耗时 : 19
2019-04-11 13:57:20 -返回值 : com.bootdo.charts.vo.CountDayVo@7fbc1bd0
2019-04-11 13:59:11 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 13:59:11 -HTTP METHOD : GET
2019-04-11 13:59:11 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 13:59:11 -参数 : []
2019-04-11 13:59:11 -耗时 : 8
2019-04-11 13:59:11 -返回值 : charts/tableDD
2019-04-11 14:02:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 10364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 14:02:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 14:02:03 -The following profiles are active: dev
2019-04-11 14:02:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@497921d0: startup date [Thu Apr 11 14:02:03 CST 2019]; root of context hierarchy
2019-04-11 14:02:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 14:02:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e253b5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$107e6a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 14:02:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 14:02:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:02:15 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 14:02:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 14:02:15 -Starting service [Tomcat]
2019-04-11 14:02:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 14:02:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 14:02:16 -Initializing Spring embedded WebApplicationContext
2019-04-11 14:02:16 -Root WebApplicationContext: initialization completed in 12875 ms
2019-04-11 14:02:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 14:02:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 14:02:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 14:02:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 14:02:17 -Filter xssFilter was not registered (disabled)
2019-04-11 14:02:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 14:02:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 14:02:17 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 14:02:17 -Servlet dispatcherServlet mapped to [/]
2019-04-11 14:02:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@497921d0: startup date [Thu Apr 11 14:02:03 CST 2019]; root of context hierarchy
2019-04-11 14:02:23 -Using default implementation for ThreadExecutor
2019-04-11 14:02:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 14:02:23 -Quartz Scheduler v.2.2.1 created.
2019-04-11 14:02:23 -RAMJobStore initialized.
2019-04-11 14:02:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 14:02:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 14:02:23 -Quartz scheduler version: 2.2.1
2019-04-11 14:02:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@37973b49
2019-04-11 14:02:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 14:02:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 14:02:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 14:02:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:02:28 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 14:02:28 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 14:02:28 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:02:28 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 14:02:28 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:02:28 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 14:02:28 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 14:02:28 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 14:02:28 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 14:02:28 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 14:02:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 14:02:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 14:02:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 14:02:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 14:02:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 14:02:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 14:02:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 14:02:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 14:02:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:02:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:02:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 14:02:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 14:02:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 14:02:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 14:02:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 14:02:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 14:02:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 14:02:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 14:02:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 14:02:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 14:02:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 14:02:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 14:02:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 14:02:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 14:02:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 14:02:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 14:02:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 14:02:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 14:02:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:02:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:02:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 14:02:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 14:02:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 14:02:28 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 14:02:28 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:02:28 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 14:02:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 14:02:28 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:02:28 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:02:28 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 14:02:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 14:02:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 14:02:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 14:02:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 14:02:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 14:02:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 14:02:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 14:02:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 14:02:28 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 14:02:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 14:02:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 14:02:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 14:02:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 14:02:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 14:02:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 14:02:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 14:02:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 14:02:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 14:02:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 14:02:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 14:02:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 14:02:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 14:02:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 14:02:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 14:02:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 14:02:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 14:02:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 14:02:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:02:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 14:02:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:02:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 14:02:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 14:02:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 14:02:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 14:02:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:28 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 14:02:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:02:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:02:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:02:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 14:02:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 14:02:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:02:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:02:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 14:02:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:02:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 14:02:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 14:02:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 14:02:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 14:02:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 14:02:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 14:02:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:02:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@497921d0: startup date [Thu Apr 11 14:02:03 CST 2019]; root of context hierarchy
2019-04-11 14:02:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:02:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:02:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:02:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 14:02:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 14:02:34 -Registering beans for JMX exposure on startup
2019-04-11 14:02:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 14:02:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 14:02:34 -Starting beans in phase 2147483647
2019-04-11 14:02:34 -Context refreshed
2019-04-11 14:02:35 -Found 1 custom documentation plugin(s)
2019-04-11 14:02:35 -Scanning for api listing references
2019-04-11 14:02:36 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 14:02:36 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 14:02:36 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 14:02:36 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_1
2019-04-11 14:02:36 -Generating unique operation named: addUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: editUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: listUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_2
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_3
2019-04-11 14:02:36 -Generating unique operation named: saveUsingPOST_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingPOST_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingPUT_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 14:02:36 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 14:02:36 -Generating unique operation named: addUsingGET_2
2019-04-11 14:02:36 -Generating unique operation named: editUsingGET_2
2019-04-11 14:02:36 -Generating unique operation named: listUsingGET_2
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_4
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_5
2019-04-11 14:02:36 -Generating unique operation named: saveUsingPOST_2
2019-04-11 14:02:36 -Generating unique operation named: updateUsingPOST_2
2019-04-11 14:02:36 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 14:02:36 -Generating unique operation named: addUsingGET_3
2019-04-11 14:02:36 -Generating unique operation named: editUsingGET_3
2019-04-11 14:02:36 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 14:02:36 -Generating unique operation named: listUsingGET_3
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_6
2019-04-11 14:02:36 -Generating unique operation named: removeUsingPOST_7
2019-04-11 14:02:37 -Generating unique operation named: saveUsingPOST_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingGET_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPUT_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 14:02:37 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 14:02:37 -Generating unique operation named: addUsingGET_4
2019-04-11 14:02:37 -Generating unique operation named: editUsingGET_4
2019-04-11 14:02:37 -Generating unique operation named: listUsingGET_4
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_8
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_9
2019-04-11 14:02:37 -Generating unique operation named: saveUsingPOST_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingGET_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPUT_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 14:02:37 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 14:02:37 -Generating unique operation named: ElecUsingGET_1
2019-04-11 14:02:37 -Generating unique operation named: addUsingGET_5
2019-04-11 14:02:37 -Generating unique operation named: editUsingGET_5
2019-04-11 14:02:37 -Generating unique operation named: listUsingGET_5
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_10
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_11
2019-04-11 14:02:37 -Generating unique operation named: saveUsingPOST_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingGET_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPUT_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 14:02:37 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 14:02:37 -Generating unique operation named: editUsingGET_6
2019-04-11 14:02:37 -Generating unique operation named: listUsingGET_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_6
2019-04-11 14:02:37 -Generating unique operation named: addUsingGET_6
2019-04-11 14:02:37 -Generating unique operation named: editUsingGET_7
2019-04-11 14:02:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 14:02:37 -Generating unique operation named: listUsingGET_7
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_12
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_13
2019-04-11 14:02:37 -Generating unique operation named: saveUsingPOST_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingGET_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_7
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPUT_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 14:02:37 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 14:02:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 14:02:37 -Generating unique operation named: addUsingGET_7
2019-04-11 14:02:37 -Generating unique operation named: editUsingGET_8
2019-04-11 14:02:37 -Generating unique operation named: listUsingGET_8
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_14
2019-04-11 14:02:37 -Generating unique operation named: removeUsingPOST_15
2019-04-11 14:02:37 -Generating unique operation named: saveUsingPOST_7
2019-04-11 14:02:37 -Generating unique operation named: updateUsingGET_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPOST_8
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPUT_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 14:02:37 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_8
2019-04-11 14:02:38 -Generating unique operation named: editUsingGET_9
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_9
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_16
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_17
2019-04-11 14:02:38 -Generating unique operation named: saveUsingPOST_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingGET_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPOST_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPUT_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 14:02:38 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_9
2019-04-11 14:02:38 -Generating unique operation named: editUsingGET_10
2019-04-11 14:02:38 -Generating unique operation named: infoUsingGET_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingPOST_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingPUT_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 14:02:38 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_10
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_18
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_19
2019-04-11 14:02:38 -Generating unique operation named: saveUsingPOST_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPOST_10
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_11
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_20
2019-04-11 14:02:38 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_10
2019-04-11 14:02:38 -Generating unique operation named: editUsingGET_11
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_12
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_21
2019-04-11 14:02:38 -Generating unique operation named: saveUsingPOST_10
2019-04-11 14:02:38 -Generating unique operation named: treeUsingGET_1
2019-04-11 14:02:38 -Generating unique operation named: treeUsingGET_2
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPOST_11
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_11
2019-04-11 14:02:38 -Generating unique operation named: editUsingGET_12
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_13
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_22
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_23
2019-04-11 14:02:38 -Generating unique operation named: saveUsingPOST_11
2019-04-11 14:02:38 -Generating unique operation named: updateUsingGET_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPOST_12
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPUT_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 14:02:38 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_12
2019-04-11 14:02:38 -Generating unique operation named: editUsingGET_13
2019-04-11 14:02:38 -Generating unique operation named: listUsingGET_14
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_24
2019-04-11 14:02:38 -Generating unique operation named: removeUsingPOST_25
2019-04-11 14:02:38 -Generating unique operation named: saveUsingPOST_12
2019-04-11 14:02:38 -Generating unique operation named: updateUsingGET_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPOST_13
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPUT_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 14:02:38 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 14:02:38 -Generating unique operation named: addUsingGET_13
2019-04-11 14:02:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 14:02:39 -Generating unique operation named: editUsingGET_14
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_15
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_13
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_14
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPOST_14
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_16
2019-04-11 14:02:39 -Generating unique operation named: listUsingHEAD_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingPOST_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingPUT_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingPATCH_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingDELETE_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 14:02:39 -Generating unique operation named: listUsingTRACE_1
2019-04-11 14:02:39 -Generating unique operation named: countDDUsingGET_1
2019-04-11 14:02:39 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 14:02:39 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 14:02:39 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 14:02:39 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 14:02:39 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 14:02:39 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 14:02:39 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 14:02:39 -Generating unique operation named: addUsingGET_14
2019-04-11 14:02:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 14:02:39 -Generating unique operation named: editUsingGET_15
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_17
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_26
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_15
2019-04-11 14:02:39 -Generating unique operation named: treeUsingGET_3
2019-04-11 14:02:39 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPOST_15
2019-04-11 14:02:39 -Generating unique operation named: addUsingGET_15
2019-04-11 14:02:39 -Generating unique operation named: editUsingGET_16
2019-04-11 14:02:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_18
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_27
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_28
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_16
2019-04-11 14:02:39 -Generating unique operation named: updateUsingGET_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPOST_16
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPUT_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 14:02:39 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 14:02:39 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 14:02:39 -Generating unique operation named: addUsingGET_16
2019-04-11 14:02:39 -Generating unique operation named: editUsingGET_17
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_19
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_29
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_30
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_17
2019-04-11 14:02:39 -Generating unique operation named: updateUsingGET_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPOST_17
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPUT_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 14:02:39 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 14:02:39 -Generating unique operation named: addUsingGET_17
2019-04-11 14:02:39 -Generating unique operation named: editUsingGET_18
2019-04-11 14:02:39 -Generating unique operation named: listUsingGET_20
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_31
2019-04-11 14:02:39 -Generating unique operation named: removeUsingPOST_32
2019-04-11 14:02:39 -Generating unique operation named: saveUsingPOST_18
2019-04-11 14:02:39 -Generating unique operation named: updateUsingGET_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPOST_18
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPUT_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 14:02:39 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 14:02:39 -Starting Quartz Scheduler now
2019-04-11 14:02:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 14:02:39 -Starting...
2019-04-11 14:02:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 14:02:39 -Started.
2019-04-11 14:02:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 14:02:40 -Using a shared selector for servlet write/read
2019-04-11 14:02:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 14:02:40 -Started BootdoApplication in 39.159 seconds (JVM running for 41.794)
2019-04-11 14:02:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 14:02:40 -==> Parameters: 
2019-04-11 14:02:40 -<==      Total: 1
2019-04-11 14:02:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 14:02:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 14:02:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-04-11 14:02:52 -Enabling session validation scheduler...
2019-04-11 14:02:53 -请求地址 : http://localhost:8081/login;JSESSIONID=050386c0-cce3-4307-bdc9-b7d9f5e34eb5
2019-04-11 14:02:53 -HTTP METHOD : GET
2019-04-11 14:02:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:02:53 -参数 : [{}]
2019-04-11 14:02:53 -耗时 : 10
2019-04-11 14:02:53 -返回值 : login
2019-04-11 14:02:55 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:02:55 -HTTP METHOD : GET
2019-04-11 14:02:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:02:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6289d1f6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@113f3676]
2019-04-11 14:02:59 -3861
2019-04-11 14:02:59 -耗时 : 4088
2019-04-11 14:02:59 -返回值 : null
2019-04-11 14:03:05 -请求地址 : http://localhost:8081/login
2019-04-11 14:03:05 -HTTP METHOD : POST
2019-04-11 14:03:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 14:03:05 -参数 : [admin, 111111, 3861, org.apache.shiro.web.servlet.ShiroHttpServletRequest@215cfa7e]
2019-04-11 14:03:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 14:03:05 -==> Parameters: admin(String)
2019-04-11 14:03:05 -<==      Total: 1
2019-04-11 14:03:05 -耗时 : 184
2019-04-11 14:03:05 -返回值 : {msg=操作成功, code=0}
2019-04-11 14:03:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 14:03:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:03:05 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 14:03:05.87(Timestamp)
2019-04-11 14:03:06 -请求地址 : http://localhost:8081/index
2019-04-11 14:03:06 -HTTP METHOD : GET
2019-04-11 14:03:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:03:06 -参数 : [{}]
2019-04-11 14:03:06 -<==    Updates: 1
2019-04-11 14:03:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:03:06 -==> Parameters: 1(Long)
2019-04-11 14:03:06 -<==      Total: 48
2019-04-11 14:03:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:03:06 -==> Parameters: 138(Long)
2019-04-11 14:03:06 -<==      Total: 1
2019-04-11 14:03:06 -耗时 : 431
2019-04-11 14:03:06 -返回值 : index_v1
2019-04-11 14:03:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:03:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 431(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:03:06.652(Timestamp)
2019-04-11 14:03:06 -<==    Updates: 1
2019-04-11 14:03:07 -请求地址 : http://localhost:8081/main
2019-04-11 14:03:07 -HTTP METHOD : GET
2019-04-11 14:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:03:07 -参数 : []
2019-04-11 14:03:07 -耗时 : 1
2019-04-11 14:03:07 -返回值 : main
2019-04-11 14:03:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:03:07 -HTTP METHOD : GET
2019-04-11 14:03:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:03:07 -参数 : []
2019-04-11 14:03:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:03:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:03:07 -<==      Total: 0
2019-04-11 14:03:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:03:07 -请求地址 : http://localhost:8081/main
2019-04-11 14:03:07 -HTTP METHOD : GET
2019-04-11 14:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:03:07 -参数 : []
2019-04-11 14:03:07 -耗时 : 0
2019-04-11 14:03:07 -返回值 : main
2019-04-11 14:03:07 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:03:07 -<==      Total: 1
2019-04-11 14:03:07 -耗时 : 141
2019-04-11 14:03:07 -返回值 : com.bootdo.common.utils.PageUtils@5bbf08c3
2019-04-11 14:03:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 14:03:09 -==> Parameters: 1(Long)
2019-04-11 14:03:09 -<==      Total: 92
2019-04-11 14:03:09 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 14:03:09 -HTTP METHOD : GET
2019-04-11 14:03:09 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 14:03:09 -参数 : []
2019-04-11 14:03:09 -耗时 : 23
2019-04-11 14:03:09 -返回值 : charts/countDD
2019-04-11 14:03:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:03:11 -HTTP METHOD : GET
2019-04-11 14:03:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:03:11 -参数 : [userType]
2019-04-11 14:03:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:03:11 -==> Parameters: userType(String)
2019-04-11 14:03:11 -<==      Total: 4
2019-04-11 14:03:11 -耗时 : 199
2019-04-11 14:03:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:03:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:03:17 -HTTP METHOD : GET
2019-04-11 14:03:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:03:17 -参数 : []
2019-04-11 14:03:17 -耗时 : 4
2019-04-11 14:03:17 -返回值 : system/dept/deptTree
2019-04-11 14:03:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:03:17 -HTTP METHOD : GET
2019-04-11 14:03:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:03:17 -参数 : []
2019-04-11 14:03:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:03:17 -==> Parameters: 
2019-04-11 14:03:17 -<==      Total: 3
2019-04-11 14:03:17 -耗时 : 34
2019-04-11 14:03:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:03:19 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 14:03:19 -HTTP METHOD : POST
2019-04-11 14:03:19 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 14:03:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@26025563, com.bootdo.moneyLog.vo.WaterLogVo@91cbf72, com.bootdo.moneyLog.vo.HeatLogVo@712d8a27]
2019-04-11 14:03:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:19 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:19 -<==      Total: 1
2019-04-11 14:03:19 -耗时 : 143
2019-04-11 14:03:19 -返回值 : com.bootdo.charts.vo.CountDayVo@3f9594c8
2019-04-11 14:03:22 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 14:03:22 -HTTP METHOD : POST
2019-04-11 14:03:22 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 14:03:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4abc7705, com.bootdo.moneyLog.vo.WaterLogVo@355a4f1, com.bootdo.moneyLog.vo.HeatLogVo@3dc8dc45]
2019-04-11 14:03:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:03:22 -==> Parameters: A(String), 2(String)
2019-04-11 14:03:22 -<==      Total: 1
2019-04-11 14:03:22 -耗时 : 32
2019-04-11 14:03:22 -返回值 : com.bootdo.charts.vo.CountDayVo@57c9ec0c
2019-04-11 14:03:29 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-11 14:03:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 5680 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 14:03:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 14:03:55 -The following profiles are active: dev
2019-04-11 14:03:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Thu Apr 11 14:03:55 CST 2019]; root of context hierarchy
2019-04-11 14:04:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 14:04:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1dc306f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$101c3599] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 14:04:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 14:04:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:04:09 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 14:04:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 14:04:09 -Starting service [Tomcat]
2019-04-11 14:04:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 14:04:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 14:04:10 -Initializing Spring embedded WebApplicationContext
2019-04-11 14:04:10 -Root WebApplicationContext: initialization completed in 14370 ms
2019-04-11 14:04:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 14:04:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 14:04:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 14:04:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 14:04:11 -Filter xssFilter was not registered (disabled)
2019-04-11 14:04:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 14:04:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 14:04:11 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 14:04:11 -Servlet dispatcherServlet mapped to [/]
2019-04-11 14:04:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Thu Apr 11 14:03:55 CST 2019]; root of context hierarchy
2019-04-11 14:04:18 -Using default implementation for ThreadExecutor
2019-04-11 14:04:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 14:04:18 -Quartz Scheduler v.2.2.1 created.
2019-04-11 14:04:18 -RAMJobStore initialized.
2019-04-11 14:04:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 14:04:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 14:04:18 -Quartz scheduler version: 2.2.1
2019-04-11 14:04:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7944c323
2019-04-11 14:04:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 14:04:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 14:04:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 14:04:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:04:25 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 14:04:25 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 14:04:25 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:04:25 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 14:04:25 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:04:25 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 14:04:25 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 14:04:25 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 14:04:25 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 14:04:25 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 14:04:25 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 14:04:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 14:04:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 14:04:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 14:04:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 14:04:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 14:04:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:04:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:04:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 14:04:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 14:04:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 14:04:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 14:04:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 14:04:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 14:04:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 14:04:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 14:04:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 14:04:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 14:04:25 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 14:04:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 14:04:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 14:04:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 14:04:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 14:04:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 14:04:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 14:04:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:04:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:04:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 14:04:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 14:04:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 14:04:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 14:04:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 14:04:25 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:04:25 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:04:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 14:04:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 14:04:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:04:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 14:04:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 14:04:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 14:04:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 14:04:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 14:04:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 14:04:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 14:04:25 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 14:04:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 14:04:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 14:04:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 14:04:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 14:04:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 14:04:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 14:04:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 14:04:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 14:04:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 14:04:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 14:04:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 14:04:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 14:04:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 14:04:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 14:04:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 14:04:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 14:04:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 14:04:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 14:04:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 14:04:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:04:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:04:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 14:04:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 14:04:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 14:04:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 14:04:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 14:04:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:04:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:04:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 14:04:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 14:04:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:04:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:04:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 14:04:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 14:04:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 14:04:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 14:04:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 14:04:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 14:04:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:04:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Thu Apr 11 14:03:55 CST 2019]; root of context hierarchy
2019-04-11 14:04:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:04:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:04:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:04:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 14:04:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 14:04:34 -Registering beans for JMX exposure on startup
2019-04-11 14:04:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 14:04:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 14:04:34 -Starting beans in phase 2147483647
2019-04-11 14:04:34 -Context refreshed
2019-04-11 14:04:35 -Found 1 custom documentation plugin(s)
2019-04-11 14:04:35 -Scanning for api listing references
2019-04-11 14:04:36 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 14:04:36 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 14:04:36 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 14:04:36 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 14:04:36 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 14:04:36 -Generating unique operation named: removeUsingPOST_1
2019-04-11 14:04:37 -Generating unique operation named: addUsingGET_1
2019-04-11 14:04:37 -Generating unique operation named: editUsingGET_1
2019-04-11 14:04:37 -Generating unique operation named: listUsingGET_1
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_2
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_3
2019-04-11 14:04:37 -Generating unique operation named: saveUsingPOST_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingGET_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingPOST_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingPUT_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 14:04:37 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 14:04:37 -Generating unique operation named: addUsingGET_2
2019-04-11 14:04:37 -Generating unique operation named: editUsingGET_2
2019-04-11 14:04:37 -Generating unique operation named: listUsingGET_2
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_4
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_5
2019-04-11 14:04:37 -Generating unique operation named: saveUsingPOST_2
2019-04-11 14:04:37 -Generating unique operation named: updateUsingPOST_2
2019-04-11 14:04:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 14:04:37 -Generating unique operation named: addUsingGET_3
2019-04-11 14:04:37 -Generating unique operation named: editUsingGET_3
2019-04-11 14:04:37 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 14:04:37 -Generating unique operation named: listUsingGET_3
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_6
2019-04-11 14:04:37 -Generating unique operation named: removeUsingPOST_7
2019-04-11 14:04:37 -Generating unique operation named: saveUsingPOST_3
2019-04-11 14:04:37 -Generating unique operation named: updateUsingGET_2
2019-04-11 14:04:37 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPOST_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPUT_2
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 14:04:38 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 14:04:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 14:04:38 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 14:04:38 -Generating unique operation named: addUsingGET_4
2019-04-11 14:04:38 -Generating unique operation named: editUsingGET_4
2019-04-11 14:04:38 -Generating unique operation named: listUsingGET_4
2019-04-11 14:04:38 -Generating unique operation named: removeUsingPOST_8
2019-04-11 14:04:38 -Generating unique operation named: removeUsingPOST_9
2019-04-11 14:04:38 -Generating unique operation named: saveUsingPOST_4
2019-04-11 14:04:38 -Generating unique operation named: updateUsingGET_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPOST_4
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPUT_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 14:04:38 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 14:04:38 -Generating unique operation named: ElecUsingGET_1
2019-04-11 14:04:38 -Generating unique operation named: addUsingGET_5
2019-04-11 14:04:38 -Generating unique operation named: editUsingGET_5
2019-04-11 14:04:38 -Generating unique operation named: listUsingGET_5
2019-04-11 14:04:38 -Generating unique operation named: removeUsingPOST_10
2019-04-11 14:04:38 -Generating unique operation named: removeUsingPOST_11
2019-04-11 14:04:38 -Generating unique operation named: saveUsingPOST_5
2019-04-11 14:04:38 -Generating unique operation named: updateUsingGET_4
2019-04-11 14:04:38 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPOST_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPUT_4
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 14:04:39 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 14:04:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 14:04:39 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 14:04:39 -Generating unique operation named: editUsingGET_6
2019-04-11 14:04:39 -Generating unique operation named: listUsingGET_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPOST_6
2019-04-11 14:04:39 -Generating unique operation named: addUsingGET_6
2019-04-11 14:04:39 -Generating unique operation named: editUsingGET_7
2019-04-11 14:04:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 14:04:39 -Generating unique operation named: listUsingGET_7
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_12
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_13
2019-04-11 14:04:39 -Generating unique operation named: saveUsingPOST_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingGET_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPOST_7
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPUT_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 14:04:39 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 14:04:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 14:04:39 -Generating unique operation named: addUsingGET_7
2019-04-11 14:04:39 -Generating unique operation named: editUsingGET_8
2019-04-11 14:04:39 -Generating unique operation named: listUsingGET_8
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_14
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_15
2019-04-11 14:04:39 -Generating unique operation named: saveUsingPOST_7
2019-04-11 14:04:39 -Generating unique operation named: updateUsingGET_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPOST_8
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPUT_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 14:04:39 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 14:04:39 -Generating unique operation named: addUsingGET_8
2019-04-11 14:04:39 -Generating unique operation named: editUsingGET_9
2019-04-11 14:04:39 -Generating unique operation named: listUsingGET_9
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_16
2019-04-11 14:04:39 -Generating unique operation named: removeUsingPOST_17
2019-04-11 14:04:39 -Generating unique operation named: saveUsingPOST_8
2019-04-11 14:04:40 -Generating unique operation named: updateUsingGET_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingPOST_9
2019-04-11 14:04:40 -Generating unique operation named: updateUsingPUT_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 14:04:40 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 14:04:40 -Generating unique operation named: addUsingGET_9
2019-04-11 14:04:40 -Generating unique operation named: editUsingGET_10
2019-04-11 14:04:40 -Generating unique operation named: infoUsingGET_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingPOST_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingPUT_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 14:04:40 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 14:04:40 -Generating unique operation named: listUsingGET_10
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_18
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_19
2019-04-11 14:04:40 -Generating unique operation named: saveUsingPOST_9
2019-04-11 14:04:40 -Generating unique operation named: updateUsingPOST_10
2019-04-11 14:04:40 -Generating unique operation named: listUsingGET_11
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_20
2019-04-11 14:04:40 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 14:04:40 -Generating unique operation named: addUsingGET_10
2019-04-11 14:04:40 -Generating unique operation named: editUsingGET_11
2019-04-11 14:04:40 -Generating unique operation named: listUsingGET_12
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_21
2019-04-11 14:04:40 -Generating unique operation named: saveUsingPOST_10
2019-04-11 14:04:40 -Generating unique operation named: treeUsingGET_1
2019-04-11 14:04:40 -Generating unique operation named: treeUsingGET_2
2019-04-11 14:04:40 -Generating unique operation named: updateUsingPOST_11
2019-04-11 14:04:40 -Generating unique operation named: addUsingGET_11
2019-04-11 14:04:40 -Generating unique operation named: editUsingGET_12
2019-04-11 14:04:40 -Generating unique operation named: listUsingGET_13
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_22
2019-04-11 14:04:40 -Generating unique operation named: removeUsingPOST_23
2019-04-11 14:04:41 -Generating unique operation named: saveUsingPOST_11
2019-04-11 14:04:41 -Generating unique operation named: updateUsingGET_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPOST_12
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPUT_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 14:04:41 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 14:04:41 -Generating unique operation named: addUsingGET_12
2019-04-11 14:04:41 -Generating unique operation named: editUsingGET_13
2019-04-11 14:04:41 -Generating unique operation named: listUsingGET_14
2019-04-11 14:04:41 -Generating unique operation named: removeUsingPOST_24
2019-04-11 14:04:41 -Generating unique operation named: removeUsingPOST_25
2019-04-11 14:04:41 -Generating unique operation named: saveUsingPOST_12
2019-04-11 14:04:41 -Generating unique operation named: updateUsingGET_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPOST_13
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPUT_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 14:04:41 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 14:04:41 -Generating unique operation named: addUsingGET_13
2019-04-11 14:04:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 14:04:41 -Generating unique operation named: editUsingGET_14
2019-04-11 14:04:41 -Generating unique operation named: listUsingGET_15
2019-04-11 14:04:41 -Generating unique operation named: saveUsingPOST_13
2019-04-11 14:04:41 -Generating unique operation named: saveUsingPOST_14
2019-04-11 14:04:41 -Generating unique operation named: updateUsingPOST_14
2019-04-11 14:04:41 -Generating unique operation named: listUsingGET_16
2019-04-11 14:04:41 -Generating unique operation named: listUsingHEAD_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingPOST_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingPUT_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingPATCH_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingDELETE_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 14:04:41 -Generating unique operation named: listUsingTRACE_1
2019-04-11 14:04:41 -Generating unique operation named: countDDUsingGET_1
2019-04-11 14:04:41 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 14:04:41 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 14:04:41 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 14:04:41 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 14:04:41 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 14:04:41 -Generating unique operation named: exprotElecLogUsingGET_6
2019-04-11 14:04:41 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 14:04:41 -Generating unique operation named: addUsingGET_14
2019-04-11 14:04:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 14:04:42 -Generating unique operation named: editUsingGET_15
2019-04-11 14:04:42 -Generating unique operation named: listUsingGET_17
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_26
2019-04-11 14:04:42 -Generating unique operation named: saveUsingPOST_15
2019-04-11 14:04:42 -Generating unique operation named: treeUsingGET_3
2019-04-11 14:04:42 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPOST_15
2019-04-11 14:04:42 -Generating unique operation named: addUsingGET_15
2019-04-11 14:04:42 -Generating unique operation named: editUsingGET_16
2019-04-11 14:04:42 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 14:04:42 -Generating unique operation named: listUsingGET_18
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_27
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_28
2019-04-11 14:04:42 -Generating unique operation named: saveUsingPOST_16
2019-04-11 14:04:42 -Generating unique operation named: updateUsingGET_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPOST_16
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPUT_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 14:04:42 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 14:04:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 14:04:42 -Generating unique operation named: addUsingGET_16
2019-04-11 14:04:42 -Generating unique operation named: editUsingGET_17
2019-04-11 14:04:42 -Generating unique operation named: listUsingGET_19
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_29
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_30
2019-04-11 14:04:42 -Generating unique operation named: saveUsingPOST_17
2019-04-11 14:04:42 -Generating unique operation named: updateUsingGET_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPOST_17
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPUT_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 14:04:42 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 14:04:42 -Generating unique operation named: addUsingGET_17
2019-04-11 14:04:42 -Generating unique operation named: editUsingGET_18
2019-04-11 14:04:42 -Generating unique operation named: listUsingGET_20
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_31
2019-04-11 14:04:42 -Generating unique operation named: removeUsingPOST_32
2019-04-11 14:04:42 -Generating unique operation named: saveUsingPOST_18
2019-04-11 14:04:42 -Generating unique operation named: updateUsingGET_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPOST_18
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPUT_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 14:04:42 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 14:04:43 -Starting Quartz Scheduler now
2019-04-11 14:04:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 14:04:43 -Starting...
2019-04-11 14:04:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 14:04:43 -Started.
2019-04-11 14:04:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 14:04:45 -Using a shared selector for servlet write/read
2019-04-11 14:04:45 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 14:04:45 -Started BootdoApplication in 52.392 seconds (JVM running for 55.54)
2019-04-11 14:04:45 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 14:04:45 -==> Parameters: 
2019-04-11 14:04:46 -<==      Total: 1
2019-04-11 14:05:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 14:05:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 14:05:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-04-11 14:05:15 -Enabling session validation scheduler...
2019-04-11 14:05:15 -请求地址 : http://localhost:8081/login;JSESSIONID=335f7ca4-3aa5-4a49-abb5-cc0be5fc2dd6
2019-04-11 14:05:15 -HTTP METHOD : GET
2019-04-11 14:05:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:05:15 -参数 : [{}]
2019-04-11 14:05:15 -耗时 : 7
2019-04-11 14:05:15 -返回值 : login
2019-04-11 14:05:17 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:05:17 -HTTP METHOD : GET
2019-04-11 14:05:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:05:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7fda454e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6058837e]
2019-04-11 14:05:17 -3448
2019-04-11 14:05:17 -耗时 : 678
2019-04-11 14:05:17 -返回值 : null
2019-04-11 14:05:22 -请求地址 : http://localhost:8081/login
2019-04-11 14:05:22 -HTTP METHOD : POST
2019-04-11 14:05:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 14:05:22 -参数 : [admin, 111111, 3448, org.apache.shiro.web.servlet.ShiroHttpServletRequest@33b7b49f]
2019-04-11 14:05:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 14:05:22 -==> Parameters: admin(String)
2019-04-11 14:05:22 -<==      Total: 1
2019-04-11 14:05:22 -耗时 : 179
2019-04-11 14:05:22 -返回值 : {msg=操作成功, code=0}
2019-04-11 14:05:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 14:05:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:05:23 -==> Parameters: 1(Long), admin(String), 登录(String), 179(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 14:05:23.041(Timestamp)
2019-04-11 14:05:23 -请求地址 : http://localhost:8081/index
2019-04-11 14:05:23 -HTTP METHOD : GET
2019-04-11 14:05:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:05:23 -参数 : [{}]
2019-04-11 14:05:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:05:23 -==> Parameters: 1(Long)
2019-04-11 14:05:23 -<==      Total: 48
2019-04-11 14:05:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:05:23 -==> Parameters: 138(Long)
2019-04-11 14:05:23 -<==      Total: 1
2019-04-11 14:05:23 -耗时 : 347
2019-04-11 14:05:23 -返回值 : index_v1
2019-04-11 14:05:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:05:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 348(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:05:23.539(Timestamp)
2019-04-11 14:05:23 -<==    Updates: 1
2019-04-11 14:05:23 -<==    Updates: 1
2019-04-11 14:05:23 -请求地址 : http://localhost:8081/main
2019-04-11 14:05:23 -HTTP METHOD : GET
2019-04-11 14:05:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:05:23 -参数 : []
2019-04-11 14:05:23 -耗时 : 0
2019-04-11 14:05:23 -返回值 : main
2019-04-11 14:05:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:05:23 -HTTP METHOD : GET
2019-04-11 14:05:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:05:23 -参数 : []
2019-04-11 14:05:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:05:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:05:24 -请求地址 : http://localhost:8081/main
2019-04-11 14:05:24 -HTTP METHOD : GET
2019-04-11 14:05:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:05:24 -参数 : []
2019-04-11 14:05:24 -耗时 : 1
2019-04-11 14:05:24 -返回值 : main
2019-04-11 14:05:24 -<==      Total: 0
2019-04-11 14:05:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:05:24 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:05:24 -<==      Total: 1
2019-04-11 14:05:24 -耗时 : 341
2019-04-11 14:05:24 -返回值 : com.bootdo.common.utils.PageUtils@c59ba5f
2019-04-11 14:05:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-04-11 14:05:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 14:05:36 -==> Parameters: 1(Long)
2019-04-11 14:05:36 -<==      Total: 92
2019-04-11 14:05:36 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 14:05:36 -HTTP METHOD : GET
2019-04-11 14:05:36 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 14:05:36 -参数 : []
2019-04-11 14:05:36 -耗时 : 20
2019-04-11 14:05:36 -返回值 : charts/countDD
2019-04-11 14:05:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:05:36 -HTTP METHOD : GET
2019-04-11 14:05:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:05:36 -参数 : [userType]
2019-04-11 14:05:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:05:36 -==> Parameters: userType(String)
2019-04-11 14:05:36 -<==      Total: 4
2019-04-11 14:05:36 -耗时 : 38
2019-04-11 14:05:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:05:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:05:48 -HTTP METHOD : GET
2019-04-11 14:05:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:05:48 -参数 : []
2019-04-11 14:05:48 -耗时 : 1
2019-04-11 14:05:48 -返回值 : system/dept/deptTree
2019-04-11 14:05:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:05:48 -HTTP METHOD : GET
2019-04-11 14:05:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:05:48 -参数 : []
2019-04-11 14:05:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:05:48 -==> Parameters: 
2019-04-11 14:05:48 -<==      Total: 3
2019-04-11 14:05:48 -耗时 : 22
2019-04-11 14:05:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:05:53 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 14:05:53 -HTTP METHOD : POST
2019-04-11 14:05:53 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 14:05:53 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2506f044, com.bootdo.moneyLog.vo.WaterLogVo@5dec8a6, com.bootdo.moneyLog.vo.HeatLogVo@39c611d6]
2019-04-11 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-11 14:07:49 -==> Parameters: A(String), 2(String)
2019-04-11 14:07:49 -<==      Total: 1
2019-04-11 14:07:49 -耗时 : 116738
2019-04-11 14:07:49 -返回值 : com.bootdo.charts.vo.CountDayVo@137d2722
2019-04-11 14:07:50 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 14:07:50 -HTTP METHOD : POST
2019-04-11 14:07:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 14:07:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6bb8f1bc, com.bootdo.moneyLog.vo.WaterLogVo@6f876813, com.bootdo.moneyLog.vo.HeatLogVo@2a85fb87]
2019-04-11 14:08:47 -请求地址 : http://localhost:8081/index
2019-04-11 14:08:47 -HTTP METHOD : GET
2019-04-11 14:08:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:08:47 -参数 : [{}]
2019-04-11 14:08:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:08:47 -==> Parameters: 1(Long)
2019-04-11 14:08:48 -<==      Total: 48
2019-04-11 14:08:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:08:48 -==> Parameters: 138(Long)
2019-04-11 14:08:48 -<==      Total: 1
2019-04-11 14:08:48 -耗时 : 146
2019-04-11 14:08:48 -返回值 : index_v1
2019-04-11 14:08:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:08:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 147(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:08:48.01(Timestamp)
2019-04-11 14:08:48 -<==    Updates: 1
2019-04-11 14:08:51 -请求地址 : http://localhost:8081/main
2019-04-11 14:08:51 -HTTP METHOD : GET
2019-04-11 14:08:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:08:51 -参数 : []
2019-04-11 14:08:51 -耗时 : 0
2019-04-11 14:08:51 -返回值 : main
2019-04-11 14:08:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:08:53 -HTTP METHOD : GET
2019-04-11 14:08:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:08:53 -参数 : []
2019-04-11 14:08:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:08:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:08:53 -<==      Total: 0
2019-04-11 14:08:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:08:53 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:08:53 -<==      Total: 1
2019-04-11 14:08:53 -耗时 : 7
2019-04-11 14:08:53 -返回值 : com.bootdo.common.utils.PageUtils@7593f9e3
2019-04-11 14:08:53 -请求地址 : http://localhost:8081/main
2019-04-11 14:08:53 -HTTP METHOD : GET
2019-04-11 14:08:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:08:53 -参数 : []
2019-04-11 14:08:53 -耗时 : 1
2019-04-11 14:08:53 -返回值 : main
2019-04-11 14:08:57 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 14:08:57 -HTTP METHOD : GET
2019-04-11 14:08:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 14:08:57 -参数 : []
2019-04-11 14:08:57 -耗时 : 1
2019-04-11 14:08:57 -返回值 : charts/countDD
2019-04-11 14:08:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:08:58 -HTTP METHOD : GET
2019-04-11 14:08:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:08:58 -参数 : [userType]
2019-04-11 14:08:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:08:58 -==> Parameters: userType(String)
2019-04-11 14:08:58 -<==      Total: 4
2019-04-11 14:08:58 -耗时 : 6
2019-04-11 14:08:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:09:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:09:10 -HTTP METHOD : GET
2019-04-11 14:09:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:09:10 -参数 : []
2019-04-11 14:09:10 -耗时 : 0
2019-04-11 14:09:10 -返回值 : system/dept/deptTree
2019-04-11 14:09:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:09:11 -HTTP METHOD : GET
2019-04-11 14:09:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:09:11 -参数 : []
2019-04-11 14:09:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:09:11 -==> Parameters: 
2019-04-11 14:09:11 -<==      Total: 3
2019-04-11 14:09:11 -耗时 : 4
2019-04-11 14:09:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:09:13 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 14:09:13 -HTTP METHOD : POST
2019-04-11 14:09:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 14:09:13 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3ba2dde9, com.bootdo.moneyLog.vo.WaterLogVo@170026a, com.bootdo.moneyLog.vo.HeatLogVo@674db696]
2019-04-11 14:09:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-11 14:09:13 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 14:09:13 -<==      Total: 1
2019-04-11 14:09:13 -耗时 : 90
2019-04-11 14:09:13 -返回值 : com.bootdo.charts.vo.CountDayVo@124e41b0
2019-04-11 14:35:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-04-11 14:44:12 -请求地址 : http://localhost:8081/login;JSESSIONID=e0c56d30-bd6f-40a9-8da5-3e78961ac3a4
2019-04-11 14:44:12 -HTTP METHOD : GET
2019-04-11 14:44:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:44:12 -参数 : [{}]
2019-04-11 14:44:12 -耗时 : 1
2019-04-11 14:44:12 -返回值 : login
2019-04-11 14:44:13 -请求地址 : http://localhost:8081/login;JSESSIONID=e0c56d30-bd6f-40a9-8da5-3e78961ac3a4
2019-04-11 14:44:13 -HTTP METHOD : GET
2019-04-11 14:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:44:13 -参数 : [{}]
2019-04-11 14:44:13 -耗时 : 1
2019-04-11 14:44:13 -返回值 : login
2019-04-11 14:44:13 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:44:13 -HTTP METHOD : GET
2019-04-11 14:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:44:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4fc99a42, org.apache.shiro.web.servlet.ShiroHttpServletResponse@17696bea]
2019-04-11 14:44:13 -5870
2019-04-11 14:44:13 -耗时 : 34
2019-04-11 14:44:13 -返回值 : null
2019-04-11 14:44:13 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:44:13 -HTTP METHOD : GET
2019-04-11 14:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:44:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@26bbd01f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5382fc75]
2019-04-11 14:44:13 -6111
2019-04-11 14:44:13 -耗时 : 55
2019-04-11 14:44:13 -返回值 : null
2019-04-11 14:44:17 -请求地址 : http://localhost:8081/login
2019-04-11 14:44:17 -HTTP METHOD : POST
2019-04-11 14:44:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 14:44:17 -参数 : [admin, 111111, 6111, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ad9f42]
2019-04-11 14:44:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 14:44:17 -==> Parameters: admin(String)
2019-04-11 14:44:17 -<==      Total: 1
2019-04-11 14:44:17 -耗时 : 24
2019-04-11 14:44:17 -返回值 : {msg=操作成功, code=0}
2019-04-11 14:44:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:44:18 -==> Parameters: 1(Long), admin(String), 登录(String), 25(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 14:44:17.995(Timestamp)
2019-04-11 14:44:18 -请求地址 : http://localhost:8081/index
2019-04-11 14:44:18 -HTTP METHOD : GET
2019-04-11 14:44:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:44:18 -参数 : [{}]
2019-04-11 14:44:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:44:18 -==> Parameters: 1(Long)
2019-04-11 14:44:18 -<==    Updates: 1
2019-04-11 14:44:18 -<==      Total: 48
2019-04-11 14:44:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:44:18 -==> Parameters: 138(Long)
2019-04-11 14:44:18 -<==      Total: 1
2019-04-11 14:44:18 -耗时 : 281
2019-04-11 14:44:18 -返回值 : index_v1
2019-04-11 14:44:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:44:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 281(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:44:18.406(Timestamp)
2019-04-11 14:44:18 -请求地址 : http://localhost:8081/main
2019-04-11 14:44:18 -HTTP METHOD : GET
2019-04-11 14:44:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:44:18 -参数 : []
2019-04-11 14:44:18 -耗时 : 1
2019-04-11 14:44:18 -返回值 : main
2019-04-11 14:44:18 -<==    Updates: 1
2019-04-11 14:44:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:44:18 -HTTP METHOD : GET
2019-04-11 14:44:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:44:18 -参数 : []
2019-04-11 14:44:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:44:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:44:18 -请求地址 : http://localhost:8081/main
2019-04-11 14:44:18 -HTTP METHOD : GET
2019-04-11 14:44:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:44:18 -参数 : []
2019-04-11 14:44:18 -耗时 : 1
2019-04-11 14:44:18 -返回值 : main
2019-04-11 14:44:18 -<==      Total: 0
2019-04-11 14:44:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:44:18 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:44:18 -<==      Total: 1
2019-04-11 14:44:18 -耗时 : 259
2019-04-11 14:44:18 -返回值 : com.bootdo.common.utils.PageUtils@3a13be8a
2019-04-11 14:44:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 14:44:22 -==> Parameters: 1(Long)
2019-04-11 14:44:22 -<==      Total: 92
2019-04-11 14:44:22 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 14:44:22 -HTTP METHOD : GET
2019-04-11 14:44:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 14:44:22 -参数 : []
2019-04-11 14:44:22 -耗时 : 31
2019-04-11 14:44:22 -返回值 : charts/tableDD
2019-04-11 14:44:23 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 14:44:23 -HTTP METHOD : GET
2019-04-11 14:44:23 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 14:44:23 -参数 : []
2019-04-11 14:44:23 -耗时 : 20
2019-04-11 14:44:23 -返回值 : charts/countMM
2019-04-11 14:44:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:44:23 -HTTP METHOD : GET
2019-04-11 14:44:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:44:23 -参数 : [userType]
2019-04-11 14:44:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:44:23 -==> Parameters: userType(String)
2019-04-11 14:44:23 -<==      Total: 4
2019-04-11 14:44:23 -耗时 : 38
2019-04-11 14:44:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:44:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:44:35 -HTTP METHOD : GET
2019-04-11 14:44:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:44:35 -参数 : []
2019-04-11 14:44:35 -耗时 : 0
2019-04-11 14:44:35 -返回值 : system/dept/deptTree
2019-04-11 14:44:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:44:35 -HTTP METHOD : GET
2019-04-11 14:44:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:44:35 -参数 : []
2019-04-11 14:44:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:44:35 -==> Parameters: 
2019-04-11 14:44:35 -<==      Total: 3
2019-04-11 14:44:35 -耗时 : 66
2019-04-11 14:44:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:46:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 1280 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 14:46:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 14:46:03 -The following profiles are active: dev
2019-04-11 14:46:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 14:46:03 CST 2019]; root of context hierarchy
2019-04-11 14:46:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 14:46:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8592ad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77ebdbda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 14:46:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 14:46:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:46:11 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 14:46:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 14:46:11 -Starting service [Tomcat]
2019-04-11 14:46:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 14:46:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 14:46:12 -Initializing Spring embedded WebApplicationContext
2019-04-11 14:46:12 -Root WebApplicationContext: initialization completed in 8963 ms
2019-04-11 14:46:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 14:46:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 14:46:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 14:46:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 14:46:13 -Filter xssFilter was not registered (disabled)
2019-04-11 14:46:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 14:46:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 14:46:13 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 14:46:13 -Servlet dispatcherServlet mapped to [/]
2019-04-11 14:46:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 14:46:03 CST 2019]; root of context hierarchy
2019-04-11 14:46:17 -Using default implementation for ThreadExecutor
2019-04-11 14:46:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 14:46:17 -Quartz Scheduler v.2.2.1 created.
2019-04-11 14:46:17 -RAMJobStore initialized.
2019-04-11 14:46:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 14:46:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 14:46:17 -Quartz scheduler version: 2.2.1
2019-04-11 14:46:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5170bc02
2019-04-11 14:46:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 14:46:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 14:46:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 14:46:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:46:21 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 14:46:21 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 14:46:21 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 14:46:21 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:46:21 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:46:21 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 14:46:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 14:46:21 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 14:46:21 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 14:46:21 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 14:46:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 14:46:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 14:46:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 14:46:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 14:46:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 14:46:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:46:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 14:46:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:46:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 14:46:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 14:46:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 14:46:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 14:46:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 14:46:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 14:46:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 14:46:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 14:46:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 14:46:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 14:46:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 14:46:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 14:46:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 14:46:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 14:46:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 14:46:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 14:46:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:46:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:46:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 14:46:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 14:46:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 14:46:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 14:46:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:46:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:46:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 14:46:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 14:46:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 14:46:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 14:46:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 14:46:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 14:46:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 14:46:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 14:46:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 14:46:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 14:46:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 14:46:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 14:46:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 14:46:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 14:46:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 14:46:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 14:46:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 14:46:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 14:46:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 14:46:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 14:46:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 14:46:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 14:46:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 14:46:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 14:46:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 14:46:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 14:46:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 14:46:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 14:46:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 14:46:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:46:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:46:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 14:46:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 14:46:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 14:46:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 14:46:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 14:46:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 14:46:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 14:46:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:46:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:46:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:46:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 14:46:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 14:46:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:46:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 14:46:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 14:46:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 14:46:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 14:46:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 14:46:21 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 14:46:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:46:22 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 11 14:46:03 CST 2019]; root of context hierarchy
2019-04-11 14:46:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:46:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:46:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:46:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 14:46:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 14:46:25 -Registering beans for JMX exposure on startup
2019-04-11 14:46:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 14:46:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 14:46:25 -Starting beans in phase 2147483647
2019-04-11 14:46:25 -Context refreshed
2019-04-11 14:46:26 -Found 1 custom documentation plugin(s)
2019-04-11 14:46:27 -Scanning for api listing references
2019-04-11 14:46:31 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 14:46:31 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 14:46:32 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_1
2019-04-11 14:46:32 -Generating unique operation named: addUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: editUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: listUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_2
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_3
2019-04-11 14:46:32 -Generating unique operation named: saveUsingPOST_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPOST_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPUT_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 14:46:32 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 14:46:32 -Generating unique operation named: addUsingGET_2
2019-04-11 14:46:32 -Generating unique operation named: editUsingGET_2
2019-04-11 14:46:32 -Generating unique operation named: listUsingGET_2
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_4
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_5
2019-04-11 14:46:32 -Generating unique operation named: saveUsingPOST_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPOST_2
2019-04-11 14:46:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: addUsingGET_3
2019-04-11 14:46:32 -Generating unique operation named: editUsingGET_3
2019-04-11 14:46:32 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 14:46:32 -Generating unique operation named: listUsingGET_3
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_6
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_7
2019-04-11 14:46:32 -Generating unique operation named: saveUsingPOST_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingGET_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPOST_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPUT_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 14:46:32 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 14:46:32 -Generating unique operation named: addUsingGET_4
2019-04-11 14:46:32 -Generating unique operation named: editUsingGET_4
2019-04-11 14:46:32 -Generating unique operation named: listUsingGET_4
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_8
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_9
2019-04-11 14:46:32 -Generating unique operation named: saveUsingPOST_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingGET_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPOST_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPUT_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 14:46:32 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 14:46:32 -Generating unique operation named: ElecUsingGET_1
2019-04-11 14:46:32 -Generating unique operation named: addUsingGET_5
2019-04-11 14:46:32 -Generating unique operation named: editUsingGET_5
2019-04-11 14:46:32 -Generating unique operation named: listUsingGET_5
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_10
2019-04-11 14:46:32 -Generating unique operation named: removeUsingPOST_11
2019-04-11 14:46:32 -Generating unique operation named: saveUsingPOST_5
2019-04-11 14:46:32 -Generating unique operation named: updateUsingGET_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPOST_5
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPUT_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 14:46:32 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_6
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_6
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_6
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_7
2019-04-11 14:46:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_7
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_12
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_13
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingGET_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPUT_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 14:46:33 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 14:46:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_7
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_8
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_8
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_14
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_15
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingGET_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPUT_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 14:46:33 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_8
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_9
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_9
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_16
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_17
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingGET_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPUT_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 14:46:33 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_9
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_10
2019-04-11 14:46:33 -Generating unique operation named: infoUsingGET_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingPOST_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingPUT_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 14:46:33 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_10
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_18
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_19
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_10
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_11
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_20
2019-04-11 14:46:33 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_10
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_11
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_12
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_21
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_10
2019-04-11 14:46:33 -Generating unique operation named: treeUsingGET_1
2019-04-11 14:46:33 -Generating unique operation named: treeUsingGET_2
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_11
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_11
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_12
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_13
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_22
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_23
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_11
2019-04-11 14:46:33 -Generating unique operation named: updateUsingGET_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_12
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPUT_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 14:46:33 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_12
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_13
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_14
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_24
2019-04-11 14:46:33 -Generating unique operation named: removeUsingPOST_25
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_12
2019-04-11 14:46:33 -Generating unique operation named: updateUsingGET_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_13
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPUT_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 14:46:33 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_13
2019-04-11 14:46:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 14:46:33 -Generating unique operation named: editUsingGET_14
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_15
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_13
2019-04-11 14:46:33 -Generating unique operation named: saveUsingPOST_14
2019-04-11 14:46:33 -Generating unique operation named: updateUsingPOST_14
2019-04-11 14:46:33 -Generating unique operation named: listUsingGET_16
2019-04-11 14:46:33 -Generating unique operation named: listUsingHEAD_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingPOST_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingPUT_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingPATCH_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingDELETE_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 14:46:33 -Generating unique operation named: listUsingTRACE_1
2019-04-11 14:46:33 -Generating unique operation named: countDDUsingGET_1
2019-04-11 14:46:33 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 14:46:33 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 14:46:33 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 14:46:33 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 14:46:33 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 14:46:33 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 14:46:33 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 14:46:33 -Generating unique operation named: addUsingGET_14
2019-04-11 14:46:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 14:46:34 -Generating unique operation named: editUsingGET_15
2019-04-11 14:46:34 -Generating unique operation named: listUsingGET_17
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_26
2019-04-11 14:46:34 -Generating unique operation named: saveUsingPOST_15
2019-04-11 14:46:34 -Generating unique operation named: treeUsingGET_3
2019-04-11 14:46:34 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPOST_15
2019-04-11 14:46:34 -Generating unique operation named: addUsingGET_15
2019-04-11 14:46:34 -Generating unique operation named: editUsingGET_16
2019-04-11 14:46:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 14:46:34 -Generating unique operation named: listUsingGET_18
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_27
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_28
2019-04-11 14:46:34 -Generating unique operation named: saveUsingPOST_16
2019-04-11 14:46:34 -Generating unique operation named: updateUsingGET_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPOST_16
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPUT_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 14:46:34 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 14:46:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 14:46:34 -Generating unique operation named: addUsingGET_16
2019-04-11 14:46:34 -Generating unique operation named: editUsingGET_17
2019-04-11 14:46:34 -Generating unique operation named: listUsingGET_19
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_29
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_30
2019-04-11 14:46:34 -Generating unique operation named: saveUsingPOST_17
2019-04-11 14:46:34 -Generating unique operation named: updateUsingGET_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPOST_17
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPUT_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 14:46:34 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 14:46:34 -Generating unique operation named: addUsingGET_17
2019-04-11 14:46:34 -Generating unique operation named: editUsingGET_18
2019-04-11 14:46:34 -Generating unique operation named: listUsingGET_20
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_31
2019-04-11 14:46:34 -Generating unique operation named: removeUsingPOST_32
2019-04-11 14:46:34 -Generating unique operation named: saveUsingPOST_18
2019-04-11 14:46:34 -Generating unique operation named: updateUsingGET_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPOST_18
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPUT_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 14:46:34 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 14:46:34 -Starting Quartz Scheduler now
2019-04-11 14:46:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 14:46:34 -Starting...
2019-04-11 14:46:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 14:46:34 -Started.
2019-04-11 14:46:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 14:46:34 -Using a shared selector for servlet write/read
2019-04-11 14:46:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 14:46:34 -Started BootdoApplication in 32.611 seconds (JVM running for 33.509)
2019-04-11 14:46:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 14:46:34 -==> Parameters: 
2019-04-11 14:46:34 -<==      Total: 1
2019-04-11 14:46:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 14:46:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 14:46:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-04-11 14:46:40 -Enabling session validation scheduler...
2019-04-11 14:46:40 -请求地址 : http://localhost:8081/login;JSESSIONID=ec1f8138-d277-460b-8499-a04c43319808
2019-04-11 14:46:40 -HTTP METHOD : GET
2019-04-11 14:46:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:46:40 -参数 : [{}]
2019-04-11 14:46:40 -耗时 : 5
2019-04-11 14:46:40 -返回值 : login
2019-04-11 14:46:42 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:46:42 -HTTP METHOD : GET
2019-04-11 14:46:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:46:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@532844e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5717ca55]
2019-04-11 14:46:45 -2981
2019-04-11 14:46:45 -耗时 : 3183
2019-04-11 14:46:45 -返回值 : null
2019-04-11 14:46:45 -请求地址 : http://localhost:8081/login
2019-04-11 14:46:45 -HTTP METHOD : GET
2019-04-11 14:46:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:46:45 -参数 : [{}]
2019-04-11 14:46:45 -耗时 : 1
2019-04-11 14:46:45 -返回值 : login
2019-04-11 14:46:53 -请求地址 : http://localhost:8081/login
2019-04-11 14:46:53 -HTTP METHOD : POST
2019-04-11 14:46:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 14:46:53 -参数 : [admin, 111111, 2981, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43264c66]
2019-04-11 14:46:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 14:46:53 -==> Parameters: admin(String)
2019-04-11 14:46:53 -<==      Total: 1
2019-04-11 14:46:53 -耗时 : 299
2019-04-11 14:46:53 -返回值 : {msg=操作成功, code=0}
2019-04-11 14:46:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 14:46:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:46:53 -==> Parameters: 1(Long), admin(String), 登录(String), 300(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 14:46:53.854(Timestamp)
2019-04-11 14:46:53 -请求地址 : http://localhost:8081/index
2019-04-11 14:46:53 -HTTP METHOD : GET
2019-04-11 14:46:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:46:53 -参数 : [{}]
2019-04-11 14:46:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:46:54 -<==    Updates: 1
2019-04-11 14:46:54 -==> Parameters: 1(Long)
2019-04-11 14:46:54 -<==      Total: 48
2019-04-11 14:46:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:46:54 -==> Parameters: 138(Long)
2019-04-11 14:46:54 -<==      Total: 1
2019-04-11 14:46:54 -耗时 : 799
2019-04-11 14:46:54 -返回值 : index_v1
2019-04-11 14:46:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:46:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 799(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:46:54.865(Timestamp)
2019-04-11 14:46:55 -请求地址 : http://localhost:8081/main
2019-04-11 14:46:55 -HTTP METHOD : GET
2019-04-11 14:46:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:46:55 -参数 : []
2019-04-11 14:46:55 -耗时 : 0
2019-04-11 14:46:55 -返回值 : main
2019-04-11 14:46:55 -<==    Updates: 1
2019-04-11 14:46:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:46:55 -HTTP METHOD : GET
2019-04-11 14:46:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:46:55 -参数 : []
2019-04-11 14:46:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:46:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:46:55 -请求地址 : http://localhost:8081/main
2019-04-11 14:46:55 -HTTP METHOD : GET
2019-04-11 14:46:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:46:55 -参数 : []
2019-04-11 14:46:55 -耗时 : 0
2019-04-11 14:46:55 -返回值 : main
2019-04-11 14:46:55 -<==      Total: 0
2019-04-11 14:46:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:46:55 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:46:55 -<==      Total: 1
2019-04-11 14:46:55 -耗时 : 161
2019-04-11 14:46:55 -返回值 : com.bootdo.common.utils.PageUtils@199f2f77
2019-04-11 14:47:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 14:47:00 -==> Parameters: 1(Long)
2019-04-11 14:47:00 -<==      Total: 92
2019-04-11 14:47:00 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-11 14:47:00 -HTTP METHOD : GET
2019-04-11 14:47:00 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-11 14:47:00 -参数 : []
2019-04-11 14:47:00 -耗时 : 14
2019-04-11 14:47:00 -返回值 : charts/tableDD
2019-04-11 14:47:01 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 14:47:01 -HTTP METHOD : GET
2019-04-11 14:47:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 14:47:01 -参数 : []
2019-04-11 14:47:01 -耗时 : 10
2019-04-11 14:47:01 -返回值 : charts/countMM
2019-04-11 14:47:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:47:02 -HTTP METHOD : GET
2019-04-11 14:47:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:47:02 -参数 : [userType]
2019-04-11 14:47:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:47:02 -==> Parameters: userType(String)
2019-04-11 14:47:02 -<==      Total: 4
2019-04-11 14:47:02 -耗时 : 78
2019-04-11 14:47:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:47:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-11 14:48:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:48:36 -HTTP METHOD : GET
2019-04-11 14:48:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:48:36 -参数 : []
2019-04-11 14:48:36 -耗时 : 3
2019-04-11 14:48:36 -返回值 : system/dept/deptTree
2019-04-11 14:48:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:48:36 -HTTP METHOD : GET
2019-04-11 14:48:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:48:36 -参数 : []
2019-04-11 14:48:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:48:36 -==> Parameters: 
2019-04-11 14:48:36 -<==      Total: 3
2019-04-11 14:48:36 -耗时 : 33
2019-04-11 14:48:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:48:38 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 14:48:38 -HTTP METHOD : GET
2019-04-11 14:48:38 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 14:48:38 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2cad0f86, com.bootdo.moneyLog.vo.HeatLogVo@30f6698c, com.bootdo.moneyLog.vo.WaterLogVo@2cad7d49, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76b122c2]
2019-04-11 14:48:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_id = ? and user_type = ? and user_org = ? 
2019-04-11 14:48:38 -==> Parameters: undefined(String), A(String), 2(String)
2019-04-11 14:48:38 -<==      Total: 0
2019-04-11 14:48:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_id = ? and user_type = ? and user_org = ? 
2019-04-11 14:48:38 -==> Parameters: undefined(String), A(String), 2(String)
2019-04-11 14:48:39 -<==      Total: 0
2019-04-11 14:48:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_id = ? and user_type = ? and user_org = ? 
2019-04-11 14:48:39 -==> Parameters: undefined(String), A(String), 2(String)
2019-04-11 14:48:39 -<==      Total: 0
2019-04-11 14:48:39 -耗时 : 1227
2019-04-11 14:48:39 -返回值 : null
2019-04-11 14:56:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 9476 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 14:56:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 14:56:08 -The following profiles are active: dev
2019-04-11 14:56:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Thu Apr 11 14:56:08 CST 2019]; root of context hierarchy
2019-04-11 14:56:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 14:56:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7c0925e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6e62548c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 14:56:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 14:56:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 14:56:17 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 14:56:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 14:56:17 -Starting service [Tomcat]
2019-04-11 14:56:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 14:56:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 14:56:18 -Initializing Spring embedded WebApplicationContext
2019-04-11 14:56:18 -Root WebApplicationContext: initialization completed in 9892 ms
2019-04-11 14:56:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 14:56:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 14:56:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 14:56:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 14:56:19 -Filter xssFilter was not registered (disabled)
2019-04-11 14:56:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 14:56:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 14:56:19 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 14:56:19 -Servlet dispatcherServlet mapped to [/]
2019-04-11 14:56:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Thu Apr 11 14:56:08 CST 2019]; root of context hierarchy
2019-04-11 14:56:27 -Using default implementation for ThreadExecutor
2019-04-11 14:56:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 14:56:27 -Quartz Scheduler v.2.2.1 created.
2019-04-11 14:56:27 -RAMJobStore initialized.
2019-04-11 14:56:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 14:56:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 14:56:27 -Quartz scheduler version: 2.2.1
2019-04-11 14:56:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22f046b
2019-04-11 14:56:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 14:56:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 14:56:32 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:56:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 14:56:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 14:56:32 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 14:56:32 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 14:56:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:56:32 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 14:56:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 14:56:32 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 14:56:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 14:56:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 14:56:32 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 14:56:32 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 14:56:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 14:56:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 14:56:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 14:56:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 14:56:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:56:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 14:56:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 14:56:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 14:56:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 14:56:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 14:56:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 14:56:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 14:56:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 14:56:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 14:56:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 14:56:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 14:56:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 14:56:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 14:56:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 14:56:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 14:56:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 14:56:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 14:56:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 14:56:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:56:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 14:56:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 14:56:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 14:56:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 14:56:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 14:56:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:56:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 14:56:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:56:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 14:56:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 14:56:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 14:56:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 14:56:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 14:56:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 14:56:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 14:56:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 14:56:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 14:56:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 14:56:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 14:56:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 14:56:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 14:56:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 14:56:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 14:56:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 14:56:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 14:56:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 14:56:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 14:56:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 14:56:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 14:56:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 14:56:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 14:56:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 14:56:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 14:56:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 14:56:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 14:56:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:56:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 14:56:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 14:56:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 14:56:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 14:56:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 14:56:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 14:56:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 14:56:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 14:56:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 14:56:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 14:56:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 14:56:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 14:56:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 14:56:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 14:56:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 14:56:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 14:56:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 14:56:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 14:56:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 14:56:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 14:56:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:56:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Thu Apr 11 14:56:08 CST 2019]; root of context hierarchy
2019-04-11 14:56:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:56:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:56:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 14:56:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 14:56:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 14:56:38 -Registering beans for JMX exposure on startup
2019-04-11 14:56:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 14:56:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 14:56:38 -Starting beans in phase 2147483647
2019-04-11 14:56:38 -Context refreshed
2019-04-11 14:56:38 -Found 1 custom documentation plugin(s)
2019-04-11 14:56:38 -Scanning for api listing references
2019-04-11 14:56:38 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 14:56:38 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 14:56:38 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 14:56:38 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_1
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_2
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_3
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPUT_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 14:56:39 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_4
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_5
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_2
2019-04-11 14:56:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_3
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_3
2019-04-11 14:56:39 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_3
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_6
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_7
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPUT_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 14:56:39 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_4
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_4
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_4
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_8
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_9
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingGET_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPUT_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 14:56:39 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 14:56:39 -Generating unique operation named: ElecUsingGET_1
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_5
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_5
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_5
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_10
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_11
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingGET_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPUT_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 14:56:39 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_6
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_6
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_6
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_6
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_7
2019-04-11 14:56:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_7
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_12
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_13
2019-04-11 14:56:39 -Generating unique operation named: saveUsingPOST_6
2019-04-11 14:56:39 -Generating unique operation named: updateUsingGET_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPOST_7
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPUT_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 14:56:39 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 14:56:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 14:56:39 -Generating unique operation named: addUsingGET_7
2019-04-11 14:56:39 -Generating unique operation named: editUsingGET_8
2019-04-11 14:56:39 -Generating unique operation named: listUsingGET_8
2019-04-11 14:56:39 -Generating unique operation named: removeUsingPOST_14
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_15
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingGET_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPUT_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 14:56:40 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_8
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_9
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_9
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_16
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_17
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingGET_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPUT_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 14:56:40 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_9
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_10
2019-04-11 14:56:40 -Generating unique operation named: infoUsingGET_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingPOST_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingPUT_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 14:56:40 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_10
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_18
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_19
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_10
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_11
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_20
2019-04-11 14:56:40 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_10
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_11
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_12
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_21
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_10
2019-04-11 14:56:40 -Generating unique operation named: treeUsingGET_1
2019-04-11 14:56:40 -Generating unique operation named: treeUsingGET_2
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_11
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_11
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_12
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_13
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_22
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_23
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_11
2019-04-11 14:56:40 -Generating unique operation named: updateUsingGET_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_12
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPUT_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 14:56:40 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_12
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_13
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_14
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_24
2019-04-11 14:56:40 -Generating unique operation named: removeUsingPOST_25
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_12
2019-04-11 14:56:40 -Generating unique operation named: updateUsingGET_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_13
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPUT_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 14:56:40 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 14:56:40 -Generating unique operation named: addUsingGET_13
2019-04-11 14:56:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 14:56:40 -Generating unique operation named: editUsingGET_14
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_15
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_13
2019-04-11 14:56:40 -Generating unique operation named: saveUsingPOST_14
2019-04-11 14:56:40 -Generating unique operation named: updateUsingPOST_14
2019-04-11 14:56:40 -Generating unique operation named: listUsingGET_16
2019-04-11 14:56:40 -Generating unique operation named: listUsingHEAD_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingPOST_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingPUT_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingPATCH_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingDELETE_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 14:56:40 -Generating unique operation named: listUsingTRACE_1
2019-04-11 14:56:41 -Generating unique operation named: countDDUsingGET_1
2019-04-11 14:56:41 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 14:56:41 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 14:56:41 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 14:56:41 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 14:56:41 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 14:56:41 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 14:56:41 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 14:56:41 -Generating unique operation named: addUsingGET_14
2019-04-11 14:56:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 14:56:41 -Generating unique operation named: editUsingGET_15
2019-04-11 14:56:41 -Generating unique operation named: listUsingGET_17
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_26
2019-04-11 14:56:41 -Generating unique operation named: saveUsingPOST_15
2019-04-11 14:56:41 -Generating unique operation named: treeUsingGET_3
2019-04-11 14:56:41 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPOST_15
2019-04-11 14:56:41 -Generating unique operation named: addUsingGET_15
2019-04-11 14:56:41 -Generating unique operation named: editUsingGET_16
2019-04-11 14:56:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 14:56:41 -Generating unique operation named: listUsingGET_18
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_27
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_28
2019-04-11 14:56:41 -Generating unique operation named: saveUsingPOST_16
2019-04-11 14:56:41 -Generating unique operation named: updateUsingGET_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPOST_16
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPUT_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 14:56:41 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 14:56:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 14:56:41 -Generating unique operation named: addUsingGET_16
2019-04-11 14:56:41 -Generating unique operation named: editUsingGET_17
2019-04-11 14:56:41 -Generating unique operation named: listUsingGET_19
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_29
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_30
2019-04-11 14:56:41 -Generating unique operation named: saveUsingPOST_17
2019-04-11 14:56:41 -Generating unique operation named: updateUsingGET_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPOST_17
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPUT_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 14:56:41 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 14:56:41 -Generating unique operation named: addUsingGET_17
2019-04-11 14:56:41 -Generating unique operation named: editUsingGET_18
2019-04-11 14:56:41 -Generating unique operation named: listUsingGET_20
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_31
2019-04-11 14:56:41 -Generating unique operation named: removeUsingPOST_32
2019-04-11 14:56:41 -Generating unique operation named: saveUsingPOST_18
2019-04-11 14:56:41 -Generating unique operation named: updateUsingGET_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPOST_18
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPUT_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 14:56:41 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 14:56:41 -Starting Quartz Scheduler now
2019-04-11 14:56:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 14:56:41 -Starting...
2019-04-11 14:56:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 14:56:41 -Started.
2019-04-11 14:56:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 14:56:41 -Using a shared selector for servlet write/read
2019-04-11 14:56:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 14:56:42 -Started BootdoApplication in 35.984 seconds (JVM running for 38.06)
2019-04-11 14:56:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 14:56:42 -==> Parameters: 
2019-04-11 14:56:42 -<==      Total: 1
2019-04-11 14:57:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 14:57:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 14:57:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 112 ms
2019-04-11 14:57:23 -Enabling session validation scheduler...
2019-04-11 14:57:24 -请求地址 : http://localhost:8081/login;JSESSIONID=e44f0dd2-9759-46bd-990a-226ba9a397a8
2019-04-11 14:57:24 -HTTP METHOD : GET
2019-04-11 14:57:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 14:57:24 -参数 : [{}]
2019-04-11 14:57:24 -耗时 : 3
2019-04-11 14:57:24 -返回值 : login
2019-04-11 14:57:26 -请求地址 : http://localhost:8081/getVerify
2019-04-11 14:57:26 -HTTP METHOD : GET
2019-04-11 14:57:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 14:57:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@57480d73, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e590a8b]
2019-04-11 14:57:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-11 14:57:36 -1221
2019-04-11 14:57:36 -耗时 : 10121
2019-04-11 14:57:36 -返回值 : null
2019-04-11 14:57:44 -请求地址 : http://localhost:8081/login
2019-04-11 14:57:44 -HTTP METHOD : POST
2019-04-11 14:57:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 14:57:44 -参数 : [admin, 111111, 1221, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7fdcddc4]
2019-04-11 14:57:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 14:57:44 -==> Parameters: admin(String)
2019-04-11 14:57:44 -<==      Total: 1
2019-04-11 14:57:44 -耗时 : 242
2019-04-11 14:57:44 -返回值 : {msg=操作成功, code=0}
2019-04-11 14:57:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 14:57:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:57:44 -==> Parameters: 1(Long), admin(String), 登录(String), 242(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 14:57:44.66(Timestamp)
2019-04-11 14:57:44 -请求地址 : http://localhost:8081/index
2019-04-11 14:57:44 -HTTP METHOD : GET
2019-04-11 14:57:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 14:57:44 -参数 : [{}]
2019-04-11 14:57:44 -<==    Updates: 1
2019-04-11 14:57:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 14:57:45 -==> Parameters: 1(Long)
2019-04-11 14:57:45 -<==      Total: 48
2019-04-11 14:57:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 14:57:45 -==> Parameters: 138(Long)
2019-04-11 14:57:45 -<==      Total: 1
2019-04-11 14:57:45 -耗时 : 460
2019-04-11 14:57:45 -返回值 : index_v1
2019-04-11 14:57:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 14:57:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 460(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 14:57:45.43(Timestamp)
2019-04-11 14:57:45 -<==    Updates: 1
2019-04-11 14:57:45 -请求地址 : http://localhost:8081/main
2019-04-11 14:57:45 -HTTP METHOD : GET
2019-04-11 14:57:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:57:45 -参数 : []
2019-04-11 14:57:45 -耗时 : 1
2019-04-11 14:57:45 -返回值 : main
2019-04-11 14:57:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 14:57:45 -HTTP METHOD : GET
2019-04-11 14:57:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 14:57:45 -参数 : []
2019-04-11 14:57:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 14:57:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 14:57:45 -<==      Total: 0
2019-04-11 14:57:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 14:57:46 -请求地址 : http://localhost:8081/main
2019-04-11 14:57:46 -HTTP METHOD : GET
2019-04-11 14:57:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 14:57:46 -参数 : []
2019-04-11 14:57:46 -耗时 : 0
2019-04-11 14:57:46 -返回值 : main
2019-04-11 14:57:46 -==> Parameters: 1(Long), 0(String)
2019-04-11 14:57:46 -<==      Total: 1
2019-04-11 14:57:46 -耗时 : 87
2019-04-11 14:57:46 -返回值 : com.bootdo.common.utils.PageUtils@4ba0c69
2019-04-11 14:58:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 14:58:01 -==> Parameters: 1(Long)
2019-04-11 14:58:01 -<==      Total: 92
2019-04-11 14:58:01 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 14:58:01 -HTTP METHOD : GET
2019-04-11 14:58:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 14:58:01 -参数 : []
2019-04-11 14:58:01 -耗时 : 26
2019-04-11 14:58:01 -返回值 : charts/countMM
2019-04-11 14:58:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 14:58:02 -HTTP METHOD : GET
2019-04-11 14:58:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 14:58:02 -参数 : [userType]
2019-04-11 14:58:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 14:58:02 -==> Parameters: userType(String)
2019-04-11 14:58:02 -<==      Total: 4
2019-04-11 14:58:02 -耗时 : 62
2019-04-11 14:58:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 14:58:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 14:58:14 -HTTP METHOD : GET
2019-04-11 14:58:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 14:58:14 -参数 : []
2019-04-11 14:58:14 -耗时 : 1
2019-04-11 14:58:14 -返回值 : system/dept/deptTree
2019-04-11 14:58:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 14:58:15 -HTTP METHOD : GET
2019-04-11 14:58:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 14:58:15 -参数 : []
2019-04-11 14:58:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 14:58:15 -==> Parameters: 
2019-04-11 14:58:15 -<==      Total: 3
2019-04-11 14:58:15 -耗时 : 58
2019-04-11 14:58:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 14:58:33 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 14:58:33 -HTTP METHOD : GET
2019-04-11 14:58:33 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 14:58:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6f3ce05f, com.bootdo.moneyLog.vo.HeatLogVo@f7185b7, com.bootdo.moneyLog.vo.WaterLogVo@23aa5997, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c3bc692]
2019-04-11 14:59:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_id = ? and user_org = ? 
2019-04-11 14:59:46 -==> Parameters: undefined(String), 2(String)
2019-04-11 14:59:46 -<==      Total: 0
2019-04-11 14:59:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_id = ? and user_org = ? 
2019-04-11 14:59:46 -==> Parameters: undefined(String), 2(String)
2019-04-11 14:59:47 -<==      Total: 0
2019-04-11 14:59:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_id = ? and user_org = ? 
2019-04-11 14:59:48 -==> Parameters: undefined(String), 2(String)
2019-04-11 14:59:48 -<==      Total: 0
2019-04-11 14:59:52 -耗时 : 79071
2019-04-11 14:59:52 -返回值 : null
2019-04-11 15:01:51 -请求地址 : http://localhost:8081/index
2019-04-11 15:01:51 -HTTP METHOD : GET
2019-04-11 15:01:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 15:01:51 -参数 : [{}]
2019-04-11 15:01:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 15:01:51 -==> Parameters: 1(Long)
2019-04-11 15:01:51 -<==      Total: 48
2019-04-11 15:01:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 15:01:51 -==> Parameters: 138(Long)
2019-04-11 15:01:51 -<==      Total: 1
2019-04-11 15:01:51 -耗时 : 46
2019-04-11 15:01:51 -返回值 : index_v1
2019-04-11 15:01:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:01:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 46(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 15:01:51.864(Timestamp)
2019-04-11 15:01:52 -请求地址 : http://localhost:8081/main
2019-04-11 15:01:52 -HTTP METHOD : GET
2019-04-11 15:01:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:01:52 -参数 : []
2019-04-11 15:01:52 -耗时 : 0
2019-04-11 15:01:52 -返回值 : main
2019-04-11 15:01:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 15:01:52 -HTTP METHOD : GET
2019-04-11 15:01:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 15:01:52 -参数 : []
2019-04-11 15:01:52 -<==    Updates: 1
2019-04-11 15:01:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 15:01:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 15:01:52 -请求地址 : http://localhost:8081/main
2019-04-11 15:01:52 -HTTP METHOD : GET
2019-04-11 15:01:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:01:52 -参数 : []
2019-04-11 15:01:52 -耗时 : 2
2019-04-11 15:01:52 -返回值 : main
2019-04-11 15:01:52 -<==      Total: 0
2019-04-11 15:01:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 15:01:52 -==> Parameters: 1(Long), 0(String)
2019-04-11 15:01:52 -<==      Total: 1
2019-04-11 15:01:52 -耗时 : 188
2019-04-11 15:01:52 -返回值 : com.bootdo.common.utils.PageUtils@4737d7cc
2019-04-11 15:01:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-11 15:01:56 -HTTP METHOD : GET
2019-04-11 15:01:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-11 15:01:56 -参数 : []
2019-04-11 15:01:56 -耗时 : 19
2019-04-11 15:01:56 -返回值 : charts/tableElecMM
2019-04-11 15:01:57 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 15:01:57 -HTTP METHOD : GET
2019-04-11 15:01:57 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 15:01:57 -参数 : []
2019-04-11 15:01:57 -耗时 : 0
2019-04-11 15:01:57 -返回值 : charts/countMM
2019-04-11 15:01:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 15:01:58 -HTTP METHOD : GET
2019-04-11 15:01:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 15:01:58 -参数 : [userType]
2019-04-11 15:01:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 15:01:58 -==> Parameters: userType(String)
2019-04-11 15:01:58 -<==      Total: 4
2019-04-11 15:01:58 -耗时 : 115
2019-04-11 15:01:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 15:02:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 15:02:06 -HTTP METHOD : GET
2019-04-11 15:02:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 15:02:06 -参数 : []
2019-04-11 15:02:06 -耗时 : 1
2019-04-11 15:02:06 -返回值 : system/dept/deptTree
2019-04-11 15:02:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 15:02:06 -HTTP METHOD : GET
2019-04-11 15:02:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 15:02:06 -参数 : []
2019-04-11 15:02:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 15:02:06 -==> Parameters: 
2019-04-11 15:02:06 -<==      Total: 3
2019-04-11 15:02:06 -耗时 : 40
2019-04-11 15:02:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 15:02:08 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 15:02:08 -HTTP METHOD : GET
2019-04-11 15:02:08 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 15:02:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@14f2b271, com.bootdo.moneyLog.vo.HeatLogVo@5d548e9a, com.bootdo.moneyLog.vo.WaterLogVo@22990008, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7477e01a]
2019-04-11 15:02:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_id = ? and user_org = ? 
2019-04-11 15:02:08 -==> Parameters: undefined(String), 2(String)
2019-04-11 15:02:08 -<==      Total: 0
2019-04-11 15:02:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_id = ? and user_org = ? 
2019-04-11 15:02:08 -==> Parameters: undefined(String), 2(String)
2019-04-11 15:02:08 -<==      Total: 0
2019-04-11 15:02:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_id = ? and user_org = ? 
2019-04-11 15:02:08 -==> Parameters: undefined(String), 2(String)
2019-04-11 15:02:08 -<==      Total: 0
2019-04-11 15:02:08 -耗时 : 244
2019-04-11 15:02:08 -返回值 : null
2019-04-11 15:02:24 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 15:16:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 10736 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-11 15:16:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-11 15:16:23 -The following profiles are active: dev
2019-04-11 15:16:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 11 15:16:23 CST 2019]; root of context hierarchy
2019-04-11 15:16:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-11 15:16:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f4dc304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81a6f1ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-11 15:16:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-11 15:16:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-11 15:16:30 -Tomcat initialized with port(s): 8081 (http)
2019-04-11 15:16:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-11 15:16:30 -Starting service [Tomcat]
2019-04-11 15:16:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-11 15:16:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-11 15:16:31 -Initializing Spring embedded WebApplicationContext
2019-04-11 15:16:31 -Root WebApplicationContext: initialization completed in 7594 ms
2019-04-11 15:16:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-11 15:16:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-11 15:16:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-11 15:16:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-11 15:16:32 -Filter xssFilter was not registered (disabled)
2019-04-11 15:16:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-11 15:16:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-11 15:16:32 -Servlet statViewServlet mapped to [/druid/*]
2019-04-11 15:16:32 -Servlet dispatcherServlet mapped to [/]
2019-04-11 15:16:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 11 15:16:23 CST 2019]; root of context hierarchy
2019-04-11 15:16:36 -Using default implementation for ThreadExecutor
2019-04-11 15:16:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-11 15:16:36 -Quartz Scheduler v.2.2.1 created.
2019-04-11 15:16:36 -RAMJobStore initialized.
2019-04-11 15:16:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-11 15:16:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-11 15:16:36 -Quartz scheduler version: 2.2.1
2019-04-11 15:16:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c0c8f96
2019-04-11 15:16:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-11 15:16:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-11 15:16:39 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 15:16:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-11 15:16:39 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-11 15:16:39 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-11 15:16:39 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 15:16:39 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-11 15:16:39 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-11 15:16:39 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-11 15:16:39 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-11 15:16:39 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-11 15:16:39 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-11 15:16:39 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-11 15:16:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-11 15:16:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-11 15:16:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-11 15:16:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-11 15:16:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-11 15:16:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 15:16:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-11 15:16:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-11 15:16:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-11 15:16:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-11 15:16:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-11 15:16:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-11 15:16:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-11 15:16:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-11 15:16:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-11 15:16:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-11 15:16:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-11 15:16:39 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-11 15:16:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-11 15:16:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-11 15:16:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-11 15:16:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-11 15:16:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-11 15:16:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-11 15:16:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-11 15:16:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-11 15:16:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-11 15:16:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-11 15:16:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-11 15:16:39 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-11 15:16:39 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-11 15:16:39 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 15:16:39 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 15:16:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-11 15:16:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-11 15:16:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-11 15:16:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-11 15:16:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-11 15:16:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-11 15:16:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-11 15:16:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-11 15:16:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-11 15:16:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-11 15:16:39 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-11 15:16:39 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-11 15:16:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-11 15:16:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-11 15:16:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-11 15:16:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-11 15:16:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-11 15:16:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-11 15:16:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-11 15:16:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-11 15:16:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-11 15:16:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-11 15:16:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-11 15:16:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-11 15:16:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-11 15:16:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-11 15:16:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-11 15:16:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-11 15:16:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-11 15:16:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-11 15:16:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 15:16:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-11 15:16:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-11 15:16:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-11 15:16:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-11 15:16:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-11 15:16:39 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-11 15:16:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-11 15:16:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-11 15:16:39 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-11 15:16:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-11 15:16:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-11 15:16:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-11 15:16:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-11 15:16:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-11 15:16:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-11 15:16:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-11 15:16:40 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-11 15:16:40 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-11 15:16:40 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-11 15:16:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 15:16:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 11 15:16:23 CST 2019]; root of context hierarchy
2019-04-11 15:16:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 15:16:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 15:16:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-11 15:16:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-11 15:16:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-11 15:16:43 -Registering beans for JMX exposure on startup
2019-04-11 15:16:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-11 15:16:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-11 15:16:43 -Starting beans in phase 2147483647
2019-04-11 15:16:43 -Context refreshed
2019-04-11 15:16:46 -Found 1 custom documentation plugin(s)
2019-04-11 15:16:46 -Scanning for api listing references
2019-04-11 15:16:47 -Generating unique operation named: getCountDUsingPOST_1
2019-04-11 15:16:47 -Generating unique operation named: getCountDUsingPOST_2
2019-04-11 15:16:47 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: getCountDUsingPOST_3
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_1
2019-04-11 15:16:47 -Generating unique operation named: addUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: editUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: listUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_2
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_3
2019-04-11 15:16:47 -Generating unique operation named: saveUsingPOST_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingHEAD_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPOST_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPUT_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPATCH_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingDELETE_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-11 15:16:47 -Generating unique operation named: updateUsingTRACE_1
2019-04-11 15:16:47 -Generating unique operation named: addUsingGET_2
2019-04-11 15:16:47 -Generating unique operation named: editUsingGET_2
2019-04-11 15:16:47 -Generating unique operation named: listUsingGET_2
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_4
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_5
2019-04-11 15:16:47 -Generating unique operation named: saveUsingPOST_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPOST_2
2019-04-11 15:16:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: addUsingGET_3
2019-04-11 15:16:47 -Generating unique operation named: editUsingGET_3
2019-04-11 15:16:47 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-11 15:16:47 -Generating unique operation named: listUsingGET_3
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_6
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_7
2019-04-11 15:16:47 -Generating unique operation named: saveUsingPOST_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingGET_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingHEAD_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPOST_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPUT_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPATCH_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingDELETE_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-11 15:16:47 -Generating unique operation named: updateUsingTRACE_2
2019-04-11 15:16:47 -Generating unique operation named: addUsingGET_4
2019-04-11 15:16:47 -Generating unique operation named: editUsingGET_4
2019-04-11 15:16:47 -Generating unique operation named: listUsingGET_4
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_8
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_9
2019-04-11 15:16:47 -Generating unique operation named: saveUsingPOST_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingGET_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingHEAD_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPOST_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPUT_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPATCH_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingDELETE_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-11 15:16:47 -Generating unique operation named: updateUsingTRACE_3
2019-04-11 15:16:47 -Generating unique operation named: ElecUsingGET_1
2019-04-11 15:16:47 -Generating unique operation named: addUsingGET_5
2019-04-11 15:16:47 -Generating unique operation named: editUsingGET_5
2019-04-11 15:16:47 -Generating unique operation named: listUsingGET_5
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_10
2019-04-11 15:16:47 -Generating unique operation named: removeUsingPOST_11
2019-04-11 15:16:47 -Generating unique operation named: saveUsingPOST_5
2019-04-11 15:16:47 -Generating unique operation named: updateUsingGET_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingHEAD_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPOST_5
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPUT_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingPATCH_4
2019-04-11 15:16:47 -Generating unique operation named: updateUsingDELETE_4
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_4
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_6
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_6
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_6
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_7
2019-04-11 15:16:48 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_7
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_12
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_13
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingGET_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingHEAD_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPUT_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPATCH_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingDELETE_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_5
2019-04-11 15:16:48 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_7
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_8
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_8
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_14
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_15
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingGET_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingHEAD_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPUT_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPATCH_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingDELETE_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_6
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_8
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_9
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_9
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_16
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_17
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingGET_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingHEAD_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPUT_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPATCH_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingDELETE_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_7
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_9
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_10
2019-04-11 15:16:48 -Generating unique operation named: infoUsingGET_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingHEAD_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingPOST_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingPUT_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingPATCH_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingDELETE_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-11 15:16:48 -Generating unique operation named: infoUsingTRACE_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_10
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_18
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_19
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_10
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_11
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_20
2019-04-11 15:16:48 -Generating unique operation named: welcomeUsingGET_1
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_10
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_11
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_12
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_21
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_10
2019-04-11 15:16:48 -Generating unique operation named: treeUsingGET_1
2019-04-11 15:16:48 -Generating unique operation named: treeUsingGET_2
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_11
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_11
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_12
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_13
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_22
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_23
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_11
2019-04-11 15:16:48 -Generating unique operation named: updateUsingGET_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingHEAD_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_12
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPUT_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPATCH_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingDELETE_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_8
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_12
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_13
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_14
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_24
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_25
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_12
2019-04-11 15:16:48 -Generating unique operation named: updateUsingGET_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingHEAD_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_13
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPUT_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPATCH_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingDELETE_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-11 15:16:48 -Generating unique operation named: updateUsingTRACE_9
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_13
2019-04-11 15:16:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_14
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_15
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_13
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_14
2019-04-11 15:16:48 -Generating unique operation named: updateUsingPOST_14
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_16
2019-04-11 15:16:48 -Generating unique operation named: listUsingHEAD_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingPOST_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingPUT_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingPATCH_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingDELETE_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingOPTIONS_1
2019-04-11 15:16:48 -Generating unique operation named: listUsingTRACE_1
2019-04-11 15:16:48 -Generating unique operation named: countDDUsingGET_1
2019-04-11 15:16:48 -Generating unique operation named: getCountDUsingPOST_4
2019-04-11 15:16:48 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-11 15:16:48 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-11 15:16:48 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-11 15:16:48 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-11 15:16:48 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-11 15:16:48 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-11 15:16:48 -Generating unique operation named: addUsingGET_14
2019-04-11 15:16:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-11 15:16:48 -Generating unique operation named: editUsingGET_15
2019-04-11 15:16:48 -Generating unique operation named: listUsingGET_17
2019-04-11 15:16:48 -Generating unique operation named: removeUsingPOST_26
2019-04-11 15:16:48 -Generating unique operation named: saveUsingPOST_15
2019-04-11 15:16:49 -Generating unique operation named: treeUsingGET_3
2019-04-11 15:16:49 -Generating unique operation named: treeViewUsingGET_1
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPOST_15
2019-04-11 15:16:49 -Generating unique operation named: addUsingGET_15
2019-04-11 15:16:49 -Generating unique operation named: editUsingGET_16
2019-04-11 15:16:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-11 15:16:49 -Generating unique operation named: listUsingGET_18
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_27
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_28
2019-04-11 15:16:49 -Generating unique operation named: saveUsingPOST_16
2019-04-11 15:16:49 -Generating unique operation named: updateUsingGET_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingHEAD_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPOST_16
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPUT_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPATCH_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingDELETE_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-11 15:16:49 -Generating unique operation named: updateUsingTRACE_10
2019-04-11 15:16:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-11 15:16:49 -Generating unique operation named: addUsingGET_16
2019-04-11 15:16:49 -Generating unique operation named: editUsingGET_17
2019-04-11 15:16:49 -Generating unique operation named: listUsingGET_19
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_29
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_30
2019-04-11 15:16:49 -Generating unique operation named: saveUsingPOST_17
2019-04-11 15:16:49 -Generating unique operation named: updateUsingGET_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingHEAD_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPOST_17
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPUT_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPATCH_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingDELETE_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-11 15:16:49 -Generating unique operation named: updateUsingTRACE_11
2019-04-11 15:16:49 -Generating unique operation named: addUsingGET_17
2019-04-11 15:16:49 -Generating unique operation named: editUsingGET_18
2019-04-11 15:16:49 -Generating unique operation named: listUsingGET_20
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_31
2019-04-11 15:16:49 -Generating unique operation named: removeUsingPOST_32
2019-04-11 15:16:49 -Generating unique operation named: saveUsingPOST_18
2019-04-11 15:16:49 -Generating unique operation named: updateUsingGET_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingHEAD_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPOST_18
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPUT_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingPATCH_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingDELETE_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-11 15:16:49 -Generating unique operation named: updateUsingTRACE_12
2019-04-11 15:16:49 -Starting Quartz Scheduler now
2019-04-11 15:16:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-11 15:16:49 -Starting...
2019-04-11 15:16:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-11 15:16:49 -Started.
2019-04-11 15:16:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-11 15:16:49 -Using a shared selector for servlet write/read
2019-04-11 15:16:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-11 15:16:49 -Started BootdoApplication in 26.875 seconds (JVM running for 27.71)
2019-04-11 15:16:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-11 15:16:49 -==> Parameters: 
2019-04-11 15:16:49 -<==      Total: 1
2019-04-11 15:16:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-11 15:16:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-11 15:16:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-04-11 15:16:58 -Enabling session validation scheduler...
2019-04-11 15:16:58 -请求地址 : http://localhost:8081/login;JSESSIONID=80af58b0-46aa-4124-bd09-98e0f491aace
2019-04-11 15:16:58 -HTTP METHOD : GET
2019-04-11 15:16:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 15:16:58 -参数 : [{}]
2019-04-11 15:16:58 -耗时 : 5
2019-04-11 15:16:58 -返回值 : login
2019-04-11 15:17:00 -请求地址 : http://localhost:8081/getVerify
2019-04-11 15:17:00 -HTTP METHOD : GET
2019-04-11 15:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 15:17:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@72f67e4f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76c9e4c9]
2019-04-11 15:17:04 -2421
2019-04-11 15:17:04 -耗时 : 4150
2019-04-11 15:17:04 -返回值 : null
2019-04-11 15:17:34 -请求地址 : http://localhost:8081/login
2019-04-11 15:17:34 -HTTP METHOD : POST
2019-04-11 15:17:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 15:17:34 -参数 : [admin, 111111, 2421, org.apache.shiro.web.servlet.ShiroHttpServletRequest@44883412]
2019-04-11 15:17:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 15:17:34 -==> Parameters: admin(String)
2019-04-11 15:17:34 -<==      Total: 1
2019-04-11 15:17:34 -耗时 : 227
2019-04-11 15:17:34 -返回值 : {msg=操作成功, code=0}
2019-04-11 15:17:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-11 15:17:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:17:34 -==> Parameters: 1(Long), admin(String), 登录(String), 227(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 15:17:34.646(Timestamp)
2019-04-11 15:17:34 -请求地址 : http://localhost:8081/index
2019-04-11 15:17:34 -HTTP METHOD : GET
2019-04-11 15:17:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 15:17:34 -参数 : [{}]
2019-04-11 15:17:35 -<==    Updates: 1
2019-04-11 15:17:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 15:17:35 -==> Parameters: 1(Long)
2019-04-11 15:17:35 -<==      Total: 48
2019-04-11 15:17:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 15:17:35 -==> Parameters: 138(Long)
2019-04-11 15:17:35 -<==      Total: 1
2019-04-11 15:17:35 -耗时 : 497
2019-04-11 15:17:35 -返回值 : index_v1
2019-04-11 15:17:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:17:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 497(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 15:17:35.316(Timestamp)
2019-04-11 15:17:35 -请求地址 : http://localhost:8081/main
2019-04-11 15:17:35 -HTTP METHOD : GET
2019-04-11 15:17:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:17:35 -参数 : []
2019-04-11 15:17:35 -耗时 : 1
2019-04-11 15:17:35 -返回值 : main
2019-04-11 15:17:35 -<==    Updates: 1
2019-04-11 15:17:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 15:17:35 -HTTP METHOD : GET
2019-04-11 15:17:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 15:17:35 -参数 : []
2019-04-11 15:17:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 15:17:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 15:17:35 -请求地址 : http://localhost:8081/main
2019-04-11 15:17:35 -HTTP METHOD : GET
2019-04-11 15:17:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:17:35 -参数 : []
2019-04-11 15:17:35 -耗时 : 0
2019-04-11 15:17:35 -返回值 : main
2019-04-11 15:17:36 -<==      Total: 0
2019-04-11 15:17:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 15:17:36 -==> Parameters: 1(Long), 0(String)
2019-04-11 15:17:36 -<==      Total: 1
2019-04-11 15:17:36 -耗时 : 242
2019-04-11 15:17:36 -返回值 : com.bootdo.common.utils.PageUtils@786b92bd
2019-04-11 15:17:40 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-04-11 15:17:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 15:17:45 -==> Parameters: 1(Long)
2019-04-11 15:17:45 -<==      Total: 92
2019-04-11 15:17:45 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 15:17:45 -HTTP METHOD : GET
2019-04-11 15:17:45 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 15:17:45 -参数 : []
2019-04-11 15:17:45 -耗时 : 14
2019-04-11 15:17:45 -返回值 : charts/countMM
2019-04-11 15:17:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 15:17:46 -HTTP METHOD : GET
2019-04-11 15:17:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 15:17:46 -参数 : [userType]
2019-04-11 15:17:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 15:17:46 -==> Parameters: userType(String)
2019-04-11 15:17:46 -<==      Total: 4
2019-04-11 15:17:46 -耗时 : 52
2019-04-11 15:17:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 15:17:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 15:17:53 -HTTP METHOD : GET
2019-04-11 15:17:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 15:17:53 -参数 : []
2019-04-11 15:17:53 -耗时 : 0
2019-04-11 15:17:53 -返回值 : system/dept/deptTree
2019-04-11 15:17:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 15:17:53 -HTTP METHOD : GET
2019-04-11 15:17:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 15:17:53 -参数 : []
2019-04-11 15:17:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 15:17:53 -==> Parameters: 
2019-04-11 15:17:53 -<==      Total: 3
2019-04-11 15:17:53 -耗时 : 19
2019-04-11 15:17:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 15:17:55 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 15:17:55 -HTTP METHOD : GET
2019-04-11 15:17:55 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 15:17:55 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@8854db5, com.bootdo.moneyLog.vo.HeatLogVo@428e6c60, com.bootdo.moneyLog.vo.WaterLogVo@49504a7d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e10efa1]
2019-04-11 15:17:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:17:56 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:17:56 -<==      Total: 0
2019-04-11 15:17:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:17:56 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:17:56 -<==      Total: 0
2019-04-11 15:17:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:17:56 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:17:56 -<==      Total: 0
2019-04-11 15:17:57 -耗时 : 1748
2019-04-11 15:17:57 -返回值 : null
2019-04-11 15:18:29 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 15:18:29 -HTTP METHOD : GET
2019-04-11 15:18:29 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 15:18:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7553e5f7, com.bootdo.moneyLog.vo.HeatLogVo@cbd7efe, com.bootdo.moneyLog.vo.WaterLogVo@2fd9c15d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ba49311]
2019-04-11 15:18:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:18:29 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:18:29 -<==      Total: 0
2019-04-11 15:18:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:18:29 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:18:29 -<==      Total: 0
2019-04-11 15:18:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:18:29 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:18:29 -<==      Total: 0
2019-04-11 15:18:29 -耗时 : 22
2019-04-11 15:18:29 -返回值 : null
2019-04-11 15:19:55 -请求地址 : http://localhost:8081/login;JSESSIONID=6c03b45d-984d-4995-87e0-674d2af0705a
2019-04-11 15:19:55 -HTTP METHOD : GET
2019-04-11 15:19:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 15:19:55 -参数 : [{}]
2019-04-11 15:19:55 -耗时 : 1
2019-04-11 15:19:55 -返回值 : login
2019-04-11 15:19:55 -请求地址 : http://localhost:8081/getVerify
2019-04-11 15:19:55 -HTTP METHOD : GET
2019-04-11 15:19:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 15:19:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@87a471, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5dd1c53b]
2019-04-11 15:19:55 -0637
2019-04-11 15:19:55 -耗时 : 20
2019-04-11 15:19:55 -返回值 : null
2019-04-11 15:19:55 -请求地址 : http://localhost:8081/login
2019-04-11 15:19:55 -HTTP METHOD : GET
2019-04-11 15:19:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 15:19:55 -参数 : [{}]
2019-04-11 15:19:55 -耗时 : 4
2019-04-11 15:19:55 -返回值 : login
2019-04-11 15:20:01 -请求地址 : http://localhost:8081/login
2019-04-11 15:20:01 -HTTP METHOD : POST
2019-04-11 15:20:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-11 15:20:01 -参数 : [admin, 111111, 0637, org.apache.shiro.web.servlet.ShiroHttpServletRequest@213625b8]
2019-04-11 15:20:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-11 15:20:01 -==> Parameters: admin(String)
2019-04-11 15:20:01 -<==      Total: 1
2019-04-11 15:20:01 -耗时 : 16
2019-04-11 15:20:01 -返回值 : {msg=操作成功, code=0}
2019-04-11 15:20:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:20:01 -==> Parameters: 1(Long), admin(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-11 15:20:01.745(Timestamp)
2019-04-11 15:20:01 -请求地址 : http://localhost:8081/index
2019-04-11 15:20:01 -HTTP METHOD : GET
2019-04-11 15:20:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 15:20:01 -参数 : [{}]
2019-04-11 15:20:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 15:20:01 -==> Parameters: 1(Long)
2019-04-11 15:20:01 -<==    Updates: 1
2019-04-11 15:20:02 -<==      Total: 48
2019-04-11 15:20:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 15:20:02 -==> Parameters: 138(Long)
2019-04-11 15:20:02 -<==      Total: 1
2019-04-11 15:20:02 -耗时 : 550
2019-04-11 15:20:02 -返回值 : index_v1
2019-04-11 15:20:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:20:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 550(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 15:20:02.321(Timestamp)
2019-04-11 15:20:02 -请求地址 : http://localhost:8081/main
2019-04-11 15:20:02 -HTTP METHOD : GET
2019-04-11 15:20:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:20:02 -参数 : []
2019-04-11 15:20:02 -耗时 : 1
2019-04-11 15:20:02 -返回值 : main
2019-04-11 15:20:02 -<==    Updates: 1
2019-04-11 15:20:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 15:20:03 -HTTP METHOD : GET
2019-04-11 15:20:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 15:20:03 -参数 : []
2019-04-11 15:20:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 15:20:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 15:20:03 -请求地址 : http://localhost:8081/main
2019-04-11 15:20:03 -HTTP METHOD : GET
2019-04-11 15:20:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:20:03 -参数 : []
2019-04-11 15:20:03 -耗时 : 0
2019-04-11 15:20:03 -返回值 : main
2019-04-11 15:20:03 -<==      Total: 0
2019-04-11 15:20:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 15:20:03 -==> Parameters: 1(Long), 0(String)
2019-04-11 15:20:03 -<==      Total: 1
2019-04-11 15:20:03 -耗时 : 786
2019-04-11 15:20:03 -返回值 : com.bootdo.common.utils.PageUtils@205dd482
2019-04-11 15:20:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-11 15:20:16 -==> Parameters: 1(Long)
2019-04-11 15:20:16 -<==      Total: 92
2019-04-11 15:20:16 -请求地址 : http://localhost:8081/charts/countMM
2019-04-11 15:20:16 -HTTP METHOD : GET
2019-04-11 15:20:16 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-11 15:20:16 -参数 : []
2019-04-11 15:20:16 -耗时 : 1
2019-04-11 15:20:16 -返回值 : charts/countMM
2019-04-11 15:20:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 15:20:17 -HTTP METHOD : GET
2019-04-11 15:20:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 15:20:17 -参数 : [userType]
2019-04-11 15:20:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 15:20:17 -==> Parameters: userType(String)
2019-04-11 15:20:17 -<==      Total: 4
2019-04-11 15:20:17 -耗时 : 34
2019-04-11 15:20:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 15:20:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 15:20:29 -HTTP METHOD : GET
2019-04-11 15:20:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 15:20:29 -参数 : []
2019-04-11 15:20:29 -耗时 : 1
2019-04-11 15:20:29 -返回值 : system/dept/deptTree
2019-04-11 15:20:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 15:20:29 -HTTP METHOD : GET
2019-04-11 15:20:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 15:20:29 -参数 : []
2019-04-11 15:20:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 15:20:29 -==> Parameters: 
2019-04-11 15:20:29 -<==      Total: 3
2019-04-11 15:20:29 -耗时 : 39
2019-04-11 15:20:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 15:20:31 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-04-11 15:20:31 -HTTP METHOD : GET
2019-04-11 15:20:31 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-04-11 15:20:31 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@50341e60, com.bootdo.moneyLog.vo.HeatLogVo@38fad77d, com.bootdo.moneyLog.vo.WaterLogVo@1c7a8611, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b799168]
2019-04-11 15:20:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:20:31 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:20:31 -<==      Total: 0
2019-04-11 15:20:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:20:31 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:20:31 -<==      Total: 0
2019-04-11 15:20:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-04-11 15:20:31 -==> Parameters: 2019-03(String), 2(String), undefined(String)
2019-04-11 15:20:31 -<==      Total: 0
2019-04-11 15:20:31 -耗时 : 129
2019-04-11 15:20:31 -返回值 : null
2019-04-11 15:25:34 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 15:25:34 -HTTP METHOD : GET
2019-04-11 15:25:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 15:25:34 -参数 : []
2019-04-11 15:25:34 -耗时 : 14
2019-04-11 15:25:34 -返回值 : charts/countDD
2019-04-11 15:25:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 15:25:34 -HTTP METHOD : GET
2019-04-11 15:25:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 15:25:34 -参数 : [userType]
2019-04-11 15:25:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 15:25:34 -==> Parameters: userType(String)
2019-04-11 15:25:34 -<==      Total: 4
2019-04-11 15:25:34 -耗时 : 7
2019-04-11 15:25:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 15:25:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 15:25:41 -HTTP METHOD : GET
2019-04-11 15:25:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 15:25:41 -参数 : []
2019-04-11 15:25:41 -耗时 : 0
2019-04-11 15:25:41 -返回值 : system/dept/deptTree
2019-04-11 15:25:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 15:25:42 -HTTP METHOD : GET
2019-04-11 15:25:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 15:25:42 -参数 : []
2019-04-11 15:25:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 15:25:42 -==> Parameters: 
2019-04-11 15:25:42 -<==      Total: 3
2019-04-11 15:25:42 -耗时 : 5
2019-04-11 15:25:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 15:26:29 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 15:26:29 -HTTP METHOD : POST
2019-04-11 15:26:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 15:26:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5a2fc4ec, com.bootdo.moneyLog.vo.WaterLogVo@4cccc3fc, com.bootdo.moneyLog.vo.HeatLogVo@6410680e]
2019-04-11 15:26:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `create_time` = ? and user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 15:26:29 -==> Parameters: 2019-03-19(String), A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 15:26:29 -<==      Total: 1
2019-04-11 15:26:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `create_time` = ? and user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 15:26:29 -==> Parameters: 2019-03-19(String), A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 15:26:29 -<==      Total: 1
2019-04-11 15:26:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:26:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-11 15:26:29.808(Timestamp)
2019-04-11 15:26:29 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$9165565d.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 15:26:30 -<==    Updates: 1
2019-04-11 15:26:37 -请求地址 : http://localhost:8081/index
2019-04-11 15:26:37 -HTTP METHOD : GET
2019-04-11 15:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-11 15:26:37 -参数 : [{}]
2019-04-11 15:26:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-11 15:26:37 -==> Parameters: 1(Long)
2019-04-11 15:26:37 -<==      Total: 48
2019-04-11 15:26:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-11 15:26:37 -==> Parameters: 138(Long)
2019-04-11 15:26:37 -<==      Total: 1
2019-04-11 15:26:37 -耗时 : 29
2019-04-11 15:26:37 -返回值 : index_v1
2019-04-11 15:26:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:26:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-11 15:26:37.423(Timestamp)
2019-04-11 15:26:37 -请求地址 : http://localhost:8081/main
2019-04-11 15:26:37 -HTTP METHOD : GET
2019-04-11 15:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:26:37 -参数 : []
2019-04-11 15:26:37 -耗时 : 0
2019-04-11 15:26:37 -返回值 : main
2019-04-11 15:26:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-11 15:26:37 -HTTP METHOD : GET
2019-04-11 15:26:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-11 15:26:37 -参数 : []
2019-04-11 15:26:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-11 15:26:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-11 15:26:37 -<==      Total: 0
2019-04-11 15:26:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-11 15:26:37 -==> Parameters: 1(Long), 0(String)
2019-04-11 15:26:37 -<==      Total: 1
2019-04-11 15:26:37 -耗时 : 8
2019-04-11 15:26:37 -返回值 : com.bootdo.common.utils.PageUtils@9240bd2
2019-04-11 15:26:37 -<==    Updates: 1
2019-04-11 15:26:37 -请求地址 : http://localhost:8081/main
2019-04-11 15:26:37 -HTTP METHOD : GET
2019-04-11 15:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-11 15:26:37 -参数 : []
2019-04-11 15:26:37 -耗时 : 6
2019-04-11 15:26:37 -返回值 : main
2019-04-11 15:26:39 -请求地址 : http://localhost:8081/charts/countDD
2019-04-11 15:26:39 -HTTP METHOD : GET
2019-04-11 15:26:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-11 15:26:39 -参数 : []
2019-04-11 15:26:39 -耗时 : 0
2019-04-11 15:26:39 -返回值 : charts/countDD
2019-04-11 15:26:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-11 15:26:40 -HTTP METHOD : GET
2019-04-11 15:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-11 15:26:40 -参数 : [userType]
2019-04-11 15:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-11 15:26:40 -==> Parameters: userType(String)
2019-04-11 15:26:40 -<==      Total: 4
2019-04-11 15:26:40 -耗时 : 8
2019-04-11 15:26:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-11 15:26:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-11 15:26:49 -HTTP METHOD : GET
2019-04-11 15:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-11 15:26:49 -参数 : []
2019-04-11 15:26:49 -耗时 : 1
2019-04-11 15:26:49 -返回值 : system/dept/deptTree
2019-04-11 15:26:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-11 15:26:49 -HTTP METHOD : GET
2019-04-11 15:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-11 15:26:49 -参数 : []
2019-04-11 15:26:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-11 15:26:49 -==> Parameters: 
2019-04-11 15:26:49 -<==      Total: 3
2019-04-11 15:26:49 -耗时 : 8
2019-04-11 15:26:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-11 15:26:51 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-11 15:26:51 -HTTP METHOD : POST
2019-04-11 15:26:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-11 15:26:51 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7cc64e85, com.bootdo.moneyLog.vo.WaterLogVo@105ed6b, com.bootdo.moneyLog.vo.HeatLogVo@7b506988]
2019-04-11 15:26:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `create_time` = ? and user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 15:26:51 -==> Parameters: 2019-03-19(String), A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 15:26:51 -<==      Total: 1
2019-04-11 15:26:51 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `create_time` = ? and user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-11 15:26:51 -==> Parameters: 2019-03-19(String), A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-11 15:26:51 -<==      Total: 1
2019-04-11 15:26:51 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$9165565d.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-11 15:26:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-11 15:26:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-11 15:26:51.117(Timestamp)
2019-04-11 15:26:51 -<==    Updates: 1
2019-04-11 15:47:40 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-04-11 16:16:58 -Validating all active sessions...
2019-04-11 16:16:58 -Finished session validation.  [2] sessions were stopped.
2019-04-11 16:17:40 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 865]
2019-04-11 16:33:01 -请求地址 : http://localhost:8081/login;JSESSIONID=1b609f31-79f9-4b1b-99cf-a55762ab0b4b
2019-04-11 16:33:01 -HTTP METHOD : GET
2019-04-11 16:33:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 16:33:01 -参数 : [{}]
2019-04-11 16:33:01 -耗时 : 1
2019-04-11 16:33:01 -返回值 : login
2019-04-11 16:33:01 -请求地址 : http://localhost:8081/getVerify
2019-04-11 16:33:01 -HTTP METHOD : GET
2019-04-11 16:33:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-11 16:33:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3fb05688, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27041f1d]
2019-04-11 16:33:01 -1444
2019-04-11 16:33:01 -耗时 : 25
2019-04-11 16:33:01 -返回值 : null
2019-04-11 16:33:02 -请求地址 : http://localhost:8081/login
2019-04-11 16:33:02 -HTTP METHOD : GET
2019-04-11 16:33:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-11 16:33:02 -参数 : [{}]
2019-04-11 16:33:02 -耗时 : 1
2019-04-11 16:33:02 -返回值 : login
2019-04-11 16:47:40 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1263]

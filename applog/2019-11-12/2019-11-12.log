2019-11-12 10:34:45 -Starting BootdoApplication on PC-201905091110 with PID 46300 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-11-12 10:34:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-11-12 10:34:45 -The following profiles are active: dev
2019-11-12 10:34:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51e8e6e6: startup date [Tue Nov 12 10:34:46 CST 2019]; root of context hierarchy
2019-11-12 10:35:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-11-12 10:35:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e6b5c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$10c48ae8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-11-12 10:35:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-11-12 10:35:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 10:35:14 -Tomcat initialized with port(s): 8081 (http)
2019-11-12 10:35:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-11-12 10:35:14 -Starting service [Tomcat]
2019-11-12 10:35:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-11-12 10:35:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;;C:\Program Files (x86)\pycSafefile\x64;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\JetBrains\WebStorm 2019.2.4\bin;;C:\Users\Administrator\Desktop;;.]
2019-11-12 10:35:15 -Initializing Spring embedded WebApplicationContext
2019-11-12 10:35:15 -Root WebApplicationContext: initialization completed in 29501 ms
2019-11-12 10:35:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-11-12 10:35:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-11-12 10:35:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-11-12 10:35:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-11-12 10:35:17 -Filter xssFilter was not registered (disabled)
2019-11-12 10:35:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-11-12 10:35:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-11-12 10:35:17 -Servlet statViewServlet mapped to [/druid/*]
2019-11-12 10:35:17 -Servlet dispatcherServlet mapped to [/]
2019-11-12 10:35:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51e8e6e6: startup date [Tue Nov 12 10:34:46 CST 2019]; root of context hierarchy
2019-11-12 10:35:27 -Using default implementation for ThreadExecutor
2019-11-12 10:35:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-11-12 10:35:27 -Quartz Scheduler v.2.3.0 created.
2019-11-12 10:35:27 -RAMJobStore initialized.
2019-11-12 10:35:27 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-11-12 10:35:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-11-12 10:35:27 -Quartz scheduler version: 2.3.0
2019-11-12 10:35:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1203d787
2019-11-12 10:35:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-11-12 10:35:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-11-12 10:35:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-11-12 10:35:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-11-12 10:35:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-11-12 10:35:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-11-12 10:35:34 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-11-12 10:35:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:34 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-11-12 10:35:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-11-12 10:35:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-11-12 10:35:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-11-12 10:35:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-11-12 10:35:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-11-12 10:35:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-11-12 10:35:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-11-12 10:35:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-11-12 10:35:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-11-12 10:35:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-11-12 10:35:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 10:35:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 10:35:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-11-12 10:35:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-11-12 10:35:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-11-12 10:35:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-11-12 10:35:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-11-12 10:35:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-11-12 10:35:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-11-12 10:35:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-11-12 10:35:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-11-12 10:35:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-11-12 10:35:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-11-12 10:35:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-11-12 10:35:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-11-12 10:35:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-11-12 10:35:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-11-12 10:35:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-11-12 10:35:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-11-12 10:35:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-11-12 10:35:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-11-12 10:35:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-11-12 10:35:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-11-12 10:35:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-11-12 10:35:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-11-12 10:35:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-11-12 10:35:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-11-12 10:35:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-11-12 10:35:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-11-12 10:35:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-11-12 10:35:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-11-12 10:35:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-11-12 10:35:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-11-12 10:35:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-11-12 10:35:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-11-12 10:35:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-11-12 10:35:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-11-12 10:35:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-11-12 10:35:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-11-12 10:35:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-11-12 10:35:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-11-12 10:35:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-11-12 10:35:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-11-12 10:35:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-11-12 10:35:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-11-12 10:35:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-11-12 10:35:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-11-12 10:35:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-11-12 10:35:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-11-12 10:35:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 10:35:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-11-12 10:35:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 10:35:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-11-12 10:35:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-11-12 10:35:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-11-12 10:35:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-11-12 10:35:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-11-12 10:35:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 10:35:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-11-12 10:35:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 10:35:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-11-12 10:35:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-11-12 10:35:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 10:35:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 10:35:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 10:35:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-11-12 10:35:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-11-12 10:35:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-11-12 10:35:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-11-12 10:35:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-11-12 10:35:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-11-12 10:35:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 10:35:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51e8e6e6: startup date [Tue Nov 12 10:34:46 CST 2019]; root of context hierarchy
2019-11-12 10:35:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 10:35:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 10:35:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-11-12 10:35:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-11-12 10:35:47 -Registering beans for JMX exposure on startup
2019-11-12 10:35:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-11-12 10:35:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-11-12 10:35:47 -Starting beans in phase 2147483647
2019-11-12 10:35:47 -Context refreshed
2019-11-12 10:35:47 -Found 1 custom documentation plugin(s)
2019-11-12 10:35:47 -Scanning for api listing references
2019-11-12 10:35:49 -Generating unique operation named: removeUsingPOST_1
2019-11-12 10:35:49 -Generating unique operation named: addUsingGET_1
2019-11-12 10:35:49 -Generating unique operation named: editUsingGET_1
2019-11-12 10:35:49 -Generating unique operation named: listUsingGET_1
2019-11-12 10:35:49 -Generating unique operation named: removeUsingPOST_2
2019-11-12 10:35:49 -Generating unique operation named: removeUsingPOST_3
2019-11-12 10:35:49 -Generating unique operation named: saveUsingPOST_1
2019-11-12 10:35:49 -Generating unique operation named: updateUsingGET_1
2019-11-12 10:35:49 -Generating unique operation named: updateUsingHEAD_1
2019-11-12 10:35:49 -Generating unique operation named: updateUsingPOST_1
2019-11-12 10:35:49 -Generating unique operation named: updateUsingPUT_1
2019-11-12 10:35:49 -Generating unique operation named: updateUsingPATCH_1
2019-11-12 10:35:50 -Generating unique operation named: updateUsingDELETE_1
2019-11-12 10:35:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-11-12 10:35:50 -Generating unique operation named: updateUsingTRACE_1
2019-11-12 10:35:50 -Generating unique operation named: addUsingGET_2
2019-11-12 10:35:50 -Generating unique operation named: editUsingGET_2
2019-11-12 10:35:50 -Generating unique operation named: listUsingGET_2
2019-11-12 10:35:50 -Generating unique operation named: removeUsingPOST_4
2019-11-12 10:35:50 -Generating unique operation named: removeUsingPOST_5
2019-11-12 10:35:50 -Generating unique operation named: saveUsingPOST_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingPOST_2
2019-11-12 10:35:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-11-12 10:35:50 -Generating unique operation named: addUsingGET_3
2019-11-12 10:35:50 -Generating unique operation named: editUsingGET_3
2019-11-12 10:35:50 -Generating unique operation named: listUsingGET_3
2019-11-12 10:35:50 -Generating unique operation named: removeUsingPOST_6
2019-11-12 10:35:50 -Generating unique operation named: removeUsingPOST_7
2019-11-12 10:35:50 -Generating unique operation named: saveUsingPOST_3
2019-11-12 10:35:50 -Generating unique operation named: updateUsingGET_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingHEAD_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingPOST_3
2019-11-12 10:35:50 -Generating unique operation named: updateUsingPUT_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingPATCH_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingDELETE_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-11-12 10:35:50 -Generating unique operation named: updateUsingTRACE_2
2019-11-12 10:35:50 -Generating unique operation named: addUsingGET_4
2019-11-12 10:35:50 -Generating unique operation named: editUsingGET_4
2019-11-12 10:35:50 -Generating unique operation named: listUsingGET_4
2019-11-12 10:35:51 -Generating unique operation named: removeUsingPOST_8
2019-11-12 10:35:51 -Generating unique operation named: removeUsingPOST_9
2019-11-12 10:35:51 -Generating unique operation named: saveUsingPOST_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingGET_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingHEAD_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPOST_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPUT_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPATCH_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingDELETE_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-11-12 10:35:51 -Generating unique operation named: updateUsingTRACE_3
2019-11-12 10:35:51 -Generating unique operation named: ElecUsingGET_1
2019-11-12 10:35:51 -Generating unique operation named: addUsingGET_5
2019-11-12 10:35:51 -Generating unique operation named: editUsingGET_5
2019-11-12 10:35:51 -Generating unique operation named: listUsingGET_5
2019-11-12 10:35:51 -Generating unique operation named: removeUsingPOST_10
2019-11-12 10:35:51 -Generating unique operation named: removeUsingPOST_11
2019-11-12 10:35:51 -Generating unique operation named: saveUsingPOST_5
2019-11-12 10:35:51 -Generating unique operation named: updateUsingGET_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingHEAD_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPOST_5
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPUT_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingPATCH_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingDELETE_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-11-12 10:35:51 -Generating unique operation named: updateUsingTRACE_4
2019-11-12 10:35:51 -Generating unique operation named: editUsingGET_6
2019-11-12 10:35:52 -Generating unique operation named: listUsingGET_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPOST_6
2019-11-12 10:35:52 -Generating unique operation named: addUsingGET_6
2019-11-12 10:35:52 -Generating unique operation named: editUsingGET_7
2019-11-12 10:35:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-11-12 10:35:52 -Generating unique operation named: listUsingGET_7
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_12
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_13
2019-11-12 10:35:52 -Generating unique operation named: saveUsingPOST_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingGET_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingHEAD_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPOST_7
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPUT_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPATCH_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingDELETE_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-11-12 10:35:52 -Generating unique operation named: updateUsingTRACE_5
2019-11-12 10:35:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-11-12 10:35:52 -Generating unique operation named: addUsingGET_7
2019-11-12 10:35:52 -Generating unique operation named: editUsingGET_8
2019-11-12 10:35:52 -Generating unique operation named: listUsingGET_8
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_14
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_15
2019-11-12 10:35:52 -Generating unique operation named: saveUsingPOST_7
2019-11-12 10:35:52 -Generating unique operation named: updateUsingGET_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingHEAD_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPOST_8
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPUT_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPATCH_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingDELETE_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-11-12 10:35:52 -Generating unique operation named: updateUsingTRACE_6
2019-11-12 10:35:52 -Generating unique operation named: addUsingGET_8
2019-11-12 10:35:52 -Generating unique operation named: editUsingGET_9
2019-11-12 10:35:52 -Generating unique operation named: listUsingGET_9
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_16
2019-11-12 10:35:52 -Generating unique operation named: removeUsingPOST_17
2019-11-12 10:35:52 -Generating unique operation named: saveUsingPOST_8
2019-11-12 10:35:52 -Generating unique operation named: updateUsingGET_7
2019-11-12 10:35:52 -Generating unique operation named: updateUsingHEAD_7
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPOST_9
2019-11-12 10:35:52 -Generating unique operation named: updateUsingPUT_7
2019-11-12 10:35:53 -Generating unique operation named: updateUsingPATCH_7
2019-11-12 10:35:53 -Generating unique operation named: updateUsingDELETE_7
2019-11-12 10:35:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-11-12 10:35:53 -Generating unique operation named: updateUsingTRACE_7
2019-11-12 10:35:53 -Generating unique operation named: addUsingGET_9
2019-11-12 10:35:53 -Generating unique operation named: editUsingGET_10
2019-11-12 10:35:53 -Generating unique operation named: infoUsingGET_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingHEAD_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingPOST_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingPUT_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingPATCH_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingDELETE_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-11-12 10:35:53 -Generating unique operation named: infoUsingTRACE_1
2019-11-12 10:35:53 -Generating unique operation named: listUsingGET_10
2019-11-12 10:35:53 -Generating unique operation named: removeUsingPOST_18
2019-11-12 10:35:53 -Generating unique operation named: removeUsingPOST_19
2019-11-12 10:35:53 -Generating unique operation named: saveUsingPOST_9
2019-11-12 10:35:53 -Generating unique operation named: updateUsingPOST_10
2019-11-12 10:35:53 -Generating unique operation named: listUsingGET_11
2019-11-12 10:35:53 -Generating unique operation named: removeUsingPOST_20
2019-11-12 10:35:53 -Generating unique operation named: welcomeUsingGET_1
2019-11-12 10:35:53 -Generating unique operation named: addUsingGET_10
2019-11-12 10:35:53 -Generating unique operation named: editUsingGET_11
2019-11-12 10:35:53 -Generating unique operation named: listUsingGET_12
2019-11-12 10:35:53 -Generating unique operation named: removeUsingPOST_21
2019-11-12 10:35:53 -Generating unique operation named: saveUsingPOST_10
2019-11-12 10:35:53 -Generating unique operation named: treeUsingGET_1
2019-11-12 10:35:53 -Generating unique operation named: treeUsingGET_2
2019-11-12 10:35:53 -Generating unique operation named: updateUsingPOST_11
2019-11-12 10:35:54 -Generating unique operation named: addUsingGET_11
2019-11-12 10:35:54 -Generating unique operation named: editUsingGET_12
2019-11-12 10:35:54 -Generating unique operation named: listUsingGET_13
2019-11-12 10:35:54 -Generating unique operation named: removeUsingPOST_22
2019-11-12 10:35:54 -Generating unique operation named: removeUsingPOST_23
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPOST_12
2019-11-12 10:35:54 -Generating unique operation named: addUsingGET_12
2019-11-12 10:35:54 -Generating unique operation named: editUsingGET_13
2019-11-12 10:35:54 -Generating unique operation named: listUsingGET_14
2019-11-12 10:35:54 -Generating unique operation named: removeUsingPOST_24
2019-11-12 10:35:54 -Generating unique operation named: removeUsingPOST_25
2019-11-12 10:35:54 -Generating unique operation named: saveUsingPOST_11
2019-11-12 10:35:54 -Generating unique operation named: updateUsingGET_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingHEAD_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPOST_13
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPUT_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPATCH_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingDELETE_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-11-12 10:35:54 -Generating unique operation named: updateUsingTRACE_8
2019-11-12 10:35:54 -Generating unique operation named: addUsingGET_13
2019-11-12 10:35:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-11-12 10:35:54 -Generating unique operation named: editUsingGET_14
2019-11-12 10:35:54 -Generating unique operation named: listUsingGET_15
2019-11-12 10:35:54 -Generating unique operation named: printEditUsingGET_1
2019-11-12 10:35:54 -Generating unique operation named: removeUsingPOST_26
2019-11-12 10:35:54 -Generating unique operation named: saveUsingPOST_12
2019-11-12 10:35:54 -Generating unique operation named: updateUsingGET_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingHEAD_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPOST_14
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPUT_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingPATCH_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingDELETE_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-11-12 10:35:54 -Generating unique operation named: updateUsingTRACE_9
2019-11-12 10:35:55 -Generating unique operation named: addUsingGET_14
2019-11-12 10:35:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-11-12 10:35:55 -Generating unique operation named: editUsingGET_15
2019-11-12 10:35:55 -Generating unique operation named: listUsingGET_16
2019-11-12 10:35:55 -Generating unique operation named: saveUsingPOST_13
2019-11-12 10:35:55 -Generating unique operation named: saveUsingPOST_14
2019-11-12 10:35:55 -Generating unique operation named: updateUsingPOST_15
2019-11-12 10:35:55 -Generating unique operation named: listUsingGET_17
2019-11-12 10:35:55 -Generating unique operation named: listUsingHEAD_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingPOST_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingPUT_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingPATCH_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingDELETE_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingOPTIONS_1
2019-11-12 10:35:55 -Generating unique operation named: listUsingTRACE_1
2019-11-12 10:35:55 -Generating unique operation named: countDDUsingGET_1
2019-11-12 10:35:55 -Generating unique operation named: exportDDUsingGET_1
2019-11-12 10:35:55 -Generating unique operation named: exportElecYYUsingGET_1
2019-11-12 10:35:55 -Generating unique operation named: addUsingGET_15
2019-11-12 10:35:55 -Generating unique operation named: batchRemoveUsingPOST_3
2019-11-12 10:35:55 -Generating unique operation named: editUsingGET_16
2019-11-12 10:35:55 -Generating unique operation named: listUsingGET_18
2019-11-12 10:35:55 -Generating unique operation named: removeUsingPOST_27
2019-11-12 10:35:55 -Generating unique operation named: saveUsingPOST_15
2019-11-12 10:35:55 -Generating unique operation named: treeUsingGET_3
2019-11-12 10:35:55 -Generating unique operation named: treeViewUsingGET_1
2019-11-12 10:35:55 -Generating unique operation named: updateUsingPOST_16
2019-11-12 10:35:55 -Generating unique operation named: addUsingGET_16
2019-11-12 10:35:55 -Generating unique operation named: editUsingGET_17
2019-11-12 10:35:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-11-12 10:35:55 -Generating unique operation named: listUsingGET_19
2019-11-12 10:35:55 -Generating unique operation named: removeUsingPOST_28
2019-11-12 10:35:56 -Generating unique operation named: removeUsingPOST_29
2019-11-12 10:35:56 -Generating unique operation named: saveUsingPOST_16
2019-11-12 10:35:56 -Generating unique operation named: updateUsingGET_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingHEAD_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPOST_17
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPUT_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPATCH_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingDELETE_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-11-12 10:35:56 -Generating unique operation named: updateUsingTRACE_10
2019-11-12 10:35:56 -Generating unique operation named: exprotExcelUsingGET_5
2019-11-12 10:35:56 -Generating unique operation named: addUsingGET_17
2019-11-12 10:35:56 -Generating unique operation named: editUsingGET_18
2019-11-12 10:35:56 -Generating unique operation named: listUsingGET_20
2019-11-12 10:35:56 -Generating unique operation named: removeUsingPOST_30
2019-11-12 10:35:56 -Generating unique operation named: removeUsingPOST_31
2019-11-12 10:35:56 -Generating unique operation named: saveUsingPOST_17
2019-11-12 10:35:56 -Generating unique operation named: updateUsingGET_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingHEAD_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPOST_18
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPUT_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPATCH_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingDELETE_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-11-12 10:35:56 -Generating unique operation named: updateUsingTRACE_11
2019-11-12 10:35:56 -Generating unique operation named: addUsingGET_18
2019-11-12 10:35:56 -Generating unique operation named: editUsingGET_19
2019-11-12 10:35:56 -Generating unique operation named: listUsingGET_21
2019-11-12 10:35:56 -Generating unique operation named: removeUsingPOST_32
2019-11-12 10:35:56 -Generating unique operation named: removeUsingPOST_33
2019-11-12 10:35:56 -Generating unique operation named: saveUsingPOST_18
2019-11-12 10:35:56 -Generating unique operation named: updateUsingGET_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingHEAD_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPOST_19
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPUT_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingPATCH_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingDELETE_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-11-12 10:35:56 -Generating unique operation named: updateUsingTRACE_12
2019-11-12 10:35:56 -Starting Quartz Scheduler now
2019-11-12 10:35:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-11-12 10:35:56 -Starting...
2019-11-12 10:35:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-11-12 10:35:56 -Started.
2019-11-12 10:35:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-11-12 10:35:56 -Using a shared selector for servlet write/read
2019-11-12 10:35:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-11-12 10:35:56 -Started BootdoApplication in 83.271 seconds (JVM running for 120.074)
2019-11-12 10:35:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-11-12 10:35:57 -==> Parameters: 
2019-11-12 10:35:58 -<==      Total: 1
2019-11-12 10:36:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-11-12 10:37:25 -A cookie header was received [1573469495,1573471179,1573474683] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2019-11-12 10:37:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-11-12 10:37:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-11-12 10:37:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-11-12 10:37:26 -Enabling session validation scheduler...
2019-11-12 10:37:26 -请求地址 : http://localhost:8081/
2019-11-12 10:37:26 -HTTP METHOD : GET
2019-11-12 10:37:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-11-12 10:37:26 -参数 : [{}]
2019-11-12 10:37:26 -耗时 : 5
2019-11-12 10:37:26 -返回值 : redirect:/index
2019-11-12 10:37:27 -请求地址 : http://localhost:8081/login;JSESSIONID=b005bde8-023f-4a1a-a33f-a3cfc28b1aa9
2019-11-12 10:37:27 -HTTP METHOD : GET
2019-11-12 10:37:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-11-12 10:37:27 -参数 : [{}]
2019-11-12 10:37:27 -耗时 : 1
2019-11-12 10:37:27 -返回值 : login
2019-11-12 10:37:33 -请求地址 : http://localhost:8081/getVerify
2019-11-12 10:37:33 -HTTP METHOD : GET
2019-11-12 10:37:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-11-12 10:37:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@308a82b3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e4d7ad2]
2019-11-12 10:37:49 -9320
2019-11-12 10:37:51 -耗时 : 18792
2019-11-12 10:37:51 -返回值 : null
2019-11-12 10:37:57 -请求地址 : http://localhost:8081/login
2019-11-12 10:37:57 -HTTP METHOD : POST
2019-11-12 10:37:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-11-12 10:37:57 -参数 : [admin, 111111, 9320, org.apache.shiro.web.servlet.ShiroHttpServletRequest@40194836]
2019-11-12 10:37:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-11-12 10:37:59 -==> Parameters: admin(String)
2019-11-12 10:38:00 -<==      Total: 1
2019-11-12 10:38:00 -耗时 : 2517
2019-11-12 10:38:00 -返回值 : {msg=操作成功, code=0}
2019-11-12 10:38:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-11-12 10:38:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:38:01 -==> Parameters: 1(Long), admin(String), 登录(String), 2517(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-11-12 10:38:00.88(Timestamp)
2019-11-12 10:38:01 -<==    Updates: 1
2019-11-12 10:38:02 -请求地址 : http://localhost:8081/index
2019-11-12 10:38:02 -HTTP METHOD : GET
2019-11-12 10:38:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 10:38:02 -参数 : [{}]
2019-11-12 10:38:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 10:38:03 -==> Parameters: 1(Long)
2019-11-12 10:38:04 -<==      Total: 50
2019-11-12 10:38:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 10:38:04 -==> Parameters: 138(Long)
2019-11-12 10:38:04 -<==      Total: 1
2019-11-12 10:38:04 -耗时 : 2203
2019-11-12 10:38:04 -返回值 : index_v1
2019-11-12 10:38:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:38:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2203(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 10:38:05.112(Timestamp)
2019-11-12 10:38:05 -<==    Updates: 1
2019-11-12 10:38:06 -请求地址 : http://localhost:8081/main
2019-11-12 10:38:06 -HTTP METHOD : GET
2019-11-12 10:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 10:38:06 -参数 : []
2019-11-12 10:38:06 -耗时 : 1
2019-11-12 10:38:06 -返回值 : main
2019-11-12 10:38:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 10:38:09 -HTTP METHOD : GET
2019-11-12 10:38:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 10:38:09 -参数 : []
2019-11-12 10:38:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 10:38:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 10:38:10 -请求地址 : http://localhost:8081/main
2019-11-12 10:38:10 -HTTP METHOD : GET
2019-11-12 10:38:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 10:38:10 -参数 : []
2019-11-12 10:38:10 -耗时 : 0
2019-11-12 10:38:10 -返回值 : main
2019-11-12 10:38:10 -<==      Total: 0
2019-11-12 10:38:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 10:38:10 -==> Parameters: 1(Long), 0(String)
2019-11-12 10:38:10 -<==      Total: 1
2019-11-12 10:38:10 -耗时 : 431
2019-11-12 10:38:10 -返回值 : com.bootdo.common.utils.PageUtils@3d916a
2019-11-12 10:38:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-11-12 10:38:20 -==> Parameters: 1(Long)
2019-11-12 10:38:20 -<==      Total: 94
2019-11-12 10:38:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 10:38:20 -HTTP METHOD : GET
2019-11-12 10:38:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 10:38:20 -参数 : []
2019-11-12 10:38:20 -耗时 : 0
2019-11-12 10:38:20 -返回值 : moneyList/moneyList
2019-11-12 10:38:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 10:38:28 -HTTP METHOD : GET
2019-11-12 10:38:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 10:38:28 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 10:38:28 -耗时 : 1
2019-11-12 10:38:28 -返回值 : system/dept/deptTree
2019-11-12 10:38:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 10:38:29 -HTTP METHOD : GET
2019-11-12 10:38:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 10:38:29 -参数 : []
2019-11-12 10:38:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 10:38:29 -==> Parameters: 
2019-11-12 10:38:29 -<==      Total: 3
2019-11-12 10:38:29 -耗时 : 137
2019-11-12 10:38:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 10:38:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:38:33 -HTTP METHOD : POST
2019-11-12 10:38:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:38:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@510bf834]
2019-11-12 10:38:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:33 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:34 -<==      Total: 3
2019-11-12 10:38:34 -耗时 : 1359
2019-11-12 10:38:34 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@fb861cf, com.bootdo.moneyList.damain.MoneyListDO@2d7fd437, com.bootdo.moneyList.damain.MoneyListDO@4cddff9e]
2019-11-12 10:38:43 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 10:38:43 -HTTP METHOD : POST
2019-11-12 10:38:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 10:38:43 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2a8841c9, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7306287]
2019-11-12 10:38:43 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:43 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:43 -<==      Total: 3
2019-11-12 10:38:43 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 10:38:43 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:43 -<==      Total: 1
2019-11-12 10:38:43 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 10:38:43 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:43 -<==      Total: 1
2019-11-12 10:38:43 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 10:38:43 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:43 -<==      Total: 1
2019-11-12 10:38:43 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:44 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:44 -<==    Updates: 1
2019-11-12 10:38:44 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:38:44 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 10:38:43.882(Timestamp), 2019-05(String), admin(String), 2019-11-12 10:38:43.882(Timestamp), admin(String), null
2019-11-12 10:38:44 -<==    Updates: 1
2019-11-12 10:38:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 10:38:44 -==> Parameters: 1-0001(String), 2(String), 2019-05(String), 2019-11-12 10:38:43.882(Timestamp)
2019-11-12 10:38:44 -<==      Total: 0
2019-11-12 10:38:44 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:38:44 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 10300.0(BigDecimal), 10370.0(BigDecimal), 1(Integer), 0.468(BigDecimal), 70.00(BigDecimal), 32.55(BigDecimal), 179.98(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 48.44(BigDecimal), 84.77(BigDecimal), 5.57(BigDecimal), null, 5.00(BigDecimal), 5.00(BigDecimal), -20.00(BigDecimal), null, 2019-11-12 10:38:44.959(Timestamp), 2(BigDecimal), 2019-05(String), admin(String), 2019-11-12 10:38:44.959(Timestamp), admin(String), null
2019-11-12 10:38:45 -<==    Updates: 1
2019-11-12 10:38:45 -耗时 : 1286
2019-11-12 10:38:45 -返回值 : 12239
2019-11-12 10:38:46 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:38:46 -HTTP METHOD : POST
2019-11-12 10:38:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:38:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@8dd11e4]
2019-11-12 10:38:46 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:46 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:47 -<==      Total: 3
2019-11-12 10:38:47 -耗时 : 551
2019-11-12 10:38:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1b946ed8, com.bootdo.moneyList.damain.MoneyListDO@25eec47a, com.bootdo.moneyList.damain.MoneyListDO@172ce2bc]
2019-11-12 10:38:57 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 10:38:57 -HTTP METHOD : POST
2019-11-12 10:38:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 10:38:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3c79bb61, org.apache.shiro.web.servlet.ShiroHttpServletRequest@32be429e]
2019-11-12 10:38:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:57 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:57 -<==      Total: 3
2019-11-12 10:38:57 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 10:38:57 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:57 -<==      Total: 1
2019-11-12 10:38:57 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 10:38:57 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:57 -<==      Total: 1
2019-11-12 10:38:57 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 10:38:57 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 10:38:57 -<==      Total: 1
2019-11-12 10:38:57 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:57 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:57 -<==    Updates: 1
2019-11-12 10:38:57 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:38:57 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 10:38:57.456(Timestamp), 2019-05(String), admin(String), 2019-11-12 10:38:57.456(Timestamp), admin(String), null
2019-11-12 10:38:57 -<==    Updates: 1
2019-11-12 10:38:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 10:38:57 -==> Parameters: 1-0001(String), 2(String), 2019-05(String), 2019-11-12 10:38:57.456(Timestamp)
2019-11-12 10:38:57 -<==      Total: 1
2019-11-12 10:38:57 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 10:38:57 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 84.77(BigDecimal), 5.57(BigDecimal), 2(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), -20.00(BigDecimal), 12239(Long)
2019-11-12 10:38:57 -<==    Updates: 1
2019-11-12 10:38:57 -耗时 : 606
2019-11-12 10:38:57 -返回值 : 12239
2019-11-12 10:38:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:38:58 -HTTP METHOD : POST
2019-11-12 10:38:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:38:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2a9f2724]
2019-11-12 10:38:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:38:58 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 10:38:59 -<==      Total: 3
2019-11-12 10:38:59 -耗时 : 857
2019-11-12 10:38:59 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53eb2674, com.bootdo.moneyList.damain.MoneyListDO@7f12dac1, com.bootdo.moneyList.damain.MoneyListDO@6180c4f5]
2019-11-12 10:39:01 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12239/1-0001
2019-11-12 10:39:01 -HTTP METHOD : GET
2019-11-12 10:39:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 10:39:01 -参数 : [12239, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@33cc48, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@33cc48, org.apache.shiro.web.servlet.ShiroHttpServletRequest@c3f4bbf]
2019-11-12 10:39:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 10:39:01 -==> Parameters: 12239(Long)
2019-11-12 10:39:01 -<==      Total: 1
2019-11-12 10:39:01 -耗时 : 36
2019-11-12 10:39:01 -返回值 : moneyList/moneyPrint
2019-11-12 10:43:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:43:15 -HTTP METHOD : POST
2019-11-12 10:43:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:43:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4137d38a]
2019-11-12 10:43:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:43:15 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:43:16 -<==      Total: 3
2019-11-12 10:43:16 -耗时 : 121
2019-11-12 10:43:16 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@52a8d098, com.bootdo.moneyList.damain.MoneyListDO@7d935aeb, com.bootdo.moneyList.damain.MoneyListDO@40b4236d]
2019-11-12 10:43:52 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 10:43:52 -HTTP METHOD : POST
2019-11-12 10:43:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 10:43:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@b1f44f1, org.apache.shiro.web.servlet.ShiroHttpServletRequest@15b9ca40]
2019-11-12 10:43:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:43:52 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:43:52 -<==      Total: 3
2019-11-12 10:43:52 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 10:43:52 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:43:52 -<==      Total: 1
2019-11-12 10:43:52 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 10:43:52 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:43:52 -<==      Total: 1
2019-11-12 10:43:52 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 10:43:52 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:43:52 -<==      Total: 1
2019-11-12 10:43:52 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:43:52 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:43:52 -<==    Updates: 1
2019-11-12 10:43:52 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:43:52 -==> Parameters: 1-0075(String), 马子龙(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 10:43:52.519(Timestamp), 2019-05(String), admin(String), 2019-11-12 10:43:52.519(Timestamp), admin(String), null
2019-11-12 10:43:53 -<==    Updates: 1
2019-11-12 10:43:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 10:43:53 -==> Parameters: 1-0075(String), 2(String), 2019-05(String), 2019-11-12 10:43:52.519(Timestamp)
2019-11-12 10:43:53 -<==      Total: 0
2019-11-12 10:43:53 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:43:53 -==> Parameters: 1-0075(String), 马子龙(String), A(String), 2(String), 5544.0(BigDecimal), 5600.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 56.00(BigDecimal), 26.04(BigDecimal), 36.52(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 57.05(BigDecimal), 99.84(BigDecimal), 2.42(BigDecimal), null, 5.00(BigDecimal), 5.00(BigDecimal), 37.00(BigDecimal), null, 2019-11-12 10:43:53.149(Timestamp), 2(BigDecimal), 2019-05(String), admin(String), 2019-11-12 10:43:53.149(Timestamp), admin(String), null
2019-11-12 10:43:53 -<==    Updates: 1
2019-11-12 10:43:53 -耗时 : 817
2019-11-12 10:43:53 -返回值 : 12240
2019-11-12 10:43:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:43:55 -HTTP METHOD : POST
2019-11-12 10:43:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:43:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@15d0cb26]
2019-11-12 10:43:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:43:55 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:43:56 -<==      Total: 3
2019-11-12 10:43:56 -耗时 : 701
2019-11-12 10:43:56 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@762f928d, com.bootdo.moneyList.damain.MoneyListDO@11ef57d1, com.bootdo.moneyList.damain.MoneyListDO@2752731]
2019-11-12 10:44:10 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 10:44:10 -HTTP METHOD : POST
2019-11-12 10:44:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 10:44:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b9c5ccb, org.apache.shiro.web.servlet.ShiroHttpServletRequest@eb36492]
2019-11-12 10:44:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:44:10 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:44:10 -<==      Total: 3
2019-11-12 10:44:10 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 10:44:10 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:44:10 -<==      Total: 1
2019-11-12 10:44:10 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 10:44:10 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:44:10 -<==      Total: 1
2019-11-12 10:44:10 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 10:44:10 -==> Parameters: 1-0075(String), 2019-05(String), 2(String)
2019-11-12 10:44:10 -<==      Total: 1
2019-11-12 10:44:10 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:44:10 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:44:10 -<==    Updates: 1
2019-11-12 10:44:10 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:44:10 -==> Parameters: 1-0075(String), 马子龙(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 10:44:10.662(Timestamp), 2019-05(String), admin(String), 2019-11-12 10:44:10.662(Timestamp), admin(String), null
2019-11-12 10:44:11 -<==    Updates: 1
2019-11-12 10:44:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 10:44:11 -==> Parameters: 1-0075(String), 2(String), 2019-05(String), 2019-11-12 10:44:10.662(Timestamp)
2019-11-12 10:44:11 -<==      Total: 1
2019-11-12 10:44:11 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 10:44:11 -==> Parameters: 马子龙(String), 3.50(BigDecimal), 57.05(BigDecimal), 99.84(BigDecimal), 2.42(BigDecimal), 2(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), 37.00(BigDecimal), 12240(Long)
2019-11-12 10:44:11 -<==    Updates: 1
2019-11-12 10:44:11 -耗时 : 568
2019-11-12 10:44:11 -返回值 : 12240
2019-11-12 10:44:12 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:44:12 -HTTP METHOD : POST
2019-11-12 10:44:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:44:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@bb3b27b]
2019-11-12 10:44:12 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:44:12 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:44:13 -<==      Total: 3
2019-11-12 10:44:13 -耗时 : 707
2019-11-12 10:44:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@71e703d, com.bootdo.moneyList.damain.MoneyListDO@3e5b4c26, com.bootdo.moneyList.damain.MoneyListDO@1e04f46b]
2019-11-12 10:44:14 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12240/1-0075
2019-11-12 10:44:14 -HTTP METHOD : GET
2019-11-12 10:44:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 10:44:14 -参数 : [12240, 1-0075, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@558f930d, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@558f930d, org.apache.shiro.web.servlet.ShiroHttpServletRequest@728e2232]
2019-11-12 10:44:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 10:44:14 -==> Parameters: 12240(Long)
2019-11-12 10:44:14 -<==      Total: 1
2019-11-12 10:44:14 -耗时 : 7
2019-11-12 10:44:14 -返回值 : moneyList/moneyPrint
2019-11-12 10:44:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:44:59 -HTTP METHOD : POST
2019-11-12 10:44:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:44:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38cd6695]
2019-11-12 10:44:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:44:59 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:44:59 -<==      Total: 3
2019-11-12 10:44:59 -耗时 : 106
2019-11-12 10:44:59 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ce15549, com.bootdo.moneyList.damain.MoneyListDO@47a7ca85, com.bootdo.moneyList.damain.MoneyListDO@140df52a]
2019-11-12 10:45:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:00 -HTTP METHOD : POST
2019-11-12 10:45:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4f055557]
2019-11-12 10:45:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:00 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:45:00 -<==      Total: 3
2019-11-12 10:45:00 -耗时 : 83
2019-11-12 10:45:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3cc7e892, com.bootdo.moneyList.damain.MoneyListDO@1ccbf72b, com.bootdo.moneyList.damain.MoneyListDO@7981b608]
2019-11-12 10:45:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:01 -HTTP METHOD : POST
2019-11-12 10:45:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@48c0c597]
2019-11-12 10:45:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:01 -==> Parameters: 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String), 2019-05(String), 2(String), 1-0075(String)
2019-11-12 10:45:01 -<==      Total: 3
2019-11-12 10:45:01 -耗时 : 95
2019-11-12 10:45:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2ab358bf, com.bootdo.moneyList.damain.MoneyListDO@69e4074b, com.bootdo.moneyList.damain.MoneyListDO@27469b9d]
2019-11-12 10:45:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:04 -HTTP METHOD : POST
2019-11-12 10:45:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@65293e5f]
2019-11-12 10:45:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:04 -==> Parameters: 2019-05(String), 2(String), 1-00(String), 2019-05(String), 2(String), 1-00(String), 2019-05(String), 2(String), 1-00(String)
2019-11-12 10:45:04 -<==      Total: 3
2019-11-12 10:45:04 -耗时 : 95
2019-11-12 10:45:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@64494e17, com.bootdo.moneyList.damain.MoneyListDO@688e9cc8, com.bootdo.moneyList.damain.MoneyListDO@44799c40]
2019-11-12 10:45:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:10 -HTTP METHOD : POST
2019-11-12 10:45:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@71b60e9d]
2019-11-12 10:45:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:10 -==> Parameters: 2019-05(String), 2(String), 1-090(String), 2019-05(String), 2(String), 1-090(String), 2019-05(String), 2(String), 1-090(String)
2019-11-12 10:45:10 -<==      Total: 3
2019-11-12 10:45:10 -耗时 : 87
2019-11-12 10:45:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@77dbb0a6, com.bootdo.moneyList.damain.MoneyListDO@63345b67, com.bootdo.moneyList.damain.MoneyListDO@2237737a]
2019-11-12 10:45:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:14 -HTTP METHOD : POST
2019-11-12 10:45:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3142f8b6]
2019-11-12 10:45:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:14 -==> Parameters: 2019-05(String), 2(String), 1-00085(String), 2019-05(String), 2(String), 1-00085(String), 2019-05(String), 2(String), 1-00085(String)
2019-11-12 10:45:15 -<==      Total: 3
2019-11-12 10:45:15 -耗时 : 106
2019-11-12 10:45:15 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6a2f82c3, com.bootdo.moneyList.damain.MoneyListDO@5d6179cd, com.bootdo.moneyList.damain.MoneyListDO@7b40bd9f]
2019-11-12 10:45:17 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:17 -HTTP METHOD : POST
2019-11-12 10:45:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@b5b3330]
2019-11-12 10:45:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:17 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 10:45:17 -<==      Total: 3
2019-11-12 10:45:17 -耗时 : 96
2019-11-12 10:45:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@75b417e9, com.bootdo.moneyList.damain.MoneyListDO@5f6e564f, com.bootdo.moneyList.damain.MoneyListDO@d7e3c21]
2019-11-12 10:45:27 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 10:45:27 -HTTP METHOD : POST
2019-11-12 10:45:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 10:45:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@71118094, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4398c47e]
2019-11-12 10:45:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:27 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 10:45:27 -<==      Total: 3
2019-11-12 10:45:27 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 10:45:27 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 10:45:27 -<==      Total: 1
2019-11-12 10:45:27 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 10:45:27 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 10:45:27 -<==      Total: 1
2019-11-12 10:45:27 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 10:45:27 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 10:45:27 -<==      Total: 1
2019-11-12 10:45:27 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:27 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 10:45:28 -<==    Updates: 1
2019-11-12 10:45:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:45:28 -==> Parameters: 1-0085(String), 袁绍力(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 10:45:27.79(Timestamp), 2019-05(String), admin(String), 2019-11-12 10:45:27.79(Timestamp), admin(String), null
2019-11-12 10:45:28 -<==    Updates: 1
2019-11-12 10:45:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 10:45:28 -==> Parameters: 1-0085(String), 2(String), 2019-05(String), 2019-11-12 10:45:27.79(Timestamp)
2019-11-12 10:45:28 -<==      Total: 0
2019-11-12 10:45:28 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 10:45:28 -==> Parameters: 1-0085(String), 袁绍力(String), A(String), 2(String), 0.0(BigDecimal), 4.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 4.00(BigDecimal), 1.86(BigDecimal), 47.58(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 48.44(BigDecimal), 84.77(BigDecimal), 2.57(BigDecimal), null, 5.00(BigDecimal), 5.00(BigDecimal), -23.00(BigDecimal), null, 2019-11-12 10:45:28.165(Timestamp), 2(BigDecimal), 2019-05(String), admin(String), 2019-11-12 10:45:28.165(Timestamp), admin(String), null
2019-11-12 10:45:28 -<==    Updates: 1
2019-11-12 10:45:28 -耗时 : 500
2019-11-12 10:45:28 -返回值 : 12241
2019-11-12 10:45:31 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 10:45:31 -HTTP METHOD : POST
2019-11-12 10:45:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 10:45:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@69ba0fa8]
2019-11-12 10:45:31 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 10:45:31 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 10:45:32 -<==      Total: 3
2019-11-12 10:45:32 -耗时 : 1001
2019-11-12 10:45:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@16fd5842, com.bootdo.moneyList.damain.MoneyListDO@6d224b12, com.bootdo.moneyList.damain.MoneyListDO@545cde51]
2019-11-12 10:45:35 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12241/1-0085
2019-11-12 10:45:35 -HTTP METHOD : GET
2019-11-12 10:45:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 10:45:35 -参数 : [12241, 1-0085, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@402d6711, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@402d6711, org.apache.shiro.web.servlet.ShiroHttpServletRequest@706bb90b]
2019-11-12 10:45:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 10:45:35 -==> Parameters: 12241(Long)
2019-11-12 10:45:35 -<==      Total: 1
2019-11-12 10:45:35 -耗时 : 6
2019-11-12 10:45:35 -返回值 : moneyList/moneyPrint
2019-11-12 11:06:37 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 410]
2019-11-12 20:29:12 -Starting BootdoApplication on PC-201905091110 with PID 50628 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-11-12 20:29:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-11-12 20:29:12 -The following profiles are active: dev
2019-11-12 20:29:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c80e49b: startup date [Tue Nov 12 20:29:12 CST 2019]; root of context hierarchy
2019-11-12 20:29:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-11-12 20:29:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6e20683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f93b352a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-11-12 20:29:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-11-12 20:29:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:29:35 -Tomcat initialized with port(s): 8081 (http)
2019-11-12 20:29:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-11-12 20:29:35 -Starting service [Tomcat]
2019-11-12 20:29:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-11-12 20:29:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;;C:\Program Files (x86)\pycSafefile\x64;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\JetBrains\WebStorm 2019.2.4\bin;;C:\Users\Administrator\Desktop;;.]
2019-11-12 20:29:36 -Initializing Spring embedded WebApplicationContext
2019-11-12 20:29:36 -Root WebApplicationContext: initialization completed in 23457 ms
2019-11-12 20:29:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-11-12 20:29:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-11-12 20:29:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-11-12 20:29:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-11-12 20:29:38 -Filter xssFilter was not registered (disabled)
2019-11-12 20:29:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-11-12 20:29:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-11-12 20:29:38 -Servlet statViewServlet mapped to [/druid/*]
2019-11-12 20:29:38 -Servlet dispatcherServlet mapped to [/]
2019-11-12 20:29:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c80e49b: startup date [Tue Nov 12 20:29:12 CST 2019]; root of context hierarchy
2019-11-12 20:29:54 -Using default implementation for ThreadExecutor
2019-11-12 20:29:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-11-12 20:29:54 -Quartz Scheduler v.2.3.0 created.
2019-11-12 20:29:54 -RAMJobStore initialized.
2019-11-12 20:29:54 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-11-12 20:29:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-11-12 20:29:54 -Quartz scheduler version: 2.3.0
2019-11-12 20:29:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3855b27e
2019-11-12 20:29:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-11-12 20:29:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-11-12 20:30:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-11-12 20:30:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-11-12 20:30:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-11-12 20:30:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-11-12 20:30:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-11-12 20:30:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-11-12 20:30:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-11-12 20:30:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-11-12 20:30:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-11-12 20:30:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-11-12 20:30:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-11-12 20:30:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-11-12 20:30:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-11-12 20:30:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-11-12 20:30:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-11-12 20:30:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-11-12 20:30:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-11-12 20:30:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:30:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-11-12 20:30:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:30:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-11-12 20:30:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-11-12 20:30:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-11-12 20:30:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-11-12 20:30:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-11-12 20:30:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-11-12 20:30:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-11-12 20:30:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-11-12 20:30:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-11-12 20:30:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-11-12 20:30:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:30:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-11-12 20:30:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-11-12 20:30:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-11-12 20:30:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-11-12 20:30:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-11-12 20:30:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-11-12 20:30:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-11-12 20:30:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:30:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:30:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-11-12 20:30:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:30:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-11-12 20:30:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-11-12 20:30:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:01 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:30:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-11-12 20:30:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:30:02 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:30:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-11-12 20:30:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-11-12 20:30:02 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-11-12 20:30:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-11-12 20:30:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-11-12 20:30:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-11-12 20:30:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-11-12 20:30:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-11-12 20:30:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-11-12 20:30:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-11-12 20:30:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-11-12 20:30:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-11-12 20:30:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-11-12 20:30:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-11-12 20:30:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-11-12 20:30:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-11-12 20:30:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-11-12 20:30:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-11-12 20:30:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-11-12 20:30:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-11-12 20:30:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-11-12 20:30:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-11-12 20:30:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-11-12 20:30:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-11-12 20:30:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-11-12 20:30:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-11-12 20:30:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-11-12 20:30:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-11-12 20:30:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-11-12 20:30:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:30:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:30:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-11-12 20:30:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-11-12 20:30:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-11-12 20:30:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-11-12 20:30:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-11-12 20:30:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:30:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-11-12 20:30:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-11-12 20:30:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:30:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-11-12 20:30:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:30:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-11-12 20:30:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:30:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:30:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-11-12 20:30:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-11-12 20:30:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-11-12 20:30:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-11-12 20:30:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-11-12 20:30:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-11-12 20:30:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:30:08 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c80e49b: startup date [Tue Nov 12 20:29:12 CST 2019]; root of context hierarchy
2019-11-12 20:30:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:30:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:30:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-11-12 20:30:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-11-12 20:30:13 -Registering beans for JMX exposure on startup
2019-11-12 20:30:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-11-12 20:30:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-11-12 20:30:13 -Starting beans in phase 2147483647
2019-11-12 20:30:13 -Context refreshed
2019-11-12 20:30:14 -Found 1 custom documentation plugin(s)
2019-11-12 20:30:14 -Scanning for api listing references
2019-11-12 20:30:15 -Generating unique operation named: removeUsingPOST_1
2019-11-12 20:30:15 -Generating unique operation named: addUsingGET_1
2019-11-12 20:30:15 -Generating unique operation named: editUsingGET_1
2019-11-12 20:30:15 -Generating unique operation named: listUsingGET_1
2019-11-12 20:30:15 -Generating unique operation named: removeUsingPOST_2
2019-11-12 20:30:15 -Generating unique operation named: removeUsingPOST_3
2019-11-12 20:30:15 -Generating unique operation named: saveUsingPOST_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingGET_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingHEAD_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingPOST_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingPUT_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingPATCH_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingDELETE_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingOPTIONS_1
2019-11-12 20:30:15 -Generating unique operation named: updateUsingTRACE_1
2019-11-12 20:30:15 -Generating unique operation named: addUsingGET_2
2019-11-12 20:30:15 -Generating unique operation named: editUsingGET_2
2019-11-12 20:30:15 -Generating unique operation named: listUsingGET_2
2019-11-12 20:30:15 -Generating unique operation named: removeUsingPOST_4
2019-11-12 20:30:15 -Generating unique operation named: removeUsingPOST_5
2019-11-12 20:30:15 -Generating unique operation named: saveUsingPOST_2
2019-11-12 20:30:15 -Generating unique operation named: updateUsingPOST_2
2019-11-12 20:30:15 -Generating unique operation named: exprotExcelUsingGET_1
2019-11-12 20:30:16 -Generating unique operation named: addUsingGET_3
2019-11-12 20:30:16 -Generating unique operation named: editUsingGET_3
2019-11-12 20:30:16 -Generating unique operation named: listUsingGET_3
2019-11-12 20:30:16 -Generating unique operation named: removeUsingPOST_6
2019-11-12 20:30:16 -Generating unique operation named: removeUsingPOST_7
2019-11-12 20:30:16 -Generating unique operation named: saveUsingPOST_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingGET_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingHEAD_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPOST_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPUT_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPATCH_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingDELETE_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-11-12 20:30:16 -Generating unique operation named: updateUsingTRACE_2
2019-11-12 20:30:16 -Generating unique operation named: addUsingGET_4
2019-11-12 20:30:16 -Generating unique operation named: editUsingGET_4
2019-11-12 20:30:16 -Generating unique operation named: listUsingGET_4
2019-11-12 20:30:16 -Generating unique operation named: removeUsingPOST_8
2019-11-12 20:30:16 -Generating unique operation named: removeUsingPOST_9
2019-11-12 20:30:16 -Generating unique operation named: saveUsingPOST_4
2019-11-12 20:30:16 -Generating unique operation named: updateUsingGET_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingHEAD_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPOST_4
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPUT_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingPATCH_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingDELETE_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-11-12 20:30:16 -Generating unique operation named: updateUsingTRACE_3
2019-11-12 20:30:16 -Generating unique operation named: ElecUsingGET_1
2019-11-12 20:30:17 -Generating unique operation named: addUsingGET_5
2019-11-12 20:30:17 -Generating unique operation named: editUsingGET_5
2019-11-12 20:30:17 -Generating unique operation named: listUsingGET_5
2019-11-12 20:30:17 -Generating unique operation named: removeUsingPOST_10
2019-11-12 20:30:17 -Generating unique operation named: removeUsingPOST_11
2019-11-12 20:30:17 -Generating unique operation named: saveUsingPOST_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingGET_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingHEAD_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPOST_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPUT_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPATCH_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingDELETE_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-11-12 20:30:17 -Generating unique operation named: updateUsingTRACE_4
2019-11-12 20:30:17 -Generating unique operation named: editUsingGET_6
2019-11-12 20:30:17 -Generating unique operation named: listUsingGET_6
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPOST_6
2019-11-12 20:30:17 -Generating unique operation named: addUsingGET_6
2019-11-12 20:30:17 -Generating unique operation named: editUsingGET_7
2019-11-12 20:30:17 -Generating unique operation named: exprotExcelUsingGET_2
2019-11-12 20:30:17 -Generating unique operation named: listUsingGET_7
2019-11-12 20:30:17 -Generating unique operation named: removeUsingPOST_12
2019-11-12 20:30:17 -Generating unique operation named: removeUsingPOST_13
2019-11-12 20:30:17 -Generating unique operation named: saveUsingPOST_6
2019-11-12 20:30:17 -Generating unique operation named: updateUsingGET_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingHEAD_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPOST_7
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPUT_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingPATCH_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingDELETE_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-11-12 20:30:17 -Generating unique operation named: updateUsingTRACE_5
2019-11-12 20:30:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-11-12 20:30:17 -Generating unique operation named: addUsingGET_7
2019-11-12 20:30:18 -Generating unique operation named: editUsingGET_8
2019-11-12 20:30:18 -Generating unique operation named: listUsingGET_8
2019-11-12 20:30:18 -Generating unique operation named: removeUsingPOST_14
2019-11-12 20:30:18 -Generating unique operation named: removeUsingPOST_15
2019-11-12 20:30:18 -Generating unique operation named: saveUsingPOST_7
2019-11-12 20:30:18 -Generating unique operation named: updateUsingGET_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingHEAD_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingPOST_8
2019-11-12 20:30:18 -Generating unique operation named: updateUsingPUT_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingPATCH_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingDELETE_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-11-12 20:30:18 -Generating unique operation named: updateUsingTRACE_6
2019-11-12 20:30:19 -Generating unique operation named: addUsingGET_8
2019-11-12 20:30:19 -Generating unique operation named: editUsingGET_9
2019-11-12 20:30:19 -Generating unique operation named: listUsingGET_9
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_16
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_17
2019-11-12 20:30:19 -Generating unique operation named: saveUsingPOST_8
2019-11-12 20:30:19 -Generating unique operation named: updateUsingGET_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingHEAD_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingPOST_9
2019-11-12 20:30:19 -Generating unique operation named: updateUsingPUT_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingPATCH_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingDELETE_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-11-12 20:30:19 -Generating unique operation named: updateUsingTRACE_7
2019-11-12 20:30:19 -Generating unique operation named: addUsingGET_9
2019-11-12 20:30:19 -Generating unique operation named: editUsingGET_10
2019-11-12 20:30:19 -Generating unique operation named: infoUsingGET_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingHEAD_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingPOST_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingPUT_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingPATCH_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingDELETE_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingOPTIONS_1
2019-11-12 20:30:19 -Generating unique operation named: infoUsingTRACE_1
2019-11-12 20:30:19 -Generating unique operation named: listUsingGET_10
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_18
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_19
2019-11-12 20:30:19 -Generating unique operation named: saveUsingPOST_9
2019-11-12 20:30:19 -Generating unique operation named: updateUsingPOST_10
2019-11-12 20:30:19 -Generating unique operation named: listUsingGET_11
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_20
2019-11-12 20:30:19 -Generating unique operation named: welcomeUsingGET_1
2019-11-12 20:30:19 -Generating unique operation named: addUsingGET_10
2019-11-12 20:30:19 -Generating unique operation named: editUsingGET_11
2019-11-12 20:30:19 -Generating unique operation named: listUsingGET_12
2019-11-12 20:30:19 -Generating unique operation named: removeUsingPOST_21
2019-11-12 20:30:19 -Generating unique operation named: saveUsingPOST_10
2019-11-12 20:30:19 -Generating unique operation named: treeUsingGET_1
2019-11-12 20:30:19 -Generating unique operation named: treeUsingGET_2
2019-11-12 20:30:19 -Generating unique operation named: updateUsingPOST_11
2019-11-12 20:30:20 -Generating unique operation named: addUsingGET_11
2019-11-12 20:30:20 -Generating unique operation named: editUsingGET_12
2019-11-12 20:30:20 -Generating unique operation named: listUsingGET_13
2019-11-12 20:30:20 -Generating unique operation named: removeUsingPOST_22
2019-11-12 20:30:20 -Generating unique operation named: removeUsingPOST_23
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPOST_12
2019-11-12 20:30:20 -Generating unique operation named: addUsingGET_12
2019-11-12 20:30:20 -Generating unique operation named: editUsingGET_13
2019-11-12 20:30:20 -Generating unique operation named: listUsingGET_14
2019-11-12 20:30:20 -Generating unique operation named: removeUsingPOST_24
2019-11-12 20:30:20 -Generating unique operation named: removeUsingPOST_25
2019-11-12 20:30:20 -Generating unique operation named: saveUsingPOST_11
2019-11-12 20:30:20 -Generating unique operation named: updateUsingGET_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingHEAD_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPOST_13
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPUT_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPATCH_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingDELETE_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-11-12 20:30:20 -Generating unique operation named: updateUsingTRACE_8
2019-11-12 20:30:20 -Generating unique operation named: addUsingGET_13
2019-11-12 20:30:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-11-12 20:30:20 -Generating unique operation named: editUsingGET_14
2019-11-12 20:30:20 -Generating unique operation named: listUsingGET_15
2019-11-12 20:30:20 -Generating unique operation named: printEditUsingGET_1
2019-11-12 20:30:20 -Generating unique operation named: removeUsingPOST_26
2019-11-12 20:30:20 -Generating unique operation named: saveUsingPOST_12
2019-11-12 20:30:20 -Generating unique operation named: updateUsingGET_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingHEAD_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPOST_14
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPUT_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPATCH_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingDELETE_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-11-12 20:30:20 -Generating unique operation named: updateUsingTRACE_9
2019-11-12 20:30:20 -Generating unique operation named: addUsingGET_14
2019-11-12 20:30:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-11-12 20:30:20 -Generating unique operation named: editUsingGET_15
2019-11-12 20:30:20 -Generating unique operation named: listUsingGET_16
2019-11-12 20:30:20 -Generating unique operation named: saveUsingPOST_13
2019-11-12 20:30:20 -Generating unique operation named: saveUsingPOST_14
2019-11-12 20:30:20 -Generating unique operation named: updateUsingPOST_15
2019-11-12 20:30:21 -Generating unique operation named: listUsingGET_17
2019-11-12 20:30:21 -Generating unique operation named: listUsingHEAD_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingPOST_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingPUT_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingPATCH_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingDELETE_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingOPTIONS_1
2019-11-12 20:30:21 -Generating unique operation named: listUsingTRACE_1
2019-11-12 20:30:21 -Generating unique operation named: countDDUsingGET_1
2019-11-12 20:30:21 -Generating unique operation named: exportDDUsingGET_1
2019-11-12 20:30:21 -Generating unique operation named: exportElecYYUsingGET_1
2019-11-12 20:30:21 -Generating unique operation named: addUsingGET_15
2019-11-12 20:30:21 -Generating unique operation named: batchRemoveUsingPOST_3
2019-11-12 20:30:21 -Generating unique operation named: editUsingGET_16
2019-11-12 20:30:21 -Generating unique operation named: listUsingGET_18
2019-11-12 20:30:21 -Generating unique operation named: removeUsingPOST_27
2019-11-12 20:30:21 -Generating unique operation named: saveUsingPOST_15
2019-11-12 20:30:21 -Generating unique operation named: treeUsingGET_3
2019-11-12 20:30:21 -Generating unique operation named: treeViewUsingGET_1
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPOST_16
2019-11-12 20:30:22 -Generating unique operation named: addUsingGET_16
2019-11-12 20:30:22 -Generating unique operation named: editUsingGET_17
2019-11-12 20:30:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-11-12 20:30:22 -Generating unique operation named: listUsingGET_19
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_28
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_29
2019-11-12 20:30:22 -Generating unique operation named: saveUsingPOST_16
2019-11-12 20:30:22 -Generating unique operation named: updateUsingGET_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingHEAD_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPOST_17
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPUT_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPATCH_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingDELETE_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-11-12 20:30:22 -Generating unique operation named: updateUsingTRACE_10
2019-11-12 20:30:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-11-12 20:30:22 -Generating unique operation named: addUsingGET_17
2019-11-12 20:30:22 -Generating unique operation named: editUsingGET_18
2019-11-12 20:30:22 -Generating unique operation named: listUsingGET_20
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_30
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_31
2019-11-12 20:30:22 -Generating unique operation named: saveUsingPOST_17
2019-11-12 20:30:22 -Generating unique operation named: updateUsingGET_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingHEAD_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPOST_18
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPUT_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPATCH_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingDELETE_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-11-12 20:30:22 -Generating unique operation named: updateUsingTRACE_11
2019-11-12 20:30:22 -Generating unique operation named: addUsingGET_18
2019-11-12 20:30:22 -Generating unique operation named: editUsingGET_19
2019-11-12 20:30:22 -Generating unique operation named: listUsingGET_21
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_32
2019-11-12 20:30:22 -Generating unique operation named: removeUsingPOST_33
2019-11-12 20:30:22 -Generating unique operation named: saveUsingPOST_18
2019-11-12 20:30:22 -Generating unique operation named: updateUsingGET_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingHEAD_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPOST_19
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPUT_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingPATCH_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingDELETE_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-11-12 20:30:22 -Generating unique operation named: updateUsingTRACE_12
2019-11-12 20:30:22 -Starting Quartz Scheduler now
2019-11-12 20:30:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-11-12 20:30:22 -Starting...
2019-11-12 20:30:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-11-12 20:30:22 -Started.
2019-11-12 20:30:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-11-12 20:30:22 -Using a shared selector for servlet write/read
2019-11-12 20:30:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-11-12 20:30:23 -Started BootdoApplication in 78.102 seconds (JVM running for 82.487)
2019-11-12 20:30:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-11-12 20:30:23 -==> Parameters: 
2019-11-12 20:30:24 -<==      Total: 1
2019-11-12 20:30:44 -A cookie header was received [1573471179,1573474683,1573526259] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2019-11-12 20:30:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-11-12 20:30:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-11-12 20:30:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 115 ms
2019-11-12 20:30:44 -Enabling session validation scheduler...
2019-11-12 20:30:45 -请求地址 : http://localhost:8081/
2019-11-12 20:30:45 -HTTP METHOD : GET
2019-11-12 20:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-11-12 20:30:45 -参数 : [{}]
2019-11-12 20:30:45 -耗时 : 7
2019-11-12 20:30:45 -返回值 : redirect:/index
2019-11-12 20:30:45 -请求地址 : http://localhost:8081/login;JSESSIONID=c99f8427-6e25-4f14-80de-fdb794cfe34a
2019-11-12 20:30:45 -HTTP METHOD : GET
2019-11-12 20:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-11-12 20:30:45 -参数 : [{}]
2019-11-12 20:30:45 -耗时 : 1
2019-11-12 20:30:45 -返回值 : login
2019-11-12 20:31:03 -请求地址 : http://localhost:8081/
2019-11-12 20:31:03 -HTTP METHOD : GET
2019-11-12 20:31:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-11-12 20:31:03 -参数 : [{}]
2019-11-12 20:31:03 -耗时 : 0
2019-11-12 20:31:03 -返回值 : redirect:/index
2019-11-12 20:31:04 -请求地址 : http://localhost:8081/login
2019-11-12 20:31:04 -HTTP METHOD : GET
2019-11-12 20:31:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-11-12 20:31:04 -参数 : [{}]
2019-11-12 20:31:04 -耗时 : 1
2019-11-12 20:31:04 -返回值 : login
2019-11-12 20:31:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-11-12 20:31:09 -请求地址 : http://localhost:8081/getVerify
2019-11-12 20:31:09 -HTTP METHOD : GET
2019-11-12 20:31:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-11-12 20:31:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@29c1dd4f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27063607]
2019-11-12 20:31:14 -5992
2019-11-12 20:31:15 -耗时 : 6413
2019-11-12 20:31:15 -返回值 : null
2019-11-12 20:31:25 -请求地址 : http://localhost:8081/login
2019-11-12 20:31:25 -HTTP METHOD : POST
2019-11-12 20:31:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-11-12 20:31:25 -参数 : [admin, 111111, 5992, org.apache.shiro.web.servlet.ShiroHttpServletRequest@722ec5]
2019-11-12 20:31:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-11-12 20:31:25 -==> Parameters: admin(String)
2019-11-12 20:31:26 -<==      Total: 1
2019-11-12 20:31:26 -耗时 : 1808
2019-11-12 20:31:26 -返回值 : {msg=操作成功, code=0}
2019-11-12 20:31:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-11-12 20:31:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:31:27 -==> Parameters: 1(Long), admin(String), 登录(String), 1809(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-11-12 20:31:27.109(Timestamp)
2019-11-12 20:31:27 -请求地址 : http://localhost:8081/index
2019-11-12 20:31:27 -HTTP METHOD : GET
2019-11-12 20:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 20:31:27 -参数 : [{}]
2019-11-12 20:31:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 20:31:28 -==> Parameters: 1(Long)
2019-11-12 20:31:28 -<==    Updates: 1
2019-11-12 20:31:28 -<==      Total: 50
2019-11-12 20:31:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 20:31:28 -==> Parameters: 138(Long)
2019-11-12 20:31:28 -<==      Total: 1
2019-11-12 20:31:29 -耗时 : 1579
2019-11-12 20:31:29 -返回值 : index_v1
2019-11-12 20:31:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:31:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1579(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 20:31:29.197(Timestamp)
2019-11-12 20:31:29 -<==    Updates: 1
2019-11-12 20:31:29 -请求地址 : http://localhost:8081/main
2019-11-12 20:31:29 -HTTP METHOD : GET
2019-11-12 20:31:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 20:31:29 -参数 : []
2019-11-12 20:31:29 -耗时 : 0
2019-11-12 20:31:29 -返回值 : main
2019-11-12 20:31:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 20:31:30 -HTTP METHOD : GET
2019-11-12 20:31:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 20:31:30 -参数 : []
2019-11-12 20:31:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 20:31:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 20:31:30 -请求地址 : http://localhost:8081/main
2019-11-12 20:31:30 -HTTP METHOD : GET
2019-11-12 20:31:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 20:31:30 -参数 : []
2019-11-12 20:31:30 -耗时 : 0
2019-11-12 20:31:30 -返回值 : main
2019-11-12 20:31:30 -<==      Total: 0
2019-11-12 20:31:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 20:31:30 -==> Parameters: 1(Long), 0(String)
2019-11-12 20:31:30 -<==      Total: 1
2019-11-12 20:31:30 -耗时 : 526
2019-11-12 20:31:30 -返回值 : com.bootdo.common.utils.PageUtils@1f63861d
2019-11-12 20:31:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-11-12 20:31:35 -==> Parameters: 1(Long)
2019-11-12 20:31:35 -<==      Total: 94
2019-11-12 20:31:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 20:31:35 -HTTP METHOD : GET
2019-11-12 20:31:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 20:31:35 -参数 : []
2019-11-12 20:31:35 -耗时 : 0
2019-11-12 20:31:35 -返回值 : moneyList/moneyList
2019-11-12 20:31:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 20:31:46 -HTTP METHOD : GET
2019-11-12 20:31:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 20:31:46 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 20:31:46 -耗时 : 1
2019-11-12 20:31:46 -返回值 : system/dept/deptTree
2019-11-12 20:31:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 20:31:46 -HTTP METHOD : GET
2019-11-12 20:31:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 20:31:46 -参数 : []
2019-11-12 20:31:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 20:31:46 -==> Parameters: 
2019-11-12 20:31:46 -<==      Total: 3
2019-11-12 20:31:46 -耗时 : 121
2019-11-12 20:31:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 20:31:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:31:50 -HTTP METHOD : POST
2019-11-12 20:31:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:31:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@56d943a9]
2019-11-12 20:31:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:31:51 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 20:31:53 -<==      Total: 3
2019-11-12 20:31:53 -耗时 : 2131
2019-11-12 20:31:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2221daa4, com.bootdo.moneyList.damain.MoneyListDO@407248bb, com.bootdo.moneyList.damain.MoneyListDO@278f4722]
2019-11-12 20:32:14 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 20:32:14 -HTTP METHOD : POST
2019-11-12 20:32:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 20:32:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6fa7755d, org.apache.shiro.web.servlet.ShiroHttpServletRequest@24ede69b]
2019-11-12 20:32:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:32:14 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 20:32:14 -<==      Total: 3
2019-11-12 20:32:14 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 20:32:14 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 20:32:14 -<==      Total: 1
2019-11-12 20:32:14 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 20:32:14 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 20:32:14 -<==      Total: 1
2019-11-12 20:32:14 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 20:32:14 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 20:32:14 -<==      Total: 1
2019-11-12 20:32:14 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:32:14 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 20:32:15 -<==    Updates: 1
2019-11-12 20:32:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:32:15 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 20:32:14.697(Timestamp), 2019-05(String), admin(String), 2019-11-12 20:32:14.698(Timestamp), admin(String), null
2019-11-12 20:32:15 -<==    Updates: 1
2019-11-12 20:32:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 20:32:15 -==> Parameters: 1-0001(String), 2(String), 2019-05(String), 2019-11-12 20:32:14.697(Timestamp)
2019-11-12 20:32:15 -<==      Total: 1
2019-11-12 20:32:16 -==>  Preparing: update print SET `user_name` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 20:32:16 -==> Parameters: 李文英(String), 10300.0(BigDecimal), 10370.0(BigDecimal), 1(Integer), 0.468(BigDecimal), 70.00(BigDecimal), 32.55(BigDecimal), 181.98(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 48.44(BigDecimal), 84.77(BigDecimal), 7.57(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), -20.00(BigDecimal), 12239(Long)
2019-11-12 20:32:16 -<==    Updates: 1
2019-11-12 20:32:16 -耗时 : 1666
2019-11-12 20:32:16 -返回值 : 12239
2019-11-12 20:32:17 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:32:17 -HTTP METHOD : POST
2019-11-12 20:32:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:32:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@983316]
2019-11-12 20:32:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:32:17 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 20:32:18 -<==      Total: 3
2019-11-12 20:32:18 -耗时 : 359
2019-11-12 20:32:18 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7e5fc207, com.bootdo.moneyList.damain.MoneyListDO@4fce1cff, com.bootdo.moneyList.damain.MoneyListDO@10c5d45c]
2019-11-12 20:32:22 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12239/1-0001
2019-11-12 20:32:22 -HTTP METHOD : GET
2019-11-12 20:32:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 20:32:22 -参数 : [12239, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@20999b3f, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@20999b3f, org.apache.shiro.web.servlet.ShiroHttpServletRequest@401aa1e7]
2019-11-12 20:32:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 20:32:22 -==> Parameters: 12239(Long)
2019-11-12 20:32:22 -<==      Total: 1
2019-11-12 20:32:22 -耗时 : 19
2019-11-12 20:32:22 -返回值 : moneyList/moneyPrint
2019-11-12 20:34:23 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:34:23 -HTTP METHOD : POST
2019-11-12 20:34:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:34:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35a6f15c]
2019-11-12 20:34:23 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:34:23 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 20:34:23 -<==      Total: 3
2019-11-12 20:34:23 -耗时 : 207
2019-11-12 20:34:23 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5e5df26e, com.bootdo.moneyList.damain.MoneyListDO@6e0d6f48, com.bootdo.moneyList.damain.MoneyListDO@6ca34fc4]
2019-11-12 20:34:42 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 20:34:42 -HTTP METHOD : POST
2019-11-12 20:34:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 20:34:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d2535fb, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5dea9ba2]
2019-11-12 20:34:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:34:42 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 20:34:43 -<==      Total: 3
2019-11-12 20:34:43 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 20:34:43 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 20:34:43 -<==      Total: 1
2019-11-12 20:34:43 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 20:34:43 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 20:34:43 -<==      Total: 1
2019-11-12 20:34:43 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 20:34:43 -==> Parameters: 1-0085(String), 2019-05(String), 2(String)
2019-11-12 20:34:43 -<==      Total: 1
2019-11-12 20:34:43 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:34:43 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 20:34:43 -<==    Updates: 1
2019-11-12 20:34:43 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:34:43 -==> Parameters: 1-0085(String), 袁绍力(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 20:34:43.071(Timestamp), 2019-05(String), admin(String), 2019-11-12 20:34:43.071(Timestamp), admin(String), null
2019-11-12 20:34:43 -<==    Updates: 1
2019-11-12 20:34:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 20:34:43 -==> Parameters: 1-0085(String), 2(String), 2019-05(String), 2019-11-12 20:34:43.071(Timestamp)
2019-11-12 20:34:43 -<==      Total: 1
2019-11-12 20:34:43 -==>  Preparing: update print SET `user_name` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 20:34:43 -==> Parameters: 袁绍力(String), 0.0(BigDecimal), 4.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 4.00(BigDecimal), 1.86(BigDecimal), 49.58(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 48.44(BigDecimal), 84.77(BigDecimal), 2.57(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), -23.00(BigDecimal), 12241(Long)
2019-11-12 20:34:43 -<==    Updates: 1
2019-11-12 20:34:43 -耗时 : 938
2019-11-12 20:34:43 -返回值 : 12241
2019-11-12 20:34:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:34:45 -HTTP METHOD : POST
2019-11-12 20:34:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:34:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4fad8a5f]
2019-11-12 20:34:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:34:45 -==> Parameters: 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String), 2019-05(String), 2(String), 1-0085(String)
2019-11-12 20:34:46 -<==      Total: 3
2019-11-12 20:34:46 -耗时 : 606
2019-11-12 20:34:46 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3785fc8d, com.bootdo.moneyList.damain.MoneyListDO@242f0a3, com.bootdo.moneyList.damain.MoneyListDO@43cc1e17]
2019-11-12 20:34:47 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12241/1-0085
2019-11-12 20:34:47 -HTTP METHOD : GET
2019-11-12 20:34:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 20:34:47 -参数 : [12241, 1-0085, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@1eb0c404, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@1eb0c404, org.apache.shiro.web.servlet.ShiroHttpServletRequest@283e6637]
2019-11-12 20:34:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 20:34:47 -==> Parameters: 12241(Long)
2019-11-12 20:34:47 -<==      Total: 1
2019-11-12 20:34:47 -耗时 : 9
2019-11-12 20:34:47 -返回值 : moneyList/moneyPrint
2019-11-12 20:35:26 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 20:35:26 -HTTP METHOD : POST
2019-11-12 20:35:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 20:35:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6bc8b3a1, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d08a300]
2019-11-12 20:38:25 -Starting BootdoApplication on PC-201905091110 with PID 20820 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-11-12 20:38:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-11-12 20:38:25 -The following profiles are active: dev
2019-11-12 20:38:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ddabb18: startup date [Tue Nov 12 20:38:26 CST 2019]; root of context hierarchy
2019-11-12 20:38:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-11-12 20:38:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$438f0242] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$35e830e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-11-12 20:38:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-11-12 20:38:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:38:50 -Tomcat initialized with port(s): 8081 (http)
2019-11-12 20:38:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-11-12 20:38:50 -Starting service [Tomcat]
2019-11-12 20:38:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-11-12 20:38:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;;C:\Program Files (x86)\pycSafefile\x64;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\JetBrains\WebStorm 2019.2.4\bin;;C:\Users\Administrator\Desktop;;.]
2019-11-12 20:38:51 -Initializing Spring embedded WebApplicationContext
2019-11-12 20:38:51 -Root WebApplicationContext: initialization completed in 24564 ms
2019-11-12 20:38:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-11-12 20:38:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-11-12 20:38:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-11-12 20:38:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-11-12 20:38:52 -Filter xssFilter was not registered (disabled)
2019-11-12 20:38:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-11-12 20:38:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-11-12 20:38:52 -Servlet statViewServlet mapped to [/druid/*]
2019-11-12 20:38:52 -Servlet dispatcherServlet mapped to [/]
2019-11-12 20:38:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ddabb18: startup date [Tue Nov 12 20:38:26 CST 2019]; root of context hierarchy
2019-11-12 20:39:00 -Using default implementation for ThreadExecutor
2019-11-12 20:39:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-11-12 20:39:00 -Quartz Scheduler v.2.3.0 created.
2019-11-12 20:39:00 -RAMJobStore initialized.
2019-11-12 20:39:00 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-11-12 20:39:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-11-12 20:39:00 -Quartz scheduler version: 2.3.0
2019-11-12 20:39:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@582ea164
2019-11-12 20:39:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-11-12 20:39:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-11-12 20:39:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-11-12 20:39:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-11-12 20:39:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-11-12 20:39:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-11-12 20:39:07 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-11-12 20:39:07 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-11-12 20:39:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-11-12 20:39:07 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-11-12 20:39:07 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-11-12 20:39:07 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-11-12 20:39:07 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-11-12 20:39:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-11-12 20:39:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-11-12 20:39:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-11-12 20:39:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-11-12 20:39:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-11-12 20:39:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-11-12 20:39:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-11-12 20:39:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-11-12 20:39:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-11-12 20:39:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-11-12 20:39:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:39:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-11-12 20:39:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:39:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-11-12 20:39:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-11-12 20:39:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-11-12 20:39:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-11-12 20:39:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-11-12 20:39:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-11-12 20:39:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-11-12 20:39:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-11-12 20:39:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-11-12 20:39:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-11-12 20:39:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-11-12 20:39:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-11-12 20:39:08 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-11-12 20:39:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-11-12 20:39:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-11-12 20:39:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:39:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:39:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-11-12 20:39:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-11-12 20:39:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-11-12 20:39:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-11-12 20:39:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-11-12 20:39:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-11-12 20:39:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-11-12 20:39:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-11-12 20:39:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-11-12 20:39:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-11-12 20:39:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-11-12 20:39:08 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-11-12 20:39:08 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-11-12 20:39:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-11-12 20:39:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-11-12 20:39:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-11-12 20:39:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-11-12 20:39:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-11-12 20:39:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-11-12 20:39:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-11-12 20:39:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-11-12 20:39:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-11-12 20:39:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-11-12 20:39:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-11-12 20:39:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-11-12 20:39:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-11-12 20:39:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-11-12 20:39:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-11-12 20:39:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-11-12 20:39:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-11-12 20:39:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:39:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:39:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-11-12 20:39:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-11-12 20:39:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-11-12 20:39:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-11-12 20:39:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-11-12 20:39:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-11-12 20:39:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:39:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:39:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-11-12 20:39:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:39:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-11-12 20:39:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:39:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-11-12 20:39:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-11-12 20:39:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-11-12 20:39:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-11-12 20:39:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-11-12 20:39:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-11-12 20:39:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:39:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ddabb18: startup date [Tue Nov 12 20:38:26 CST 2019]; root of context hierarchy
2019-11-12 20:39:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:39:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:39:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-11-12 20:39:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-11-12 20:39:30 -Registering beans for JMX exposure on startup
2019-11-12 20:39:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-11-12 20:39:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-11-12 20:39:30 -Starting beans in phase 2147483647
2019-11-12 20:39:30 -Context refreshed
2019-11-12 20:39:32 -Found 1 custom documentation plugin(s)
2019-11-12 20:39:32 -Scanning for api listing references
2019-11-12 20:44:45 -Starting BootdoApplication on PC-201905091110 with PID 11372 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-11-12 20:44:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-11-12 20:44:45 -The following profiles are active: dev
2019-11-12 20:44:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Tue Nov 12 20:44:45 CST 2019]; root of context hierarchy
2019-11-12 20:44:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-11-12 20:45:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e616fdec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d8702c93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-11-12 20:45:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-11-12 20:45:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-11-12 20:45:07 -Tomcat initialized with port(s): 8081 (http)
2019-11-12 20:45:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-11-12 20:45:07 -Starting service [Tomcat]
2019-11-12 20:45:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-11-12 20:45:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;;C:\Program Files (x86)\pycSafefile\x64;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\JetBrains\WebStorm 2019.2.4\bin;;C:\Users\Administrator\Desktop;;.]
2019-11-12 20:45:08 -Initializing Spring embedded WebApplicationContext
2019-11-12 20:45:08 -Root WebApplicationContext: initialization completed in 22926 ms
2019-11-12 20:45:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-11-12 20:45:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-11-12 20:45:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-11-12 20:45:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-11-12 20:45:09 -Filter xssFilter was not registered (disabled)
2019-11-12 20:45:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-11-12 20:45:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-11-12 20:45:09 -Servlet statViewServlet mapped to [/druid/*]
2019-11-12 20:45:09 -Servlet dispatcherServlet mapped to [/]
2019-11-12 20:45:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Tue Nov 12 20:44:45 CST 2019]; root of context hierarchy
2019-11-12 20:45:19 -Using default implementation for ThreadExecutor
2019-11-12 20:45:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-11-12 20:45:19 -Quartz Scheduler v.2.3.0 created.
2019-11-12 20:45:19 -RAMJobStore initialized.
2019-11-12 20:45:19 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-11-12 20:45:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-11-12 20:45:19 -Quartz scheduler version: 2.3.0
2019-11-12 20:45:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@45273d40
2019-11-12 20:45:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-11-12 20:45:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-11-12 20:45:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-11-12 20:45:25 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-11-12 20:45:25 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-11-12 20:45:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-11-12 20:45:25 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-11-12 20:45:25 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-11-12 20:45:25 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-11-12 20:45:25 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-11-12 20:45:25 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-11-12 20:45:25 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-11-12 20:45:25 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-11-12 20:45:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-11-12 20:45:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-11-12 20:45:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-11-12 20:45:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-11-12 20:45:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-11-12 20:45:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-11-12 20:45:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-11-12 20:45:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-11-12 20:45:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:45:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-11-12 20:45:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-11-12 20:45:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-11-12 20:45:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-11-12 20:45:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-11-12 20:45:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-11-12 20:45:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-11-12 20:45:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-11-12 20:45:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-11-12 20:45:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-11-12 20:45:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-11-12 20:45:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-11-12 20:45:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-11-12 20:45:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-11-12 20:45:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-11-12 20:45:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-11-12 20:45:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-11-12 20:45:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-11-12 20:45:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-11-12 20:45:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-11-12 20:45:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-11-12 20:45:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-11-12 20:45:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-11-12 20:45:26 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-11-12 20:45:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-11-12 20:45:26 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-11-12 20:45:26 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-11-12 20:45:26 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-11-12 20:45:26 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-11-12 20:45:26 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-11-12 20:45:26 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-11-12 20:45:26 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-11-12 20:45:26 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-11-12 20:45:26 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-11-12 20:45:26 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-11-12 20:45:26 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-11-12 20:45:26 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-11-12 20:45:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-11-12 20:45:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-11-12 20:45:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-11-12 20:45:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-11-12 20:45:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-11-12 20:45:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-11-12 20:45:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-11-12 20:45:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-11-12 20:45:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-11-12 20:45:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-11-12 20:45:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-11-12 20:45:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-11-12 20:45:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-11-12 20:45:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-11-12 20:45:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-11-12 20:45:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-11-12 20:45:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-11-12 20:45:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:45:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-11-12 20:45:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-11-12 20:45:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-11-12 20:45:26 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-11-12 20:45:26 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-11-12 20:45:26 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-11-12 20:45:26 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:26 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-11-12 20:45:26 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-11-12 20:45:26 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-11-12 20:45:26 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-11-12 20:45:26 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-11-12 20:45:26 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-11-12 20:45:26 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-11-12 20:45:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-11-12 20:45:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-11-12 20:45:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-11-12 20:45:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-11-12 20:45:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-11-12 20:45:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-11-12 20:45:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-11-12 20:45:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:45:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Tue Nov 12 20:44:45 CST 2019]; root of context hierarchy
2019-11-12 20:45:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:45:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-11-12 20:45:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-11-12 20:45:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-11-12 20:45:35 -Registering beans for JMX exposure on startup
2019-11-12 20:45:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-11-12 20:45:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-11-12 20:45:35 -Starting beans in phase 2147483647
2019-11-12 20:45:35 -Context refreshed
2019-11-12 20:45:35 -Found 1 custom documentation plugin(s)
2019-11-12 20:45:35 -Scanning for api listing references
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_1
2019-11-12 20:45:37 -Generating unique operation named: addUsingGET_1
2019-11-12 20:45:37 -Generating unique operation named: editUsingGET_1
2019-11-12 20:45:37 -Generating unique operation named: listUsingGET_1
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_2
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_3
2019-11-12 20:45:37 -Generating unique operation named: saveUsingPOST_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingGET_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingHEAD_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPOST_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPUT_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPATCH_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingDELETE_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-11-12 20:45:37 -Generating unique operation named: updateUsingTRACE_1
2019-11-12 20:45:37 -Generating unique operation named: addUsingGET_2
2019-11-12 20:45:37 -Generating unique operation named: editUsingGET_2
2019-11-12 20:45:37 -Generating unique operation named: listUsingGET_2
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_4
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_5
2019-11-12 20:45:37 -Generating unique operation named: saveUsingPOST_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPOST_2
2019-11-12 20:45:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-11-12 20:45:37 -Generating unique operation named: addUsingGET_3
2019-11-12 20:45:37 -Generating unique operation named: editUsingGET_3
2019-11-12 20:45:37 -Generating unique operation named: listUsingGET_3
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_6
2019-11-12 20:45:37 -Generating unique operation named: removeUsingPOST_7
2019-11-12 20:45:37 -Generating unique operation named: saveUsingPOST_3
2019-11-12 20:45:37 -Generating unique operation named: updateUsingGET_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingHEAD_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPOST_3
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPUT_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingPATCH_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingDELETE_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-11-12 20:45:37 -Generating unique operation named: updateUsingTRACE_2
2019-11-12 20:45:38 -Generating unique operation named: addUsingGET_4
2019-11-12 20:45:38 -Generating unique operation named: editUsingGET_4
2019-11-12 20:45:38 -Generating unique operation named: listUsingGET_4
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_8
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_9
2019-11-12 20:45:38 -Generating unique operation named: saveUsingPOST_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingGET_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingHEAD_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPOST_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPUT_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPATCH_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingDELETE_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-11-12 20:45:38 -Generating unique operation named: updateUsingTRACE_3
2019-11-12 20:45:38 -Generating unique operation named: ElecUsingGET_1
2019-11-12 20:45:38 -Generating unique operation named: addUsingGET_5
2019-11-12 20:45:38 -Generating unique operation named: editUsingGET_5
2019-11-12 20:45:38 -Generating unique operation named: listUsingGET_5
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_10
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_11
2019-11-12 20:45:38 -Generating unique operation named: saveUsingPOST_5
2019-11-12 20:45:38 -Generating unique operation named: updateUsingGET_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingHEAD_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPOST_5
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPUT_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPATCH_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingDELETE_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-11-12 20:45:38 -Generating unique operation named: updateUsingTRACE_4
2019-11-12 20:45:38 -Generating unique operation named: editUsingGET_6
2019-11-12 20:45:38 -Generating unique operation named: listUsingGET_6
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPOST_6
2019-11-12 20:45:38 -Generating unique operation named: addUsingGET_6
2019-11-12 20:45:38 -Generating unique operation named: editUsingGET_7
2019-11-12 20:45:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-11-12 20:45:38 -Generating unique operation named: listUsingGET_7
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_12
2019-11-12 20:45:38 -Generating unique operation named: removeUsingPOST_13
2019-11-12 20:45:38 -Generating unique operation named: saveUsingPOST_6
2019-11-12 20:45:38 -Generating unique operation named: updateUsingGET_5
2019-11-12 20:45:38 -Generating unique operation named: updateUsingHEAD_5
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPOST_7
2019-11-12 20:45:38 -Generating unique operation named: updateUsingPUT_5
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPATCH_5
2019-11-12 20:45:39 -Generating unique operation named: updateUsingDELETE_5
2019-11-12 20:45:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-11-12 20:45:39 -Generating unique operation named: updateUsingTRACE_5
2019-11-12 20:45:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-11-12 20:45:39 -Generating unique operation named: addUsingGET_7
2019-11-12 20:45:39 -Generating unique operation named: editUsingGET_8
2019-11-12 20:45:39 -Generating unique operation named: listUsingGET_8
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_14
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_15
2019-11-12 20:45:39 -Generating unique operation named: saveUsingPOST_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingGET_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingHEAD_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPOST_8
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPUT_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPATCH_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingDELETE_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-11-12 20:45:39 -Generating unique operation named: updateUsingTRACE_6
2019-11-12 20:45:39 -Generating unique operation named: addUsingGET_8
2019-11-12 20:45:39 -Generating unique operation named: editUsingGET_9
2019-11-12 20:45:39 -Generating unique operation named: listUsingGET_9
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_16
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_17
2019-11-12 20:45:39 -Generating unique operation named: saveUsingPOST_8
2019-11-12 20:45:39 -Generating unique operation named: updateUsingGET_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingHEAD_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPOST_9
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPUT_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPATCH_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingDELETE_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-11-12 20:45:39 -Generating unique operation named: updateUsingTRACE_7
2019-11-12 20:45:39 -Generating unique operation named: addUsingGET_9
2019-11-12 20:45:39 -Generating unique operation named: editUsingGET_10
2019-11-12 20:45:39 -Generating unique operation named: infoUsingGET_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingHEAD_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingPOST_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingPUT_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingPATCH_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingDELETE_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-11-12 20:45:39 -Generating unique operation named: infoUsingTRACE_1
2019-11-12 20:45:39 -Generating unique operation named: listUsingGET_10
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_18
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_19
2019-11-12 20:45:39 -Generating unique operation named: saveUsingPOST_9
2019-11-12 20:45:39 -Generating unique operation named: updateUsingPOST_10
2019-11-12 20:45:39 -Generating unique operation named: listUsingGET_11
2019-11-12 20:45:39 -Generating unique operation named: removeUsingPOST_20
2019-11-12 20:45:39 -Generating unique operation named: welcomeUsingGET_1
2019-11-12 20:45:39 -Generating unique operation named: addUsingGET_10
2019-11-12 20:45:39 -Generating unique operation named: editUsingGET_11
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_12
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_21
2019-11-12 20:45:40 -Generating unique operation named: saveUsingPOST_10
2019-11-12 20:45:40 -Generating unique operation named: treeUsingGET_1
2019-11-12 20:45:40 -Generating unique operation named: treeUsingGET_2
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPOST_11
2019-11-12 20:45:40 -Generating unique operation named: addUsingGET_11
2019-11-12 20:45:40 -Generating unique operation named: editUsingGET_12
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_13
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_22
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_23
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPOST_12
2019-11-12 20:45:40 -Generating unique operation named: addUsingGET_12
2019-11-12 20:45:40 -Generating unique operation named: editUsingGET_13
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_14
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_24
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_25
2019-11-12 20:45:40 -Generating unique operation named: saveUsingPOST_11
2019-11-12 20:45:40 -Generating unique operation named: updateUsingGET_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingHEAD_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPOST_13
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPUT_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPATCH_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingDELETE_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-11-12 20:45:40 -Generating unique operation named: updateUsingTRACE_8
2019-11-12 20:45:40 -Generating unique operation named: addUsingGET_13
2019-11-12 20:45:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-11-12 20:45:40 -Generating unique operation named: editUsingGET_14
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_15
2019-11-12 20:45:40 -Generating unique operation named: printEditUsingGET_1
2019-11-12 20:45:40 -Generating unique operation named: removeUsingPOST_26
2019-11-12 20:45:40 -Generating unique operation named: saveUsingPOST_12
2019-11-12 20:45:40 -Generating unique operation named: updateUsingGET_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingHEAD_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPOST_14
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPUT_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPATCH_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingDELETE_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-11-12 20:45:40 -Generating unique operation named: updateUsingTRACE_9
2019-11-12 20:45:40 -Generating unique operation named: addUsingGET_14
2019-11-12 20:45:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-11-12 20:45:40 -Generating unique operation named: editUsingGET_15
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_16
2019-11-12 20:45:40 -Generating unique operation named: saveUsingPOST_13
2019-11-12 20:45:40 -Generating unique operation named: saveUsingPOST_14
2019-11-12 20:45:40 -Generating unique operation named: updateUsingPOST_15
2019-11-12 20:45:40 -Generating unique operation named: listUsingGET_17
2019-11-12 20:45:41 -Generating unique operation named: listUsingHEAD_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingPOST_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingPUT_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingPATCH_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingDELETE_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingOPTIONS_1
2019-11-12 20:45:41 -Generating unique operation named: listUsingTRACE_1
2019-11-12 20:45:41 -Generating unique operation named: countDDUsingGET_1
2019-11-12 20:45:41 -Generating unique operation named: exportDDUsingGET_1
2019-11-12 20:45:41 -Generating unique operation named: exportElecYYUsingGET_1
2019-11-12 20:45:41 -Generating unique operation named: addUsingGET_15
2019-11-12 20:45:41 -Generating unique operation named: batchRemoveUsingPOST_3
2019-11-12 20:45:41 -Generating unique operation named: editUsingGET_16
2019-11-12 20:45:41 -Generating unique operation named: listUsingGET_18
2019-11-12 20:45:41 -Generating unique operation named: removeUsingPOST_27
2019-11-12 20:45:41 -Generating unique operation named: saveUsingPOST_15
2019-11-12 20:45:41 -Generating unique operation named: treeUsingGET_3
2019-11-12 20:45:41 -Generating unique operation named: treeViewUsingGET_1
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPOST_16
2019-11-12 20:45:41 -Generating unique operation named: addUsingGET_16
2019-11-12 20:45:41 -Generating unique operation named: editUsingGET_17
2019-11-12 20:45:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-11-12 20:45:41 -Generating unique operation named: listUsingGET_19
2019-11-12 20:45:41 -Generating unique operation named: removeUsingPOST_28
2019-11-12 20:45:41 -Generating unique operation named: removeUsingPOST_29
2019-11-12 20:45:41 -Generating unique operation named: saveUsingPOST_16
2019-11-12 20:45:41 -Generating unique operation named: updateUsingGET_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingHEAD_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPOST_17
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPUT_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPATCH_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingDELETE_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-11-12 20:45:41 -Generating unique operation named: updateUsingTRACE_10
2019-11-12 20:45:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-11-12 20:45:41 -Generating unique operation named: addUsingGET_17
2019-11-12 20:45:41 -Generating unique operation named: editUsingGET_18
2019-11-12 20:45:41 -Generating unique operation named: listUsingGET_20
2019-11-12 20:45:41 -Generating unique operation named: removeUsingPOST_30
2019-11-12 20:45:41 -Generating unique operation named: removeUsingPOST_31
2019-11-12 20:45:41 -Generating unique operation named: saveUsingPOST_17
2019-11-12 20:45:41 -Generating unique operation named: updateUsingGET_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingHEAD_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPOST_18
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPUT_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingPATCH_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingDELETE_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-11-12 20:45:41 -Generating unique operation named: updateUsingTRACE_11
2019-11-12 20:45:42 -Generating unique operation named: addUsingGET_18
2019-11-12 20:45:42 -Generating unique operation named: editUsingGET_19
2019-11-12 20:45:42 -Generating unique operation named: listUsingGET_21
2019-11-12 20:45:42 -Generating unique operation named: removeUsingPOST_32
2019-11-12 20:45:42 -Generating unique operation named: removeUsingPOST_33
2019-11-12 20:45:42 -Generating unique operation named: saveUsingPOST_18
2019-11-12 20:45:42 -Generating unique operation named: updateUsingGET_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingHEAD_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingPOST_19
2019-11-12 20:45:42 -Generating unique operation named: updateUsingPUT_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingPATCH_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingDELETE_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-11-12 20:45:42 -Generating unique operation named: updateUsingTRACE_12
2019-11-12 20:45:42 -Starting Quartz Scheduler now
2019-11-12 20:45:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-11-12 20:45:42 -Starting...
2019-11-12 20:45:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-11-12 20:45:42 -Started.
2019-11-12 20:45:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-11-12 20:45:42 -Using a shared selector for servlet write/read
2019-11-12 20:45:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-11-12 20:45:42 -Started BootdoApplication in 66.191 seconds (JVM running for 68.196)
2019-11-12 20:45:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-11-12 20:45:43 -==> Parameters: 
2019-11-12 20:45:43 -<==      Total: 1
2019-11-12 20:45:57 -A cookie header was received [1573474683,1573526259,1573561875; Hm_lpvt_eaa57ca47dacb4ad4f5a257001a3457c=1573561897] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2019-11-12 20:45:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-11-12 20:45:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-11-12 20:45:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 157 ms
2019-11-12 20:45:58 -Enabling session validation scheduler...
2019-11-12 20:45:58 -请求地址 : http://localhost:8081/login;JSESSIONID=134262fc-b9dd-418d-89ff-aa220264cd7a
2019-11-12 20:45:58 -HTTP METHOD : GET
2019-11-12 20:45:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-11-12 20:45:58 -参数 : [{}]
2019-11-12 20:45:58 -耗时 : 5
2019-11-12 20:45:58 -返回值 : login
2019-11-12 20:46:13 -请求地址 : http://localhost:8081/getVerify
2019-11-12 20:46:13 -HTTP METHOD : GET
2019-11-12 20:46:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-11-12 20:46:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@420b9a54, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ccc6c65]
2019-11-12 20:46:26 -8546
2019-11-12 20:46:26 -耗时 : 12882
2019-11-12 20:46:26 -返回值 : null
2019-11-12 20:46:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-11-12 20:46:31 -请求地址 : http://localhost:8081/login
2019-11-12 20:46:31 -HTTP METHOD : POST
2019-11-12 20:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-11-12 20:46:31 -参数 : [admin, 111111, 8546, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11788fa]
2019-11-12 20:46:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-11-12 20:46:31 -==> Parameters: admin(String)
2019-11-12 20:46:31 -<==      Total: 1
2019-11-12 20:46:31 -耗时 : 663
2019-11-12 20:46:31 -返回值 : {msg=操作成功, code=0}
2019-11-12 20:46:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-11-12 20:46:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:46:32 -==> Parameters: 1(Long), admin(String), 登录(String), 663(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-11-12 20:46:32.04(Timestamp)
2019-11-12 20:46:32 -请求地址 : http://localhost:8081/index
2019-11-12 20:46:32 -HTTP METHOD : GET
2019-11-12 20:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 20:46:32 -参数 : [{}]
2019-11-12 20:46:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 20:46:33 -<==    Updates: 1
2019-11-12 20:46:33 -==> Parameters: 1(Long)
2019-11-12 20:46:33 -<==      Total: 50
2019-11-12 20:46:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 20:46:33 -==> Parameters: 138(Long)
2019-11-12 20:46:33 -<==      Total: 1
2019-11-12 20:46:33 -耗时 : 1257
2019-11-12 20:46:33 -返回值 : index_v1
2019-11-12 20:46:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:46:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1258(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 20:46:34.014(Timestamp)
2019-11-12 20:46:34 -<==    Updates: 1
2019-11-12 20:46:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 20:46:37 -HTTP METHOD : GET
2019-11-12 20:46:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 20:46:37 -参数 : []
2019-11-12 20:46:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 20:46:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 20:46:37 -请求地址 : http://localhost:8081/main
2019-11-12 20:46:37 -HTTP METHOD : GET
2019-11-12 20:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 20:46:37 -参数 : []
2019-11-12 20:46:37 -耗时 : 1
2019-11-12 20:46:37 -返回值 : main
2019-11-12 20:46:37 -请求地址 : http://localhost:8081/main
2019-11-12 20:46:37 -HTTP METHOD : GET
2019-11-12 20:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 20:46:37 -参数 : []
2019-11-12 20:46:37 -耗时 : 0
2019-11-12 20:46:37 -返回值 : main
2019-11-12 20:46:39 -<==      Total: 0
2019-11-12 20:46:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 20:46:39 -==> Parameters: 1(Long), 0(String)
2019-11-12 20:46:39 -<==      Total: 1
2019-11-12 20:46:39 -耗时 : 1798
2019-11-12 20:46:39 -返回值 : com.bootdo.common.utils.PageUtils@2a609985
2019-11-12 20:47:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-11-12 20:47:29 -==> Parameters: 1(Long)
2019-11-12 20:47:29 -<==      Total: 94
2019-11-12 20:47:29 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 20:47:29 -HTTP METHOD : GET
2019-11-12 20:47:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 20:47:29 -参数 : []
2019-11-12 20:47:29 -耗时 : 0
2019-11-12 20:47:29 -返回值 : moneyList/moneyList
2019-11-12 20:47:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 20:47:36 -HTTP METHOD : GET
2019-11-12 20:47:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 20:47:36 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 20:47:36 -耗时 : 0
2019-11-12 20:47:36 -返回值 : system/dept/deptTree
2019-11-12 20:47:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 20:47:37 -HTTP METHOD : GET
2019-11-12 20:47:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 20:47:37 -参数 : []
2019-11-12 20:47:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 20:47:37 -==> Parameters: 
2019-11-12 20:47:37 -<==      Total: 3
2019-11-12 20:47:37 -耗时 : 104
2019-11-12 20:47:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 20:47:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:47:54 -HTTP METHOD : POST
2019-11-12 20:47:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:47:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@18ab4417]
2019-11-12 20:47:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:47:54 -==> Parameters: 2019-05(String), 2(String), 2-0085(String), 2019-05(String), 2(String), 2-0085(String), 2019-05(String), 2(String), 2-0085(String)
2019-11-12 20:47:55 -<==      Total: 3
2019-11-12 20:47:55 -耗时 : 1137
2019-11-12 20:47:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@240422fb, com.bootdo.moneyList.damain.MoneyListDO@5738d8, com.bootdo.moneyList.damain.MoneyListDO@a83829]
2019-11-12 20:48:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:00 -HTTP METHOD : POST
2019-11-12 20:48:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@33b5fa62]
2019-11-12 20:48:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:00 -==> Parameters: 2019-05(String), 2(String), 2-0067(String), 2019-05(String), 2(String), 2-0067(String), 2019-05(String), 2(String), 2-0067(String)
2019-11-12 20:48:00 -<==      Total: 3
2019-11-12 20:48:00 -耗时 : 75
2019-11-12 20:48:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5a44e494, com.bootdo.moneyList.damain.MoneyListDO@2e2b4ed5, com.bootdo.moneyList.damain.MoneyListDO@7c8c9249]
2019-11-12 20:48:07 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:07 -HTTP METHOD : POST
2019-11-12 20:48:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@476a40cd]
2019-11-12 20:48:07 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:07 -==> Parameters: 2019-05(String), 2(String), 2-0043(String), 2019-05(String), 2(String), 2-0043(String), 2019-05(String), 2(String), 2-0043(String)
2019-11-12 20:48:07 -<==      Total: 3
2019-11-12 20:48:07 -耗时 : 64
2019-11-12 20:48:07 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@17e660b8, com.bootdo.moneyList.damain.MoneyListDO@5c539905, com.bootdo.moneyList.damain.MoneyListDO@49aad66a]
2019-11-12 20:48:11 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:11 -HTTP METHOD : POST
2019-11-12 20:48:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7688821a]
2019-11-12 20:48:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:11 -==> Parameters: 2019-05(String), 2(String), 2-0075(String), 2019-05(String), 2(String), 2-0075(String), 2019-05(String), 2(String), 2-0075(String)
2019-11-12 20:48:11 -<==      Total: 3
2019-11-12 20:48:11 -耗时 : 68
2019-11-12 20:48:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6a37f8cc, com.bootdo.moneyList.damain.MoneyListDO@3cdbffd5, com.bootdo.moneyList.damain.MoneyListDO@ef12206]
2019-11-12 20:48:16 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:16 -HTTP METHOD : POST
2019-11-12 20:48:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1f670e2]
2019-11-12 20:48:16 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:16 -==> Parameters: 2019-05(String), 2(String), 2-0096(String), 2019-05(String), 2(String), 2-0096(String), 2019-05(String), 2(String), 2-0096(String)
2019-11-12 20:48:16 -<==      Total: 3
2019-11-12 20:48:16 -耗时 : 73
2019-11-12 20:48:16 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@b0e1b92, com.bootdo.moneyList.damain.MoneyListDO@4e0c9497, com.bootdo.moneyList.damain.MoneyListDO@7c4f8cd4]
2019-11-12 20:48:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:21 -HTTP METHOD : POST
2019-11-12 20:48:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@21e84efd]
2019-11-12 20:48:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:21 -==> Parameters: 2019-05(String), 2(String), 2-0013(String), 2019-05(String), 2(String), 2-0013(String), 2019-05(String), 2(String), 2-0013(String)
2019-11-12 20:48:21 -<==      Total: 3
2019-11-12 20:48:21 -耗时 : 75
2019-11-12 20:48:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@543cb090, com.bootdo.moneyList.damain.MoneyListDO@1b6f752c, com.bootdo.moneyList.damain.MoneyListDO@66527b26]
2019-11-12 20:48:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 20:48:27 -HTTP METHOD : POST
2019-11-12 20:48:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 20:48:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14fa1ffc]
2019-11-12 20:48:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:48:27 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 20:48:27 -<==      Total: 3
2019-11-12 20:48:27 -耗时 : 74
2019-11-12 20:48:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2138026d, com.bootdo.moneyList.damain.MoneyListDO@2076ce80, com.bootdo.moneyList.damain.MoneyListDO@6437308d]
2019-11-12 20:48:36 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 20:48:36 -HTTP METHOD : POST
2019-11-12 20:48:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 20:48:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@8e079a0, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ca73ba4]
2019-11-12 20:50:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:50:36 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 20:50:36 -<==      Total: 3
2019-11-12 20:54:42 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 20:54:42 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 20:54:42 -<==      Total: 1
2019-11-12 20:55:35 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 20:55:35 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 20:55:35 -<==      Total: 1
2019-11-12 20:55:53 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 20:55:53 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 20:55:53 -<==      Total: 1
2019-11-12 20:57:28 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 20:57:28 -==> Parameters: 2(String), A(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 20:57:29 -<==    Updates: 1
2019-11-12 20:57:32 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:57:33 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-11-12 20:52:48.691(Timestamp), 2019-05(String), admin(String), 2019-11-12 20:52:59.082(Timestamp), admin(String), null
2019-11-12 20:57:33 -<==    Updates: 1
2019-11-12 20:57:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 20:57:40 -==> Parameters: 1-0087(String), 2(String), 2019-05(String), 2019-11-12 20:52:48.691(Timestamp)
2019-11-12 20:57:41 -<==      Total: 0
2019-11-12 20:59:27 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 20:59:27 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1012.0(BigDecimal), 1012.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 37.18(BigDecimal), 2(BigDecimal), 3.50(BigDecimal), 45.78(BigDecimal), 80.12(BigDecimal), 2.25(BigDecimal), null, 5.00(BigDecimal), 5.00(BigDecimal), 37.00(BigDecimal), null, 2019-11-12 20:59:21.986(Timestamp), 2(BigDecimal), 2019-05(String), admin(String), 2019-11-12 20:59:24.484(Timestamp), admin(String), null
2019-11-12 20:59:27 -<==    Updates: 1
2019-11-12 21:00:21 -耗时 : 704490
2019-11-12 21:00:21 -返回值 : 12242
2019-11-12 21:00:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:00:26 -HTTP METHOD : POST
2019-11-12 21:00:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:00:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1bcce401]
2019-11-12 21:00:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:00:26 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:00:27 -<==      Total: 3
2019-11-12 21:00:27 -耗时 : 815
2019-11-12 21:00:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2daee573, com.bootdo.moneyList.damain.MoneyListDO@2ac813d2, com.bootdo.moneyList.damain.MoneyListDO@56d80666]
2019-11-12 21:01:06 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12242/1-0087
2019-11-12 21:01:06 -HTTP METHOD : GET
2019-11-12 21:01:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 21:01:06 -参数 : [12242, 1-0087, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@4020480a, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@4020480a, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d6bcd4f]
2019-11-12 21:01:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 21:01:06 -==> Parameters: 12242(Long)
2019-11-12 21:01:07 -<==      Total: 1
2019-11-12 21:01:07 -耗时 : 437
2019-11-12 21:01:07 -返回值 : moneyList/moneyPrint
2019-11-12 21:04:03 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 21:04:03 -HTTP METHOD : POST
2019-11-12 21:04:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 21:04:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@338c871f, org.apache.shiro.web.servlet.ShiroHttpServletRequest@768e0f0a]
2019-11-12 21:04:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:04:09 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:04:09 -<==      Total: 3
2019-11-12 21:04:09 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:04:09 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:04:09 -<==      Total: 1
2019-11-12 21:04:09 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 21:04:09 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:04:09 -<==      Total: 1
2019-11-12 21:04:09 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 21:04:09 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:04:09 -<==      Total: 1
2019-11-12 21:04:14 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:04:14 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:04:14 -<==    Updates: 1
2019-11-12 21:04:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:04:16 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-11-12 21:04:09.579(Timestamp), 2019-05(String), admin(String), 2019-11-12 21:04:09.579(Timestamp), admin(String), null
2019-11-12 21:04:16 -<==    Updates: 1
2019-11-12 21:16:28 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-11-12 21:17:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 21:17:56 -==> Parameters: 1-0087(String), 2(String), 2019-05(String), 2019-11-12 21:04:09.579(Timestamp)
2019-11-12 21:17:56 -<==      Total: 1
2019-11-12 21:17:56 -==>  Preparing: update print SET `user_name` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 21:17:57 -==> Parameters: 李龙兴(String), 1012.0(BigDecimal), 1012.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 38.18(BigDecimal), 1(BigDecimal), 3.50(BigDecimal), 45.78(BigDecimal), 80.12(BigDecimal), 1.25(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), 36.00(BigDecimal), 12242(Long)
2019-11-12 21:17:57 -<==    Updates: 1
2019-11-12 21:17:57 -耗时 : 833658
2019-11-12 21:17:57 -返回值 : 12242
2019-11-12 21:18:39 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:18:39 -HTTP METHOD : POST
2019-11-12 21:18:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:18:39 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3b7f9c7]
2019-11-12 21:18:39 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:18:39 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:18:39 -<==      Total: 3
2019-11-12 21:18:39 -耗时 : 904
2019-11-12 21:18:39 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6ba3cb1, com.bootdo.moneyList.damain.MoneyListDO@4d16aa2b, com.bootdo.moneyList.damain.MoneyListDO@71d31b8f]
2019-11-12 21:18:43 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12242/1-0087
2019-11-12 21:18:43 -HTTP METHOD : GET
2019-11-12 21:18:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 21:18:43 -参数 : [12242, 1-0087, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@2e2fced3, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@2e2fced3, org.apache.shiro.web.servlet.ShiroHttpServletRequest@56b158b2]
2019-11-12 21:18:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 21:18:58 -==> Parameters: 12242(Long)
2019-11-12 21:18:58 -<==      Total: 1
2019-11-12 21:22:46 -耗时 : 242394
2019-11-12 21:22:46 -返回值 : moneyList/moneyPrint
2019-11-12 21:28:13 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 21:28:13 -HTTP METHOD : POST
2019-11-12 21:28:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 21:28:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4c59a9f8, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b5f01a4]
2019-11-12 21:28:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:28:18 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:28:18 -<==      Total: 3
2019-11-12 21:28:18 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:28:18 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:28:18 -<==      Total: 1
2019-11-12 21:28:18 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 21:28:18 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:28:18 -<==      Total: 1
2019-11-12 21:28:18 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 21:28:18 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:28:18 -<==      Total: 1
2019-11-12 21:28:19 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:28:19 -==> Parameters: 1(String), A(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:28:19 -<==    Updates: 1
2019-11-12 21:28:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:28:19 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-11-12 21:28:18.301(Timestamp), 2019-05(String), admin(String), 2019-11-12 21:28:18.301(Timestamp), admin(String), null
2019-11-12 21:28:19 -<==    Updates: 1
2019-11-12 21:28:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 21:28:19 -==> Parameters: 1-0087(String), 2(String), 2019-05(String), 2019-11-12 21:28:18.301(Timestamp)
2019-11-12 21:28:19 -<==      Total: 1
2019-11-12 21:28:19 -==>  Preparing: update print SET `user_name` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ? where id = ? 
2019-11-12 21:28:19 -==> Parameters: 李龙兴(String), 1012.0(BigDecimal), 1012.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 39.18(BigDecimal), 1(BigDecimal), 3.50(BigDecimal), 45.78(BigDecimal), 80.12(BigDecimal), 1.25(BigDecimal), 5.00(BigDecimal), 5.00(BigDecimal), 36.00(BigDecimal), 12242(Long)
2019-11-12 21:28:20 -<==    Updates: 1
2019-11-12 21:28:20 -耗时 : 6649
2019-11-12 21:28:20 -返回值 : 12242
2019-11-12 21:28:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:28:26 -HTTP METHOD : POST
2019-11-12 21:28:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:28:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@61f568dd]
2019-11-12 21:28:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:28:26 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:28:27 -<==      Total: 3
2019-11-12 21:28:27 -耗时 : 469
2019-11-12 21:28:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@29051cd9, com.bootdo.moneyList.damain.MoneyListDO@4d4be6e5, com.bootdo.moneyList.damain.MoneyListDO@732dc11]
2019-11-12 21:28:29 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12242/1-0087
2019-11-12 21:28:29 -HTTP METHOD : GET
2019-11-12 21:28:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 21:28:29 -参数 : [12242, 1-0087, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@6e62238, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@6e62238, org.apache.shiro.web.servlet.ShiroHttpServletRequest@75ec1dc8]
2019-11-12 21:28:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 21:28:41 -==> Parameters: 12242(Long)
2019-11-12 21:28:41 -<==      Total: 1
2019-11-12 21:29:05 -耗时 : 35815
2019-11-12 21:29:05 -返回值 : moneyList/moneyPrint
2019-11-12 21:32:51 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 21:32:51 -HTTP METHOD : POST
2019-11-12 21:32:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 21:32:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2260e69, org.apache.shiro.web.servlet.ShiroHttpServletRequest@42e293eb]
2019-11-12 21:33:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:33:32 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:33:33 -<==      Total: 3
2019-11-12 21:33:33 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:33:33 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:33:33 -<==      Total: 1
2019-11-12 21:33:33 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 21:33:33 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:33:33 -<==      Total: 1
2019-11-12 21:33:33 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 21:33:33 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:33:33 -<==      Total: 1
2019-11-12 21:33:36 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:33:36 -==> Parameters: 3(String), A(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:33:36 -<==    Updates: 1
2019-11-12 21:33:36 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:33:36 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1(String), 3(BigDecimal), 2019-11-12 21:33:33.39(Timestamp), 2019-05(String), admin(String), 2019-11-12 21:33:33.39(Timestamp), admin(String), null
2019-11-12 21:33:36 -<==    Updates: 1
2019-11-12 21:33:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 21:33:42 -==> Parameters: 1-0087(String), 2(String), 2019-05(String), 2019-11-12 21:33:33.39(Timestamp)
2019-11-12 21:33:42 -<==      Total: 0
2019-11-12 21:39:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:39:15 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:39:16 -<==      Total: 3
2019-11-12 21:39:16 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:39:16 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:39:16 -<==      Total: 1
2019-11-12 21:39:59 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 21:39:59 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:39:59 -<==      Total: 1
2019-11-12 21:39:59 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 21:39:59 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:39:59 -<==      Total: 1
2019-11-12 21:40:11 -请求地址 : http://localhost:8081/index
2019-11-12 21:40:11 -HTTP METHOD : GET
2019-11-12 21:40:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 21:40:11 -参数 : [{}]
2019-11-12 21:40:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 21:40:12 -==> Parameters: 1(Long)
2019-11-12 21:40:12 -<==      Total: 50
2019-11-12 21:40:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 21:40:12 -==> Parameters: 138(Long)
2019-11-12 21:40:12 -<==      Total: 1
2019-11-12 21:40:12 -耗时 : 716
2019-11-12 21:40:12 -返回值 : index_v1
2019-11-12 21:40:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:40:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 747(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 21:40:12.794(Timestamp)
2019-11-12 21:40:13 -<==    Updates: 1
2019-11-12 21:40:21 -请求地址 : http://localhost:8081/main
2019-11-12 21:40:21 -HTTP METHOD : GET
2019-11-12 21:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 21:40:21 -参数 : []
2019-11-12 21:40:21 -耗时 : 1
2019-11-12 21:40:21 -返回值 : main
2019-11-12 21:40:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 21:40:24 -HTTP METHOD : GET
2019-11-12 21:40:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 21:40:24 -参数 : []
2019-11-12 21:40:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 21:40:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 21:40:26 -<==      Total: 0
2019-11-12 21:40:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 21:40:26 -==> Parameters: 1(Long), 0(String)
2019-11-12 21:40:26 -<==      Total: 1
2019-11-12 21:40:26 -耗时 : 1186
2019-11-12 21:40:26 -返回值 : com.bootdo.common.utils.PageUtils@239956a2
2019-11-12 21:40:26 -请求地址 : http://localhost:8081/main
2019-11-12 21:40:26 -HTTP METHOD : GET
2019-11-12 21:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 21:40:26 -参数 : []
2019-11-12 21:40:26 -耗时 : 1
2019-11-12 21:40:26 -返回值 : main
2019-11-12 21:40:27 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:40:27 -==> Parameters: 3(String), A(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:40:29 -<==    Updates: 1
2019-11-12 21:40:29 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:40:29 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1(String), 3(BigDecimal), 2019-11-12 21:39:16.403(Timestamp), 2019-05(String), admin(String), 2019-11-12 21:39:16.403(Timestamp), admin(String), null
2019-11-12 21:40:29 -<==    Updates: 1
2019-11-12 21:40:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 21:40:29 -==> Parameters: 1-0087(String), 2(String), 2019-05(String), 2019-11-12 21:39:16.403(Timestamp)
2019-11-12 21:40:29 -<==      Total: 0
2019-11-12 21:40:29 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:40:29 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 1012.0(BigDecimal), 1012.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 45.18(BigDecimal), 3(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-11-12 21:40:29.642(Timestamp), 3(BigDecimal), 2019-05(String), admin(String), 2019-11-12 21:40:29.642(Timestamp), admin(String), null
2019-11-12 21:40:29 -<==    Updates: 1
2019-11-12 21:40:29 -耗时 : 458051
2019-11-12 21:40:29 -返回值 : 12243
2019-11-12 21:40:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-11-12 21:40:52 -==> Parameters: 1(Long)
2019-11-12 21:40:52 -<==      Total: 94
2019-11-12 21:40:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 21:40:52 -HTTP METHOD : GET
2019-11-12 21:40:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 21:40:52 -参数 : []
2019-11-12 21:40:52 -耗时 : 2
2019-11-12 21:40:52 -返回值 : moneyList/moneyList
2019-11-12 21:41:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 21:41:00 -HTTP METHOD : GET
2019-11-12 21:41:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 21:41:00 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 21:41:00 -耗时 : 13
2019-11-12 21:41:00 -返回值 : system/dept/deptTree
2019-11-12 21:41:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 21:41:00 -HTTP METHOD : GET
2019-11-12 21:41:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 21:41:00 -参数 : []
2019-11-12 21:41:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 21:41:00 -==> Parameters: 
2019-11-12 21:41:00 -<==      Total: 3
2019-11-12 21:41:00 -耗时 : 54
2019-11-12 21:41:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 21:41:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:41:10 -HTTP METHOD : POST
2019-11-12 21:41:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:41:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@64aae4c6]
2019-11-12 21:41:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:41:10 -==> Parameters: 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String)
2019-11-12 21:41:13 -<==      Total: 3
2019-11-12 21:41:13 -耗时 : 2645
2019-11-12 21:41:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@223b1969, com.bootdo.moneyList.damain.MoneyListDO@5e896f97, com.bootdo.moneyList.damain.MoneyListDO@6d362c54]
2019-11-12 21:41:22 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 21:41:22 -HTTP METHOD : POST
2019-11-12 21:41:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 21:41:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@49c9abdc, org.apache.shiro.web.servlet.ShiroHttpServletRequest@37db7c2c]
2019-11-12 21:41:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:41:30 -==> Parameters: 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String)
2019-11-12 21:41:30 -<==      Total: 3
2019-11-12 21:41:30 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:41:30 -==> Parameters: 1-0076(String), 2019-05(String), 2(String)
2019-11-12 21:41:30 -<==      Total: 1
2019-11-12 21:41:30 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-11-12 21:41:30 -==> Parameters: 1-0076(String), 2019-05(String), 2(String)
2019-11-12 21:41:30 -<==      Total: 1
2019-11-12 21:41:30 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-11-12 21:41:30 -==> Parameters: 1-0076(String), 2019-05(String), 2(String)
2019-11-12 21:41:30 -<==      Total: 1
2019-11-12 21:41:30 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:41:30 -==> Parameters: 4(String), A(String), 2019-05(String), 2(String), 1-0076(String)
2019-11-12 21:41:31 -<==    Updates: 1
2019-11-12 21:41:31 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:41:31 -==> Parameters: 1-0076(String), 张艳琴1(String), A(String), 2(String), 1(String), 4(BigDecimal), 2019-11-12 21:41:30.839(Timestamp), 2019-05(String), admin(String), 2019-11-12 21:41:30.839(Timestamp), admin(String), null
2019-11-12 21:41:31 -<==    Updates: 1
2019-11-12 21:41:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-11-12 21:41:31 -==> Parameters: 1-0076(String), 2(String), 2019-05(String), 2019-11-12 21:41:30.839(Timestamp)
2019-11-12 21:41:31 -<==      Total: 0
2019-11-12 21:41:31 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `print_money`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:41:31 -==> Parameters: 1-0076(String), 张艳琴1(String), A(String), 2(String), 10603.0(BigDecimal), 10620.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 17.00(BigDecimal), 7.91(BigDecimal), 35.99(BigDecimal), 4(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-11-12 21:41:31.094(Timestamp), 4(BigDecimal), 2019-05(String), admin(String), 2019-11-12 21:41:31.094(Timestamp), admin(String), null
2019-11-12 21:41:31 -<==    Updates: 1
2019-11-12 21:41:31 -耗时 : 8338
2019-11-12 21:41:31 -返回值 : 12244
2019-11-12 21:41:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:41:37 -HTTP METHOD : POST
2019-11-12 21:41:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:41:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2a7656f0]
2019-11-12 21:41:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:41:37 -==> Parameters: 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String), 2019-05(String), 2(String), 1-0076(String)
2019-11-12 21:41:38 -<==      Total: 3
2019-11-12 21:41:38 -耗时 : 386
2019-11-12 21:41:38 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1194b21, com.bootdo.moneyList.damain.MoneyListDO@462a1321, com.bootdo.moneyList.damain.MoneyListDO@5e731cc2]
2019-11-12 21:41:41 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/12244/1-0076
2019-11-12 21:41:41 -HTTP METHOD : GET
2019-11-12 21:41:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-11-12 21:41:41 -参数 : [12244, 1-0076, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@53265842, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@53265842, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3756f95c]
2019-11-12 21:41:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`print_money`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-11-12 21:41:41 -==> Parameters: 12244(Long)
2019-11-12 21:41:41 -<==      Total: 1
2019-11-12 21:41:41 -耗时 : 66
2019-11-12 21:41:41 -返回值 : moneyList/moneyPrint
2019-11-12 21:45:58 -Validating all active sessions...
2019-11-12 21:45:58 -Finished session validation.  No sessions were stopped.
2019-11-12 21:46:28 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 861]
2019-11-12 21:56:53 -请求地址 : http://localhost:8081/index
2019-11-12 21:56:53 -HTTP METHOD : GET
2019-11-12 21:56:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 21:56:53 -参数 : [{}]
2019-11-12 21:56:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 21:56:54 -==> Parameters: 1(Long)
2019-11-12 21:56:54 -<==      Total: 50
2019-11-12 21:56:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 21:56:54 -==> Parameters: 138(Long)
2019-11-12 21:56:54 -<==      Total: 1
2019-11-12 21:56:54 -耗时 : 963
2019-11-12 21:56:54 -返回值 : index_v1
2019-11-12 21:56:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:56:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 985(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 21:56:54.853(Timestamp)
2019-11-12 21:56:55 -<==    Updates: 1
2019-11-12 21:57:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 21:57:02 -HTTP METHOD : GET
2019-11-12 21:57:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 21:57:02 -参数 : []
2019-11-12 21:57:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 21:57:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 21:57:03 -<==      Total: 0
2019-11-12 21:57:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 21:57:03 -==> Parameters: 1(Long), 0(String)
2019-11-12 21:57:03 -<==      Total: 1
2019-11-12 21:57:03 -耗时 : 1423
2019-11-12 21:57:03 -返回值 : com.bootdo.common.utils.PageUtils@314ff622
2019-11-12 21:57:06 -请求地址 : http://localhost:8081/main
2019-11-12 21:57:06 -HTTP METHOD : GET
2019-11-12 21:57:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 21:57:06 -参数 : []
2019-11-12 21:57:06 -耗时 : 18
2019-11-12 21:57:06 -返回值 : main
2019-11-12 21:57:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-11-12 21:57:22 -==> Parameters: 1(Long)
2019-11-12 21:57:22 -<==      Total: 94
2019-11-12 21:57:22 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 21:57:22 -HTTP METHOD : GET
2019-11-12 21:57:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 21:57:22 -参数 : []
2019-11-12 21:57:22 -耗时 : 0
2019-11-12 21:57:22 -返回值 : moneyList/moneyList
2019-11-12 21:57:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 21:57:37 -HTTP METHOD : GET
2019-11-12 21:57:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 21:57:37 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 21:57:37 -耗时 : 36
2019-11-12 21:57:37 -返回值 : system/dept/deptTree
2019-11-12 21:57:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 21:57:37 -HTTP METHOD : GET
2019-11-12 21:57:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 21:57:37 -参数 : []
2019-11-12 21:57:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 21:57:37 -==> Parameters: 
2019-11-12 21:57:37 -<==      Total: 3
2019-11-12 21:57:37 -耗时 : 121
2019-11-12 21:57:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 21:58:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:58:47 -HTTP METHOD : POST
2019-11-12 21:58:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:58:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@771c79c5]
2019-11-12 21:58:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:58:47 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:58:49 -<==      Total: 3
2019-11-12 21:58:49 -耗时 : 1600
2019-11-12 21:58:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@64f3f711, com.bootdo.moneyList.damain.MoneyListDO@2ac3f34b, com.bootdo.moneyList.damain.MoneyListDO@3e857587]
2019-11-12 21:58:56 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 21:58:56 -HTTP METHOD : POST
2019-11-12 21:58:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 21:58:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2cee9df, org.apache.shiro.web.servlet.ShiroHttpServletRequest@347899d2]
2019-11-12 21:58:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:58:56 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:58:56 -<==      Total: 3
2019-11-12 21:58:56 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 21:58:56 -==> Parameters: 1-0087(String), 2019-05(String), 2(String)
2019-11-12 21:58:56 -<==      Total: 1
2019-11-12 21:58:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 21:58:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), java.lang.NullPointerException(String), null, 2019-11-12 21:58:56.966(Timestamp)
2019-11-12 21:58:57 -<==    Updates: 1
2019-11-12 21:58:57 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:286)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$42a7c7e3.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-11-12 21:59:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 21:59:01 -HTTP METHOD : POST
2019-11-12 21:59:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 21:59:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2edaaf00]
2019-11-12 21:59:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 21:59:01 -==> Parameters: 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String), 2019-05(String), 2(String), 1-0087(String)
2019-11-12 21:59:02 -<==      Total: 3
2019-11-12 21:59:02 -耗时 : 319
2019-11-12 21:59:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53f41d16, com.bootdo.moneyList.damain.MoneyListDO@2d3d440d, com.bootdo.moneyList.damain.MoneyListDO@56e44c05]
2019-11-12 22:00:15 -请求地址 : http://localhost:8081/index
2019-11-12 22:00:15 -HTTP METHOD : GET
2019-11-12 22:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-11-12 22:00:15 -参数 : [{}]
2019-11-12 22:00:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-11-12 22:00:15 -==> Parameters: 1(Long)
2019-11-12 22:00:15 -<==      Total: 50
2019-11-12 22:00:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-11-12 22:00:15 -==> Parameters: 138(Long)
2019-11-12 22:00:15 -<==      Total: 1
2019-11-12 22:00:15 -耗时 : 287
2019-11-12 22:00:15 -返回值 : index_v1
2019-11-12 22:00:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 22:00:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 287(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-11-12 22:00:15.575(Timestamp)
2019-11-12 22:00:15 -<==    Updates: 1
2019-11-12 22:00:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-11-12 22:00:16 -HTTP METHOD : GET
2019-11-12 22:00:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-11-12 22:00:16 -参数 : []
2019-11-12 22:00:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-11-12 22:00:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-11-12 22:00:16 -请求地址 : http://localhost:8081/main
2019-11-12 22:00:16 -HTTP METHOD : GET
2019-11-12 22:00:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 22:00:16 -参数 : []
2019-11-12 22:00:16 -耗时 : 11
2019-11-12 22:00:16 -返回值 : main
2019-11-12 22:00:17 -<==      Total: 0
2019-11-12 22:00:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-11-12 22:00:17 -==> Parameters: 1(Long), 0(String)
2019-11-12 22:00:17 -<==      Total: 1
2019-11-12 22:00:17 -耗时 : 318
2019-11-12 22:00:17 -返回值 : com.bootdo.common.utils.PageUtils@1b5d4697
2019-11-12 22:00:17 -请求地址 : http://localhost:8081/main
2019-11-12 22:00:17 -HTTP METHOD : GET
2019-11-12 22:00:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-11-12 22:00:17 -参数 : []
2019-11-12 22:00:17 -耗时 : 1
2019-11-12 22:00:17 -返回值 : main
2019-11-12 22:00:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-11-12 22:00:20 -HTTP METHOD : GET
2019-11-12 22:00:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-11-12 22:00:20 -参数 : []
2019-11-12 22:00:20 -耗时 : 1
2019-11-12 22:00:20 -返回值 : moneyList/moneyList
2019-11-12 22:00:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-11-12 22:00:31 -HTTP METHOD : GET
2019-11-12 22:00:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-11-12 22:00:31 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-11-12 22:00:31 -耗时 : 0
2019-11-12 22:00:31 -返回值 : system/dept/deptTree
2019-11-12 22:00:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-11-12 22:00:32 -HTTP METHOD : GET
2019-11-12 22:00:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-11-12 22:00:32 -参数 : []
2019-11-12 22:00:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-11-12 22:00:32 -==> Parameters: 
2019-11-12 22:00:32 -<==      Total: 3
2019-11-12 22:00:32 -耗时 : 55
2019-11-12 22:00:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-11-12 22:00:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 22:00:36 -HTTP METHOD : POST
2019-11-12 22:00:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 22:00:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@25297bad]
2019-11-12 22:00:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 22:00:36 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 22:00:37 -<==      Total: 3
2019-11-12 22:00:37 -耗时 : 657
2019-11-12 22:00:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@582e6aab, com.bootdo.moneyList.damain.MoneyListDO@22bd2cc7, com.bootdo.moneyList.damain.MoneyListDO@4c27df2e]
2019-11-12 22:00:47 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-11-12 22:00:47 -HTTP METHOD : POST
2019-11-12 22:00:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-11-12 22:00:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20af8bc4, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55edd040]
2019-11-12 22:00:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 22:00:47 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 22:00:47 -<==      Total: 3
2019-11-12 22:00:47 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-11-12 22:00:47 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-11-12 22:00:47 -<==      Total: 1
2019-11-12 22:00:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-11-12 22:00:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), java.lang.NullPointerException(String), null, 2019-11-12 22:00:47.509(Timestamp)
2019-11-12 22:00:47 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:286)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$42a7c7e3.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-11-12 22:00:47 -<==    Updates: 1
2019-11-12 22:00:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-11-12 22:00:50 -HTTP METHOD : POST
2019-11-12 22:00:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-11-12 22:00:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5f4c8627]
2019-11-12 22:00:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-11-12 22:00:50 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-11-12 22:00:50 -<==      Total: 3
2019-11-12 22:00:50 -耗时 : 379
2019-11-12 22:00:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@67410f86, com.bootdo.moneyList.damain.MoneyListDO@492112fc, com.bootdo.moneyList.damain.MoneyListDO@7267c841]

2019-05-10 08:57:43 -Starting BootdoApplication on PC-201905091110 with PID 11652 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-10 08:57:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-10 08:57:43 -The following profiles are active: dev
2019-05-10 08:57:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 10 08:57:43 CST 2019]; root of context hierarchy
2019-05-10 08:57:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-10 08:57:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-10 08:57:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-10 08:57:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 08:57:53 -Tomcat initialized with port(s): 8081 (http)
2019-05-10 08:57:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-10 08:57:53 -Starting service [Tomcat]
2019-05-10 08:57:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-10 08:57:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-10 08:57:53 -Initializing Spring embedded WebApplicationContext
2019-05-10 08:57:53 -Root WebApplicationContext: initialization completed in 10537 ms
2019-05-10 08:57:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-10 08:57:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-10 08:57:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-10 08:57:55 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-10 08:57:55 -Filter xssFilter was not registered (disabled)
2019-05-10 08:57:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-10 08:57:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-10 08:57:55 -Servlet statViewServlet mapped to [/druid/*]
2019-05-10 08:57:55 -Servlet dispatcherServlet mapped to [/]
2019-05-10 08:58:01 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
2019-05-10 08:58:01 -Stopping service [Tomcat]
2019-05-10 08:58:02 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-10 08:58:02 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/bootdo/elec/domain/elecPriceDO (wrong name: com/bootdo/elec/domain/ElecPriceDO)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:186)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:68)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$356ff6e9.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$356ff6e9$$FastClassBySpringCGLIB$$d663af04.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$356ff6e9.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
2019-05-10 09:01:27 -Starting BootdoApplication on PC-201905091110 with PID 2736 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-10 09:01:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-10 09:01:27 -The following profiles are active: dev
2019-05-10 09:01:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:01:27 CST 2019]; root of context hierarchy
2019-05-10 09:01:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-10 09:01:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-10 09:01:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-10 09:01:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:01:36 -Tomcat initialized with port(s): 8081 (http)
2019-05-10 09:01:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-10 09:01:36 -Starting service [Tomcat]
2019-05-10 09:01:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-10 09:01:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-10 09:01:36 -Initializing Spring embedded WebApplicationContext
2019-05-10 09:01:36 -Root WebApplicationContext: initialization completed in 9443 ms
2019-05-10 09:01:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-10 09:01:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-10 09:01:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-10 09:01:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-10 09:01:37 -Filter xssFilter was not registered (disabled)
2019-05-10 09:01:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-10 09:01:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-10 09:01:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-10 09:01:37 -Servlet dispatcherServlet mapped to [/]
2019-05-10 09:01:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:01:27 CST 2019]; root of context hierarchy
2019-05-10 09:01:47 -Using default implementation for ThreadExecutor
2019-05-10 09:01:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-10 09:01:47 -Quartz Scheduler v.2.2.1 created.
2019-05-10 09:01:47 -RAMJobStore initialized.
2019-05-10 09:01:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-10 09:01:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-10 09:01:47 -Quartz scheduler version: 2.2.1
2019-05-10 09:01:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-10 09:01:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-10 09:01:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-10 09:01:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-10 09:01:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-10 09:01:51 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-10 09:01:51 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-10 09:01:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-10 09:01:51 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-10 09:01:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-10 09:01:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-10 09:01:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-10 09:01:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-10 09:01:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-10 09:01:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-10 09:01:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-10 09:01:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-10 09:01:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-10 09:01:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:01:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-10 09:01:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:01:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-10 09:01:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-10 09:01:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-10 09:01:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-10 09:01:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-10 09:01:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-10 09:01:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-10 09:01:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-10 09:01:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-10 09:01:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-10 09:01:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-10 09:01:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-10 09:01:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-10 09:01:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-10 09:01:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-10 09:01:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:01:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:01:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-10 09:01:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-10 09:01:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-10 09:01:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-10 09:01:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:01:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:01:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:01:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-10 09:01:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-10 09:01:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:01:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-10 09:01:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-10 09:01:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-10 09:01:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-10 09:01:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-10 09:01:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-10 09:01:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-10 09:01:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-10 09:01:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-10 09:01:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-10 09:01:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-10 09:01:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-10 09:01:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-10 09:01:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-10 09:01:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-10 09:01:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-10 09:01:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-10 09:01:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-10 09:01:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-10 09:01:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-10 09:01:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-10 09:01:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-10 09:01:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-10 09:01:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-10 09:01:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-10 09:01:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-10 09:01:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-10 09:01:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:01:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:01:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-10 09:01:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-10 09:01:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-10 09:01:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-10 09:01:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-10 09:01:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:01:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-10 09:01:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:01:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-10 09:01:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:01:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-10 09:01:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:01:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-10 09:01:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-10 09:01:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-10 09:01:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-10 09:01:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-10 09:01:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-10 09:01:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:01:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:01:27 CST 2019]; root of context hierarchy
2019-05-10 09:01:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:01:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:01:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:01:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-10 09:01:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-10 09:01:56 -Registering beans for JMX exposure on startup
2019-05-10 09:01:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-10 09:01:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-10 09:01:56 -Starting beans in phase 2147483647
2019-05-10 09:01:56 -Context refreshed
2019-05-10 09:01:56 -Found 1 custom documentation plugin(s)
2019-05-10 09:01:56 -Scanning for api listing references
2019-05-10 09:01:57 -Generating unique operation named: getCountDUsingPOST_1
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_1
2019-05-10 09:01:57 -Generating unique operation named: addUsingGET_1
2019-05-10 09:01:57 -Generating unique operation named: editUsingGET_1
2019-05-10 09:01:57 -Generating unique operation named: listUsingGET_1
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_2
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_3
2019-05-10 09:01:57 -Generating unique operation named: saveUsingPOST_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingGET_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingHEAD_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingPOST_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingPUT_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingPATCH_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingDELETE_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-10 09:01:57 -Generating unique operation named: updateUsingTRACE_1
2019-05-10 09:01:57 -Generating unique operation named: addUsingGET_2
2019-05-10 09:01:57 -Generating unique operation named: editUsingGET_2
2019-05-10 09:01:57 -Generating unique operation named: listUsingGET_2
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_4
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_5
2019-05-10 09:01:57 -Generating unique operation named: saveUsingPOST_2
2019-05-10 09:01:57 -Generating unique operation named: updateUsingPOST_2
2019-05-10 09:01:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-10 09:01:57 -Generating unique operation named: addUsingGET_3
2019-05-10 09:01:57 -Generating unique operation named: editUsingGET_3
2019-05-10 09:01:57 -Generating unique operation named: listUsingGET_3
2019-05-10 09:01:57 -Generating unique operation named: removeUsingPOST_6
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_7
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_2
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_4
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_4
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_4
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_8
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_9
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_3
2019-05-10 09:01:58 -Generating unique operation named: ElecUsingGET_1
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_5
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_5
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_5
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_10
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_11
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_4
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_6
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_6
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_6
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_7
2019-05-10 09:01:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_7
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_12
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_13
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_5
2019-05-10 09:01:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_7
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_8
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_8
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_14
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_15
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_8
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_6
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_8
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_9
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_9
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_16
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_17
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_8
2019-05-10 09:01:58 -Generating unique operation named: updateUsingGET_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingHEAD_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_9
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPUT_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPATCH_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingDELETE_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-10 09:01:58 -Generating unique operation named: updateUsingTRACE_7
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_9
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_10
2019-05-10 09:01:58 -Generating unique operation named: infoUsingGET_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingHEAD_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingPOST_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingPUT_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingPATCH_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingDELETE_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-10 09:01:58 -Generating unique operation named: infoUsingTRACE_1
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_10
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_18
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_19
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_9
2019-05-10 09:01:58 -Generating unique operation named: updateUsingPOST_10
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_11
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_20
2019-05-10 09:01:58 -Generating unique operation named: welcomeUsingGET_1
2019-05-10 09:01:58 -Generating unique operation named: addUsingGET_10
2019-05-10 09:01:58 -Generating unique operation named: editUsingGET_11
2019-05-10 09:01:58 -Generating unique operation named: listUsingGET_12
2019-05-10 09:01:58 -Generating unique operation named: removeUsingPOST_21
2019-05-10 09:01:58 -Generating unique operation named: saveUsingPOST_10
2019-05-10 09:01:58 -Generating unique operation named: treeUsingGET_1
2019-05-10 09:01:59 -Generating unique operation named: treeUsingGET_2
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_11
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_11
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_12
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_13
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_22
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_23
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingGET_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPUT_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-10 09:01:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_12
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_13
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_14
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_24
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_25
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingGET_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_13
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPUT_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPATCH_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingDELETE_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-10 09:01:59 -Generating unique operation named: updateUsingTRACE_9
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_13
2019-05-10 09:01:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_14
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_15
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_13
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_14
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_14
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_16
2019-05-10 09:01:59 -Generating unique operation named: listUsingHEAD_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingPOST_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingPUT_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingPATCH_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingDELETE_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingOPTIONS_1
2019-05-10 09:01:59 -Generating unique operation named: listUsingTRACE_1
2019-05-10 09:01:59 -Generating unique operation named: countDDUsingGET_1
2019-05-10 09:01:59 -Generating unique operation named: exportDDUsingGET_1
2019-05-10 09:01:59 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-10 09:01:59 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_14
2019-05-10 09:01:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_15
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_17
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_26
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_15
2019-05-10 09:01:59 -Generating unique operation named: treeUsingGET_3
2019-05-10 09:01:59 -Generating unique operation named: treeViewUsingGET_1
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_15
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_15
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_16
2019-05-10 09:01:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_18
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_27
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_28
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_16
2019-05-10 09:01:59 -Generating unique operation named: updateUsingGET_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingHEAD_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_16
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPUT_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPATCH_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingDELETE_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-10 09:01:59 -Generating unique operation named: updateUsingTRACE_10
2019-05-10 09:01:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_16
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_17
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_19
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_29
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_30
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_17
2019-05-10 09:01:59 -Generating unique operation named: updateUsingGET_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingHEAD_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_17
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPUT_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPATCH_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingDELETE_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-10 09:01:59 -Generating unique operation named: updateUsingTRACE_11
2019-05-10 09:01:59 -Generating unique operation named: addUsingGET_17
2019-05-10 09:01:59 -Generating unique operation named: editUsingGET_18
2019-05-10 09:01:59 -Generating unique operation named: listUsingGET_20
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_31
2019-05-10 09:01:59 -Generating unique operation named: removeUsingPOST_32
2019-05-10 09:01:59 -Generating unique operation named: saveUsingPOST_18
2019-05-10 09:01:59 -Generating unique operation named: updateUsingGET_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingHEAD_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPOST_18
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPUT_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingPATCH_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingDELETE_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-10 09:01:59 -Generating unique operation named: updateUsingTRACE_12
2019-05-10 09:01:59 -Starting Quartz Scheduler now
2019-05-10 09:01:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-10 09:01:59 -Starting...
2019-05-10 09:01:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-10 09:01:59 -Started.
2019-05-10 09:01:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-10 09:02:00 -Using a shared selector for servlet write/read
2019-05-10 09:02:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-10 09:02:00 -Started BootdoApplication in 34.149 seconds (JVM running for 34.951)
2019-05-10 09:02:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-10 09:02:00 -==> Parameters: 
2019-05-10 09:02:00 -<==      Total: 1
2019-05-10 09:02:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-10 09:03:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-10 09:03:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-10 09:03:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 153 ms
2019-05-10 09:03:52 -Enabling session validation scheduler...
2019-05-10 09:03:52 -请求地址 : http://localhost:8081/
2019-05-10 09:03:52 -HTTP METHOD : GET
2019-05-10 09:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-05-10 09:03:52 -参数 : [{}]
2019-05-10 09:03:52 -耗时 : 4
2019-05-10 09:03:52 -返回值 : redirect:/index
2019-05-10 09:03:52 -请求地址 : http://localhost:8081/login;JSESSIONID=39accc15-d188-4639-af09-f6f445eb0fb9
2019-05-10 09:03:52 -HTTP METHOD : GET
2019-05-10 09:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:03:52 -参数 : [{}]
2019-05-10 09:03:52 -耗时 : 1
2019-05-10 09:03:52 -返回值 : login
2019-05-10 09:03:55 -请求地址 : http://localhost:8081/getVerify
2019-05-10 09:03:55 -HTTP METHOD : GET
2019-05-10 09:03:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 09:03:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f95dc0a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a975d9c]
2019-05-10 09:04:00 -9002
2019-05-10 09:04:01 -耗时 : 5869
2019-05-10 09:04:01 -返回值 : null
2019-05-10 09:04:07 -请求地址 : http://localhost:8081/login
2019-05-10 09:04:07 -HTTP METHOD : POST
2019-05-10 09:04:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 09:04:07 -参数 : [admin, 111111, 9002, org.apache.shiro.web.servlet.ShiroHttpServletRequest@a3a565d]
2019-05-10 09:04:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 09:04:07 -==> Parameters: admin(String)
2019-05-10 09:04:07 -<==      Total: 1
2019-05-10 09:04:08 -耗时 : 727
2019-05-10 09:04:08 -返回值 : {msg=操作成功, code=0}
2019-05-10 09:04:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-10 09:04:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:04:08 -==> Parameters: 1(Long), admin(String), 登录(String), 727(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 09:04:08.208(Timestamp)
2019-05-10 09:04:08 -<==    Updates: 1
2019-05-10 09:04:08 -请求地址 : http://localhost:8081/index
2019-05-10 09:04:08 -HTTP METHOD : GET
2019-05-10 09:04:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:04:08 -参数 : [{}]
2019-05-10 09:04:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:04:09 -==> Parameters: 1(Long)
2019-05-10 09:04:09 -<==      Total: 49
2019-05-10 09:04:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:04:09 -==> Parameters: 138(Long)
2019-05-10 09:04:09 -<==      Total: 1
2019-05-10 09:04:09 -耗时 : 507
2019-05-10 09:04:09 -返回值 : index_v1
2019-05-10 09:04:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:04:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 507(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:04:09.518(Timestamp)
2019-05-10 09:04:09 -<==    Updates: 1
2019-05-10 09:04:09 -请求地址 : http://localhost:8081/main
2019-05-10 09:04:09 -HTTP METHOD : GET
2019-05-10 09:04:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:04:09 -参数 : []
2019-05-10 09:04:09 -耗时 : 1
2019-05-10 09:04:09 -返回值 : main
2019-05-10 09:04:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:04:12 -HTTP METHOD : GET
2019-05-10 09:04:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:04:12 -参数 : []
2019-05-10 09:04:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:04:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:04:12 -<==      Total: 0
2019-05-10 09:04:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:04:12 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:04:12 -<==      Total: 1
2019-05-10 09:04:12 -耗时 : 188
2019-05-10 09:04:12 -返回值 : com.bootdo.common.utils.PageUtils@4e93eb3e
2019-05-10 09:04:12 -请求地址 : http://localhost:8081/main
2019-05-10 09:04:12 -HTTP METHOD : GET
2019-05-10 09:04:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:04:12 -参数 : []
2019-05-10 09:04:12 -耗时 : 0
2019-05-10 09:04:12 -返回值 : main
2019-05-10 09:04:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 09:04:33 -==> Parameters: 1(Long)
2019-05-10 09:04:33 -<==      Total: 93
2019-05-10 09:04:33 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 09:04:33 -HTTP METHOD : GET
2019-05-10 09:04:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 09:04:33 -参数 : []
2019-05-10 09:04:33 -耗时 : 0
2019-05-10 09:04:33 -返回值 : elec/elecPrice/elecPrice
2019-05-10 09:04:34 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 09:04:34 -HTTP METHOD : GET
2019-05-10 09:04:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 09:04:34 -参数 : [{limit=10, offset=0}]
2019-05-10 09:04:34 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_Gelec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 09:04:34 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:04:34 -{conn-10001, pstmt-20008} execute error. select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_Gelec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark`  from elec_price
      

         
                order by id asc
             
         
            limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.list(Unknown Source)
	at com.bootdo.elec.service.impl.ElecPriceServiceImpl.list(ElecPriceServiceImpl.java:27)
	at com.bootdo.elec.controller.ElecPriceController.list(ElecPriceController.java:47)
	at com.bootdo.elec.controller.ElecPriceController$$FastClassBySpringCGLIB$$65d01db3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecPriceController$$EnhancerBySpringCGLIB$$abbaba38.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-10 09:04:34 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-10 09:04:35 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-10 09:04:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:04:35 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecPriceMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_Gelec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark`  from elec_price                                   order by id asc                                     limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecPriceMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_Gelec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark`  from elec_price                                   order by id asc                                     limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.list(Unknown Source)
	at com.bootdo.elec.service.impl.ElecPriceServiceImpl.list(ElecPriceServiceImpl.java:27)
	at com.bootdo.elec.controller.ElecPriceController.list(ElecPriceController.java:47)
	at com.bootdo.elec.controller.ElecPriceController$$FastClassBySpringCGLIB$$65d01db3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecPriceController$$EnhancerBySpringCGLIB$$abbaba38.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-05-10 09:04:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecPrice/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecPriceMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_Gelec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark`  from elec_price                                   order by id asc                                     limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'ms_Gelec' in 'field list'(String), null, 2019-05-10 09:04:35.039(Timestamp)
2019-05-10 09:04:35 -<==    Updates: 1
2019-05-10 09:05:53 -Starting BootdoApplication on PC-201905091110 with PID 14932 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-10 09:05:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-10 09:05:53 -The following profiles are active: dev
2019-05-10 09:05:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:05:53 CST 2019]; root of context hierarchy
2019-05-10 09:05:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-10 09:05:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:05:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-10 09:06:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-10 09:06:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:06:02 -Tomcat initialized with port(s): 8081 (http)
2019-05-10 09:06:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-10 09:06:02 -Starting service [Tomcat]
2019-05-10 09:06:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-10 09:06:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-10 09:06:02 -Initializing Spring embedded WebApplicationContext
2019-05-10 09:06:02 -Root WebApplicationContext: initialization completed in 9190 ms
2019-05-10 09:06:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-10 09:06:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-10 09:06:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-10 09:06:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-10 09:06:03 -Filter xssFilter was not registered (disabled)
2019-05-10 09:06:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-10 09:06:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-10 09:06:03 -Servlet statViewServlet mapped to [/druid/*]
2019-05-10 09:06:03 -Servlet dispatcherServlet mapped to [/]
2019-05-10 09:06:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:05:53 CST 2019]; root of context hierarchy
2019-05-10 09:06:13 -Using default implementation for ThreadExecutor
2019-05-10 09:06:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-10 09:06:13 -Quartz Scheduler v.2.2.1 created.
2019-05-10 09:06:13 -RAMJobStore initialized.
2019-05-10 09:06:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-10 09:06:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-10 09:06:13 -Quartz scheduler version: 2.2.1
2019-05-10 09:06:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-10 09:06:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-10 09:06:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-10 09:06:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-10 09:06:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-10 09:06:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-10 09:06:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-10 09:06:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-10 09:06:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-10 09:06:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-10 09:06:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-10 09:06:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-10 09:06:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-10 09:06:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-10 09:06:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-10 09:06:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-10 09:06:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-10 09:06:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-10 09:06:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-10 09:06:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-10 09:06:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-10 09:06:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:06:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-10 09:06:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:06:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-10 09:06:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-10 09:06:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-10 09:06:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-10 09:06:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-10 09:06:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-10 09:06:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-10 09:06:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-10 09:06:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-10 09:06:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-10 09:06:17 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:06:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-10 09:06:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-10 09:06:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-10 09:06:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-10 09:06:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-10 09:06:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-10 09:06:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-10 09:06:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-10 09:06:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:06:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-10 09:06:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-10 09:06:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:06:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:06:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-10 09:06:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-10 09:06:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-10 09:06:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-10 09:06:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-10 09:06:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-10 09:06:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-10 09:06:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-10 09:06:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-10 09:06:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-10 09:06:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-10 09:06:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-10 09:06:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-10 09:06:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-10 09:06:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-10 09:06:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-10 09:06:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-10 09:06:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-10 09:06:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-10 09:06:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-10 09:06:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-10 09:06:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-10 09:06:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-10 09:06:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-10 09:06:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-10 09:06:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-10 09:06:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-10 09:06:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:06:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-10 09:06:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:06:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-10 09:06:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-10 09:06:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-10 09:06:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-10 09:06:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-10 09:06:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-10 09:06:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-10 09:06:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:06:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-10 09:06:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-10 09:06:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:06:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:06:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:06:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-10 09:06:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-10 09:06:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-10 09:06:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-10 09:06:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-10 09:06:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-10 09:06:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:06:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 10 09:05:53 CST 2019]; root of context hierarchy
2019-05-10 09:06:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:06:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:06:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:06:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-10 09:06:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-10 09:06:22 -Registering beans for JMX exposure on startup
2019-05-10 09:06:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-10 09:06:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-10 09:06:22 -Starting beans in phase 2147483647
2019-05-10 09:06:22 -Context refreshed
2019-05-10 09:06:22 -Found 1 custom documentation plugin(s)
2019-05-10 09:06:22 -Scanning for api listing references
2019-05-10 09:06:23 -Generating unique operation named: getCountDUsingPOST_1
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_1
2019-05-10 09:06:23 -Generating unique operation named: addUsingGET_1
2019-05-10 09:06:23 -Generating unique operation named: editUsingGET_1
2019-05-10 09:06:23 -Generating unique operation named: listUsingGET_1
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_2
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_3
2019-05-10 09:06:23 -Generating unique operation named: saveUsingPOST_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingGET_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingHEAD_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPOST_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPUT_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPATCH_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingDELETE_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-10 09:06:23 -Generating unique operation named: updateUsingTRACE_1
2019-05-10 09:06:23 -Generating unique operation named: addUsingGET_2
2019-05-10 09:06:23 -Generating unique operation named: editUsingGET_2
2019-05-10 09:06:23 -Generating unique operation named: listUsingGET_2
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_4
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_5
2019-05-10 09:06:23 -Generating unique operation named: saveUsingPOST_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPOST_2
2019-05-10 09:06:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-10 09:06:23 -Generating unique operation named: addUsingGET_3
2019-05-10 09:06:23 -Generating unique operation named: editUsingGET_3
2019-05-10 09:06:23 -Generating unique operation named: listUsingGET_3
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_6
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_7
2019-05-10 09:06:23 -Generating unique operation named: saveUsingPOST_3
2019-05-10 09:06:23 -Generating unique operation named: updateUsingGET_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingHEAD_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPOST_3
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPUT_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingPATCH_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingDELETE_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-10 09:06:23 -Generating unique operation named: updateUsingTRACE_2
2019-05-10 09:06:23 -Generating unique operation named: addUsingGET_4
2019-05-10 09:06:23 -Generating unique operation named: editUsingGET_4
2019-05-10 09:06:23 -Generating unique operation named: listUsingGET_4
2019-05-10 09:06:23 -Generating unique operation named: removeUsingPOST_8
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_9
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingGET_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPUT_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-10 09:06:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-10 09:06:24 -Generating unique operation named: ElecUsingGET_1
2019-05-10 09:06:24 -Generating unique operation named: addUsingGET_5
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_5
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_5
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_10
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_11
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingGET_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPUT_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingDELETE_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-10 09:06:24 -Generating unique operation named: updateUsingTRACE_4
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_6
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_6
2019-05-10 09:06:24 -Generating unique operation named: addUsingGET_6
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_7
2019-05-10 09:06:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_7
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_12
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_13
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingGET_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingHEAD_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPUT_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPATCH_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingDELETE_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-10 09:06:24 -Generating unique operation named: updateUsingTRACE_5
2019-05-10 09:06:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-10 09:06:24 -Generating unique operation named: addUsingGET_7
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_8
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_8
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_14
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_15
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingGET_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingHEAD_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_8
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPUT_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPATCH_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingDELETE_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-10 09:06:24 -Generating unique operation named: updateUsingTRACE_6
2019-05-10 09:06:24 -Generating unique operation named: addUsingGET_8
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_9
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_9
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_16
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_17
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_8
2019-05-10 09:06:24 -Generating unique operation named: updateUsingGET_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingHEAD_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_9
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPUT_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPATCH_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingDELETE_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-10 09:06:24 -Generating unique operation named: updateUsingTRACE_7
2019-05-10 09:06:24 -Generating unique operation named: addUsingGET_9
2019-05-10 09:06:24 -Generating unique operation named: editUsingGET_10
2019-05-10 09:06:24 -Generating unique operation named: infoUsingGET_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingHEAD_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingPOST_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingPUT_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingPATCH_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingDELETE_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-10 09:06:24 -Generating unique operation named: infoUsingTRACE_1
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_10
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_18
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_19
2019-05-10 09:06:24 -Generating unique operation named: saveUsingPOST_9
2019-05-10 09:06:24 -Generating unique operation named: updateUsingPOST_10
2019-05-10 09:06:24 -Generating unique operation named: listUsingGET_11
2019-05-10 09:06:24 -Generating unique operation named: removeUsingPOST_20
2019-05-10 09:06:24 -Generating unique operation named: welcomeUsingGET_1
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_10
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_11
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_12
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_21
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_10
2019-05-10 09:06:25 -Generating unique operation named: treeUsingGET_1
2019-05-10 09:06:25 -Generating unique operation named: treeUsingGET_2
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_11
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_11
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_12
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_13
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_22
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_23
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_11
2019-05-10 09:06:25 -Generating unique operation named: updateUsingGET_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_12
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPUT_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingDELETE_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-10 09:06:25 -Generating unique operation named: updateUsingTRACE_8
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_12
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_13
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_14
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_24
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_25
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_12
2019-05-10 09:06:25 -Generating unique operation named: updateUsingGET_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingHEAD_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_13
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPUT_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPATCH_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingDELETE_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-10 09:06:25 -Generating unique operation named: updateUsingTRACE_9
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_13
2019-05-10 09:06:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_14
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_15
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_13
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_14
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_14
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_16
2019-05-10 09:06:25 -Generating unique operation named: listUsingHEAD_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingPOST_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingPUT_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingPATCH_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingDELETE_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingOPTIONS_1
2019-05-10 09:06:25 -Generating unique operation named: listUsingTRACE_1
2019-05-10 09:06:25 -Generating unique operation named: countDDUsingGET_1
2019-05-10 09:06:25 -Generating unique operation named: exportDDUsingGET_1
2019-05-10 09:06:25 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-10 09:06:25 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_14
2019-05-10 09:06:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_15
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_17
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_26
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_15
2019-05-10 09:06:25 -Generating unique operation named: treeUsingGET_3
2019-05-10 09:06:25 -Generating unique operation named: treeViewUsingGET_1
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_15
2019-05-10 09:06:25 -Generating unique operation named: addUsingGET_15
2019-05-10 09:06:25 -Generating unique operation named: editUsingGET_16
2019-05-10 09:06:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-10 09:06:25 -Generating unique operation named: listUsingGET_18
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_27
2019-05-10 09:06:25 -Generating unique operation named: removeUsingPOST_28
2019-05-10 09:06:25 -Generating unique operation named: saveUsingPOST_16
2019-05-10 09:06:25 -Generating unique operation named: updateUsingGET_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingHEAD_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPOST_16
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPUT_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingPATCH_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingDELETE_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-10 09:06:25 -Generating unique operation named: updateUsingTRACE_10
2019-05-10 09:06:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-10 09:06:26 -Generating unique operation named: addUsingGET_16
2019-05-10 09:06:26 -Generating unique operation named: editUsingGET_17
2019-05-10 09:06:26 -Generating unique operation named: listUsingGET_19
2019-05-10 09:06:26 -Generating unique operation named: removeUsingPOST_29
2019-05-10 09:06:26 -Generating unique operation named: removeUsingPOST_30
2019-05-10 09:06:26 -Generating unique operation named: saveUsingPOST_17
2019-05-10 09:06:26 -Generating unique operation named: updateUsingGET_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPOST_17
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPUT_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-10 09:06:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-10 09:06:26 -Generating unique operation named: addUsingGET_17
2019-05-10 09:06:26 -Generating unique operation named: editUsingGET_18
2019-05-10 09:06:26 -Generating unique operation named: listUsingGET_20
2019-05-10 09:06:26 -Generating unique operation named: removeUsingPOST_31
2019-05-10 09:06:26 -Generating unique operation named: removeUsingPOST_32
2019-05-10 09:06:26 -Generating unique operation named: saveUsingPOST_18
2019-05-10 09:06:26 -Generating unique operation named: updateUsingGET_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPOST_18
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPUT_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-10 09:06:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-10 09:06:26 -Starting Quartz Scheduler now
2019-05-10 09:06:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-10 09:06:26 -Starting...
2019-05-10 09:06:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-10 09:06:26 -Started.
2019-05-10 09:06:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-10 09:06:26 -Using a shared selector for servlet write/read
2019-05-10 09:06:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-10 09:06:26 -Started BootdoApplication in 34.447 seconds (JVM running for 35.334)
2019-05-10 09:06:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-10 09:06:26 -==> Parameters: 
2019-05-10 09:06:26 -<==      Total: 1
2019-05-10 09:07:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-10 09:07:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-10 09:07:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-05-10 09:07:00 -Enabling session validation scheduler...
2019-05-10 09:07:00 -请求地址 : http://localhost:8081/login;JSESSIONID=0508e8a5-42c3-45d8-a523-19b54fe80074
2019-05-10 09:07:00 -HTTP METHOD : GET
2019-05-10 09:07:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:07:00 -参数 : [{}]
2019-05-10 09:07:00 -耗时 : 5
2019-05-10 09:07:00 -返回值 : login
2019-05-10 09:07:01 -请求地址 : http://localhost:8081/getVerify
2019-05-10 09:07:01 -HTTP METHOD : GET
2019-05-10 09:07:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 09:07:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@16b90167, org.apache.shiro.web.servlet.ShiroHttpServletResponse@187efdc0]
2019-05-10 09:07:01 -6930
2019-05-10 09:07:01 -耗时 : 455
2019-05-10 09:07:01 -返回值 : null
2019-05-10 09:07:01 -请求地址 : http://localhost:8081/login
2019-05-10 09:07:01 -HTTP METHOD : GET
2019-05-10 09:07:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:07:01 -参数 : [{}]
2019-05-10 09:07:01 -耗时 : 0
2019-05-10 09:07:01 -返回值 : login
2019-05-10 09:07:09 -请求地址 : http://localhost:8081/login
2019-05-10 09:07:09 -HTTP METHOD : POST
2019-05-10 09:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 09:07:09 -参数 : [admin, 111111, 6930, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1da11f9f]
2019-05-10 09:07:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 09:07:09 -==> Parameters: admin(String)
2019-05-10 09:07:09 -<==      Total: 1
2019-05-10 09:07:09 -耗时 : 109
2019-05-10 09:07:09 -返回值 : {msg=操作成功, code=0}
2019-05-10 09:07:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-10 09:07:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:07:09 -==> Parameters: 1(Long), admin(String), 登录(String), 109(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 09:07:09.636(Timestamp)
2019-05-10 09:07:09 -请求地址 : http://localhost:8081/index
2019-05-10 09:07:09 -HTTP METHOD : GET
2019-05-10 09:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:07:09 -参数 : [{}]
2019-05-10 09:07:09 -<==    Updates: 1
2019-05-10 09:07:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:07:09 -==> Parameters: 1(Long)
2019-05-10 09:07:09 -<==      Total: 49
2019-05-10 09:07:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:07:09 -==> Parameters: 138(Long)
2019-05-10 09:07:09 -<==      Total: 1
2019-05-10 09:07:09 -耗时 : 138
2019-05-10 09:07:09 -返回值 : index_v1
2019-05-10 09:07:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:07:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 138(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:07:09.943(Timestamp)
2019-05-10 09:07:10 -<==    Updates: 1
2019-05-10 09:07:10 -请求地址 : http://localhost:8081/main
2019-05-10 09:07:10 -HTTP METHOD : GET
2019-05-10 09:07:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:07:10 -参数 : []
2019-05-10 09:07:10 -耗时 : 0
2019-05-10 09:07:10 -返回值 : main
2019-05-10 09:07:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:07:10 -HTTP METHOD : GET
2019-05-10 09:07:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:07:10 -参数 : []
2019-05-10 09:07:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:07:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:07:10 -<==      Total: 0
2019-05-10 09:07:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:07:10 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:07:10 -<==      Total: 1
2019-05-10 09:07:10 -耗时 : 37
2019-05-10 09:07:10 -返回值 : com.bootdo.common.utils.PageUtils@70774907
2019-05-10 09:07:10 -请求地址 : http://localhost:8081/main
2019-05-10 09:07:10 -HTTP METHOD : GET
2019-05-10 09:07:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:07:10 -参数 : []
2019-05-10 09:07:10 -耗时 : 0
2019-05-10 09:07:10 -返回值 : main
2019-05-10 09:07:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 09:07:15 -==> Parameters: 1(Long)
2019-05-10 09:07:15 -<==      Total: 93
2019-05-10 09:07:15 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 09:07:15 -HTTP METHOD : GET
2019-05-10 09:07:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 09:07:15 -参数 : []
2019-05-10 09:07:15 -耗时 : 0
2019-05-10 09:07:15 -返回值 : elec/elecPrice/elecPrice
2019-05-10 09:07:16 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 09:07:16 -HTTP METHOD : GET
2019-05-10 09:07:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 09:07:16 -参数 : [{limit=10, offset=0}]
2019-05-10 09:07:16 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 09:07:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:07:16 -<==      Total: 2
2019-05-10 09:07:16 -==>  Preparing: select count(*) from elec_price 
2019-05-10 09:07:16 -==> Parameters: 
2019-05-10 09:07:16 -<==      Total: 1
2019-05-10 09:07:16 -耗时 : 42
2019-05-10 09:07:16 -返回值 : com.bootdo.common.utils.PageUtils@3361ee1e
2019-05-10 09:07:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-10 09:24:37 -请求地址 : http://localhost:8081/index
2019-05-10 09:24:37 -HTTP METHOD : GET
2019-05-10 09:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:24:37 -参数 : [{}]
2019-05-10 09:24:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:24:37 -==> Parameters: 1(Long)
2019-05-10 09:24:37 -<==      Total: 49
2019-05-10 09:24:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:24:37 -==> Parameters: 138(Long)
2019-05-10 09:24:37 -<==      Total: 1
2019-05-10 09:24:37 -耗时 : 25
2019-05-10 09:24:37 -返回值 : index_v1
2019-05-10 09:24:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:24:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:24:37.7(Timestamp)
2019-05-10 09:24:37 -<==    Updates: 1
2019-05-10 09:24:37 -请求地址 : http://localhost:8081/main
2019-05-10 09:24:37 -HTTP METHOD : GET
2019-05-10 09:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:24:37 -参数 : []
2019-05-10 09:24:37 -耗时 : 0
2019-05-10 09:24:37 -返回值 : main
2019-05-10 09:24:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:24:38 -HTTP METHOD : GET
2019-05-10 09:24:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:24:38 -参数 : []
2019-05-10 09:24:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:24:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:24:38 -<==      Total: 0
2019-05-10 09:24:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:24:38 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:24:38 -<==      Total: 1
2019-05-10 09:24:38 -耗时 : 15
2019-05-10 09:24:38 -返回值 : com.bootdo.common.utils.PageUtils@448b1cf1
2019-05-10 09:24:38 -请求地址 : http://localhost:8081/main
2019-05-10 09:24:38 -HTTP METHOD : GET
2019-05-10 09:24:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:24:38 -参数 : []
2019-05-10 09:24:38 -耗时 : 0
2019-05-10 09:24:38 -返回值 : main
2019-05-10 09:24:50 -请求地址 : http://localhost:8081/index
2019-05-10 09:24:50 -HTTP METHOD : GET
2019-05-10 09:24:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:24:50 -参数 : [{}]
2019-05-10 09:24:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:24:50 -==> Parameters: 1(Long)
2019-05-10 09:24:50 -<==      Total: 49
2019-05-10 09:24:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:24:50 -==> Parameters: 138(Long)
2019-05-10 09:24:50 -<==      Total: 1
2019-05-10 09:24:50 -耗时 : 23
2019-05-10 09:24:50 -返回值 : index_v1
2019-05-10 09:24:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:24:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:24:50.959(Timestamp)
2019-05-10 09:24:51 -<==    Updates: 1
2019-05-10 09:24:51 -请求地址 : http://localhost:8081/main
2019-05-10 09:24:51 -HTTP METHOD : GET
2019-05-10 09:24:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:24:51 -参数 : []
2019-05-10 09:24:51 -耗时 : 1
2019-05-10 09:24:51 -返回值 : main
2019-05-10 09:24:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:24:51 -HTTP METHOD : GET
2019-05-10 09:24:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:24:51 -参数 : []
2019-05-10 09:24:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:24:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:24:51 -<==      Total: 0
2019-05-10 09:24:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:24:51 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:24:51 -<==      Total: 1
2019-05-10 09:24:51 -耗时 : 13
2019-05-10 09:24:51 -返回值 : com.bootdo.common.utils.PageUtils@3d8a6819
2019-05-10 09:24:51 -请求地址 : http://localhost:8081/main
2019-05-10 09:24:51 -HTTP METHOD : GET
2019-05-10 09:24:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:24:51 -参数 : []
2019-05-10 09:24:51 -耗时 : 1
2019-05-10 09:24:51 -返回值 : main
2019-05-10 09:25:02 -请求地址 : http://localhost:8081/index
2019-05-10 09:25:02 -HTTP METHOD : GET
2019-05-10 09:25:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:25:02 -参数 : [{}]
2019-05-10 09:25:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:25:02 -==> Parameters: 1(Long)
2019-05-10 09:25:02 -<==      Total: 49
2019-05-10 09:25:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:25:02 -==> Parameters: 138(Long)
2019-05-10 09:25:02 -<==      Total: 1
2019-05-10 09:25:02 -耗时 : 26
2019-05-10 09:25:02 -返回值 : index_v1
2019-05-10 09:25:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:25:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:25:02.492(Timestamp)
2019-05-10 09:25:02 -<==    Updates: 1
2019-05-10 09:25:02 -请求地址 : http://localhost:8081/main
2019-05-10 09:25:02 -HTTP METHOD : GET
2019-05-10 09:25:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:25:02 -参数 : []
2019-05-10 09:25:02 -耗时 : 0
2019-05-10 09:25:02 -返回值 : main
2019-05-10 09:25:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:25:03 -HTTP METHOD : GET
2019-05-10 09:25:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:25:03 -参数 : []
2019-05-10 09:25:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:25:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:25:03 -<==      Total: 0
2019-05-10 09:25:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:25:03 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:25:03 -<==      Total: 1
2019-05-10 09:25:03 -耗时 : 6
2019-05-10 09:25:03 -返回值 : com.bootdo.common.utils.PageUtils@5305463
2019-05-10 09:25:03 -请求地址 : http://localhost:8081/main
2019-05-10 09:25:03 -HTTP METHOD : GET
2019-05-10 09:25:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:25:03 -参数 : []
2019-05-10 09:25:03 -耗时 : 1
2019-05-10 09:25:03 -返回值 : main
2019-05-10 09:25:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 09:25:45 -==> Parameters: 1(Long)
2019-05-10 09:25:45 -<==      Total: 93
2019-05-10 09:25:45 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 09:25:45 -HTTP METHOD : GET
2019-05-10 09:25:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 09:25:45 -参数 : []
2019-05-10 09:25:45 -耗时 : 0
2019-05-10 09:25:45 -返回值 : elec/elecPrice/elecPrice
2019-05-10 09:25:45 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 09:25:45 -HTTP METHOD : GET
2019-05-10 09:25:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 09:25:45 -参数 : [{limit=10, offset=0}]
2019-05-10 09:25:45 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 09:25:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:25:45 -<==      Total: 2
2019-05-10 09:25:45 -==>  Preparing: select count(*) from elec_price 
2019-05-10 09:25:45 -==> Parameters: 
2019-05-10 09:25:45 -<==      Total: 1
2019-05-10 09:25:45 -耗时 : 7
2019-05-10 09:25:45 -返回值 : com.bootdo.common.utils.PageUtils@290d3713
2019-05-10 09:30:49 -Starting BootdoApplication on PC-201905091110 with PID 14364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-10 09:30:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-10 09:30:49 -The following profiles are active: dev
2019-05-10 09:30:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 10 09:30:49 CST 2019]; root of context hierarchy
2019-05-10 09:30:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-10 09:30:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-10 09:30:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-10 09:30:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-10 09:30:55 -Tomcat initialized with port(s): 8081 (http)
2019-05-10 09:30:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-10 09:30:55 -Starting service [Tomcat]
2019-05-10 09:30:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-10 09:30:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-10 09:30:55 -Initializing Spring embedded WebApplicationContext
2019-05-10 09:30:55 -Root WebApplicationContext: initialization completed in 6339 ms
2019-05-10 09:30:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-10 09:30:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-10 09:30:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-10 09:30:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-10 09:30:56 -Filter xssFilter was not registered (disabled)
2019-05-10 09:30:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-10 09:30:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-10 09:30:56 -Servlet statViewServlet mapped to [/druid/*]
2019-05-10 09:30:56 -Servlet dispatcherServlet mapped to [/]
2019-05-10 09:31:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 10 09:30:49 CST 2019]; root of context hierarchy
2019-05-10 09:31:03 -Using default implementation for ThreadExecutor
2019-05-10 09:31:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-10 09:31:03 -Quartz Scheduler v.2.2.1 created.
2019-05-10 09:31:03 -RAMJobStore initialized.
2019-05-10 09:31:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-10 09:31:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-10 09:31:03 -Quartz scheduler version: 2.2.1
2019-05-10 09:31:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-05-10 09:31:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-10 09:31:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-10 09:31:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-10 09:31:06 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-10 09:31:06 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-10 09:31:06 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-10 09:31:06 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-10 09:31:06 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-10 09:31:06 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-10 09:31:06 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-10 09:31:06 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-10 09:31:06 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-10 09:31:06 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-10 09:31:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-10 09:31:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-10 09:31:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-10 09:31:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-10 09:31:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:31:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-10 09:31:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-10 09:31:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-10 09:31:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-10 09:31:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-10 09:31:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-10 09:31:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-10 09:31:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-10 09:31:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-10 09:31:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-10 09:31:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-10 09:31:06 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-10 09:31:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-10 09:31:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-10 09:31:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-10 09:31:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-10 09:31:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-10 09:31:06 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-10 09:31:06 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-10 09:31:06 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-10 09:31:06 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:31:06 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:31:06 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-10 09:31:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-10 09:31:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-10 09:31:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-10 09:31:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-10 09:31:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-10 09:31:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-10 09:31:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-10 09:31:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-10 09:31:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-10 09:31:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-10 09:31:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-10 09:31:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-10 09:31:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-10 09:31:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-10 09:31:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-10 09:31:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-10 09:31:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-10 09:31:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-10 09:31:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-10 09:31:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-10 09:31:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-10 09:31:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-10 09:31:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-10 09:31:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-10 09:31:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-10 09:31:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-10 09:31:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-10 09:31:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:31:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-10 09:31:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-10 09:31:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-10 09:31:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-10 09:31:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-10 09:31:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-10 09:31:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-10 09:31:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-10 09:31:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-10 09:31:06 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-10 09:31:06 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-10 09:31:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-10 09:31:06 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-10 09:31:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-10 09:31:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-10 09:31:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-10 09:31:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-10 09:31:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-10 09:31:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-10 09:31:07 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-10 09:31:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:31:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 10 09:30:49 CST 2019]; root of context hierarchy
2019-05-10 09:31:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:31:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:31:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-10 09:31:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-10 09:31:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-10 09:31:09 -Registering beans for JMX exposure on startup
2019-05-10 09:31:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-10 09:31:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-10 09:31:09 -Starting beans in phase 2147483647
2019-05-10 09:31:09 -Context refreshed
2019-05-10 09:31:09 -Found 1 custom documentation plugin(s)
2019-05-10 09:31:09 -Scanning for api listing references
2019-05-10 09:31:10 -Generating unique operation named: getCountDUsingPOST_1
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_1
2019-05-10 09:31:10 -Generating unique operation named: addUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: listUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_2
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_3
2019-05-10 09:31:10 -Generating unique operation named: saveUsingPOST_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingHEAD_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPOST_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPUT_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPATCH_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingDELETE_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-10 09:31:10 -Generating unique operation named: updateUsingTRACE_1
2019-05-10 09:31:10 -Generating unique operation named: addUsingGET_2
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_2
2019-05-10 09:31:10 -Generating unique operation named: listUsingGET_2
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_4
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_5
2019-05-10 09:31:10 -Generating unique operation named: saveUsingPOST_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPOST_2
2019-05-10 09:31:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: addUsingGET_3
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_3
2019-05-10 09:31:10 -Generating unique operation named: listUsingGET_3
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_6
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_7
2019-05-10 09:31:10 -Generating unique operation named: saveUsingPOST_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingGET_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingHEAD_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPOST_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPUT_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPATCH_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingDELETE_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-10 09:31:10 -Generating unique operation named: updateUsingTRACE_2
2019-05-10 09:31:10 -Generating unique operation named: addUsingGET_4
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_4
2019-05-10 09:31:10 -Generating unique operation named: listUsingGET_4
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_8
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_9
2019-05-10 09:31:10 -Generating unique operation named: saveUsingPOST_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingGET_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingHEAD_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPOST_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPUT_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPATCH_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingDELETE_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-10 09:31:10 -Generating unique operation named: updateUsingTRACE_3
2019-05-10 09:31:10 -Generating unique operation named: ElecUsingGET_1
2019-05-10 09:31:10 -Generating unique operation named: addUsingGET_5
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_5
2019-05-10 09:31:10 -Generating unique operation named: listUsingGET_5
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_10
2019-05-10 09:31:10 -Generating unique operation named: removeUsingPOST_11
2019-05-10 09:31:10 -Generating unique operation named: saveUsingPOST_5
2019-05-10 09:31:10 -Generating unique operation named: updateUsingGET_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingHEAD_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPOST_5
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPUT_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingPATCH_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingDELETE_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-10 09:31:10 -Generating unique operation named: updateUsingTRACE_4
2019-05-10 09:31:10 -Generating unique operation named: editUsingGET_6
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPOST_6
2019-05-10 09:31:11 -Generating unique operation named: addUsingGET_6
2019-05-10 09:31:11 -Generating unique operation named: editUsingGET_7
2019-05-10 09:31:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_7
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_12
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_13
2019-05-10 09:31:11 -Generating unique operation named: saveUsingPOST_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingGET_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingHEAD_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPOST_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPUT_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPATCH_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingDELETE_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-10 09:31:11 -Generating unique operation named: updateUsingTRACE_5
2019-05-10 09:31:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-10 09:31:11 -Generating unique operation named: addUsingGET_7
2019-05-10 09:31:11 -Generating unique operation named: editUsingGET_8
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_8
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_14
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_15
2019-05-10 09:31:11 -Generating unique operation named: saveUsingPOST_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingGET_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingHEAD_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPOST_8
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPUT_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPATCH_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingDELETE_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-10 09:31:11 -Generating unique operation named: updateUsingTRACE_6
2019-05-10 09:31:11 -Generating unique operation named: addUsingGET_8
2019-05-10 09:31:11 -Generating unique operation named: editUsingGET_9
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_9
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_16
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_17
2019-05-10 09:31:11 -Generating unique operation named: saveUsingPOST_8
2019-05-10 09:31:11 -Generating unique operation named: updateUsingGET_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingHEAD_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPOST_9
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPUT_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPATCH_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingDELETE_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-10 09:31:11 -Generating unique operation named: updateUsingTRACE_7
2019-05-10 09:31:11 -Generating unique operation named: addUsingGET_9
2019-05-10 09:31:11 -Generating unique operation named: editUsingGET_10
2019-05-10 09:31:11 -Generating unique operation named: infoUsingGET_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingHEAD_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingPOST_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingPUT_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingPATCH_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingDELETE_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-10 09:31:11 -Generating unique operation named: infoUsingTRACE_1
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_10
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_18
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_19
2019-05-10 09:31:11 -Generating unique operation named: saveUsingPOST_9
2019-05-10 09:31:11 -Generating unique operation named: updateUsingPOST_10
2019-05-10 09:31:11 -Generating unique operation named: listUsingGET_11
2019-05-10 09:31:11 -Generating unique operation named: removeUsingPOST_20
2019-05-10 09:31:11 -Generating unique operation named: welcomeUsingGET_1
2019-05-10 09:31:12 -Generating unique operation named: addUsingGET_10
2019-05-10 09:31:12 -Generating unique operation named: editUsingGET_11
2019-05-10 09:31:12 -Generating unique operation named: listUsingGET_12
2019-05-10 09:31:12 -Generating unique operation named: removeUsingPOST_21
2019-05-10 09:31:12 -Generating unique operation named: saveUsingPOST_10
2019-05-10 09:31:12 -Generating unique operation named: treeUsingGET_1
2019-05-10 09:31:12 -Generating unique operation named: treeUsingGET_2
2019-05-10 09:31:12 -Generating unique operation named: updateUsingPOST_11
2019-05-10 09:31:12 -Generating unique operation named: addUsingGET_11
2019-05-10 09:31:12 -Generating unique operation named: editUsingGET_12
2019-05-10 09:31:12 -Generating unique operation named: listUsingGET_13
2019-05-10 09:31:12 -Generating unique operation named: removeUsingPOST_22
2019-05-10 09:31:12 -Generating unique operation named: removeUsingPOST_23
2019-05-10 09:31:12 -Generating unique operation named: saveUsingPOST_11
2019-05-10 09:31:12 -Generating unique operation named: updateUsingGET_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingHEAD_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingPOST_12
2019-05-10 09:31:12 -Generating unique operation named: updateUsingPUT_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingPATCH_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingDELETE_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-10 09:31:12 -Generating unique operation named: updateUsingTRACE_8
2019-05-10 09:31:12 -Generating unique operation named: addUsingGET_12
2019-05-10 09:31:12 -Generating unique operation named: editUsingGET_13
2019-05-10 09:31:12 -Generating unique operation named: listUsingGET_14
2019-05-10 09:31:12 -Generating unique operation named: removeUsingPOST_24
2019-05-10 09:31:12 -Generating unique operation named: removeUsingPOST_25
2019-05-10 09:31:12 -Generating unique operation named: saveUsingPOST_12
2019-05-10 09:31:12 -Generating unique operation named: updateUsingGET_9
2019-05-10 09:31:12 -Generating unique operation named: updateUsingHEAD_9
2019-05-10 09:31:13 -Generating unique operation named: updateUsingPOST_13
2019-05-10 09:31:13 -Generating unique operation named: updateUsingPUT_9
2019-05-10 09:31:13 -Generating unique operation named: updateUsingPATCH_9
2019-05-10 09:31:13 -Generating unique operation named: updateUsingDELETE_9
2019-05-10 09:31:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-10 09:31:13 -Generating unique operation named: updateUsingTRACE_9
2019-05-10 09:31:13 -Generating unique operation named: addUsingGET_13
2019-05-10 09:31:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-10 09:31:13 -Generating unique operation named: editUsingGET_14
2019-05-10 09:31:13 -Generating unique operation named: listUsingGET_15
2019-05-10 09:31:13 -Generating unique operation named: saveUsingPOST_13
2019-05-10 09:31:13 -Generating unique operation named: saveUsingPOST_14
2019-05-10 09:31:13 -Generating unique operation named: updateUsingPOST_14
2019-05-10 09:31:13 -Generating unique operation named: listUsingGET_16
2019-05-10 09:31:13 -Generating unique operation named: listUsingHEAD_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingPOST_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingPUT_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingPATCH_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingDELETE_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingOPTIONS_1
2019-05-10 09:31:13 -Generating unique operation named: listUsingTRACE_1
2019-05-10 09:31:13 -Generating unique operation named: countDDUsingGET_1
2019-05-10 09:31:13 -Generating unique operation named: exportDDUsingGET_1
2019-05-10 09:31:13 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-10 09:31:13 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-10 09:31:13 -Generating unique operation named: addUsingGET_14
2019-05-10 09:31:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-10 09:31:14 -Generating unique operation named: editUsingGET_15
2019-05-10 09:31:14 -Generating unique operation named: listUsingGET_17
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_26
2019-05-10 09:31:14 -Generating unique operation named: saveUsingPOST_15
2019-05-10 09:31:14 -Generating unique operation named: treeUsingGET_3
2019-05-10 09:31:14 -Generating unique operation named: treeViewUsingGET_1
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPOST_15
2019-05-10 09:31:14 -Generating unique operation named: addUsingGET_15
2019-05-10 09:31:14 -Generating unique operation named: editUsingGET_16
2019-05-10 09:31:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-10 09:31:14 -Generating unique operation named: listUsingGET_18
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_27
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_28
2019-05-10 09:31:14 -Generating unique operation named: saveUsingPOST_16
2019-05-10 09:31:14 -Generating unique operation named: updateUsingGET_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingHEAD_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPOST_16
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPUT_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPATCH_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingDELETE_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-10 09:31:14 -Generating unique operation named: updateUsingTRACE_10
2019-05-10 09:31:14 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-10 09:31:14 -Generating unique operation named: addUsingGET_16
2019-05-10 09:31:14 -Generating unique operation named: editUsingGET_17
2019-05-10 09:31:14 -Generating unique operation named: listUsingGET_19
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_29
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_30
2019-05-10 09:31:14 -Generating unique operation named: saveUsingPOST_17
2019-05-10 09:31:14 -Generating unique operation named: updateUsingGET_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingHEAD_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPOST_17
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPUT_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPATCH_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingDELETE_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-10 09:31:14 -Generating unique operation named: updateUsingTRACE_11
2019-05-10 09:31:14 -Generating unique operation named: addUsingGET_17
2019-05-10 09:31:14 -Generating unique operation named: editUsingGET_18
2019-05-10 09:31:14 -Generating unique operation named: listUsingGET_20
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_31
2019-05-10 09:31:14 -Generating unique operation named: removeUsingPOST_32
2019-05-10 09:31:14 -Generating unique operation named: saveUsingPOST_18
2019-05-10 09:31:14 -Generating unique operation named: updateUsingGET_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingHEAD_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPOST_18
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPUT_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingPATCH_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingDELETE_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-10 09:31:14 -Generating unique operation named: updateUsingTRACE_12
2019-05-10 09:31:14 -Starting Quartz Scheduler now
2019-05-10 09:31:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-10 09:31:14 -Starting...
2019-05-10 09:31:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-10 09:31:14 -Started.
2019-05-10 09:31:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-10 09:31:14 -Using a shared selector for servlet write/read
2019-05-10 09:31:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-10 09:31:14 -Started BootdoApplication in 26.787 seconds (JVM running for 27.461)
2019-05-10 09:31:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-10 09:31:15 -==> Parameters: 
2019-05-10 09:31:15 -<==      Total: 1
2019-05-10 09:31:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-10 09:31:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-10 09:31:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 104 ms
2019-05-10 09:31:37 -Enabling session validation scheduler...
2019-05-10 09:31:37 -请求地址 : http://localhost:8081/login;JSESSIONID=1b317c09-6334-403c-969d-035595b1aec2
2019-05-10 09:31:37 -HTTP METHOD : GET
2019-05-10 09:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:31:37 -参数 : [{}]
2019-05-10 09:31:37 -耗时 : 5
2019-05-10 09:31:37 -返回值 : login
2019-05-10 09:31:38 -请求地址 : http://localhost:8081/getVerify
2019-05-10 09:31:38 -HTTP METHOD : GET
2019-05-10 09:31:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 09:31:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28f7a638, org.apache.shiro.web.servlet.ShiroHttpServletResponse@26305d56]
2019-05-10 09:31:38 -8390
2019-05-10 09:31:38 -耗时 : 439
2019-05-10 09:31:38 -返回值 : null
2019-05-10 09:32:07 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-10 09:38:40 -请求地址 : http://localhost:8081/login
2019-05-10 09:38:40 -HTTP METHOD : POST
2019-05-10 09:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 09:38:40 -参数 : [admin, 111111, 8390, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cf006cd]
2019-05-10 09:38:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 09:38:41 -==> Parameters: admin(String)
2019-05-10 09:38:41 -<==      Total: 1
2019-05-10 09:38:41 -耗时 : 228
2019-05-10 09:38:41 -返回值 : {msg=操作成功, code=0}
2019-05-10 09:38:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-10 09:38:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:38:41 -==> Parameters: 1(Long), admin(String), 登录(String), 228(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 09:38:41.237(Timestamp)
2019-05-10 09:38:41 -<==    Updates: 1
2019-05-10 09:38:41 -请求地址 : http://localhost:8081/index
2019-05-10 09:38:41 -HTTP METHOD : GET
2019-05-10 09:38:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:38:41 -参数 : [{}]
2019-05-10 09:38:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:38:41 -==> Parameters: 1(Long)
2019-05-10 09:38:41 -<==      Total: 49
2019-05-10 09:38:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:38:41 -==> Parameters: 138(Long)
2019-05-10 09:38:41 -<==      Total: 1
2019-05-10 09:38:41 -耗时 : 118
2019-05-10 09:38:41 -返回值 : index_v1
2019-05-10 09:38:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:38:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 118(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:38:41.476(Timestamp)
2019-05-10 09:38:41 -<==    Updates: 1
2019-05-10 09:38:41 -请求地址 : http://localhost:8081/main
2019-05-10 09:38:41 -HTTP METHOD : GET
2019-05-10 09:38:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:38:41 -参数 : []
2019-05-10 09:38:41 -耗时 : 1
2019-05-10 09:38:41 -返回值 : main
2019-05-10 09:38:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:38:41 -HTTP METHOD : GET
2019-05-10 09:38:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:38:41 -参数 : []
2019-05-10 09:38:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:38:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:38:41 -<==      Total: 0
2019-05-10 09:38:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:38:41 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:38:41 -<==      Total: 1
2019-05-10 09:38:41 -耗时 : 42
2019-05-10 09:38:41 -返回值 : com.bootdo.common.utils.PageUtils@3489e1aa
2019-05-10 09:38:41 -请求地址 : http://localhost:8081/main
2019-05-10 09:38:41 -HTTP METHOD : GET
2019-05-10 09:38:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:38:41 -参数 : []
2019-05-10 09:38:41 -耗时 : 1
2019-05-10 09:38:41 -返回值 : main
2019-05-10 09:42:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 09:42:32 -==> Parameters: 1(Long)
2019-05-10 09:42:32 -<==      Total: 93
2019-05-10 09:42:32 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 09:42:32 -HTTP METHOD : GET
2019-05-10 09:42:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 09:42:32 -参数 : []
2019-05-10 09:42:32 -耗时 : 0
2019-05-10 09:42:32 -返回值 : elec/elecPrice/elecPrice
2019-05-10 09:42:33 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 09:42:33 -HTTP METHOD : GET
2019-05-10 09:42:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 09:42:33 -参数 : [{limit=10, offset=0}]
2019-05-10 09:42:33 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 09:42:33 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:42:33 -<==      Total: 2
2019-05-10 09:42:33 -==>  Preparing: select count(*) from elec_price 
2019-05-10 09:42:33 -==> Parameters: 
2019-05-10 09:42:33 -<==      Total: 1
2019-05-10 09:42:33 -耗时 : 29
2019-05-10 09:42:33 -返回值 : com.bootdo.common.utils.PageUtils@3abd7634
2019-05-10 09:42:53 -请求地址 : http://localhost:8081/login;JSESSIONID=e1c791da-2bd7-4ac7-9dbe-599dbaa3b1a4
2019-05-10 09:42:53 -HTTP METHOD : GET
2019-05-10 09:42:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:42:53 -参数 : [{}]
2019-05-10 09:42:53 -耗时 : 0
2019-05-10 09:42:53 -返回值 : login
2019-05-10 09:42:54 -请求地址 : http://localhost:8081/getVerify
2019-05-10 09:42:54 -HTTP METHOD : GET
2019-05-10 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 09:42:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7df691c1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@490828b3]
2019-05-10 09:42:54 -6858
2019-05-10 09:42:54 -耗时 : 20
2019-05-10 09:42:54 -返回值 : null
2019-05-10 09:42:54 -请求地址 : http://localhost:8081/login
2019-05-10 09:42:54 -HTTP METHOD : GET
2019-05-10 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 09:42:54 -参数 : [{}]
2019-05-10 09:42:54 -耗时 : 1
2019-05-10 09:42:54 -返回值 : login
2019-05-10 09:43:00 -请求地址 : http://localhost:8081/login
2019-05-10 09:43:00 -HTTP METHOD : POST
2019-05-10 09:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 09:43:00 -参数 : [admin, 111111, 6858, org.apache.shiro.web.servlet.ShiroHttpServletRequest@237619c0]
2019-05-10 09:43:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 09:43:00 -==> Parameters: admin(String)
2019-05-10 09:43:00 -<==      Total: 1
2019-05-10 09:43:00 -耗时 : 8
2019-05-10 09:43:00 -返回值 : {msg=操作成功, code=0}
2019-05-10 09:43:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:43:00 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 09:43:00.105(Timestamp)
2019-05-10 09:43:00 -请求地址 : http://localhost:8081/index
2019-05-10 09:43:00 -HTTP METHOD : GET
2019-05-10 09:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 09:43:00 -参数 : [{}]
2019-05-10 09:43:00 -<==    Updates: 1
2019-05-10 09:43:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 09:43:00 -==> Parameters: 1(Long)
2019-05-10 09:43:00 -<==      Total: 49
2019-05-10 09:43:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 09:43:00 -==> Parameters: 138(Long)
2019-05-10 09:43:00 -<==      Total: 1
2019-05-10 09:43:00 -耗时 : 151
2019-05-10 09:43:00 -返回值 : index_v1
2019-05-10 09:43:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 09:43:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 152(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 09:43:00.292(Timestamp)
2019-05-10 09:43:00 -<==    Updates: 1
2019-05-10 09:43:00 -请求地址 : http://localhost:8081/main
2019-05-10 09:43:00 -HTTP METHOD : GET
2019-05-10 09:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:43:00 -参数 : []
2019-05-10 09:43:00 -耗时 : 1
2019-05-10 09:43:00 -返回值 : main
2019-05-10 09:43:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 09:43:00 -HTTP METHOD : GET
2019-05-10 09:43:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 09:43:00 -参数 : []
2019-05-10 09:43:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 09:43:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 09:43:00 -<==      Total: 0
2019-05-10 09:43:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 09:43:00 -==> Parameters: 1(Long), 0(String)
2019-05-10 09:43:00 -<==      Total: 1
2019-05-10 09:43:00 -耗时 : 7
2019-05-10 09:43:00 -返回值 : com.bootdo.common.utils.PageUtils@677569d8
2019-05-10 09:43:00 -请求地址 : http://localhost:8081/main
2019-05-10 09:43:00 -HTTP METHOD : GET
2019-05-10 09:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 09:43:00 -参数 : []
2019-05-10 09:43:00 -耗时 : 0
2019-05-10 09:43:00 -返回值 : main
2019-05-10 09:43:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 09:43:02 -==> Parameters: 1(Long)
2019-05-10 09:43:02 -<==      Total: 93
2019-05-10 09:43:02 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 09:43:02 -HTTP METHOD : GET
2019-05-10 09:43:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 09:43:02 -参数 : []
2019-05-10 09:43:02 -耗时 : 0
2019-05-10 09:43:02 -返回值 : elec/elecPrice/elecPrice
2019-05-10 09:43:03 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 09:43:03 -HTTP METHOD : GET
2019-05-10 09:43:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 09:43:03 -参数 : [{limit=10, offset=0}]
2019-05-10 09:43:03 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 09:43:03 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:43:03 -<==      Total: 2
2019-05-10 09:43:03 -==>  Preparing: select count(*) from elec_price 
2019-05-10 09:43:03 -==> Parameters: 
2019-05-10 09:43:03 -<==      Total: 1
2019-05-10 09:43:03 -耗时 : 12
2019-05-10 09:43:03 -返回值 : com.bootdo.common.utils.PageUtils@5949d5a9
2019-05-10 09:43:10 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-10 09:43:10 -HTTP METHOD : GET
2019-05-10 09:43:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-10 09:43:10 -参数 : []
2019-05-10 09:43:10 -耗时 : 1
2019-05-10 09:43:10 -返回值 : heat/heatPrice/heatPrice
2019-05-10 09:43:10 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-10 09:43:10 -HTTP METHOD : GET
2019-05-10 09:43:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-10 09:43:10 -参数 : [{limit=10, offset=0}]
2019-05-10 09:43:10 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-10 09:43:10 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:43:10 -<==      Total: 2
2019-05-10 09:43:10 -==>  Preparing: select count(*) from heat_price 
2019-05-10 09:43:10 -==> Parameters: 
2019-05-10 09:43:10 -<==      Total: 1
2019-05-10 09:43:10 -耗时 : 57
2019-05-10 09:43:10 -返回值 : com.bootdo.common.utils.PageUtils@7d9fcc26
2019-05-10 09:43:16 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-10 09:43:16 -HTTP METHOD : GET
2019-05-10 09:43:16 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-10 09:43:16 -参数 : []
2019-05-10 09:43:16 -耗时 : 1
2019-05-10 09:43:16 -返回值 : water/waterPrice/waterPrice
2019-05-10 09:43:16 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 09:43:16 -HTTP METHOD : GET
2019-05-10 09:43:16 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 09:43:16 -参数 : [{limit=10, offset=0}]
2019-05-10 09:43:16 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 09:43:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 09:43:16 -<==      Total: 2
2019-05-10 09:43:16 -==>  Preparing: select count(*) from water_price 
2019-05-10 09:43:16 -==> Parameters: 
2019-05-10 09:43:16 -<==      Total: 1
2019-05-10 09:43:16 -耗时 : 27
2019-05-10 09:43:16 -返回值 : com.bootdo.common.utils.PageUtils@7cdad839
2019-05-10 09:43:26 -请求地址 : http://localhost:8081/heat/heatPrice/edit/1
2019-05-10 09:43:26 -HTTP METHOD : GET
2019-05-10 09:43:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.edit
2019-05-10 09:43:26 -参数 : [1, {}]
2019-05-10 09:43:26 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price where id = ? 
2019-05-10 09:43:26 -==> Parameters: 1(Long)
2019-05-10 09:43:26 -<==      Total: 1
2019-05-10 09:43:26 -耗时 : 5
2019-05-10 09:43:26 -返回值 : heat/heatPrice/edit
2019-05-10 09:43:26 -[THYMELEAF][http-nio-8081-exec-8] Exception processing template "heat/heatPrice/edit": An error happened during template parsing (template: "class path resource [templates/heat/heatPrice/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/heat/heatPrice/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "heatPrice.businessHeat" (template: "heat/heatPrice/edit" - line 23, col 55)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "heatPrice.businessHeat" (template: "heat/heatPrice/edit" - line 23, col 55)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'businessHeat' cannot be found on object of type 'com.bootdo.heat.vo.HeatPriceVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-05-10 09:43:26 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/heat/heatPrice/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'businessHeat' cannot be found on object of type 'com.bootdo.heat.vo.HeatPriceVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-10 10:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 337]
2019-05-10 10:18:54 -请求地址 : http://localhost:8081/login;JSESSIONID=13a6d39f-9f85-4e82-9d44-9907617b734d
2019-05-10 10:18:54 -HTTP METHOD : GET
2019-05-10 10:18:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 10:18:54 -参数 : [{}]
2019-05-10 10:18:54 -耗时 : 0
2019-05-10 10:18:54 -返回值 : login
2019-05-10 10:18:54 -请求地址 : http://localhost:8081/login;JSESSIONID=13a6d39f-9f85-4e82-9d44-9907617b734d
2019-05-10 10:18:54 -HTTP METHOD : GET
2019-05-10 10:18:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 10:18:54 -参数 : [{}]
2019-05-10 10:18:54 -耗时 : 0
2019-05-10 10:18:54 -返回值 : login
2019-05-10 10:18:54 -请求地址 : http://localhost:8081/getVerify
2019-05-10 10:18:54 -HTTP METHOD : GET
2019-05-10 10:18:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 10:18:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b656a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36b09f2b]
2019-05-10 10:18:54 -7689
2019-05-10 10:18:54 -耗时 : 10
2019-05-10 10:18:54 -返回值 : null
2019-05-10 10:18:54 -请求地址 : http://localhost:8081/getVerify
2019-05-10 10:18:54 -HTTP METHOD : GET
2019-05-10 10:18:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 10:18:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d71e96d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5b81d4ee]
2019-05-10 10:18:54 -6757
2019-05-10 10:18:54 -耗时 : 9
2019-05-10 10:18:54 -返回值 : null
2019-05-10 10:18:59 -请求地址 : http://localhost:8081/login
2019-05-10 10:18:59 -HTTP METHOD : POST
2019-05-10 10:18:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 10:18:59 -参数 : [admin, 111111, 6757, org.apache.shiro.web.servlet.ShiroHttpServletRequest@581532b5]
2019-05-10 10:18:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 10:18:59 -==> Parameters: admin(String)
2019-05-10 10:18:59 -<==      Total: 1
2019-05-10 10:18:59 -耗时 : 7
2019-05-10 10:18:59 -返回值 : {msg=操作成功, code=0}
2019-05-10 10:18:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 10:18:59 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 10:18:59.343(Timestamp)
2019-05-10 10:18:59 -请求地址 : http://localhost:8081/index
2019-05-10 10:18:59 -HTTP METHOD : GET
2019-05-10 10:18:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 10:18:59 -参数 : [{}]
2019-05-10 10:18:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 10:18:59 -==> Parameters: 1(Long)
2019-05-10 10:18:59 -<==      Total: 49
2019-05-10 10:18:59 -<==    Updates: 1
2019-05-10 10:18:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 10:18:59 -==> Parameters: 138(Long)
2019-05-10 10:18:59 -<==      Total: 1
2019-05-10 10:18:59 -耗时 : 107
2019-05-10 10:18:59 -返回值 : index_v1
2019-05-10 10:18:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 10:18:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 107(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 10:18:59.485(Timestamp)
2019-05-10 10:18:59 -<==    Updates: 1
2019-05-10 10:18:59 -请求地址 : http://localhost:8081/main
2019-05-10 10:18:59 -HTTP METHOD : GET
2019-05-10 10:18:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:18:59 -参数 : []
2019-05-10 10:18:59 -耗时 : 0
2019-05-10 10:18:59 -返回值 : main
2019-05-10 10:18:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 10:18:59 -HTTP METHOD : GET
2019-05-10 10:18:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 10:18:59 -参数 : []
2019-05-10 10:18:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 10:18:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 10:18:59 -<==      Total: 0
2019-05-10 10:18:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 10:18:59 -==> Parameters: 1(Long), 0(String)
2019-05-10 10:18:59 -<==      Total: 1
2019-05-10 10:18:59 -耗时 : 11
2019-05-10 10:18:59 -返回值 : com.bootdo.common.utils.PageUtils@27f9e63d
2019-05-10 10:18:59 -请求地址 : http://localhost:8081/main
2019-05-10 10:18:59 -HTTP METHOD : GET
2019-05-10 10:18:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:18:59 -参数 : []
2019-05-10 10:18:59 -耗时 : 0
2019-05-10 10:18:59 -返回值 : main
2019-05-10 10:19:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 10:19:02 -==> Parameters: 1(Long)
2019-05-10 10:19:02 -<==      Total: 93
2019-05-10 10:19:02 -请求地址 : http://localhost:8081/water/water
2019-05-10 10:19:02 -HTTP METHOD : GET
2019-05-10 10:19:02 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-10 10:19:02 -参数 : []
2019-05-10 10:19:02 -耗时 : 0
2019-05-10 10:19:02 -返回值 : water/water/water
2019-05-10 10:19:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-10 10:19:02 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-10 10:19:02 -HTTP METHOD : GET
2019-05-10 10:19:02 -HTTP METHOD : GET
2019-05-10 10:19:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-10 10:19:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-10 10:19:02 -参数 : [userType]
2019-05-10 10:19:02 -参数 : [waterType]
2019-05-10 10:19:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-10 10:19:02 -==> Parameters: userType(String)
2019-05-10 10:19:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-10 10:19:02 -==> Parameters: waterType(String)
2019-05-10 10:19:02 -<==      Total: 2
2019-05-10 10:19:02 -<==      Total: 4
2019-05-10 10:19:02 -耗时 : 48
2019-05-10 10:19:02 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-10 10:19:02 -耗时 : 48
2019-05-10 10:19:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-10 10:19:02 -请求地址 : http://localhost:8081/water/water/list
2019-05-10 10:19:02 -HTTP METHOD : GET
2019-05-10 10:19:02 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-10 10:19:02 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-10 10:19:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-10 10:19:02 -==> Parameters: 0(Integer), 3(Integer)
2019-05-10 10:19:02 -<==      Total: 3
2019-05-10 10:19:02 -==>  Preparing: select count(*) from water 
2019-05-10 10:19:02 -==> Parameters: 
2019-05-10 10:19:02 -<==      Total: 1
2019-05-10 10:19:02 -耗时 : 100
2019-05-10 10:19:02 -返回值 : com.bootdo.common.utils.PageUtils@24f6fd6a
2019-05-10 10:19:08 -请求地址 : http://localhost:8081/water/water/edit/1
2019-05-10 10:19:08 -HTTP METHOD : GET
2019-05-10 10:19:08 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-05-10 10:19:08 -参数 : [1, {}]
2019-05-10 10:19:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-05-10 10:19:08 -==> Parameters: 1(Long)
2019-05-10 10:19:08 -<==      Total: 1
2019-05-10 10:19:08 -耗时 : 9
2019-05-10 10:19:08 -返回值 : water/water/edit
2019-05-10 10:19:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-10 10:19:08 -HTTP METHOD : GET
2019-05-10 10:19:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-10 10:19:08 -参数 : [userType]
2019-05-10 10:19:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-10 10:19:08 -==> Parameters: userType(String)
2019-05-10 10:19:08 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-10 10:19:08 -<==      Total: 4
2019-05-10 10:19:08 -HTTP METHOD : GET
2019-05-10 10:19:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-10 10:19:08 -参数 : [userState]
2019-05-10 10:19:08 -耗时 : 5
2019-05-10 10:19:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-10 10:19:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-10 10:19:08 -==> Parameters: userState(String)
2019-05-10 10:19:08 -<==      Total: 2
2019-05-10 10:19:08 -耗时 : 3
2019-05-10 10:19:08 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-10 10:19:08 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-10 10:19:08 -HTTP METHOD : GET
2019-05-10 10:19:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-10 10:19:08 -参数 : [waterType]
2019-05-10 10:19:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-10 10:19:08 -==> Parameters: waterType(String)
2019-05-10 10:19:08 -<==      Total: 2
2019-05-10 10:19:08 -耗时 : 9
2019-05-10 10:19:08 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-10 10:19:51 -请求地址 : http://localhost:8081/water/water/update
2019-05-10 10:19:51 -HTTP METHOD : POST
2019-05-10 10:19:51 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-05-10 10:19:51 -参数 : [com.bootdo.water.domain.WaterDO@33176e77]
2019-05-10 10:19:51 -==>  Preparing: update water SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `water_type` = ?, `water_price` = ?, `water_cost` = ?, `water_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-10 10:19:51 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 13116675678(String), 1(String), 10005(String), 1(String), 1.8(BigDecimal), 15(BigDecimal), 10.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-10 10:19:51.011(Timestamp), 1(Long), (String), 1(Long)
2019-05-10 10:19:51 -<==    Updates: 1
2019-05-10 10:19:51 -耗时 : 67
2019-05-10 10:19:51 -返回值 : {msg=操作成功, code=0}
2019-05-10 10:19:51 -请求地址 : http://localhost:8081/water/water/list
2019-05-10 10:19:51 -HTTP METHOD : GET
2019-05-10 10:19:51 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-10 10:19:51 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=2}]
2019-05-10 10:19:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id asc limit ?, ? 
2019-05-10 10:19:51 -==> Parameters: 0(Integer), 3(Integer)
2019-05-10 10:19:51 -<==      Total: 1
2019-05-10 10:19:51 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-05-10 10:19:51 -==> Parameters: 
2019-05-10 10:19:51 -<==      Total: 1
2019-05-10 10:19:51 -耗时 : 51
2019-05-10 10:19:51 -返回值 : com.bootdo.common.utils.PageUtils@7d77118d
2019-05-10 10:23:32 -请求地址 : http://localhost:8081/index
2019-05-10 10:23:32 -HTTP METHOD : GET
2019-05-10 10:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 10:23:32 -参数 : [{}]
2019-05-10 10:23:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 10:23:32 -==> Parameters: 1(Long)
2019-05-10 10:23:32 -<==      Total: 49
2019-05-10 10:23:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 10:23:32 -==> Parameters: 138(Long)
2019-05-10 10:23:32 -<==      Total: 1
2019-05-10 10:23:32 -耗时 : 21
2019-05-10 10:23:32 -返回值 : index_v1
2019-05-10 10:23:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 10:23:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 10:23:32.763(Timestamp)
2019-05-10 10:23:32 -<==    Updates: 1
2019-05-10 10:23:32 -请求地址 : http://localhost:8081/main
2019-05-10 10:23:32 -HTTP METHOD : GET
2019-05-10 10:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:23:32 -参数 : []
2019-05-10 10:23:32 -耗时 : 1
2019-05-10 10:23:32 -返回值 : main
2019-05-10 10:23:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 10:23:33 -HTTP METHOD : GET
2019-05-10 10:23:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 10:23:33 -参数 : []
2019-05-10 10:23:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 10:23:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 10:23:33 -<==      Total: 0
2019-05-10 10:23:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 10:23:33 -==> Parameters: 1(Long), 0(String)
2019-05-10 10:23:33 -<==      Total: 1
2019-05-10 10:23:33 -耗时 : 8
2019-05-10 10:23:33 -返回值 : com.bootdo.common.utils.PageUtils@344c579e
2019-05-10 10:23:33 -请求地址 : http://localhost:8081/main
2019-05-10 10:23:33 -HTTP METHOD : GET
2019-05-10 10:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:23:33 -参数 : []
2019-05-10 10:23:33 -耗时 : 1
2019-05-10 10:23:33 -返回值 : main
2019-05-10 10:23:35 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-10 10:23:35 -HTTP METHOD : GET
2019-05-10 10:23:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-10 10:23:35 -参数 : []
2019-05-10 10:23:35 -耗时 : 1
2019-05-10 10:23:35 -返回值 : water/waterPrice/waterPrice
2019-05-10 10:23:35 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 10:23:35 -HTTP METHOD : GET
2019-05-10 10:23:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 10:23:35 -参数 : [{limit=10, offset=0}]
2019-05-10 10:23:35 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 10:23:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 10:23:35 -<==      Total: 2
2019-05-10 10:23:35 -==>  Preparing: select count(*) from water_price 
2019-05-10 10:23:35 -==> Parameters: 
2019-05-10 10:23:35 -<==      Total: 1
2019-05-10 10:23:35 -耗时 : 8
2019-05-10 10:23:35 -返回值 : com.bootdo.common.utils.PageUtils@283bce9e
2019-05-10 10:23:37 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-10 10:23:37 -HTTP METHOD : GET
2019-05-10 10:23:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-10 10:23:37 -参数 : [1, {}]
2019-05-10 10:23:37 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-10 10:23:37 -==> Parameters: 1(Long)
2019-05-10 10:23:37 -<==      Total: 1
2019-05-10 10:23:37 -耗时 : 5
2019-05-10 10:23:37 -返回值 : water/waterPrice/edit
2019-05-10 10:23:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-10 10:23:46 -HTTP METHOD : GET
2019-05-10 10:23:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-10 10:23:46 -参数 : []
2019-05-10 10:23:46 -耗时 : 0
2019-05-10 10:23:46 -返回值 : system/dept/deptTree
2019-05-10 10:23:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-10 10:23:46 -HTTP METHOD : GET
2019-05-10 10:23:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-10 10:23:46 -参数 : []
2019-05-10 10:23:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-10 10:23:46 -==> Parameters: 
2019-05-10 10:23:46 -<==      Total: 3
2019-05-10 10:23:46 -耗时 : 18
2019-05-10 10:23:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-10 10:25:53 -请求地址 : http://localhost:8081/index
2019-05-10 10:25:53 -HTTP METHOD : GET
2019-05-10 10:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 10:25:53 -参数 : [{}]
2019-05-10 10:25:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 10:25:53 -==> Parameters: 1(Long)
2019-05-10 10:25:53 -<==      Total: 49
2019-05-10 10:25:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 10:25:53 -==> Parameters: 138(Long)
2019-05-10 10:25:53 -<==      Total: 1
2019-05-10 10:25:53 -耗时 : 23
2019-05-10 10:25:53 -返回值 : index_v1
2019-05-10 10:25:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 10:25:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 10:25:53.147(Timestamp)
2019-05-10 10:25:53 -请求地址 : http://localhost:8081/main
2019-05-10 10:25:53 -HTTP METHOD : GET
2019-05-10 10:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:25:53 -参数 : []
2019-05-10 10:25:53 -耗时 : 0
2019-05-10 10:25:53 -返回值 : main
2019-05-10 10:25:53 -<==    Updates: 1
2019-05-10 10:25:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 10:25:53 -HTTP METHOD : GET
2019-05-10 10:25:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 10:25:53 -参数 : []
2019-05-10 10:25:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 10:25:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 10:25:53 -<==      Total: 0
2019-05-10 10:25:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 10:25:53 -==> Parameters: 1(Long), 0(String)
2019-05-10 10:25:53 -<==      Total: 1
2019-05-10 10:25:53 -耗时 : 6
2019-05-10 10:25:53 -返回值 : com.bootdo.common.utils.PageUtils@1730e876
2019-05-10 10:25:53 -请求地址 : http://localhost:8081/main
2019-05-10 10:25:53 -HTTP METHOD : GET
2019-05-10 10:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 10:25:53 -参数 : []
2019-05-10 10:25:53 -耗时 : 0
2019-05-10 10:25:53 -返回值 : main
2019-05-10 10:25:55 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-10 10:25:55 -HTTP METHOD : GET
2019-05-10 10:25:55 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-10 10:25:55 -参数 : []
2019-05-10 10:25:55 -耗时 : 0
2019-05-10 10:25:55 -返回值 : water/waterPrice/waterPrice
2019-05-10 10:25:56 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 10:25:56 -HTTP METHOD : GET
2019-05-10 10:25:56 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 10:25:56 -参数 : [{limit=10, offset=0}]
2019-05-10 10:25:56 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 10:25:56 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 10:25:56 -<==      Total: 2
2019-05-10 10:25:56 -==>  Preparing: select count(*) from water_price 
2019-05-10 10:25:56 -==> Parameters: 
2019-05-10 10:25:56 -<==      Total: 1
2019-05-10 10:25:56 -耗时 : 6
2019-05-10 10:25:56 -返回值 : com.bootdo.common.utils.PageUtils@19fc75a5
2019-05-10 10:25:58 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-10 10:25:58 -HTTP METHOD : GET
2019-05-10 10:25:58 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-10 10:25:58 -参数 : [1, {}]
2019-05-10 10:25:58 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-10 10:25:58 -==> Parameters: 1(Long)
2019-05-10 10:25:58 -<==      Total: 1
2019-05-10 10:25:58 -耗时 : 5
2019-05-10 10:25:58 -返回值 : water/waterPrice/edit
2019-05-10 10:26:35 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-10 10:26:35 -HTTP METHOD : POST
2019-05-10 10:26:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-10 10:26:35 -参数 : [com.bootdo.water.domain.WaterPriceDO@2b1ffdcf]
2019-05-10 10:26:35 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-10 10:26:35 -==> Parameters: 2(String), 6(BigDecimal), 1(BigDecimal), 2019-05-10 10:26:35.749(Timestamp), 1(Long), (String), 1(Long)
2019-05-10 10:26:35 -<==    Updates: 1
2019-05-10 10:26:35 -耗时 : 32
2019-05-10 10:26:35 -返回值 : {msg=操作成功, code=0}
2019-05-10 10:26:35 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 10:26:35 -HTTP METHOD : GET
2019-05-10 10:26:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 10:26:35 -参数 : [{limit=10, offset=0}]
2019-05-10 10:26:35 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 10:26:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 10:26:35 -<==      Total: 2
2019-05-10 10:26:35 -==>  Preparing: select count(*) from water_price 
2019-05-10 10:26:35 -==> Parameters: 
2019-05-10 10:26:35 -<==      Total: 1
2019-05-10 10:26:35 -耗时 : 6
2019-05-10 10:26:35 -返回值 : com.bootdo.common.utils.PageUtils@1d3a3943
2019-05-10 10:26:37 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-10 10:26:37 -HTTP METHOD : GET
2019-05-10 10:26:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-10 10:26:37 -参数 : [1, {}]
2019-05-10 10:26:37 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-10 10:26:37 -==> Parameters: 1(Long)
2019-05-10 10:26:37 -<==      Total: 1
2019-05-10 10:26:37 -耗时 : 4
2019-05-10 10:26:37 -返回值 : water/waterPrice/edit
2019-05-10 10:26:57 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-10 10:26:57 -HTTP METHOD : POST
2019-05-10 10:26:57 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-10 10:26:57 -参数 : [com.bootdo.water.domain.WaterPriceDO@f67ac5b]
2019-05-10 10:26:57 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-10 10:26:57 -==> Parameters: 2(String), 6(BigDecimal), 10(BigDecimal), 2019-05-10 10:26:57.612(Timestamp), 1(Long), (String), 1(Long)
2019-05-10 10:26:57 -<==    Updates: 1
2019-05-10 10:26:57 -耗时 : 88
2019-05-10 10:26:57 -返回值 : {msg=操作成功, code=0}
2019-05-10 10:26:57 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 10:26:57 -HTTP METHOD : GET
2019-05-10 10:26:57 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 10:26:57 -参数 : [{limit=10, offset=0}]
2019-05-10 10:26:57 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 10:26:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 10:26:57 -<==      Total: 2
2019-05-10 10:26:57 -==>  Preparing: select count(*) from water_price 
2019-05-10 10:26:57 -==> Parameters: 
2019-05-10 10:26:57 -<==      Total: 1
2019-05-10 10:26:57 -耗时 : 6
2019-05-10 10:26:57 -返回值 : com.bootdo.common.utils.PageUtils@7533eef7
2019-05-10 10:27:20 -请求地址 : http://localhost:8081/water/waterPrice/edit/2
2019-05-10 10:27:20 -HTTP METHOD : GET
2019-05-10 10:27:20 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-10 10:27:20 -参数 : [2, {}]
2019-05-10 10:27:20 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-10 10:27:20 -==> Parameters: 2(Long)
2019-05-10 10:27:20 -<==      Total: 1
2019-05-10 10:27:20 -耗时 : 4
2019-05-10 10:27:20 -返回值 : water/waterPrice/edit
2019-05-10 10:28:15 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-10 10:28:15 -HTTP METHOD : POST
2019-05-10 10:28:15 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-10 10:28:15 -参数 : [com.bootdo.water.domain.WaterPriceDO@6ae603df]
2019-05-10 10:28:15 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `s2_water` = ?, `s3_water` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-10 10:28:15 -==> Parameters: 3(String), 6(BigDecimal), 10(BigDecimal), 20(BigDecimal), 30(BigDecimal), 2019-05-10 10:28:15.113(Timestamp), 1(Long), (String), 2(Long)
2019-05-10 10:28:15 -<==    Updates: 1
2019-05-10 10:28:15 -耗时 : 115
2019-05-10 10:28:15 -返回值 : {msg=操作成功, code=0}
2019-05-10 10:28:15 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-10 10:28:15 -HTTP METHOD : GET
2019-05-10 10:28:15 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-10 10:28:15 -参数 : [{limit=10, offset=0}]
2019-05-10 10:28:15 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-10 10:28:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 10:28:15 -<==      Total: 2
2019-05-10 10:28:15 -==>  Preparing: select count(*) from water_price 
2019-05-10 10:28:15 -==> Parameters: 
2019-05-10 10:28:15 -<==      Total: 1
2019-05-10 10:28:15 -耗时 : 10
2019-05-10 10:28:15 -返回值 : com.bootdo.common.utils.PageUtils@30e48ad4
2019-05-10 10:31:37 -Validating all active sessions...
2019-05-10 10:31:37 -Finished session validation.  [1] sessions were stopped.
2019-05-10 10:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 768]
2019-05-10 11:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1201]
2019-05-10 11:06:05 -请求地址 : http://localhost:8081/login;JSESSIONID=e176049f-8f50-42bc-80b3-d627d5c76a64
2019-05-10 11:06:05 -HTTP METHOD : GET
2019-05-10 11:06:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 11:06:05 -参数 : [{}]
2019-05-10 11:06:05 -耗时 : 1
2019-05-10 11:06:05 -返回值 : login
2019-05-10 11:06:06 -请求地址 : http://localhost:8081/getVerify
2019-05-10 11:06:06 -HTTP METHOD : GET
2019-05-10 11:06:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 11:06:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a72e5aa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@29be985a]
2019-05-10 11:06:06 -9682
2019-05-10 11:06:06 -耗时 : 9
2019-05-10 11:06:06 -返回值 : null
2019-05-10 11:06:12 -请求地址 : http://localhost:8081/login
2019-05-10 11:06:12 -HTTP METHOD : POST
2019-05-10 11:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 11:06:12 -参数 : [admin, 111111, 9682, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4415e20c]
2019-05-10 11:06:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 11:06:12 -==> Parameters: admin(String)
2019-05-10 11:06:12 -<==      Total: 1
2019-05-10 11:06:12 -耗时 : 10
2019-05-10 11:06:12 -返回值 : {msg=操作成功, code=0}
2019-05-10 11:06:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 11:06:12 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 11:06:12.095(Timestamp)
2019-05-10 11:06:12 -请求地址 : http://localhost:8081/index
2019-05-10 11:06:12 -HTTP METHOD : GET
2019-05-10 11:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 11:06:12 -参数 : [{}]
2019-05-10 11:06:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 11:06:12 -==> Parameters: 1(Long)
2019-05-10 11:06:12 -<==    Updates: 1
2019-05-10 11:06:12 -<==      Total: 49
2019-05-10 11:06:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 11:06:12 -==> Parameters: 138(Long)
2019-05-10 11:06:12 -<==      Total: 1
2019-05-10 11:06:12 -耗时 : 25
2019-05-10 11:06:12 -返回值 : index_v1
2019-05-10 11:06:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 11:06:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 11:06:12.152(Timestamp)
2019-05-10 11:06:12 -<==    Updates: 1
2019-05-10 11:06:12 -请求地址 : http://localhost:8081/main
2019-05-10 11:06:12 -HTTP METHOD : GET
2019-05-10 11:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 11:06:12 -参数 : []
2019-05-10 11:06:12 -耗时 : 0
2019-05-10 11:06:12 -返回值 : main
2019-05-10 11:06:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 11:06:12 -HTTP METHOD : GET
2019-05-10 11:06:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 11:06:12 -参数 : []
2019-05-10 11:06:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 11:06:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 11:06:12 -<==      Total: 0
2019-05-10 11:06:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 11:06:12 -==> Parameters: 1(Long), 0(String)
2019-05-10 11:06:12 -<==      Total: 1
2019-05-10 11:06:12 -耗时 : 6
2019-05-10 11:06:12 -返回值 : com.bootdo.common.utils.PageUtils@722e83ba
2019-05-10 11:06:12 -请求地址 : http://localhost:8081/main
2019-05-10 11:06:12 -HTTP METHOD : GET
2019-05-10 11:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 11:06:12 -参数 : []
2019-05-10 11:06:12 -耗时 : 0
2019-05-10 11:06:12 -返回值 : main
2019-05-10 11:06:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 11:06:15 -==> Parameters: 1(Long)
2019-05-10 11:06:15 -<==      Total: 93
2019-05-10 11:06:15 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 11:06:15 -HTTP METHOD : GET
2019-05-10 11:06:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 11:06:15 -参数 : []
2019-05-10 11:06:15 -耗时 : 0
2019-05-10 11:06:15 -返回值 : elec/elecPrice/elecPrice
2019-05-10 11:06:15 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 11:06:15 -HTTP METHOD : GET
2019-05-10 11:06:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 11:06:15 -参数 : [{limit=10, offset=0}]
2019-05-10 11:06:15 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 11:06:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 11:06:15 -<==      Total: 2
2019-05-10 11:06:15 -==>  Preparing: select count(*) from elec_price 
2019-05-10 11:06:15 -==> Parameters: 
2019-05-10 11:06:15 -<==      Total: 1
2019-05-10 11:06:15 -耗时 : 7
2019-05-10 11:06:15 -返回值 : com.bootdo.common.utils.PageUtils@4649a1d2
2019-05-10 11:06:21 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-10 11:06:21 -HTTP METHOD : GET
2019-05-10 11:06:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-10 11:06:21 -参数 : [1, {}]
2019-05-10 11:06:21 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-10 11:06:21 -==> Parameters: 1(Long)
2019-05-10 11:06:21 -<==      Total: 1
2019-05-10 11:06:21 -耗时 : 11
2019-05-10 11:06:21 -返回值 : elec/elecPrice/edit
2019-05-10 11:06:28 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-10 11:06:28 -HTTP METHOD : POST
2019-05-10 11:06:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-10 11:06:28 -参数 : [com.bootdo.elec.domain.ElecPriceDO@7e05b9b3]
2019-05-10 11:06:28 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, g2_elec = ?, g3_elec = ?, wm_elec = ?, ws_elec = ?, wg_elec = ?, mm_elec = ?, ms_elec = ?, z_elec = ?, create_by = ?, update_time = ? where id = ? 
2019-05-10 11:06:28 -==> Parameters: 0.467(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.400(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 1(Long), 2019-05-10 11:06:28.431(Timestamp), 1(Long)
2019-05-10 11:06:28 -<==    Updates: 1
2019-05-10 11:06:28 -耗时 : 117
2019-05-10 11:06:28 -返回值 : {msg=操作成功, code=0}
2019-05-10 11:06:28 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 11:06:28 -HTTP METHOD : GET
2019-05-10 11:06:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 11:06:28 -参数 : [{limit=10, offset=0}]
2019-05-10 11:06:28 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 11:06:28 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 11:06:28 -<==      Total: 2
2019-05-10 11:06:28 -==>  Preparing: select count(*) from elec_price 
2019-05-10 11:06:28 -==> Parameters: 
2019-05-10 11:06:28 -<==      Total: 1
2019-05-10 11:06:28 -耗时 : 6
2019-05-10 11:06:28 -返回值 : com.bootdo.common.utils.PageUtils@18da78cf
2019-05-10 11:06:32 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-10 11:06:32 -HTTP METHOD : GET
2019-05-10 11:06:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-10 11:06:32 -参数 : [1, {}]
2019-05-10 11:06:32 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-10 11:06:32 -==> Parameters: 1(Long)
2019-05-10 11:06:32 -<==      Total: 1
2019-05-10 11:06:32 -耗时 : 5
2019-05-10 11:06:32 -返回值 : elec/elecPrice/edit
2019-05-10 11:06:37 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-10 11:06:37 -HTTP METHOD : POST
2019-05-10 11:06:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-10 11:06:37 -参数 : [com.bootdo.elec.domain.ElecPriceDO@7a0ccbc8]
2019-05-10 11:06:37 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, g2_elec = ?, g3_elec = ?, wm_elec = ?, ws_elec = ?, wg_elec = ?, mm_elec = ?, ms_elec = ?, z_elec = ?, create_by = ?, update_time = ? where id = ? 
2019-05-10 11:06:37 -==> Parameters: 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.400(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 1(Long), 2019-05-10 11:06:37.339(Timestamp), 1(Long)
2019-05-10 11:06:37 -<==    Updates: 1
2019-05-10 11:06:37 -耗时 : 124
2019-05-10 11:06:37 -返回值 : {msg=操作成功, code=0}
2019-05-10 11:06:37 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 11:06:37 -HTTP METHOD : GET
2019-05-10 11:06:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 11:06:37 -参数 : [{limit=10, offset=0}]
2019-05-10 11:06:37 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 11:06:37 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 11:06:37 -<==      Total: 2
2019-05-10 11:06:37 -==>  Preparing: select count(*) from elec_price 
2019-05-10 11:06:37 -==> Parameters: 
2019-05-10 11:06:37 -<==      Total: 1
2019-05-10 11:06:37 -耗时 : 5
2019-05-10 11:06:37 -返回值 : com.bootdo.common.utils.PageUtils@5edf7413
2019-05-10 11:06:49 -请求地址 : http://localhost:8081/elec/elecPrice/add
2019-05-10 11:06:49 -HTTP METHOD : GET
2019-05-10 11:06:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.add
2019-05-10 11:06:49 -参数 : []
2019-05-10 11:06:49 -耗时 : 0
2019-05-10 11:06:49 -返回值 : elec/elecPrice/add
2019-05-10 11:07:01 -请求地址 : http://localhost:8081/elec/elecPrice/add
2019-05-10 11:07:01 -HTTP METHOD : GET
2019-05-10 11:07:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.add
2019-05-10 11:07:01 -参数 : []
2019-05-10 11:07:01 -耗时 : 0
2019-05-10 11:07:01 -返回值 : elec/elecPrice/add
2019-05-10 11:07:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-10 11:07:02 -HTTP METHOD : GET
2019-05-10 11:07:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-10 11:07:02 -参数 : []
2019-05-10 11:07:02 -耗时 : 1
2019-05-10 11:07:02 -返回值 : system/dept/deptTree
2019-05-10 11:07:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-10 11:07:02 -HTTP METHOD : GET
2019-05-10 11:07:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-10 11:07:02 -参数 : []
2019-05-10 11:07:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-10 11:07:02 -==> Parameters: 
2019-05-10 11:07:02 -<==      Total: 3
2019-05-10 11:07:02 -耗时 : 3
2019-05-10 11:07:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-10 11:31:37 -Validating all active sessions...
2019-05-10 11:31:37 -Finished session validation.  No sessions were stopped.
2019-05-10 11:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1634]
2019-05-10 12:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2067]
2019-05-10 12:31:37 -Validating all active sessions...
2019-05-10 12:31:37 -Finished session validation.  [1] sessions were stopped.
2019-05-10 12:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2500]
2019-05-10 13:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2933]
2019-05-10 13:31:37 -Validating all active sessions...
2019-05-10 13:31:37 -Finished session validation.  No sessions were stopped.
2019-05-10 13:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3366]
2019-05-10 14:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3799]
2019-05-10 14:23:32 -请求地址 : http://localhost:8081/login;JSESSIONID=00c0fab9-0db5-4a36-8228-8fb9711afcc6
2019-05-10 14:23:32 -HTTP METHOD : GET
2019-05-10 14:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 14:23:32 -参数 : [{}]
2019-05-10 14:23:32 -耗时 : 1
2019-05-10 14:23:32 -返回值 : login
2019-05-10 14:23:32 -请求地址 : http://localhost:8081/getVerify
2019-05-10 14:23:32 -HTTP METHOD : GET
2019-05-10 14:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-10 14:23:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2448fcbe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@22a6aede]
2019-05-10 14:23:32 -4599
2019-05-10 14:23:32 -耗时 : 29
2019-05-10 14:23:32 -返回值 : null
2019-05-10 14:23:33 -请求地址 : http://localhost:8081/login
2019-05-10 14:23:33 -HTTP METHOD : GET
2019-05-10 14:23:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-10 14:23:33 -参数 : [{}]
2019-05-10 14:23:33 -耗时 : 6
2019-05-10 14:23:33 -返回值 : login
2019-05-10 14:23:38 -请求地址 : http://localhost:8081/login
2019-05-10 14:23:38 -HTTP METHOD : POST
2019-05-10 14:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-10 14:23:38 -参数 : [admin, 111111, 4599, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c8c9b4c]
2019-05-10 14:23:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-10 14:23:38 -==> Parameters: admin(String)
2019-05-10 14:23:38 -<==      Total: 1
2019-05-10 14:23:38 -耗时 : 27
2019-05-10 14:23:38 -返回值 : {msg=操作成功, code=0}
2019-05-10 14:23:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 14:23:38 -==> Parameters: 1(Long), admin(String), 登录(String), 27(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-10 14:23:38.145(Timestamp)
2019-05-10 14:23:38 -请求地址 : http://localhost:8081/index
2019-05-10 14:23:38 -HTTP METHOD : GET
2019-05-10 14:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-10 14:23:38 -参数 : [{}]
2019-05-10 14:23:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-10 14:23:38 -==> Parameters: 1(Long)
2019-05-10 14:23:38 -<==      Total: 49
2019-05-10 14:23:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-10 14:23:38 -==> Parameters: 138(Long)
2019-05-10 14:23:38 -<==      Total: 1
2019-05-10 14:23:38 -耗时 : 27
2019-05-10 14:23:38 -返回值 : index_v1
2019-05-10 14:23:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-10 14:23:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-10 14:23:38.192(Timestamp)
2019-05-10 14:23:38 -<==    Updates: 1
2019-05-10 14:23:38 -<==    Updates: 1
2019-05-10 14:23:38 -请求地址 : http://localhost:8081/main
2019-05-10 14:23:38 -HTTP METHOD : GET
2019-05-10 14:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 14:23:38 -参数 : []
2019-05-10 14:23:38 -耗时 : 0
2019-05-10 14:23:38 -返回值 : main
2019-05-10 14:23:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-10 14:23:38 -HTTP METHOD : GET
2019-05-10 14:23:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-10 14:23:38 -参数 : []
2019-05-10 14:23:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-10 14:23:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-10 14:23:38 -<==      Total: 0
2019-05-10 14:23:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-10 14:23:38 -==> Parameters: 1(Long), 0(String)
2019-05-10 14:23:38 -<==      Total: 1
2019-05-10 14:23:38 -耗时 : 10
2019-05-10 14:23:38 -返回值 : com.bootdo.common.utils.PageUtils@5ad02ed8
2019-05-10 14:23:39 -请求地址 : http://localhost:8081/main
2019-05-10 14:23:39 -HTTP METHOD : GET
2019-05-10 14:23:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-10 14:23:39 -参数 : []
2019-05-10 14:23:39 -耗时 : 1
2019-05-10 14:23:39 -返回值 : main
2019-05-10 14:23:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-10 14:23:54 -==> Parameters: 1(Long)
2019-05-10 14:23:54 -<==      Total: 93
2019-05-10 14:23:54 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-10 14:23:54 -HTTP METHOD : GET
2019-05-10 14:23:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-10 14:23:54 -参数 : []
2019-05-10 14:23:54 -耗时 : 1
2019-05-10 14:23:54 -返回值 : elec/elecPrice/elecPrice
2019-05-10 14:23:54 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-10 14:23:54 -HTTP METHOD : GET
2019-05-10 14:23:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-10 14:23:54 -参数 : [{limit=10, offset=0}]
2019-05-10 14:23:54 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-10 14:23:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-10 14:23:54 -<==      Total: 2
2019-05-10 14:23:54 -==>  Preparing: select count(*) from elec_price 
2019-05-10 14:23:54 -==> Parameters: 
2019-05-10 14:23:54 -<==      Total: 1
2019-05-10 14:23:54 -耗时 : 11
2019-05-10 14:23:54 -返回值 : com.bootdo.common.utils.PageUtils@5b3e90ed
2019-05-10 14:23:58 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-10 14:23:58 -HTTP METHOD : GET
2019-05-10 14:23:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-10 14:23:58 -参数 : [1, {}]
2019-05-10 14:23:58 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-10 14:23:58 -==> Parameters: 1(Long)
2019-05-10 14:23:58 -<==      Total: 1
2019-05-10 14:23:58 -耗时 : 4
2019-05-10 14:23:58 -返回值 : elec/elecPrice/edit
2019-05-10 14:31:37 -Validating all active sessions...
2019-05-10 14:31:37 -Finished session validation.  No sessions were stopped.
2019-05-10 14:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4231]
2019-05-10 15:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4664]
2019-05-10 15:31:37 -Validating all active sessions...
2019-05-10 15:31:37 -Finished session validation.  [1] sessions were stopped.
2019-05-10 15:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5097]
2019-05-10 16:02:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5530]
2019-05-10 16:31:37 -Validating all active sessions...
2019-05-10 16:31:37 -Finished session validation.  No sessions were stopped.
2019-05-10 16:32:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5963]
2019-05-10 17:02:07 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 6337]

2019-05-06 08:27:43 -Starting BootdoApplication on ZJZL-20180906VX with PID 17280 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 08:27:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 08:27:43 -The following profiles are active: dev
2019-05-06 08:27:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 08:27:44 CST 2019]; root of context hierarchy
2019-05-06 08:27:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 08:28:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 08:28:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 08:28:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 08:28:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 08:28:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 08:28:12 -Starting service [Tomcat]
2019-05-06 08:28:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 08:28:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 08:28:13 -Initializing Spring embedded WebApplicationContext
2019-05-06 08:28:13 -Root WebApplicationContext: initialization completed in 28881 ms
2019-05-06 08:28:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 08:28:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 08:28:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 08:28:14 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 08:28:14 -Filter xssFilter was not registered (disabled)
2019-05-06 08:28:14 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 08:28:14 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 08:28:14 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 08:28:14 -Servlet dispatcherServlet mapped to [/]
2019-05-06 08:28:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 08:27:44 CST 2019]; root of context hierarchy
2019-05-06 08:28:28 -Using default implementation for ThreadExecutor
2019-05-06 08:28:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 08:28:28 -Quartz Scheduler v.2.2.1 created.
2019-05-06 08:28:28 -RAMJobStore initialized.
2019-05-06 08:28:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 08:28:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 08:28:28 -Quartz scheduler version: 2.2.1
2019-05-06 08:28:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65859b44
2019-05-06 08:28:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 08:28:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 08:28:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 08:28:32 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 08:28:32 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 08:28:32 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 08:28:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 08:28:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 08:28:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 08:28:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:32 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 08:28:32 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 08:28:32 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 08:28:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 08:28:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 08:28:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 08:28:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 08:28:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 08:28:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 08:28:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 08:28:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 08:28:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 08:28:33 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 08:28:33 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 08:28:33 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 08:28:33 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 08:28:33 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 08:28:33 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 08:28:33 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 08:28:33 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 08:28:33 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 08:28:33 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 08:28:33 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 08:28:33 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 08:28:33 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 08:28:33 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 08:28:33 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 08:28:33 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 08:28:33 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 08:28:33 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 08:28:33 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 08:28:33 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 08:28:33 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 08:28:33 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 08:28:33 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 08:28:33 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 08:28:33 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 08:28:33 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 08:28:33 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 08:28:33 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 08:28:33 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 08:28:33 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 08:28:33 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 08:28:33 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 08:28:33 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 08:28:33 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 08:28:33 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 08:28:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 08:28:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 08:28:33 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 08:28:33 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 08:28:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 08:28:33 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 08:28:33 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 08:28:33 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 08:28:33 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 08:28:33 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 08:28:33 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 08:28:33 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 08:28:33 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 08:28:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 08:28:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 08:28:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 08:28:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 08:28:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 08:28:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 08:28:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 08:28:33 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 08:28:33 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 08:28:33 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 08:28:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 08:28:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 08:28:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 08:28:33 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 08:28:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 08:28:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 08:28:33 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 08:28:33 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 08:28:33 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 08:28:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 08:28:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 08:28:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 08:28:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 08:28:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 08:28:36 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 08:28:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 08:28:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 08:28:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 08:27:44 CST 2019]; root of context hierarchy
2019-05-06 08:28:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 08:28:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 08:28:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 08:28:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 08:28:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 08:28:59 -Registering beans for JMX exposure on startup
2019-05-06 08:28:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 08:28:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 08:28:59 -Starting beans in phase 2147483647
2019-05-06 08:28:59 -Context refreshed
2019-05-06 08:29:00 -Found 1 custom documentation plugin(s)
2019-05-06 08:29:00 -Scanning for api listing references
2019-05-06 08:29:03 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_1
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_2
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_3
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_2
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_2
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_2
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_4
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_5
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_2
2019-05-06 08:29:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_3
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_3
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_3
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_6
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_7
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_4
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_4
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_4
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_8
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_9
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 08:29:04 -Generating unique operation named: ElecUsingGET_1
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_5
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_5
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_5
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_10
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_11
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_6
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_6
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_6
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_7
2019-05-06 08:29:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_7
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_12
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_13
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_7
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 08:29:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 08:29:04 -Generating unique operation named: addUsingGET_7
2019-05-06 08:29:04 -Generating unique operation named: editUsingGET_8
2019-05-06 08:29:04 -Generating unique operation named: listUsingGET_8
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_14
2019-05-06 08:29:04 -Generating unique operation named: removeUsingPOST_15
2019-05-06 08:29:04 -Generating unique operation named: saveUsingPOST_7
2019-05-06 08:29:04 -Generating unique operation named: updateUsingGET_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPOST_8
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPUT_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 08:29:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_8
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_9
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_9
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_16
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_17
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingGET_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPUT_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 08:29:05 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_9
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_10
2019-05-06 08:29:05 -Generating unique operation named: infoUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingPOST_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingPUT_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 08:29:05 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_10
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_18
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_19
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_10
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_11
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_20
2019-05-06 08:29:05 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_10
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_11
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_12
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_21
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_10
2019-05-06 08:29:05 -Generating unique operation named: treeUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: treeUsingGET_2
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_11
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_11
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_12
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_13
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_22
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_23
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_11
2019-05-06 08:29:05 -Generating unique operation named: updateUsingGET_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_12
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPUT_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 08:29:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_12
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_13
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_14
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_24
2019-05-06 08:29:05 -Generating unique operation named: removeUsingPOST_25
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_12
2019-05-06 08:29:05 -Generating unique operation named: updateUsingGET_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_13
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPUT_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 08:29:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_13
2019-05-06 08:29:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_14
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_15
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_13
2019-05-06 08:29:05 -Generating unique operation named: saveUsingPOST_14
2019-05-06 08:29:05 -Generating unique operation named: updateUsingPOST_14
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_16
2019-05-06 08:29:05 -Generating unique operation named: listUsingHEAD_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingPOST_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingPUT_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingPATCH_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingDELETE_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 08:29:05 -Generating unique operation named: listUsingTRACE_1
2019-05-06 08:29:05 -Generating unique operation named: countDDUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 08:29:05 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-06 08:29:05 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-06 08:29:05 -Generating unique operation named: addUsingGET_14
2019-05-06 08:29:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 08:29:05 -Generating unique operation named: editUsingGET_15
2019-05-06 08:29:05 -Generating unique operation named: listUsingGET_17
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_26
2019-05-06 08:29:06 -Generating unique operation named: saveUsingPOST_15
2019-05-06 08:29:06 -Generating unique operation named: treeUsingGET_3
2019-05-06 08:29:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPOST_15
2019-05-06 08:29:06 -Generating unique operation named: addUsingGET_15
2019-05-06 08:29:06 -Generating unique operation named: editUsingGET_16
2019-05-06 08:29:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 08:29:06 -Generating unique operation named: listUsingGET_18
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_27
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_28
2019-05-06 08:29:06 -Generating unique operation named: saveUsingPOST_16
2019-05-06 08:29:06 -Generating unique operation named: updateUsingGET_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPOST_16
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPUT_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 08:29:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 08:29:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 08:29:06 -Generating unique operation named: addUsingGET_16
2019-05-06 08:29:06 -Generating unique operation named: editUsingGET_17
2019-05-06 08:29:06 -Generating unique operation named: listUsingGET_19
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_29
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_30
2019-05-06 08:29:06 -Generating unique operation named: saveUsingPOST_17
2019-05-06 08:29:06 -Generating unique operation named: updateUsingGET_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPOST_17
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPUT_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 08:29:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 08:29:06 -Generating unique operation named: addUsingGET_17
2019-05-06 08:29:06 -Generating unique operation named: editUsingGET_18
2019-05-06 08:29:06 -Generating unique operation named: listUsingGET_20
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_31
2019-05-06 08:29:06 -Generating unique operation named: removeUsingPOST_32
2019-05-06 08:29:06 -Generating unique operation named: saveUsingPOST_18
2019-05-06 08:29:06 -Generating unique operation named: updateUsingGET_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPOST_18
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPUT_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 08:29:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 08:29:07 -Starting Quartz Scheduler now
2019-05-06 08:29:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 08:29:07 -Starting...
2019-05-06 08:29:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 08:29:07 -Started.
2019-05-06 08:29:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 08:29:11 -Using a shared selector for servlet write/read
2019-05-06 08:29:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 08:29:12 -Started BootdoApplication in 92.991 seconds (JVM running for 96.94)
2019-05-06 08:29:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 08:29:18 -==> Parameters: 
2019-05-06 08:29:19 -<==      Total: 1
2019-05-06 08:29:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-06 08:30:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 08:30:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 08:30:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-05-06 08:30:07 -Enabling session validation scheduler...
2019-05-06 08:30:09 -请求地址 : http://localhost:8081/login;JSESSIONID=11de8d6d-69fd-4692-98c4-5f71a9b5a4dc
2019-05-06 08:30:09 -HTTP METHOD : GET
2019-05-06 08:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 08:30:09 -参数 : [{}]
2019-05-06 08:30:09 -耗时 : 5
2019-05-06 08:30:09 -返回值 : login
2019-05-06 08:30:19 -请求地址 : http://localhost:8081/getVerify
2019-05-06 08:30:19 -HTTP METHOD : GET
2019-05-06 08:30:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 08:30:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a6b9fc0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@61664f1f]
2019-05-06 08:30:35 -6919
2019-05-06 08:30:36 -耗时 : 16597
2019-05-06 08:30:36 -返回值 : null
2019-05-06 08:30:45 -请求地址 : http://localhost:8081/login
2019-05-06 08:30:45 -HTTP METHOD : POST
2019-05-06 08:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 08:30:45 -参数 : [admin, 111111, 6919, org.apache.shiro.web.servlet.ShiroHttpServletRequest@694b46ab]
2019-05-06 08:30:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 08:30:45 -==> Parameters: admin(String)
2019-05-06 08:30:46 -<==      Total: 1
2019-05-06 08:30:46 -耗时 : 958
2019-05-06 08:30:46 -返回值 : {msg=操作成功, code=0}
2019-05-06 08:30:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 08:30:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:30:46 -==> Parameters: 1(Long), admin(String), 登录(String), 958(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 08:30:46.68(Timestamp)
2019-05-06 08:30:46 -请求地址 : http://localhost:8081/index
2019-05-06 08:30:46 -HTTP METHOD : GET
2019-05-06 08:30:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 08:30:46 -参数 : [{}]
2019-05-06 08:30:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 08:30:47 -==> Parameters: 1(Long)
2019-05-06 08:30:48 -<==    Updates: 1
2019-05-06 08:30:48 -<==      Total: 49
2019-05-06 08:30:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 08:30:48 -==> Parameters: 138(Long)
2019-05-06 08:30:48 -<==      Total: 1
2019-05-06 08:30:48 -耗时 : 1955
2019-05-06 08:30:48 -返回值 : index_v1
2019-05-06 08:30:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:30:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1955(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 08:30:48.964(Timestamp)
2019-05-06 08:30:49 -请求地址 : http://localhost:8081/main
2019-05-06 08:30:49 -HTTP METHOD : GET
2019-05-06 08:30:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:30:49 -参数 : []
2019-05-06 08:30:49 -耗时 : 0
2019-05-06 08:30:49 -返回值 : main
2019-05-06 08:30:49 -<==    Updates: 1
2019-05-06 08:30:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:30:51 -HTTP METHOD : GET
2019-05-06 08:30:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:30:51 -参数 : []
2019-05-06 08:30:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:30:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:30:51 -<==      Total: 0
2019-05-06 08:30:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:30:51 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:30:51 -请求地址 : http://localhost:8081/main
2019-05-06 08:30:51 -HTTP METHOD : GET
2019-05-06 08:30:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:30:51 -参数 : []
2019-05-06 08:30:51 -耗时 : 1
2019-05-06 08:30:51 -返回值 : main
2019-05-06 08:30:51 -<==      Total: 1
2019-05-06 08:30:51 -耗时 : 647
2019-05-06 08:30:51 -返回值 : com.bootdo.common.utils.PageUtils@77cef7a9
2019-05-06 08:32:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 08:32:36 -==> Parameters: 1(Long)
2019-05-06 08:32:36 -<==      Total: 93
2019-05-06 08:32:36 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-06 08:32:36 -HTTP METHOD : GET
2019-05-06 08:32:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-06 08:32:36 -参数 : []
2019-05-06 08:32:36 -耗时 : 1
2019-05-06 08:32:36 -返回值 : /moneyList/moneyList
2019-05-06 08:32:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 08:32:43 -HTTP METHOD : GET
2019-05-06 08:32:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 08:32:43 -参数 : []
2019-05-06 08:32:43 -耗时 : 1
2019-05-06 08:32:43 -返回值 : system/dept/deptTree
2019-05-06 08:32:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 08:32:43 -HTTP METHOD : GET
2019-05-06 08:32:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 08:32:43 -参数 : []
2019-05-06 08:32:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 08:32:43 -==> Parameters: 
2019-05-06 08:32:43 -<==      Total: 3
2019-05-06 08:32:43 -耗时 : 61
2019-05-06 08:32:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 08:32:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-06 08:32:47 -HTTP METHOD : POST
2019-05-06 08:32:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-06 08:32:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@32426ae5]
2019-05-06 08:32:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-06 08:32:47 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-06 08:32:48 -<==      Total: 3
2019-05-06 08:32:48 -耗时 : 617
2019-05-06 08:32:48 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2064f5b0, com.bootdo.moneyList.damain.MoneyListDO@113f3ae4, com.bootdo.moneyList.damain.MoneyListDO@23d48820]
2019-05-06 08:33:04 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-06 08:33:04 -HTTP METHOD : POST
2019-05-06 08:33:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-06 08:33:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1a62aba0]
2019-05-06 08:33:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-06 08:33:04 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-06 08:33:04 -<==      Total: 3
2019-05-06 08:33:04 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-05-06 08:33:04 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-06 08:33:04 -<==      Total: 0
2019-05-06 08:33:04 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? 
2019-05-06 08:33:04 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-06 08:33:04 -<==      Total: 2
2019-05-06 08:33:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:33:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-06 08:33:04.062(Timestamp)
2019-05-06 08:33:04 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy128.getHeatPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getHeatPrint(MoneyListServiceImpl.java:55)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:259)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-05-06 08:33:04 -<==    Updates: 1
2019-05-06 08:34:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-06 08:34:28 -HTTP METHOD : POST
2019-05-06 08:34:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-06 08:34:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@69b8a5f0]
2019-05-06 08:34:28 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-06 08:34:28 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-05-06 08:34:29 -<==      Total: 1
2019-05-06 08:34:29 -耗时 : 388
2019-05-06 08:34:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@366a691e]
2019-05-06 08:37:42 -请求地址 : http://localhost:8081/charts/countDD
2019-05-06 08:37:42 -HTTP METHOD : GET
2019-05-06 08:37:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-06 08:37:42 -参数 : []
2019-05-06 08:37:42 -耗时 : 10
2019-05-06 08:37:42 -返回值 : charts/countDD
2019-05-06 08:37:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:37:43 -HTTP METHOD : GET
2019-05-06 08:37:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:37:43 -参数 : [userType]
2019-05-06 08:37:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:37:43 -==> Parameters: userType(String)
2019-05-06 08:37:43 -<==      Total: 4
2019-05-06 08:37:43 -耗时 : 468
2019-05-06 08:37:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:37:46 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-06 08:37:46 -HTTP METHOD : GET
2019-05-06 08:37:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-06 08:37:46 -参数 : []
2019-05-06 08:37:46 -耗时 : 11
2019-05-06 08:37:46 -返回值 : charts/tableDD
2019-05-06 08:37:52 -请求地址 : http://localhost:8081/charts/countMM
2019-05-06 08:37:52 -HTTP METHOD : GET
2019-05-06 08:37:52 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-06 08:37:52 -参数 : []
2019-05-06 08:37:52 -耗时 : 11
2019-05-06 08:37:52 -返回值 : charts/countMM
2019-05-06 08:37:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:37:53 -HTTP METHOD : GET
2019-05-06 08:37:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:37:53 -参数 : [userType]
2019-05-06 08:37:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:37:53 -==> Parameters: userType(String)
2019-05-06 08:37:53 -<==      Total: 4
2019-05-06 08:37:53 -耗时 : 5
2019-05-06 08:37:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:37:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 08:37:53 -HTTP METHOD : GET
2019-05-06 08:37:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 08:37:53 -参数 : []
2019-05-06 08:37:53 -耗时 : 10
2019-05-06 08:37:53 -返回值 : charts/tableElecMM
2019-05-06 08:37:58 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 08:37:58 -HTTP METHOD : GET
2019-05-06 08:37:58 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 08:37:58 -参数 : []
2019-05-06 08:37:58 -耗时 : 0
2019-05-06 08:37:58 -返回值 : charts/countYY
2019-05-06 08:37:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:37:58 -HTTP METHOD : GET
2019-05-06 08:37:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:37:58 -参数 : [userType]
2019-05-06 08:37:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:37:58 -==> Parameters: userType(String)
2019-05-06 08:37:58 -<==      Total: 4
2019-05-06 08:37:58 -耗时 : 11
2019-05-06 08:37:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:38:11 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 08:38:11 -HTTP METHOD : GET
2019-05-06 08:38:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 08:38:11 -参数 : []
2019-05-06 08:38:11 -耗时 : 13
2019-05-06 08:38:11 -返回值 : charts/tableElecYY
2019-05-06 08:38:12 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-06 08:38:12 -HTTP METHOD : GET
2019-05-06 08:38:12 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-06 08:38:12 -参数 : []
2019-05-06 08:38:12 -耗时 : 1
2019-05-06 08:38:12 -返回值 : charts/countOwe
2019-05-06 08:38:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:38:13 -HTTP METHOD : GET
2019-05-06 08:38:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:38:13 -参数 : [userType]
2019-05-06 08:38:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:38:13 -==> Parameters: userType(String)
2019-05-06 08:38:13 -<==      Total: 4
2019-05-06 08:38:13 -耗时 : 7
2019-05-06 08:38:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:38:14 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 08:38:14 -HTTP METHOD : GET
2019-05-06 08:38:14 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 08:38:14 -参数 : []
2019-05-06 08:38:14 -耗时 : 1
2019-05-06 08:38:14 -返回值 : charts/countRun
2019-05-06 08:38:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:38:15 -HTTP METHOD : GET
2019-05-06 08:38:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:38:15 -参数 : [userType]
2019-05-06 08:38:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:38:15 -==> Parameters: userType(String)
2019-05-06 08:38:15 -<==      Total: 4
2019-05-06 08:38:15 -耗时 : 6
2019-05-06 08:38:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:38:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 08:38:26 -HTTP METHOD : GET
2019-05-06 08:38:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 08:38:26 -参数 : []
2019-05-06 08:38:26 -耗时 : 0
2019-05-06 08:38:26 -返回值 : system/dept/deptTree
2019-05-06 08:38:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 08:38:26 -HTTP METHOD : GET
2019-05-06 08:38:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 08:38:26 -参数 : []
2019-05-06 08:38:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 08:38:26 -==> Parameters: 
2019-05-06 08:38:26 -<==      Total: 3
2019-05-06 08:38:26 -耗时 : 5
2019-05-06 08:38:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 08:38:28 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-06 08:38:28 -HTTP METHOD : POST
2019-05-06 08:38:28 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-06 08:38:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5e7f2587, com.bootdo.moneyLog.vo.WaterLogVo@29dfa5d6, com.bootdo.moneyLog.vo.HeatLogVo@4916d5fd]
2019-05-06 08:38:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 08:38:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:38:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 08:38:28.189(Timestamp)
2019-05-06 08:38:28 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:245)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$b26d0e42.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 08:38:28 -<==    Updates: 1
2019-05-06 08:49:54 -请求地址 : http://localhost:8081/index
2019-05-06 08:49:54 -HTTP METHOD : GET
2019-05-06 08:49:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 08:49:54 -参数 : [{}]
2019-05-06 08:49:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 08:49:54 -==> Parameters: 1(Long)
2019-05-06 08:49:54 -<==      Total: 49
2019-05-06 08:49:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 08:49:54 -==> Parameters: 138(Long)
2019-05-06 08:49:54 -<==      Total: 1
2019-05-06 08:49:54 -耗时 : 95
2019-05-06 08:49:54 -返回值 : index_v1
2019-05-06 08:49:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:49:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 96(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 08:49:54.621(Timestamp)
2019-05-06 08:49:54 -<==    Updates: 1
2019-05-06 08:49:55 -请求地址 : http://localhost:8081/main
2019-05-06 08:49:55 -HTTP METHOD : GET
2019-05-06 08:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:49:55 -参数 : []
2019-05-06 08:49:55 -耗时 : 1
2019-05-06 08:49:55 -返回值 : main
2019-05-06 08:49:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:49:55 -HTTP METHOD : GET
2019-05-06 08:49:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:49:55 -参数 : []
2019-05-06 08:49:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:49:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:49:55 -<==      Total: 0
2019-05-06 08:49:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:49:55 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:49:55 -<==      Total: 1
2019-05-06 08:49:55 -耗时 : 80
2019-05-06 08:49:55 -返回值 : com.bootdo.common.utils.PageUtils@4976ea81
2019-05-06 08:49:55 -请求地址 : http://localhost:8081/main
2019-05-06 08:49:55 -HTTP METHOD : GET
2019-05-06 08:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:49:55 -参数 : []
2019-05-06 08:49:55 -耗时 : 0
2019-05-06 08:49:55 -返回值 : main
2019-05-06 08:49:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 08:49:59 -==> Parameters: 1(Long)
2019-05-06 08:49:59 -<==      Total: 93
2019-05-06 08:49:59 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 08:49:59 -HTTP METHOD : GET
2019-05-06 08:49:59 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 08:49:59 -参数 : []
2019-05-06 08:49:59 -耗时 : 0
2019-05-06 08:49:59 -返回值 : charts/countRun
2019-05-06 08:50:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:50:00 -HTTP METHOD : GET
2019-05-06 08:50:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:50:00 -参数 : [userType]
2019-05-06 08:50:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:50:00 -==> Parameters: userType(String)
2019-05-06 08:50:00 -<==      Total: 4
2019-05-06 08:50:00 -耗时 : 6
2019-05-06 08:50:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:50:05 -请求地址 : http://localhost:8081/index
2019-05-06 08:50:05 -HTTP METHOD : GET
2019-05-06 08:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 08:50:05 -参数 : [{}]
2019-05-06 08:50:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 08:50:05 -==> Parameters: 1(Long)
2019-05-06 08:50:05 -<==      Total: 49
2019-05-06 08:50:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 08:50:05 -==> Parameters: 138(Long)
2019-05-06 08:50:05 -<==      Total: 1
2019-05-06 08:50:05 -耗时 : 29
2019-05-06 08:50:05 -返回值 : index_v1
2019-05-06 08:50:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:50:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 08:50:05.265(Timestamp)
2019-05-06 08:50:05 -请求地址 : http://localhost:8081/main
2019-05-06 08:50:05 -HTTP METHOD : GET
2019-05-06 08:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:50:05 -参数 : []
2019-05-06 08:50:05 -耗时 : 1
2019-05-06 08:50:05 -返回值 : main
2019-05-06 08:50:05 -<==    Updates: 1
2019-05-06 08:50:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:50:05 -HTTP METHOD : GET
2019-05-06 08:50:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:50:05 -参数 : []
2019-05-06 08:50:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:50:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:50:05 -<==      Total: 0
2019-05-06 08:50:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:50:05 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:50:05 -<==      Total: 1
2019-05-06 08:50:05 -耗时 : 28
2019-05-06 08:50:05 -返回值 : com.bootdo.common.utils.PageUtils@eae1a8c
2019-05-06 08:50:05 -请求地址 : http://localhost:8081/main
2019-05-06 08:50:05 -HTTP METHOD : GET
2019-05-06 08:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:50:05 -参数 : []
2019-05-06 08:50:05 -耗时 : 0
2019-05-06 08:50:05 -返回值 : main
2019-05-06 08:50:08 -请求地址 : http://localhost:8081/index
2019-05-06 08:50:08 -HTTP METHOD : GET
2019-05-06 08:50:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 08:50:08 -参数 : [{}]
2019-05-06 08:50:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 08:50:08 -==> Parameters: 1(Long)
2019-05-06 08:50:08 -<==      Total: 49
2019-05-06 08:50:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 08:50:08 -==> Parameters: 138(Long)
2019-05-06 08:50:08 -<==      Total: 1
2019-05-06 08:50:08 -耗时 : 31
2019-05-06 08:50:08 -返回值 : index_v1
2019-05-06 08:50:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:50:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 08:50:08.871(Timestamp)
2019-05-06 08:50:09 -请求地址 : http://localhost:8081/main
2019-05-06 08:50:09 -HTTP METHOD : GET
2019-05-06 08:50:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:50:09 -参数 : []
2019-05-06 08:50:09 -耗时 : 5
2019-05-06 08:50:09 -返回值 : main
2019-05-06 08:50:09 -<==    Updates: 1
2019-05-06 08:50:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:50:09 -HTTP METHOD : GET
2019-05-06 08:50:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:50:09 -参数 : []
2019-05-06 08:50:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:50:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:50:09 -<==      Total: 0
2019-05-06 08:50:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:50:09 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:50:09 -<==      Total: 1
2019-05-06 08:50:09 -耗时 : 29
2019-05-06 08:50:09 -返回值 : com.bootdo.common.utils.PageUtils@4d5f897a
2019-05-06 08:50:09 -请求地址 : http://localhost:8081/main
2019-05-06 08:50:09 -HTTP METHOD : GET
2019-05-06 08:50:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:50:09 -参数 : []
2019-05-06 08:50:09 -耗时 : 1
2019-05-06 08:50:09 -返回值 : main
2019-05-06 08:50:14 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 08:50:14 -HTTP METHOD : GET
2019-05-06 08:50:14 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 08:50:14 -参数 : []
2019-05-06 08:50:14 -耗时 : 1
2019-05-06 08:50:14 -返回值 : charts/countRun
2019-05-06 08:50:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:50:14 -HTTP METHOD : GET
2019-05-06 08:50:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:50:14 -参数 : [userType]
2019-05-06 08:50:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:50:14 -==> Parameters: userType(String)
2019-05-06 08:50:14 -<==      Total: 4
2019-05-06 08:50:14 -耗时 : 5
2019-05-06 08:50:14 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:50:28 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 08:51:46 -请求地址 : http://localhost:8081/main
2019-05-06 08:51:46 -HTTP METHOD : GET
2019-05-06 08:51:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:51:46 -参数 : []
2019-05-06 08:51:46 -耗时 : 0
2019-05-06 08:51:46 -返回值 : main
2019-05-06 08:51:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:51:47 -HTTP METHOD : GET
2019-05-06 08:51:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:51:47 -参数 : []
2019-05-06 08:51:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:51:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:51:47 -<==      Total: 0
2019-05-06 08:51:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:51:47 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:51:47 -<==      Total: 1
2019-05-06 08:51:47 -耗时 : 24
2019-05-06 08:51:47 -返回值 : com.bootdo.common.utils.PageUtils@523b5b2
2019-05-06 08:51:47 -请求地址 : http://localhost:8081/main
2019-05-06 08:51:47 -HTTP METHOD : GET
2019-05-06 08:51:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:51:47 -参数 : []
2019-05-06 08:51:47 -耗时 : 0
2019-05-06 08:51:47 -返回值 : main
2019-05-06 08:52:20 -请求地址 : http://localhost:8081/login;JSESSIONID=44d54f6a-621b-4301-968f-040f019d8228
2019-05-06 08:52:20 -HTTP METHOD : GET
2019-05-06 08:52:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 08:52:20 -参数 : [{}]
2019-05-06 08:52:20 -耗时 : 1
2019-05-06 08:52:20 -返回值 : login
2019-05-06 08:52:21 -请求地址 : http://localhost:8081/getVerify
2019-05-06 08:52:21 -HTTP METHOD : GET
2019-05-06 08:52:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 08:52:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@459c2792, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b1cf386]
2019-05-06 08:52:21 -3468
2019-05-06 08:52:21 -耗时 : 33
2019-05-06 08:52:21 -返回值 : null
2019-05-06 08:52:21 -请求地址 : http://localhost:8081/login
2019-05-06 08:52:21 -HTTP METHOD : GET
2019-05-06 08:52:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 08:52:21 -参数 : [{}]
2019-05-06 08:52:21 -耗时 : 0
2019-05-06 08:52:21 -返回值 : login
2019-05-06 08:52:26 -请求地址 : http://localhost:8081/login
2019-05-06 08:52:26 -HTTP METHOD : POST
2019-05-06 08:52:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 08:52:26 -参数 : [admin, 111111, 3468, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e62b6e6]
2019-05-06 08:52:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 08:52:26 -==> Parameters: admin(String)
2019-05-06 08:52:26 -<==      Total: 1
2019-05-06 08:52:26 -耗时 : 109
2019-05-06 08:52:26 -返回值 : {msg=操作成功, code=0}
2019-05-06 08:52:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:52:26 -==> Parameters: 1(Long), admin(String), 登录(String), 110(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 08:52:26.346(Timestamp)
2019-05-06 08:52:26 -请求地址 : http://localhost:8081/index
2019-05-06 08:52:26 -HTTP METHOD : GET
2019-05-06 08:52:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 08:52:26 -参数 : [{}]
2019-05-06 08:52:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 08:52:26 -<==    Updates: 1
2019-05-06 08:52:26 -==> Parameters: 1(Long)
2019-05-06 08:52:26 -<==      Total: 49
2019-05-06 08:52:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 08:52:26 -==> Parameters: 138(Long)
2019-05-06 08:52:26 -<==      Total: 1
2019-05-06 08:52:26 -耗时 : 374
2019-05-06 08:52:26 -返回值 : index_v1
2019-05-06 08:52:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 08:52:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 374(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 08:52:26.761(Timestamp)
2019-05-06 08:52:26 -<==    Updates: 1
2019-05-06 08:52:26 -请求地址 : http://localhost:8081/main
2019-05-06 08:52:26 -HTTP METHOD : GET
2019-05-06 08:52:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:52:26 -参数 : []
2019-05-06 08:52:26 -耗时 : 1
2019-05-06 08:52:26 -返回值 : main
2019-05-06 08:52:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 08:52:27 -HTTP METHOD : GET
2019-05-06 08:52:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 08:52:27 -参数 : []
2019-05-06 08:52:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 08:52:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 08:52:27 -请求地址 : http://localhost:8081/main
2019-05-06 08:52:27 -HTTP METHOD : GET
2019-05-06 08:52:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 08:52:27 -参数 : []
2019-05-06 08:52:27 -耗时 : 2
2019-05-06 08:52:27 -返回值 : main
2019-05-06 08:52:27 -<==      Total: 0
2019-05-06 08:52:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 08:52:27 -==> Parameters: 1(Long), 0(String)
2019-05-06 08:52:27 -<==      Total: 1
2019-05-06 08:52:27 -耗时 : 309
2019-05-06 08:52:27 -返回值 : com.bootdo.common.utils.PageUtils@6f4b3670
2019-05-06 08:52:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 08:52:30 -==> Parameters: 1(Long)
2019-05-06 08:52:30 -<==      Total: 93
2019-05-06 08:52:30 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 08:52:30 -HTTP METHOD : GET
2019-05-06 08:52:30 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 08:52:30 -参数 : []
2019-05-06 08:52:30 -耗时 : 1
2019-05-06 08:52:30 -返回值 : charts/countRun
2019-05-06 08:52:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 08:52:32 -HTTP METHOD : GET
2019-05-06 08:52:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 08:52:32 -参数 : [userType]
2019-05-06 08:52:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 08:52:32 -==> Parameters: userType(String)
2019-05-06 08:52:32 -<==      Total: 4
2019-05-06 08:52:32 -耗时 : 120
2019-05-06 08:52:32 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 08:59:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 415]
2019-05-06 09:02:03 -请求地址 : http://localhost:8081/index
2019-05-06 09:02:03 -HTTP METHOD : GET
2019-05-06 09:02:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 09:02:03 -参数 : [{}]
2019-05-06 09:02:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 09:02:03 -==> Parameters: 1(Long)
2019-05-06 09:02:03 -<==      Total: 49
2019-05-06 09:02:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 09:02:03 -==> Parameters: 138(Long)
2019-05-06 09:02:03 -<==      Total: 1
2019-05-06 09:02:03 -耗时 : 47
2019-05-06 09:02:03 -返回值 : index_v1
2019-05-06 09:02:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 09:02:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 09:02:03.777(Timestamp)
2019-05-06 09:02:03 -<==    Updates: 1
2019-05-06 09:02:03 -请求地址 : http://localhost:8081/main
2019-05-06 09:02:03 -HTTP METHOD : GET
2019-05-06 09:02:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 09:02:03 -参数 : []
2019-05-06 09:02:03 -耗时 : 1
2019-05-06 09:02:03 -返回值 : main
2019-05-06 09:02:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 09:02:04 -HTTP METHOD : GET
2019-05-06 09:02:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 09:02:04 -参数 : []
2019-05-06 09:02:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 09:02:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 09:02:04 -<==      Total: 0
2019-05-06 09:02:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 09:02:04 -==> Parameters: 1(Long), 0(String)
2019-05-06 09:02:04 -<==      Total: 1
2019-05-06 09:02:04 -耗时 : 10
2019-05-06 09:02:04 -返回值 : com.bootdo.common.utils.PageUtils@60735711
2019-05-06 09:02:04 -请求地址 : http://localhost:8081/main
2019-05-06 09:02:04 -HTTP METHOD : GET
2019-05-06 09:02:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 09:02:04 -参数 : []
2019-05-06 09:02:04 -耗时 : 0
2019-05-06 09:02:04 -返回值 : main
2019-05-06 09:02:09 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 09:02:09 -HTTP METHOD : GET
2019-05-06 09:02:09 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 09:02:09 -参数 : []
2019-05-06 09:02:09 -耗时 : 0
2019-05-06 09:02:09 -返回值 : charts/countRun
2019-05-06 09:02:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 09:02:10 -HTTP METHOD : GET
2019-05-06 09:02:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 09:02:10 -参数 : [userType]
2019-05-06 09:02:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 09:02:10 -==> Parameters: userType(String)
2019-05-06 09:02:10 -<==      Total: 4
2019-05-06 09:02:10 -耗时 : 7
2019-05-06 09:02:10 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 09:02:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 09:02:24 -HTTP METHOD : GET
2019-05-06 09:02:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 09:02:24 -参数 : []
2019-05-06 09:02:24 -耗时 : 1
2019-05-06 09:02:24 -返回值 : system/dept/deptTree
2019-05-06 09:02:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 09:02:25 -HTTP METHOD : GET
2019-05-06 09:02:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 09:02:25 -参数 : []
2019-05-06 09:02:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 09:02:25 -==> Parameters: 
2019-05-06 09:02:25 -<==      Total: 3
2019-05-06 09:02:25 -耗时 : 65
2019-05-06 09:02:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 09:02:30 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-06 09:02:30 -HTTP METHOD : GET
2019-05-06 09:02:30 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-06 09:02:30 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3bb55a33, com.bootdo.moneyLog.vo.HeatLogVo@1f0c220d, com.bootdo.moneyLog.vo.WaterLogVo@5a6491ad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@12d0a27]
2019-05-06 09:02:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? 
2019-05-06 09:02:31 -==> Parameters: 2(String)
2019-05-06 09:02:31 -<==      Total: 14
2019-05-06 09:02:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_org = ? 
2019-05-06 09:02:31 -==> Parameters: 2(String)
2019-05-06 09:02:31 -<==      Total: 5
2019-05-06 09:02:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? 
2019-05-06 09:02:31 -==> Parameters: 2(String)
2019-05-06 09:02:31 -<==      Total: 5
2019-05-06 09:02:31 -耗时 : 1688
2019-05-06 09:02:31 -返回值 : null
2019-05-06 09:11:53 -Starting BootdoApplication on ZJZL-20180906VX with PID 16696 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 09:11:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 09:11:53 -The following profiles are active: dev
2019-05-06 09:11:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 09:11:53 CST 2019]; root of context hierarchy
2019-05-06 09:11:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 09:12:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$46071d01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$38604ba8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:03 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:03 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:03 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 09:12:03 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 09:12:03 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 09:12:05 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 09:12:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 09:12:05 -Starting service [Tomcat]
2019-05-06 09:12:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 09:12:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 09:12:10 -Initializing Spring embedded WebApplicationContext
2019-05-06 09:12:10 -Root WebApplicationContext: initialization completed in 16903 ms
2019-05-06 09:12:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 09:12:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 09:12:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 09:12:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 09:12:13 -Filter xssFilter was not registered (disabled)
2019-05-06 09:12:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 09:12:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 09:12:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 09:12:13 -Servlet dispatcherServlet mapped to [/]
2019-05-06 09:12:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 09:11:53 CST 2019]; root of context hierarchy
2019-05-06 09:12:22 -Using default implementation for ThreadExecutor
2019-05-06 09:12:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 09:12:22 -Quartz Scheduler v.2.2.1 created.
2019-05-06 09:12:22 -RAMJobStore initialized.
2019-05-06 09:12:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 09:12:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 09:12:22 -Quartz scheduler version: 2.2.1
2019-05-06 09:12:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@baa9ce4
2019-05-06 09:12:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 09:12:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 09:12:26 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 09:12:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 09:12:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 09:12:26 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 09:12:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 09:12:26 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 09:12:26 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 09:12:26 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 09:12:26 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 09:12:26 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 09:12:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 09:12:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 09:12:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 09:12:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 09:12:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 09:12:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 09:12:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 09:12:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 09:12:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 09:12:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 09:12:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 09:12:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 09:12:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 09:12:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 09:12:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 09:12:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 09:12:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 09:12:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 09:12:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 09:12:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 09:12:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 09:12:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 09:12:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 09:12:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 09:12:26 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 09:12:26 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 09:12:26 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 09:12:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 09:12:26 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 09:12:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 09:12:26 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 09:12:26 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 09:12:26 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 09:12:26 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 09:12:26 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 09:12:26 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 09:12:26 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 09:12:26 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 09:12:26 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 09:12:26 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 09:12:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 09:12:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 09:12:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 09:12:26 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 09:12:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 09:12:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 09:12:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 09:12:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 09:12:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 09:12:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 09:12:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 09:12:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 09:12:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 09:12:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 09:12:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 09:12:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 09:12:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 09:12:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 09:12:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 09:12:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 09:12:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 09:12:26 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 09:12:26 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 09:12:26 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 09:12:26 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 09:12:26 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 09:12:26 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 09:12:26 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 09:12:26 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 09:12:26 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 09:12:26 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 09:12:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 09:12:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 09:12:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 09:12:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 09:12:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 09:12:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 09:12:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 09:12:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 09:12:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 09:11:53 CST 2019]; root of context hierarchy
2019-05-06 09:12:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 09:12:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 09:12:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 09:12:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 09:12:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 09:12:31 -Registering beans for JMX exposure on startup
2019-05-06 09:12:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 09:12:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 09:12:31 -Starting beans in phase 2147483647
2019-05-06 09:12:31 -Context refreshed
2019-05-06 09:12:31 -Found 1 custom documentation plugin(s)
2019-05-06 09:12:31 -Scanning for api listing references
2019-05-06 09:12:32 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_1
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_2
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_3
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPUT_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 09:12:32 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_2
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_2
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_2
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_4
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_5
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_2
2019-05-06 09:12:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_3
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_3
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_3
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_6
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_7
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingGET_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPUT_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 09:12:32 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_4
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_4
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_4
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_8
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_9
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingGET_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPUT_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 09:12:32 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 09:12:32 -Generating unique operation named: ElecUsingGET_1
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_5
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_5
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_5
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_10
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_11
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingGET_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPUT_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 09:12:32 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_6
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_6
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_6
2019-05-06 09:12:32 -Generating unique operation named: addUsingGET_6
2019-05-06 09:12:32 -Generating unique operation named: editUsingGET_7
2019-05-06 09:12:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 09:12:32 -Generating unique operation named: listUsingGET_7
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_12
2019-05-06 09:12:32 -Generating unique operation named: removeUsingPOST_13
2019-05-06 09:12:32 -Generating unique operation named: saveUsingPOST_6
2019-05-06 09:12:32 -Generating unique operation named: updateUsingGET_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPOST_7
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPUT_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 09:12:32 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 09:12:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_7
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_8
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_8
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_14
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_15
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_8
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_9
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_9
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_16
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_17
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_9
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_10
2019-05-06 09:12:33 -Generating unique operation named: infoUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingPOST_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingPUT_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 09:12:33 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_10
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_18
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_19
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_10
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_11
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_20
2019-05-06 09:12:33 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_10
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_11
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_12
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_21
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_10
2019-05-06 09:12:33 -Generating unique operation named: treeUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: treeUsingGET_2
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_11
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_11
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_12
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_13
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_22
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_23
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_12
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_12
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_13
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_14
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_24
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_25
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_12
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_13
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_13
2019-05-06 09:12:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_14
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_15
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_13
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_14
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_14
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_16
2019-05-06 09:12:33 -Generating unique operation named: listUsingHEAD_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingPOST_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingPUT_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingPATCH_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingDELETE_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 09:12:33 -Generating unique operation named: listUsingTRACE_1
2019-05-06 09:12:33 -Generating unique operation named: countDDUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 09:12:33 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_14
2019-05-06 09:12:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_15
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_17
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_26
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_15
2019-05-06 09:12:33 -Generating unique operation named: treeUsingGET_3
2019-05-06 09:12:33 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_15
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_15
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_16
2019-05-06 09:12:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_18
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_27
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_28
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_16
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_16
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 09:12:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_16
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_17
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_19
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_29
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_30
2019-05-06 09:12:33 -Generating unique operation named: saveUsingPOST_17
2019-05-06 09:12:33 -Generating unique operation named: updateUsingGET_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPOST_17
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPUT_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 09:12:33 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 09:12:33 -Generating unique operation named: addUsingGET_17
2019-05-06 09:12:33 -Generating unique operation named: editUsingGET_18
2019-05-06 09:12:33 -Generating unique operation named: listUsingGET_20
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_31
2019-05-06 09:12:33 -Generating unique operation named: removeUsingPOST_32
2019-05-06 09:12:34 -Generating unique operation named: saveUsingPOST_18
2019-05-06 09:12:34 -Generating unique operation named: updateUsingGET_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingPOST_18
2019-05-06 09:12:34 -Generating unique operation named: updateUsingPUT_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 09:12:34 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 09:12:34 -Starting Quartz Scheduler now
2019-05-06 09:12:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 09:12:34 -Starting...
2019-05-06 09:12:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 09:12:34 -Started.
2019-05-06 09:12:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 09:12:34 -Using a shared selector for servlet write/read
2019-05-06 09:12:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 09:12:34 -Started BootdoApplication in 42.388 seconds (JVM running for 43.197)
2019-05-06 09:12:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 09:12:34 -==> Parameters: 
2019-05-06 09:12:35 -<==      Total: 1
2019-05-06 09:13:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-06 09:13:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 09:13:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 09:13:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 162 ms
2019-05-06 09:13:57 -Enabling session validation scheduler...
2019-05-06 09:13:57 -请求地址 : http://localhost:8081/login;JSESSIONID=e0f2e0a0-06e0-491a-af42-024aab102702
2019-05-06 09:13:57 -HTTP METHOD : GET
2019-05-06 09:13:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 09:13:57 -参数 : [{}]
2019-05-06 09:13:57 -耗时 : 6
2019-05-06 09:13:57 -返回值 : login
2019-05-06 09:14:00 -请求地址 : http://localhost:8081/getVerify
2019-05-06 09:14:00 -HTTP METHOD : GET
2019-05-06 09:14:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 09:14:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@27d5c9f7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47ac866f]
2019-05-06 09:14:14 -5358
2019-05-06 09:14:15 -耗时 : 14806
2019-05-06 09:14:15 -返回值 : null
2019-05-06 09:14:23 -请求地址 : http://localhost:8081/login
2019-05-06 09:14:23 -HTTP METHOD : POST
2019-05-06 09:14:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 09:14:23 -参数 : [admin, 111111, 5358, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5606d1f3]
2019-05-06 09:14:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 09:14:23 -==> Parameters: admin(String)
2019-05-06 09:14:23 -<==      Total: 1
2019-05-06 09:14:23 -耗时 : 397
2019-05-06 09:14:23 -返回值 : {msg=操作成功, code=0}
2019-05-06 09:14:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 09:14:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 09:14:24 -==> Parameters: 1(Long), admin(String), 登录(String), 397(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 09:14:24.016(Timestamp)
2019-05-06 09:14:24 -<==    Updates: 1
2019-05-06 09:14:24 -请求地址 : http://localhost:8081/index
2019-05-06 09:14:24 -HTTP METHOD : GET
2019-05-06 09:14:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 09:14:24 -参数 : [{}]
2019-05-06 09:14:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 09:14:24 -==> Parameters: 1(Long)
2019-05-06 09:14:24 -<==      Total: 49
2019-05-06 09:14:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 09:14:24 -==> Parameters: 138(Long)
2019-05-06 09:14:24 -<==      Total: 1
2019-05-06 09:14:24 -耗时 : 595
2019-05-06 09:14:24 -返回值 : index_v1
2019-05-06 09:14:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 09:14:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 595(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 09:14:25.056(Timestamp)
2019-05-06 09:14:25 -<==    Updates: 1
2019-05-06 09:14:25 -请求地址 : http://localhost:8081/main
2019-05-06 09:14:25 -HTTP METHOD : GET
2019-05-06 09:14:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 09:14:25 -参数 : []
2019-05-06 09:14:25 -耗时 : 0
2019-05-06 09:14:25 -返回值 : main
2019-05-06 09:14:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 09:14:26 -HTTP METHOD : GET
2019-05-06 09:14:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 09:14:26 -参数 : []
2019-05-06 09:14:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 09:14:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 09:14:27 -请求地址 : http://localhost:8081/main
2019-05-06 09:14:27 -HTTP METHOD : GET
2019-05-06 09:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 09:14:27 -参数 : []
2019-05-06 09:14:27 -耗时 : 0
2019-05-06 09:14:27 -返回值 : main
2019-05-06 09:14:27 -<==      Total: 0
2019-05-06 09:14:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 09:14:27 -==> Parameters: 1(Long), 0(String)
2019-05-06 09:14:27 -<==      Total: 1
2019-05-06 09:14:27 -耗时 : 868
2019-05-06 09:14:27 -返回值 : com.bootdo.common.utils.PageUtils@ba1a035
2019-05-06 09:15:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 09:15:04 -==> Parameters: 1(Long)
2019-05-06 09:15:04 -<==      Total: 93
2019-05-06 09:15:04 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-06 09:15:04 -HTTP METHOD : GET
2019-05-06 09:15:04 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-06 09:15:04 -参数 : []
2019-05-06 09:15:04 -耗时 : 0
2019-05-06 09:15:04 -返回值 : charts/countOwe
2019-05-06 09:15:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 09:15:05 -HTTP METHOD : GET
2019-05-06 09:15:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 09:15:05 -参数 : [userType]
2019-05-06 09:15:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 09:15:05 -==> Parameters: userType(String)
2019-05-06 09:15:05 -<==      Total: 4
2019-05-06 09:15:05 -耗时 : 74
2019-05-06 09:15:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 09:15:08 -请求地址 : http://localhost:8081/charts/countRun
2019-05-06 09:15:08 -HTTP METHOD : GET
2019-05-06 09:15:08 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-06 09:15:08 -参数 : []
2019-05-06 09:15:08 -耗时 : 0
2019-05-06 09:15:08 -返回值 : charts/countRun
2019-05-06 09:15:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 09:15:08 -HTTP METHOD : GET
2019-05-06 09:15:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 09:15:08 -参数 : [userType]
2019-05-06 09:15:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 09:15:08 -==> Parameters: userType(String)
2019-05-06 09:15:08 -<==      Total: 4
2019-05-06 09:15:08 -耗时 : 10
2019-05-06 09:15:08 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 09:15:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 09:15:17 -HTTP METHOD : GET
2019-05-06 09:15:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 09:15:17 -参数 : []
2019-05-06 09:15:17 -耗时 : 1
2019-05-06 09:15:17 -返回值 : system/dept/deptTree
2019-05-06 09:15:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 09:15:17 -HTTP METHOD : GET
2019-05-06 09:15:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 09:15:17 -参数 : []
2019-05-06 09:15:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 09:15:17 -==> Parameters: 
2019-05-06 09:15:17 -<==      Total: 3
2019-05-06 09:15:17 -耗时 : 40
2019-05-06 09:15:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 09:15:23 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-06 09:15:23 -HTTP METHOD : POST
2019-05-06 09:15:23 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-06 09:15:23 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@13858308, com.bootdo.moneyLog.vo.WaterLogVo@488a8abc, com.bootdo.moneyLog.vo.HeatLogVo@4afb2e6]
2019-05-06 09:15:23 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 09:15:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 09:15:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 09:15:23.868(Timestamp)
2019-05-06 09:15:23 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:245)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$836a0bc8.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-06 09:15:23 -<==    Updates: 1
2019-05-06 09:16:14 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-06 09:16:14 -HTTP METHOD : GET
2019-05-06 09:16:14 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-06 09:16:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@24a90295, com.bootdo.moneyLog.vo.HeatLogVo@42b8bdc, com.bootdo.moneyLog.vo.WaterLogVo@71687cd4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@78eeb64e]
2019-05-06 09:16:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-06 09:16:15 -耗时 : 657
2019-05-06 09:16:15 -返回值 : null
2019-05-06 09:43:26 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 418]
2019-05-06 10:13:26 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 851]
2019-05-06 10:13:57 -Validating all active sessions...
2019-05-06 10:13:57 -Finished session validation.  [1] sessions were stopped.
2019-05-06 10:21:07 -请求地址 : http://localhost:8081/login;JSESSIONID=ae8debc8-be29-42c7-b0df-822a34dba635
2019-05-06 10:21:07 -HTTP METHOD : GET
2019-05-06 10:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 10:21:07 -参数 : [{}]
2019-05-06 10:21:07 -耗时 : 3
2019-05-06 10:21:07 -返回值 : login
2019-05-06 10:21:08 -请求地址 : http://localhost:8081/login
2019-05-06 10:21:08 -HTTP METHOD : GET
2019-05-06 10:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 10:21:08 -参数 : [{}]
2019-05-06 10:21:08 -耗时 : 0
2019-05-06 10:21:08 -请求地址 : http://localhost:8081/login;JSESSIONID=ae8debc8-be29-42c7-b0df-822a34dba635
2019-05-06 10:21:08 -HTTP METHOD : GET
2019-05-06 10:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 10:21:08 -参数 : [{}]
2019-05-06 10:21:08 -耗时 : 0
2019-05-06 10:21:08 -返回值 : login
2019-05-06 10:21:08 -返回值 : login
2019-05-06 10:21:08 -请求地址 : http://localhost:8081/getVerify
2019-05-06 10:21:08 -HTTP METHOD : GET
2019-05-06 10:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 10:21:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1edad856, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79847482]
2019-05-06 10:21:08 -8391
2019-05-06 10:21:08 -耗时 : 253
2019-05-06 10:21:08 -返回值 : null
2019-05-06 10:21:08 -请求地址 : http://localhost:8081/getVerify
2019-05-06 10:21:08 -HTTP METHOD : GET
2019-05-06 10:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 10:21:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@149fceb4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@71817f0f]
2019-05-06 10:21:08 -2585
2019-05-06 10:21:08 -耗时 : 36
2019-05-06 10:21:08 -返回值 : null
2019-05-06 10:21:18 -请求地址 : http://localhost:8081/login
2019-05-06 10:21:18 -HTTP METHOD : POST
2019-05-06 10:21:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 10:21:18 -参数 : [admin, 111111, 2585, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e752229]
2019-05-06 10:21:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 10:21:18 -==> Parameters: admin(String)
2019-05-06 10:21:18 -<==      Total: 1
2019-05-06 10:21:18 -耗时 : 473
2019-05-06 10:21:18 -返回值 : {msg=操作成功, code=0}
2019-05-06 10:21:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:21:18 -==> Parameters: 1(Long), admin(String), 登录(String), 473(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 10:21:18.553(Timestamp)
2019-05-06 10:21:18 -请求地址 : http://localhost:8081/index
2019-05-06 10:21:18 -HTTP METHOD : GET
2019-05-06 10:21:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:21:18 -参数 : [{}]
2019-05-06 10:21:19 -<==    Updates: 1
2019-05-06 10:21:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:21:19 -==> Parameters: 1(Long)
2019-05-06 10:21:19 -<==      Total: 49
2019-05-06 10:21:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:21:19 -==> Parameters: 138(Long)
2019-05-06 10:21:19 -<==      Total: 1
2019-05-06 10:21:19 -耗时 : 890
2019-05-06 10:21:19 -返回值 : index_v1
2019-05-06 10:21:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:21:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 890(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:21:19.893(Timestamp)
2019-05-06 10:21:20 -<==    Updates: 1
2019-05-06 10:21:20 -请求地址 : http://localhost:8081/main
2019-05-06 10:21:20 -HTTP METHOD : GET
2019-05-06 10:21:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:21:20 -参数 : []
2019-05-06 10:21:20 -耗时 : 1
2019-05-06 10:21:20 -返回值 : main
2019-05-06 10:21:23 -请求地址 : http://localhost:8081/main
2019-05-06 10:21:23 -HTTP METHOD : GET
2019-05-06 10:21:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:21:23 -参数 : []
2019-05-06 10:21:23 -耗时 : 1
2019-05-06 10:21:23 -返回值 : main
2019-05-06 10:21:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:21:23 -HTTP METHOD : GET
2019-05-06 10:21:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:21:23 -参数 : []
2019-05-06 10:21:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:21:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:21:24 -<==      Total: 0
2019-05-06 10:21:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:21:24 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:21:24 -<==      Total: 1
2019-05-06 10:21:24 -耗时 : 719
2019-05-06 10:21:24 -返回值 : com.bootdo.common.utils.PageUtils@5c976c28
2019-05-06 10:21:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 10:21:29 -==> Parameters: 1(Long)
2019-05-06 10:21:29 -<==      Total: 93
2019-05-06 10:21:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:21:29 -HTTP METHOD : GET
2019-05-06 10:21:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:21:29 -参数 : []
2019-05-06 10:21:29 -耗时 : 367
2019-05-06 10:21:29 -返回值 : charts/tableElecYY
2019-05-06 10:21:36 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 10:21:42 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 10:21:42 -HTTP METHOD : GET
2019-05-06 10:21:42 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 10:21:42 -参数 : []
2019-05-06 10:21:42 -耗时 : 1
2019-05-06 10:21:42 -返回值 : charts/countYY
2019-05-06 10:21:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 10:21:42 -HTTP METHOD : GET
2019-05-06 10:21:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 10:21:42 -参数 : [userType]
2019-05-06 10:21:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 10:21:42 -==> Parameters: userType(String)
2019-05-06 10:21:42 -<==      Total: 4
2019-05-06 10:21:42 -耗时 : 138
2019-05-06 10:21:42 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 10:23:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 10872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 10:23:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 10:23:54 -The following profiles are active: dev
2019-05-06 10:23:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 10:23:55 CST 2019]; root of context hierarchy
2019-05-06 10:23:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 10:24:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 10:24:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 10:24:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 10:24:06 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 10:24:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 10:24:06 -Starting service [Tomcat]
2019-05-06 10:24:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 10:24:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 10:24:06 -Initializing Spring embedded WebApplicationContext
2019-05-06 10:24:06 -Root WebApplicationContext: initialization completed in 11756 ms
2019-05-06 10:24:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 10:24:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 10:24:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 10:24:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 10:24:07 -Filter xssFilter was not registered (disabled)
2019-05-06 10:24:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 10:24:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 10:24:07 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 10:24:07 -Servlet dispatcherServlet mapped to [/]
2019-05-06 10:24:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 10:23:55 CST 2019]; root of context hierarchy
2019-05-06 10:24:18 -Using default implementation for ThreadExecutor
2019-05-06 10:24:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 10:24:18 -Quartz Scheduler v.2.2.1 created.
2019-05-06 10:24:18 -RAMJobStore initialized.
2019-05-06 10:24:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 10:24:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 10:24:18 -Quartz scheduler version: 2.2.1
2019-05-06 10:24:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e0d16a4
2019-05-06 10:24:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 10:24:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 10:24:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 10:24:24 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 10:24:24 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 10:24:24 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 10:24:25 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 10:24:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 10:24:25 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 10:24:25 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-06 10:24:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 10:24:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 10:24:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 10:24:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 10:24:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 10:24:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 10:24:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 10:24:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 10:24:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 10:24:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 10:24:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 10:24:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 10:24:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 10:24:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 10:24:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 10:24:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 10:24:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 10:24:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 10:24:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 10:24:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 10:24:25 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 10:24:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 10:24:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 10:24:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 10:24:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 10:24:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 10:24:25 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 10:24:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 10:24:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 10:24:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 10:24:25 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 10:24:25 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 10:24:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 10:24:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 10:24:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 10:24:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 10:24:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 10:24:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 10:24:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 10:24:25 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 10:24:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 10:24:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 10:24:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 10:24:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 10:24:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 10:24:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 10:24:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 10:24:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 10:24:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 10:24:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 10:24:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 10:24:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 10:24:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 10:24:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 10:24:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 10:24:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 10:24:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 10:24:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 10:24:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 10:24:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 10:24:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 10:24:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 10:24:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 10:24:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 10:24:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 10:24:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 10:24:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 10:24:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 10:24:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 10:24:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 10:24:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 10:24:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 10:24:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 10:24:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 10:24:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 10:24:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 10:24:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 10:24:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 10:24:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 10:24:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 10:24:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 10:24:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 10:23:55 CST 2019]; root of context hierarchy
2019-05-06 10:24:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 10:24:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 10:24:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 10:24:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 10:24:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 10:24:34 -Registering beans for JMX exposure on startup
2019-05-06 10:24:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 10:24:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 10:24:34 -Starting beans in phase 2147483647
2019-05-06 10:24:34 -Context refreshed
2019-05-06 10:24:34 -Found 1 custom documentation plugin(s)
2019-05-06 10:24:34 -Scanning for api listing references
2019-05-06 10:24:35 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 10:24:35 -Generating unique operation named: removeUsingPOST_1
2019-05-06 10:24:35 -Generating unique operation named: addUsingGET_1
2019-05-06 10:24:35 -Generating unique operation named: editUsingGET_1
2019-05-06 10:24:35 -Generating unique operation named: listUsingGET_1
2019-05-06 10:24:35 -Generating unique operation named: removeUsingPOST_2
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_3
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_2
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_2
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_2
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_4
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_5
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_2
2019-05-06 10:24:36 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_3
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_3
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_3
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_6
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_7
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_4
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_4
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_4
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_8
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_9
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 10:24:36 -Generating unique operation named: ElecUsingGET_1
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_5
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_5
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_5
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_10
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_11
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_6
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_6
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_6
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_7
2019-05-06 10:24:36 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_7
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_12
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_13
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 10:24:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_7
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_8
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_8
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_14
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_15
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_8
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_8
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_9
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_9
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_16
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_17
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_8
2019-05-06 10:24:36 -Generating unique operation named: updateUsingGET_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_9
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPUT_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 10:24:36 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 10:24:36 -Generating unique operation named: addUsingGET_9
2019-05-06 10:24:36 -Generating unique operation named: editUsingGET_10
2019-05-06 10:24:36 -Generating unique operation named: infoUsingGET_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingPOST_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingPUT_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 10:24:36 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_10
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_18
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_19
2019-05-06 10:24:36 -Generating unique operation named: saveUsingPOST_9
2019-05-06 10:24:36 -Generating unique operation named: updateUsingPOST_10
2019-05-06 10:24:36 -Generating unique operation named: listUsingGET_11
2019-05-06 10:24:36 -Generating unique operation named: removeUsingPOST_20
2019-05-06 10:24:36 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_10
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_11
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_12
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_21
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_10
2019-05-06 10:24:37 -Generating unique operation named: treeUsingGET_1
2019-05-06 10:24:37 -Generating unique operation named: treeUsingGET_2
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_11
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_11
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_12
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_13
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_22
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_23
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingGET_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPUT_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 10:24:37 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_12
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_13
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_14
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_24
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_25
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingGET_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_13
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPUT_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 10:24:37 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_13
2019-05-06 10:24:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_14
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_15
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_13
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_14
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_14
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_16
2019-05-06 10:24:37 -Generating unique operation named: listUsingHEAD_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingPOST_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingPUT_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingPATCH_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingDELETE_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 10:24:37 -Generating unique operation named: listUsingTRACE_1
2019-05-06 10:24:37 -Generating unique operation named: countDDUsingGET_1
2019-05-06 10:24:37 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 10:24:37 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-06 10:24:37 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 10:24:37 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_14
2019-05-06 10:24:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_15
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_17
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_26
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_15
2019-05-06 10:24:37 -Generating unique operation named: treeUsingGET_3
2019-05-06 10:24:37 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_15
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_15
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_16
2019-05-06 10:24:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_18
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_27
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_28
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_16
2019-05-06 10:24:37 -Generating unique operation named: updateUsingGET_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_16
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPUT_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 10:24:37 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 10:24:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_16
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_17
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_19
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_29
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_30
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_17
2019-05-06 10:24:37 -Generating unique operation named: updateUsingGET_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_17
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPUT_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 10:24:37 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 10:24:37 -Generating unique operation named: addUsingGET_17
2019-05-06 10:24:37 -Generating unique operation named: editUsingGET_18
2019-05-06 10:24:37 -Generating unique operation named: listUsingGET_20
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_31
2019-05-06 10:24:37 -Generating unique operation named: removeUsingPOST_32
2019-05-06 10:24:37 -Generating unique operation named: saveUsingPOST_18
2019-05-06 10:24:37 -Generating unique operation named: updateUsingGET_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPOST_18
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPUT_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 10:24:37 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 10:24:37 -Starting Quartz Scheduler now
2019-05-06 10:24:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 10:24:37 -Starting...
2019-05-06 10:24:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 10:24:37 -Started.
2019-05-06 10:24:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 10:24:38 -Using a shared selector for servlet write/read
2019-05-06 10:24:38 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 10:24:38 -Started BootdoApplication in 44.578 seconds (JVM running for 45.444)
2019-05-06 10:24:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 10:24:38 -==> Parameters: 
2019-05-06 10:24:38 -<==      Total: 1
2019-05-06 10:25:27 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-06 10:25:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 10:25:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 10:25:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
2019-05-06 10:25:37 -Enabling session validation scheduler...
2019-05-06 10:25:38 -请求地址 : http://localhost:8081/login;JSESSIONID=2d470a99-c294-4566-952d-b54957912d3f
2019-05-06 10:25:38 -HTTP METHOD : GET
2019-05-06 10:25:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 10:25:38 -参数 : [{}]
2019-05-06 10:25:38 -耗时 : 2
2019-05-06 10:25:38 -返回值 : login
2019-05-06 10:25:40 -请求地址 : http://localhost:8081/getVerify
2019-05-06 10:25:40 -HTTP METHOD : GET
2019-05-06 10:25:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 10:25:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@187b516b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5d79dc00]
2019-05-06 10:25:48 -9917
2019-05-06 10:25:48 -耗时 : 8432
2019-05-06 10:25:48 -返回值 : null
2019-05-06 10:25:48 -请求地址 : http://localhost:8081/login
2019-05-06 10:25:48 -HTTP METHOD : GET
2019-05-06 10:25:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 10:25:48 -参数 : [{}]
2019-05-06 10:25:48 -耗时 : 1
2019-05-06 10:25:48 -返回值 : login
2019-05-06 10:25:52 -请求地址 : http://localhost:8081/login
2019-05-06 10:25:52 -HTTP METHOD : POST
2019-05-06 10:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 10:25:52 -参数 : [admin, 111111, 9917, org.apache.shiro.web.servlet.ShiroHttpServletRequest@123296e]
2019-05-06 10:25:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 10:25:52 -==> Parameters: admin(String)
2019-05-06 10:25:52 -<==      Total: 1
2019-05-06 10:25:52 -耗时 : 424
2019-05-06 10:25:52 -返回值 : {msg=操作成功, code=0}
2019-05-06 10:25:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 10:25:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:25:53 -==> Parameters: 1(Long), admin(String), 登录(String), 425(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 10:25:53.264(Timestamp)
2019-05-06 10:25:53 -<==    Updates: 1
2019-05-06 10:25:53 -请求地址 : http://localhost:8081/index
2019-05-06 10:25:53 -HTTP METHOD : GET
2019-05-06 10:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:25:53 -参数 : [{}]
2019-05-06 10:25:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:25:54 -==> Parameters: 1(Long)
2019-05-06 10:25:54 -<==      Total: 49
2019-05-06 10:25:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:25:54 -==> Parameters: 138(Long)
2019-05-06 10:25:54 -<==      Total: 1
2019-05-06 10:25:54 -耗时 : 766
2019-05-06 10:25:54 -返回值 : index_v1
2019-05-06 10:25:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:25:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 767(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:25:54.83(Timestamp)
2019-05-06 10:25:54 -<==    Updates: 1
2019-05-06 10:25:55 -请求地址 : http://localhost:8081/main
2019-05-06 10:25:55 -HTTP METHOD : GET
2019-05-06 10:25:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:25:55 -参数 : []
2019-05-06 10:25:55 -耗时 : 0
2019-05-06 10:25:55 -返回值 : main
2019-05-06 10:25:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:25:55 -HTTP METHOD : GET
2019-05-06 10:25:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:25:55 -参数 : []
2019-05-06 10:25:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:25:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:25:55 -请求地址 : http://localhost:8081/main
2019-05-06 10:25:55 -HTTP METHOD : GET
2019-05-06 10:25:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:25:55 -参数 : []
2019-05-06 10:25:55 -耗时 : 0
2019-05-06 10:25:55 -返回值 : main
2019-05-06 10:25:55 -<==      Total: 0
2019-05-06 10:25:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:25:55 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:25:56 -<==      Total: 1
2019-05-06 10:25:56 -耗时 : 288
2019-05-06 10:25:56 -返回值 : com.bootdo.common.utils.PageUtils@101ea039
2019-05-06 10:26:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 10:26:03 -==> Parameters: 1(Long)
2019-05-06 10:26:03 -<==      Total: 93
2019-05-06 10:26:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:03 -HTTP METHOD : GET
2019-05-06 10:26:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:03 -参数 : []
2019-05-06 10:26:03 -耗时 : 7
2019-05-06 10:26:03 -返回值 : charts/tableElecYY
2019-05-06 10:26:08 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:08 -HTTP METHOD : GET
2019-05-06 10:26:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:08 -参数 : []
2019-05-06 10:26:08 -耗时 : 10
2019-05-06 10:26:08 -返回值 : charts/tableHeatYY
2019-05-06 10:26:09 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:09 -HTTP METHOD : GET
2019-05-06 10:26:09 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:09 -参数 : []
2019-05-06 10:26:09 -耗时 : 14
2019-05-06 10:26:09 -返回值 : charts/tableWaterYY
2019-05-06 10:26:15 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:15 -HTTP METHOD : GET
2019-05-06 10:26:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:15 -参数 : []
2019-05-06 10:26:15 -耗时 : 0
2019-05-06 10:26:15 -返回值 : charts/tableHeatYY
2019-05-06 10:26:15 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:15 -HTTP METHOD : GET
2019-05-06 10:26:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:15 -参数 : []
2019-05-06 10:26:15 -耗时 : 1
2019-05-06 10:26:15 -返回值 : charts/tableWaterYY
2019-05-06 10:26:16 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:16 -HTTP METHOD : GET
2019-05-06 10:26:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:16 -参数 : []
2019-05-06 10:26:16 -耗时 : 0
2019-05-06 10:26:16 -返回值 : charts/tableHeatYY
2019-05-06 10:26:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:16 -HTTP METHOD : GET
2019-05-06 10:26:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:16 -参数 : []
2019-05-06 10:26:16 -耗时 : 1
2019-05-06 10:26:16 -返回值 : charts/tableElecYY
2019-05-06 10:26:17 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:17 -HTTP METHOD : GET
2019-05-06 10:26:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:17 -参数 : []
2019-05-06 10:26:17 -耗时 : 1
2019-05-06 10:26:17 -返回值 : charts/tableHeatYY
2019-05-06 10:26:17 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:17 -HTTP METHOD : GET
2019-05-06 10:26:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:17 -参数 : []
2019-05-06 10:26:17 -耗时 : 0
2019-05-06 10:26:17 -返回值 : charts/tableWaterYY
2019-05-06 10:26:18 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:18 -HTTP METHOD : GET
2019-05-06 10:26:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:18 -参数 : []
2019-05-06 10:26:18 -耗时 : 0
2019-05-06 10:26:18 -返回值 : charts/tableHeatYY
2019-05-06 10:26:18 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:18 -HTTP METHOD : GET
2019-05-06 10:26:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:18 -参数 : []
2019-05-06 10:26:18 -耗时 : 1
2019-05-06 10:26:18 -返回值 : charts/tableElecYY
2019-05-06 10:26:19 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:19 -HTTP METHOD : GET
2019-05-06 10:26:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:19 -参数 : []
2019-05-06 10:26:19 -耗时 : 1
2019-05-06 10:26:19 -返回值 : charts/tableHeatYY
2019-05-06 10:26:19 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:19 -HTTP METHOD : GET
2019-05-06 10:26:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:19 -参数 : []
2019-05-06 10:26:19 -耗时 : 0
2019-05-06 10:26:19 -返回值 : charts/tableWaterYY
2019-05-06 10:26:20 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:20 -HTTP METHOD : GET
2019-05-06 10:26:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:20 -参数 : []
2019-05-06 10:26:20 -耗时 : 1
2019-05-06 10:26:20 -返回值 : charts/tableHeatYY
2019-05-06 10:26:21 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:21 -HTTP METHOD : GET
2019-05-06 10:26:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:21 -参数 : []
2019-05-06 10:26:21 -耗时 : 1
2019-05-06 10:26:21 -返回值 : charts/tableElecYY
2019-05-06 10:26:21 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:21 -HTTP METHOD : GET
2019-05-06 10:26:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:21 -参数 : []
2019-05-06 10:26:21 -耗时 : 1
2019-05-06 10:26:21 -返回值 : charts/tableHeatYY
2019-05-06 10:26:22 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:22 -HTTP METHOD : GET
2019-05-06 10:26:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:22 -参数 : []
2019-05-06 10:26:22 -耗时 : 1
2019-05-06 10:26:22 -返回值 : charts/tableWaterYY
2019-05-06 10:26:22 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:22 -HTTP METHOD : GET
2019-05-06 10:26:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:22 -参数 : []
2019-05-06 10:26:22 -耗时 : 1
2019-05-06 10:26:22 -返回值 : charts/tableElecYY
2019-05-06 10:26:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:23 -HTTP METHOD : GET
2019-05-06 10:26:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:23 -参数 : []
2019-05-06 10:26:23 -耗时 : 1
2019-05-06 10:26:23 -返回值 : charts/tableElecYY
2019-05-06 10:26:24 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:24 -HTTP METHOD : GET
2019-05-06 10:26:24 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:24 -参数 : []
2019-05-06 10:26:24 -耗时 : 1
2019-05-06 10:26:24 -返回值 : charts/tableHeatYY
2019-05-06 10:26:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:24 -HTTP METHOD : GET
2019-05-06 10:26:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:24 -参数 : []
2019-05-06 10:26:24 -耗时 : 0
2019-05-06 10:26:24 -返回值 : charts/tableWaterYY
2019-05-06 10:26:25 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:25 -HTTP METHOD : GET
2019-05-06 10:26:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:25 -参数 : []
2019-05-06 10:26:25 -耗时 : 0
2019-05-06 10:26:25 -返回值 : charts/tableHeatYY
2019-05-06 10:26:25 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:25 -HTTP METHOD : GET
2019-05-06 10:26:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:25 -参数 : []
2019-05-06 10:26:25 -耗时 : 0
2019-05-06 10:26:25 -返回值 : charts/tableElecYY
2019-05-06 10:26:25 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:25 -HTTP METHOD : GET
2019-05-06 10:26:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:25 -参数 : []
2019-05-06 10:26:25 -耗时 : 1
2019-05-06 10:26:25 -返回值 : charts/tableHeatYY
2019-05-06 10:26:26 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:26 -HTTP METHOD : GET
2019-05-06 10:26:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:26 -参数 : []
2019-05-06 10:26:26 -耗时 : 1
2019-05-06 10:26:26 -返回值 : charts/tableWaterYY
2019-05-06 10:26:27 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:27 -HTTP METHOD : GET
2019-05-06 10:26:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:27 -参数 : []
2019-05-06 10:26:27 -耗时 : 1
2019-05-06 10:26:27 -返回值 : charts/tableHeatYY
2019-05-06 10:26:27 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:26:27 -HTTP METHOD : GET
2019-05-06 10:26:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:26:27 -参数 : []
2019-05-06 10:26:27 -耗时 : 0
2019-05-06 10:26:27 -返回值 : charts/tableElecYY
2019-05-06 10:26:28 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 10:26:28 -HTTP METHOD : GET
2019-05-06 10:26:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 10:26:28 -参数 : []
2019-05-06 10:26:28 -耗时 : 0
2019-05-06 10:26:28 -返回值 : charts/tableHeatYY
2019-05-06 10:26:28 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:26:28 -HTTP METHOD : GET
2019-05-06 10:26:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:26:28 -参数 : []
2019-05-06 10:26:28 -耗时 : 0
2019-05-06 10:26:28 -返回值 : charts/tableWaterYY
2019-05-06 10:42:19 -请求地址 : http://localhost:8081/index
2019-05-06 10:42:19 -HTTP METHOD : GET
2019-05-06 10:42:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:42:19 -参数 : [{}]
2019-05-06 10:42:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:42:19 -==> Parameters: 1(Long)
2019-05-06 10:42:19 -<==      Total: 49
2019-05-06 10:42:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:42:19 -==> Parameters: 138(Long)
2019-05-06 10:42:19 -<==      Total: 1
2019-05-06 10:42:19 -耗时 : 68
2019-05-06 10:42:19 -返回值 : index_v1
2019-05-06 10:42:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:42:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 69(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:42:19.166(Timestamp)
2019-05-06 10:42:19 -<==    Updates: 1
2019-05-06 10:42:19 -请求地址 : http://localhost:8081/main
2019-05-06 10:42:19 -HTTP METHOD : GET
2019-05-06 10:42:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:42:19 -参数 : []
2019-05-06 10:42:19 -耗时 : 1
2019-05-06 10:42:19 -返回值 : main
2019-05-06 10:42:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:42:19 -HTTP METHOD : GET
2019-05-06 10:42:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:42:19 -参数 : []
2019-05-06 10:42:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:42:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:42:19 -<==      Total: 0
2019-05-06 10:42:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:42:19 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:42:19 -<==      Total: 1
2019-05-06 10:42:19 -耗时 : 10
2019-05-06 10:42:19 -返回值 : com.bootdo.common.utils.PageUtils@54a11d90
2019-05-06 10:42:19 -请求地址 : http://localhost:8081/main
2019-05-06 10:42:19 -HTTP METHOD : GET
2019-05-06 10:42:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:42:19 -参数 : []
2019-05-06 10:42:19 -耗时 : 1
2019-05-06 10:42:19 -返回值 : main
2019-05-06 10:43:05 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 10:44:02 -请求地址 : http://localhost:8081/index
2019-05-06 10:44:02 -HTTP METHOD : GET
2019-05-06 10:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:44:02 -参数 : [{}]
2019-05-06 10:44:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:44:02 -==> Parameters: 1(Long)
2019-05-06 10:44:02 -<==      Total: 49
2019-05-06 10:44:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:44:02 -==> Parameters: 138(Long)
2019-05-06 10:44:02 -<==      Total: 1
2019-05-06 10:44:02 -耗时 : 117
2019-05-06 10:44:02 -返回值 : index_v1
2019-05-06 10:44:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:44:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 117(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:44:02.309(Timestamp)
2019-05-06 10:44:02 -<==    Updates: 1
2019-05-06 10:44:02 -请求地址 : http://localhost:8081/main
2019-05-06 10:44:02 -HTTP METHOD : GET
2019-05-06 10:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:44:02 -参数 : []
2019-05-06 10:44:02 -耗时 : 1
2019-05-06 10:44:02 -返回值 : main
2019-05-06 10:44:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:44:02 -HTTP METHOD : GET
2019-05-06 10:44:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:44:02 -参数 : []
2019-05-06 10:44:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:44:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:44:02 -<==      Total: 0
2019-05-06 10:44:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:44:02 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:44:02 -<==      Total: 1
2019-05-06 10:44:02 -耗时 : 12
2019-05-06 10:44:02 -返回值 : com.bootdo.common.utils.PageUtils@7defb4d8
2019-05-06 10:44:02 -请求地址 : http://localhost:8081/main
2019-05-06 10:44:02 -HTTP METHOD : GET
2019-05-06 10:44:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:44:02 -参数 : []
2019-05-06 10:44:02 -耗时 : 1
2019-05-06 10:44:02 -返回值 : main
2019-05-06 10:44:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 10:44:06 -==> Parameters: 1(Long)
2019-05-06 10:44:06 -<==      Total: 93
2019-05-06 10:44:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:44:06 -HTTP METHOD : GET
2019-05-06 10:44:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:44:06 -参数 : []
2019-05-06 10:44:06 -耗时 : 0
2019-05-06 10:44:06 -返回值 : charts/tableElecYY
2019-05-06 10:44:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:44:07 -HTTP METHOD : GET
2019-05-06 10:44:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:44:07 -参数 : []
2019-05-06 10:44:07 -耗时 : 1
2019-05-06 10:44:07 -返回值 : charts/tableWaterYY
2019-05-06 10:44:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 10:44:25 -HTTP METHOD : GET
2019-05-06 10:44:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 10:44:25 -参数 : []
2019-05-06 10:44:25 -耗时 : 0
2019-05-06 10:44:25 -返回值 : system/dept/deptTree
2019-05-06 10:44:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 10:44:26 -HTTP METHOD : GET
2019-05-06 10:44:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 10:44:26 -参数 : []
2019-05-06 10:44:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 10:44:26 -==> Parameters: 
2019-05-06 10:44:26 -<==      Total: 3
2019-05-06 10:44:26 -耗时 : 98
2019-05-06 10:44:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 10:46:35 -请求地址 : http://localhost:8081/index
2019-05-06 10:46:35 -HTTP METHOD : GET
2019-05-06 10:46:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:46:35 -参数 : [{}]
2019-05-06 10:46:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:46:35 -==> Parameters: 1(Long)
2019-05-06 10:46:35 -<==      Total: 49
2019-05-06 10:46:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:46:35 -==> Parameters: 138(Long)
2019-05-06 10:46:35 -<==      Total: 1
2019-05-06 10:46:35 -耗时 : 39
2019-05-06 10:46:35 -返回值 : index_v1
2019-05-06 10:46:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:46:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:46:35.12(Timestamp)
2019-05-06 10:46:35 -<==    Updates: 1
2019-05-06 10:46:35 -请求地址 : http://localhost:8081/main
2019-05-06 10:46:35 -HTTP METHOD : GET
2019-05-06 10:46:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:46:35 -参数 : []
2019-05-06 10:46:35 -耗时 : 1
2019-05-06 10:46:35 -返回值 : main
2019-05-06 10:46:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:46:35 -HTTP METHOD : GET
2019-05-06 10:46:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:46:35 -参数 : []
2019-05-06 10:46:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:46:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:46:35 -<==      Total: 0
2019-05-06 10:46:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:46:35 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:46:35 -<==      Total: 1
2019-05-06 10:46:35 -耗时 : 47
2019-05-06 10:46:35 -返回值 : com.bootdo.common.utils.PageUtils@720e7ad8
2019-05-06 10:46:36 -请求地址 : http://localhost:8081/main
2019-05-06 10:46:36 -HTTP METHOD : GET
2019-05-06 10:46:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:46:36 -参数 : []
2019-05-06 10:46:36 -耗时 : 1
2019-05-06 10:46:36 -返回值 : main
2019-05-06 10:46:40 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:46:40 -HTTP METHOD : GET
2019-05-06 10:46:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:46:40 -参数 : []
2019-05-06 10:46:40 -耗时 : 1
2019-05-06 10:46:40 -返回值 : charts/tableElecYY
2019-05-06 10:46:42 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:46:42 -HTTP METHOD : GET
2019-05-06 10:46:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:46:42 -参数 : []
2019-05-06 10:46:42 -耗时 : 0
2019-05-06 10:46:42 -返回值 : charts/tableWaterYY
2019-05-06 10:46:46 -请求地址 : http://localhost:8081/index
2019-05-06 10:46:46 -HTTP METHOD : GET
2019-05-06 10:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 10:46:46 -参数 : [{}]
2019-05-06 10:46:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 10:46:46 -==> Parameters: 1(Long)
2019-05-06 10:46:46 -<==      Total: 49
2019-05-06 10:46:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 10:46:46 -==> Parameters: 138(Long)
2019-05-06 10:46:46 -<==      Total: 1
2019-05-06 10:46:46 -耗时 : 99
2019-05-06 10:46:46 -返回值 : index_v1
2019-05-06 10:46:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 10:46:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 100(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 10:46:46.523(Timestamp)
2019-05-06 10:46:46 -请求地址 : http://localhost:8081/main
2019-05-06 10:46:46 -HTTP METHOD : GET
2019-05-06 10:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:46:46 -参数 : []
2019-05-06 10:46:46 -耗时 : 1
2019-05-06 10:46:46 -返回值 : main
2019-05-06 10:46:46 -<==    Updates: 1
2019-05-06 10:46:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 10:46:46 -HTTP METHOD : GET
2019-05-06 10:46:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 10:46:46 -参数 : []
2019-05-06 10:46:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 10:46:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 10:46:46 -<==      Total: 0
2019-05-06 10:46:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 10:46:46 -==> Parameters: 1(Long), 0(String)
2019-05-06 10:46:46 -<==      Total: 1
2019-05-06 10:46:46 -耗时 : 10
2019-05-06 10:46:46 -返回值 : com.bootdo.common.utils.PageUtils@5c5352a5
2019-05-06 10:46:46 -请求地址 : http://localhost:8081/main
2019-05-06 10:46:46 -HTTP METHOD : GET
2019-05-06 10:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 10:46:46 -参数 : []
2019-05-06 10:46:46 -耗时 : 1
2019-05-06 10:46:46 -返回值 : main
2019-05-06 10:46:50 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 10:46:50 -HTTP METHOD : GET
2019-05-06 10:46:50 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 10:46:50 -参数 : []
2019-05-06 10:46:50 -耗时 : 0
2019-05-06 10:46:50 -返回值 : charts/countYY
2019-05-06 10:46:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 10:46:51 -HTTP METHOD : GET
2019-05-06 10:46:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 10:46:51 -参数 : [userType]
2019-05-06 10:46:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 10:46:51 -==> Parameters: userType(String)
2019-05-06 10:46:51 -<==      Total: 4
2019-05-06 10:46:51 -耗时 : 222
2019-05-06 10:46:51 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 10:46:51 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 10:46:51 -HTTP METHOD : GET
2019-05-06 10:46:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 10:46:51 -参数 : []
2019-05-06 10:46:51 -耗时 : 0
2019-05-06 10:46:51 -返回值 : charts/tableElecYY
2019-05-06 10:46:53 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 10:46:53 -HTTP METHOD : GET
2019-05-06 10:46:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 10:46:53 -参数 : []
2019-05-06 10:46:53 -耗时 : 0
2019-05-06 10:46:53 -返回值 : charts/tableWaterYY
2019-05-06 10:47:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-06 10:47:15 -HTTP METHOD : GET
2019-05-06 10:47:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-06 10:47:15 -参数 : []
2019-05-06 10:47:15 -耗时 : 0
2019-05-06 10:47:15 -返回值 : /moneyList/moneyList
2019-05-06 10:47:16 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-06 10:47:16 -HTTP METHOD : GET
2019-05-06 10:47:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-06 10:47:16 -参数 : []
2019-05-06 10:47:16 -耗时 : 1
2019-05-06 10:47:16 -返回值 : /moneyLog/elecLog/elecLog
2019-05-06 10:47:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 10:47:16 -HTTP METHOD : GET
2019-05-06 10:47:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 10:47:16 -参数 : [userType]
2019-05-06 10:47:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 10:47:16 -==> Parameters: userType(String)
2019-05-06 10:47:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-06 10:47:16 -HTTP METHOD : GET
2019-05-06 10:47:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 10:47:16 -参数 : [elecType]
2019-05-06 10:47:16 -<==      Total: 4
2019-05-06 10:47:16 -耗时 : 8
2019-05-06 10:47:16 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 10:47:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 10:47:17 -==> Parameters: elecType(String)
2019-05-06 10:47:17 -<==      Total: 11
2019-05-06 10:47:17 -耗时 : 16
2019-05-06 10:47:17 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 10:47:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-06 10:47:17 -HTTP METHOD : GET
2019-05-06 10:47:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-06 10:47:17 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-06 10:47:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-06 10:47:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-06 10:47:17 -<==      Total: 10
2019-05-06 10:47:17 -==>  Preparing: select count(*) from elec_log 
2019-05-06 10:47:17 -==> Parameters: 
2019-05-06 10:47:17 -<==      Total: 1
2019-05-06 10:47:17 -耗时 : 360
2019-05-06 10:47:17 -返回值 : com.bootdo.common.utils.PageUtils@2fb4eeb4
2019-05-06 10:55:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 427]
2019-05-06 11:03:07 -请求地址 : http://localhost:8081/index
2019-05-06 11:03:07 -HTTP METHOD : GET
2019-05-06 11:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 11:03:07 -参数 : [{}]
2019-05-06 11:03:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 11:03:07 -==> Parameters: 1(Long)
2019-05-06 11:03:07 -<==      Total: 49
2019-05-06 11:03:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 11:03:07 -==> Parameters: 138(Long)
2019-05-06 11:03:07 -<==      Total: 1
2019-05-06 11:03:07 -耗时 : 40
2019-05-06 11:03:07 -返回值 : index_v1
2019-05-06 11:03:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 11:03:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 11:03:07.643(Timestamp)
2019-05-06 11:03:07 -<==    Updates: 1
2019-05-06 11:03:07 -请求地址 : http://localhost:8081/main
2019-05-06 11:03:07 -HTTP METHOD : GET
2019-05-06 11:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 11:03:07 -参数 : []
2019-05-06 11:03:07 -耗时 : 1
2019-05-06 11:03:07 -返回值 : main
2019-05-06 11:03:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 11:03:07 -HTTP METHOD : GET
2019-05-06 11:03:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 11:03:07 -参数 : []
2019-05-06 11:03:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 11:03:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 11:03:08 -<==      Total: 0
2019-05-06 11:03:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 11:03:08 -==> Parameters: 1(Long), 0(String)
2019-05-06 11:03:08 -<==      Total: 1
2019-05-06 11:03:08 -耗时 : 25
2019-05-06 11:03:08 -返回值 : com.bootdo.common.utils.PageUtils@21079d82
2019-05-06 11:03:08 -请求地址 : http://localhost:8081/main
2019-05-06 11:03:08 -HTTP METHOD : GET
2019-05-06 11:03:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 11:03:08 -参数 : []
2019-05-06 11:03:08 -耗时 : 0
2019-05-06 11:03:08 -返回值 : main
2019-05-06 11:03:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 11:03:15 -==> Parameters: 1(Long)
2019-05-06 11:03:15 -<==      Total: 93
2019-05-06 11:03:15 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 11:03:15 -HTTP METHOD : GET
2019-05-06 11:03:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 11:03:15 -参数 : []
2019-05-06 11:03:15 -耗时 : 0
2019-05-06 11:03:15 -返回值 : charts/tableElecYY
2019-05-06 11:03:16 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 11:03:16 -HTTP METHOD : GET
2019-05-06 11:03:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 11:03:16 -参数 : []
2019-05-06 11:03:16 -耗时 : 0
2019-05-06 11:03:16 -返回值 : charts/tableWaterYY
2019-05-06 11:03:58 -请求地址 : http://localhost:8081/login;JSESSIONID=c7258702-5a2f-496c-b841-4aa75c83d9de
2019-05-06 11:03:58 -HTTP METHOD : GET
2019-05-06 11:03:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 11:03:58 -参数 : [{}]
2019-05-06 11:03:58 -耗时 : 1
2019-05-06 11:03:58 -返回值 : login
2019-05-06 11:03:58 -请求地址 : http://localhost:8081/getVerify
2019-05-06 11:03:58 -HTTP METHOD : GET
2019-05-06 11:03:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 11:03:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@26150db7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2e6049a0]
2019-05-06 11:03:58 -2310
2019-05-06 11:03:58 -耗时 : 25
2019-05-06 11:03:58 -返回值 : null
2019-05-06 11:03:58 -请求地址 : http://localhost:8081/login
2019-05-06 11:03:58 -HTTP METHOD : GET
2019-05-06 11:03:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 11:03:58 -参数 : [{}]
2019-05-06 11:03:58 -耗时 : 1
2019-05-06 11:03:58 -返回值 : login
2019-05-06 11:04:02 -请求地址 : http://localhost:8081/login
2019-05-06 11:04:02 -HTTP METHOD : POST
2019-05-06 11:04:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 11:04:02 -参数 : [admin, 111111, 2310, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3062ef17]
2019-05-06 11:04:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 11:04:02 -==> Parameters: admin(String)
2019-05-06 11:04:02 -<==      Total: 1
2019-05-06 11:04:02 -耗时 : 62
2019-05-06 11:04:02 -返回值 : {msg=操作成功, code=0}
2019-05-06 11:04:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 11:04:02 -==> Parameters: 1(Long), admin(String), 登录(String), 62(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 11:04:02.961(Timestamp)
2019-05-06 11:04:03 -请求地址 : http://localhost:8081/index
2019-05-06 11:04:03 -HTTP METHOD : GET
2019-05-06 11:04:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 11:04:03 -参数 : [{}]
2019-05-06 11:04:03 -<==    Updates: 1
2019-05-06 11:04:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 11:04:03 -==> Parameters: 1(Long)
2019-05-06 11:04:03 -<==      Total: 49
2019-05-06 11:04:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 11:04:03 -==> Parameters: 138(Long)
2019-05-06 11:04:03 -<==      Total: 1
2019-05-06 11:04:03 -耗时 : 466
2019-05-06 11:04:03 -返回值 : index_v1
2019-05-06 11:04:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 11:04:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 466(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 11:04:03.477(Timestamp)
2019-05-06 11:04:03 -请求地址 : http://localhost:8081/main
2019-05-06 11:04:03 -HTTP METHOD : GET
2019-05-06 11:04:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 11:04:03 -参数 : []
2019-05-06 11:04:03 -耗时 : 0
2019-05-06 11:04:03 -返回值 : main
2019-05-06 11:04:03 -<==    Updates: 1
2019-05-06 11:04:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 11:04:04 -HTTP METHOD : GET
2019-05-06 11:04:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 11:04:04 -参数 : []
2019-05-06 11:04:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 11:04:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 11:04:04 -请求地址 : http://localhost:8081/main
2019-05-06 11:04:04 -HTTP METHOD : GET
2019-05-06 11:04:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 11:04:04 -参数 : []
2019-05-06 11:04:04 -耗时 : 68
2019-05-06 11:04:04 -返回值 : main
2019-05-06 11:04:05 -<==      Total: 0
2019-05-06 11:04:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 11:04:05 -==> Parameters: 1(Long), 0(String)
2019-05-06 11:04:05 -<==      Total: 1
2019-05-06 11:04:05 -耗时 : 1207
2019-05-06 11:04:05 -返回值 : com.bootdo.common.utils.PageUtils@7fa2eb21
2019-05-06 11:04:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 11:04:12 -==> Parameters: 1(Long)
2019-05-06 11:04:12 -<==      Total: 93
2019-05-06 11:04:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 11:04:12 -HTTP METHOD : GET
2019-05-06 11:04:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 11:04:12 -参数 : []
2019-05-06 11:04:12 -耗时 : 1
2019-05-06 11:04:12 -返回值 : charts/tableElecYY
2019-05-06 11:04:13 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 11:04:13 -HTTP METHOD : GET
2019-05-06 11:04:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 11:04:13 -参数 : []
2019-05-06 11:04:13 -耗时 : 0
2019-05-06 11:04:13 -返回值 : charts/tableWaterYY
2019-05-06 11:04:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 11:04:13 -HTTP METHOD : GET
2019-05-06 11:04:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 11:04:13 -参数 : [userType]
2019-05-06 11:04:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 11:04:13 -==> Parameters: userType(String)
2019-05-06 11:04:14 -<==      Total: 4
2019-05-06 11:04:14 -耗时 : 118
2019-05-06 11:04:14 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 11:04:21 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 11:04:21 -HTTP METHOD : GET
2019-05-06 11:04:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 11:04:21 -参数 : []
2019-05-06 11:04:21 -耗时 : 1
2019-05-06 11:04:21 -返回值 : charts/tableHeatYY
2019-05-06 11:04:22 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 11:04:22 -HTTP METHOD : GET
2019-05-06 11:04:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 11:04:22 -参数 : []
2019-05-06 11:04:22 -耗时 : 1
2019-05-06 11:04:22 -返回值 : charts/tableWaterYY
2019-05-06 11:04:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 11:04:22 -HTTP METHOD : GET
2019-05-06 11:04:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 11:04:22 -参数 : [userType]
2019-05-06 11:04:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 11:04:22 -==> Parameters: userType(String)
2019-05-06 11:04:22 -<==      Total: 4
2019-05-06 11:04:22 -耗时 : 4
2019-05-06 11:04:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 11:04:33 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 11:04:33 -HTTP METHOD : GET
2019-05-06 11:04:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 11:04:33 -参数 : []
2019-05-06 11:04:33 -耗时 : 1
2019-05-06 11:04:33 -返回值 : charts/tableHeatYY
2019-05-06 11:04:35 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 11:04:35 -HTTP METHOD : GET
2019-05-06 11:04:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 11:04:35 -参数 : []
2019-05-06 11:04:35 -耗时 : 0
2019-05-06 11:04:35 -返回值 : charts/tableWaterYY
2019-05-06 11:04:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 11:04:35 -HTTP METHOD : GET
2019-05-06 11:04:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 11:04:35 -参数 : [userType]
2019-05-06 11:04:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 11:04:35 -==> Parameters: userType(String)
2019-05-06 11:04:35 -<==      Total: 4
2019-05-06 11:04:35 -耗时 : 6
2019-05-06 11:04:35 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 11:04:35 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 11:04:35 -HTTP METHOD : GET
2019-05-06 11:04:35 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 11:04:35 -参数 : []
2019-05-06 11:04:35 -耗时 : 1
2019-05-06 11:04:35 -返回值 : charts/tableHeatYY
2019-05-06 11:04:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 11:04:36 -HTTP METHOD : GET
2019-05-06 11:04:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 11:04:36 -参数 : []
2019-05-06 11:04:36 -耗时 : 0
2019-05-06 11:04:36 -返回值 : charts/tableElecYY
2019-05-06 11:04:37 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 11:04:37 -HTTP METHOD : GET
2019-05-06 11:04:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 11:04:37 -参数 : []
2019-05-06 11:04:37 -耗时 : 1
2019-05-06 11:04:37 -返回值 : charts/tableHeatYY
2019-05-06 11:04:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 11:04:38 -HTTP METHOD : GET
2019-05-06 11:04:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 11:04:38 -参数 : []
2019-05-06 11:04:38 -耗时 : 1
2019-05-06 11:04:38 -返回值 : charts/tableElecYY
2019-05-06 11:04:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 11:04:39 -HTTP METHOD : GET
2019-05-06 11:04:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 11:04:39 -参数 : []
2019-05-06 11:04:39 -耗时 : 0
2019-05-06 11:04:39 -返回值 : charts/tableWaterYY
2019-05-06 11:04:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 11:04:40 -HTTP METHOD : GET
2019-05-06 11:04:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 11:04:40 -参数 : [userType]
2019-05-06 11:04:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 11:04:40 -==> Parameters: userType(String)
2019-05-06 11:04:40 -<==      Total: 4
2019-05-06 11:04:40 -耗时 : 4
2019-05-06 11:04:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 11:25:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 859]
2019-05-06 11:25:37 -Validating all active sessions...
2019-05-06 11:25:37 -Finished session validation.  No sessions were stopped.
2019-05-06 11:55:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1292]
2019-05-06 12:25:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1698]
2019-05-06 12:36:38 -Validating all active sessions...
2019-05-06 12:36:38 -Finished session validation.  [2] sessions were stopped.
2019-05-06 13:46:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 0, completed tasks = 2121]
2019-05-06 13:46:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 2178]
2019-05-06 13:55:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2872]
2019-05-06 14:17:58 -Validating all active sessions...
2019-05-06 14:17:58 -Finished session validation.  No sessions were stopped.
2019-05-06 14:25:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3305]
2019-05-06 14:25:37 -Validating all active sessions...
2019-05-06 14:25:37 -Finished session validation.  No sessions were stopped.
2019-05-06 14:28:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 12876 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 14:28:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 14:28:17 -The following profiles are active: dev
2019-05-06 14:28:17 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 14:28:17 CST 2019]; root of context hierarchy
2019-05-06 14:28:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 14:28:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$11a0c831] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3f9f6d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 14:28:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 14:28:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 14:28:30 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 14:28:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 14:28:31 -Starting service [Tomcat]
2019-05-06 14:28:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 14:28:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 14:28:31 -Initializing Spring embedded WebApplicationContext
2019-05-06 14:28:31 -Root WebApplicationContext: initialization completed in 14191 ms
2019-05-06 14:28:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 14:28:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 14:28:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 14:28:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 14:28:32 -Filter xssFilter was not registered (disabled)
2019-05-06 14:28:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 14:28:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 14:28:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 14:28:32 -Servlet dispatcherServlet mapped to [/]
2019-05-06 14:28:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 14:28:17 CST 2019]; root of context hierarchy
2019-05-06 14:28:52 -Using default implementation for ThreadExecutor
2019-05-06 14:28:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 14:28:52 -Quartz Scheduler v.2.2.1 created.
2019-05-06 14:28:52 -RAMJobStore initialized.
2019-05-06 14:28:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 14:28:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 14:28:52 -Quartz scheduler version: 2.2.1
2019-05-06 14:28:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-05-06 14:28:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 14:28:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 14:28:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 14:28:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 14:28:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 14:28:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 14:28:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 14:28:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 14:28:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 14:28:56 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-06 14:28:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 14:28:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 14:28:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 14:28:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 14:28:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 14:28:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 14:28:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 14:28:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 14:28:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 14:28:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 14:28:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 14:28:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 14:28:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 14:28:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 14:28:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 14:28:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 14:28:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 14:28:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 14:28:56 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 14:28:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 14:28:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 14:28:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 14:28:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 14:28:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 14:28:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 14:28:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 14:28:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 14:28:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 14:28:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 14:28:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 14:28:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 14:28:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 14:28:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 14:28:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 14:28:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 14:28:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 14:28:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 14:28:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 14:28:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 14:28:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 14:28:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 14:28:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 14:28:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 14:28:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 14:28:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 14:28:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 14:28:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 14:28:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 14:28:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 14:28:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 14:28:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 14:28:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 14:28:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 14:28:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 14:28:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 14:28:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 14:28:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 14:28:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 14:28:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 14:28:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 14:28:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 14:28:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 14:28:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 14:28:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 14:28:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 14:28:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 14:28:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 14:28:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 14:28:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 14:28:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 14:28:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 14:28:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 14:28:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 14:28:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 14:28:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 14:28:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 14:28:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 14:28:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 14:28:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon May 06 14:28:17 CST 2019]; root of context hierarchy
2019-05-06 14:28:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 14:28:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 14:28:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 14:28:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 14:28:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 14:29:01 -Registering beans for JMX exposure on startup
2019-05-06 14:29:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 14:29:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 14:29:01 -Starting beans in phase 2147483647
2019-05-06 14:29:01 -Context refreshed
2019-05-06 14:29:01 -Found 1 custom documentation plugin(s)
2019-05-06 14:29:01 -Scanning for api listing references
2019-05-06 14:29:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_1
2019-05-06 14:29:02 -Generating unique operation named: addUsingGET_1
2019-05-06 14:29:02 -Generating unique operation named: editUsingGET_1
2019-05-06 14:29:02 -Generating unique operation named: listUsingGET_1
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_2
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_3
2019-05-06 14:29:02 -Generating unique operation named: saveUsingPOST_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingGET_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPOST_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPUT_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 14:29:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 14:29:02 -Generating unique operation named: addUsingGET_2
2019-05-06 14:29:02 -Generating unique operation named: editUsingGET_2
2019-05-06 14:29:02 -Generating unique operation named: listUsingGET_2
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_4
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_5
2019-05-06 14:29:02 -Generating unique operation named: saveUsingPOST_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPOST_2
2019-05-06 14:29:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 14:29:02 -Generating unique operation named: addUsingGET_3
2019-05-06 14:29:02 -Generating unique operation named: editUsingGET_3
2019-05-06 14:29:02 -Generating unique operation named: listUsingGET_3
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_6
2019-05-06 14:29:02 -Generating unique operation named: removeUsingPOST_7
2019-05-06 14:29:02 -Generating unique operation named: saveUsingPOST_3
2019-05-06 14:29:02 -Generating unique operation named: updateUsingGET_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPOST_3
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPUT_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 14:29:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_4
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_4
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_4
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_8
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_9
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 14:29:03 -Generating unique operation named: ElecUsingGET_1
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_5
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_5
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_5
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_10
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_11
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_6
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_6
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_6
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_7
2019-05-06 14:29:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_7
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_12
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_13
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 14:29:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_7
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_8
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_8
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_14
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_15
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_8
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_9
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_9
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_16
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_17
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_9
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_9
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_10
2019-05-06 14:29:03 -Generating unique operation named: infoUsingGET_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingPOST_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingPUT_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 14:29:03 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_10
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_18
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_19
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_9
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_10
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_11
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_20
2019-05-06 14:29:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_10
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_11
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_12
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_21
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_10
2019-05-06 14:29:03 -Generating unique operation named: treeUsingGET_1
2019-05-06 14:29:03 -Generating unique operation named: treeUsingGET_2
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_11
2019-05-06 14:29:03 -Generating unique operation named: addUsingGET_11
2019-05-06 14:29:03 -Generating unique operation named: editUsingGET_12
2019-05-06 14:29:03 -Generating unique operation named: listUsingGET_13
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_22
2019-05-06 14:29:03 -Generating unique operation named: removeUsingPOST_23
2019-05-06 14:29:03 -Generating unique operation named: saveUsingPOST_11
2019-05-06 14:29:03 -Generating unique operation named: updateUsingGET_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPOST_12
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPUT_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 14:29:03 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_12
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_13
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_14
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_24
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_25
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingGET_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_13
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPUT_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 14:29:04 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_13
2019-05-06 14:29:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_14
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_15
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_13
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_14
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_14
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_16
2019-05-06 14:29:04 -Generating unique operation named: listUsingHEAD_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingPOST_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingPUT_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingPATCH_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingDELETE_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 14:29:04 -Generating unique operation named: listUsingTRACE_1
2019-05-06 14:29:04 -Generating unique operation named: countDDUsingGET_1
2019-05-06 14:29:04 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 14:29:04 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-06 14:29:04 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_14
2019-05-06 14:29:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_15
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_17
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_26
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_15
2019-05-06 14:29:04 -Generating unique operation named: treeUsingGET_3
2019-05-06 14:29:04 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_15
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_15
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_16
2019-05-06 14:29:04 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_18
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_27
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_28
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_16
2019-05-06 14:29:04 -Generating unique operation named: updateUsingGET_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_16
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPUT_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 14:29:04 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 14:29:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_16
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_17
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_19
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_29
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_30
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_17
2019-05-06 14:29:04 -Generating unique operation named: updateUsingGET_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_17
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPUT_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 14:29:04 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 14:29:04 -Generating unique operation named: addUsingGET_17
2019-05-06 14:29:04 -Generating unique operation named: editUsingGET_18
2019-05-06 14:29:04 -Generating unique operation named: listUsingGET_20
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_31
2019-05-06 14:29:04 -Generating unique operation named: removeUsingPOST_32
2019-05-06 14:29:04 -Generating unique operation named: saveUsingPOST_18
2019-05-06 14:29:04 -Generating unique operation named: updateUsingGET_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPOST_18
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPUT_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 14:29:04 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 14:29:04 -Starting Quartz Scheduler now
2019-05-06 14:29:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 14:29:04 -Starting...
2019-05-06 14:29:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 14:29:04 -Started.
2019-05-06 14:29:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 14:29:05 -Using a shared selector for servlet write/read
2019-05-06 14:29:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 14:29:05 -Started BootdoApplication in 49.135 seconds (JVM running for 50.132)
2019-05-06 14:29:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 14:29:05 -==> Parameters: 
2019-05-06 14:29:05 -<==      Total: 1
2019-05-06 14:29:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 14:29:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 14:29:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-05-06 14:29:18 -Enabling session validation scheduler...
2019-05-06 14:29:19 -请求地址 : http://localhost:8081/login;JSESSIONID=e43eead2-a240-450e-a3c1-a0f156c6258f
2019-05-06 14:29:19 -HTTP METHOD : GET
2019-05-06 14:29:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 14:29:19 -参数 : [{}]
2019-05-06 14:29:19 -耗时 : 4
2019-05-06 14:29:19 -返回值 : login
2019-05-06 14:29:23 -请求地址 : http://localhost:8081/getVerify
2019-05-06 14:29:23 -HTTP METHOD : GET
2019-05-06 14:29:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 14:29:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@46d2a24c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3689d1f]
2019-05-06 14:29:35 -4378
2019-05-06 14:29:36 -耗时 : 12928
2019-05-06 14:29:36 -返回值 : null
2019-05-06 14:29:36 -请求地址 : http://localhost:8081/login
2019-05-06 14:29:36 -HTTP METHOD : GET
2019-05-06 14:29:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 14:29:36 -参数 : [{}]
2019-05-06 14:29:36 -耗时 : 1
2019-05-06 14:29:36 -返回值 : login
2019-05-06 14:29:43 -请求地址 : http://localhost:8081/login
2019-05-06 14:29:43 -HTTP METHOD : POST
2019-05-06 14:29:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 14:29:43 -参数 : [admin, 111111, 4378, org.apache.shiro.web.servlet.ShiroHttpServletRequest@38ef7157]
2019-05-06 14:29:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 14:29:44 -==> Parameters: admin(String)
2019-05-06 14:29:44 -<==      Total: 1
2019-05-06 14:29:44 -耗时 : 564
2019-05-06 14:29:44 -返回值 : {msg=操作成功, code=0}
2019-05-06 14:29:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 14:29:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:29:44 -==> Parameters: 1(Long), admin(String), 登录(String), 564(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 14:29:44.607(Timestamp)
2019-05-06 14:29:44 -请求地址 : http://localhost:8081/index
2019-05-06 14:29:44 -HTTP METHOD : GET
2019-05-06 14:29:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:29:44 -参数 : [{}]
2019-05-06 14:29:45 -<==    Updates: 1
2019-05-06 14:29:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:29:45 -==> Parameters: 1(Long)
2019-05-06 14:29:46 -<==      Total: 49
2019-05-06 14:29:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:29:46 -==> Parameters: 138(Long)
2019-05-06 14:29:46 -<==      Total: 1
2019-05-06 14:29:46 -耗时 : 1116
2019-05-06 14:29:46 -返回值 : index_v1
2019-05-06 14:29:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:29:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1116(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:29:46.191(Timestamp)
2019-05-06 14:29:46 -<==    Updates: 1
2019-05-06 14:29:46 -请求地址 : http://localhost:8081/main
2019-05-06 14:29:46 -HTTP METHOD : GET
2019-05-06 14:29:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:29:46 -参数 : []
2019-05-06 14:29:46 -耗时 : 5
2019-05-06 14:29:46 -返回值 : main
2019-05-06 14:29:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:29:47 -HTTP METHOD : GET
2019-05-06 14:29:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:29:47 -参数 : []
2019-05-06 14:29:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:29:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:29:47 -<==      Total: 0
2019-05-06 14:29:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:29:47 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:29:47 -<==      Total: 1
2019-05-06 14:29:47 -耗时 : 127
2019-05-06 14:29:47 -返回值 : com.bootdo.common.utils.PageUtils@5a96c59f
2019-05-06 14:29:47 -请求地址 : http://localhost:8081/main
2019-05-06 14:29:47 -HTTP METHOD : GET
2019-05-06 14:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:29:47 -参数 : []
2019-05-06 14:29:47 -耗时 : 1
2019-05-06 14:29:47 -返回值 : main
2019-05-06 14:29:57 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-06 14:29:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 14:29:58 -==> Parameters: 1(Long)
2019-05-06 14:29:58 -<==      Total: 93
2019-05-06 14:29:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 14:29:58 -HTTP METHOD : GET
2019-05-06 14:29:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 14:29:58 -参数 : []
2019-05-06 14:29:58 -耗时 : 13
2019-05-06 14:29:58 -返回值 : charts/tableElecYY
2019-05-06 14:30:00 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 14:30:00 -HTTP METHOD : GET
2019-05-06 14:30:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:30:00 -参数 : []
2019-05-06 14:30:00 -耗时 : 15
2019-05-06 14:30:00 -返回值 : charts/tableWaterYY
2019-05-06 14:30:57 -请求地址 : http://localhost:8081/index
2019-05-06 14:30:57 -HTTP METHOD : GET
2019-05-06 14:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:30:57 -参数 : [{}]
2019-05-06 14:30:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:30:57 -==> Parameters: 1(Long)
2019-05-06 14:30:58 -<==      Total: 49
2019-05-06 14:30:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:30:58 -==> Parameters: 138(Long)
2019-05-06 14:30:58 -<==      Total: 1
2019-05-06 14:30:58 -耗时 : 213
2019-05-06 14:30:58 -返回值 : index_v1
2019-05-06 14:30:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:30:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 214(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:30:58.096(Timestamp)
2019-05-06 14:30:58 -<==    Updates: 1
2019-05-06 14:30:58 -请求地址 : http://localhost:8081/main
2019-05-06 14:30:58 -HTTP METHOD : GET
2019-05-06 14:30:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:30:58 -参数 : []
2019-05-06 14:30:58 -耗时 : 1
2019-05-06 14:30:58 -返回值 : main
2019-05-06 14:30:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:30:59 -HTTP METHOD : GET
2019-05-06 14:30:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:30:59 -参数 : []
2019-05-06 14:30:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:30:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:30:59 -<==      Total: 0
2019-05-06 14:30:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:30:59 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:30:59 -<==      Total: 1
2019-05-06 14:30:59 -耗时 : 47
2019-05-06 14:30:59 -返回值 : com.bootdo.common.utils.PageUtils@3fbdd0a7
2019-05-06 14:30:59 -请求地址 : http://localhost:8081/main
2019-05-06 14:30:59 -HTTP METHOD : GET
2019-05-06 14:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:30:59 -参数 : []
2019-05-06 14:30:59 -耗时 : 0
2019-05-06 14:30:59 -返回值 : main
2019-05-06 14:31:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 14:31:04 -HTTP METHOD : GET
2019-05-06 14:31:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 14:31:04 -参数 : []
2019-05-06 14:31:04 -耗时 : 0
2019-05-06 14:31:04 -返回值 : charts/tableElecYY
2019-05-06 14:31:05 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 14:31:05 -HTTP METHOD : GET
2019-05-06 14:31:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:31:05 -参数 : []
2019-05-06 14:31:05 -耗时 : 1
2019-05-06 14:31:05 -返回值 : charts/tableWaterYY
2019-05-06 14:31:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 14:31:05 -HTTP METHOD : GET
2019-05-06 14:31:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 14:31:05 -参数 : [userType]
2019-05-06 14:31:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 14:31:05 -==> Parameters: userType(String)
2019-05-06 14:31:06 -<==      Total: 4
2019-05-06 14:31:06 -耗时 : 181
2019-05-06 14:31:06 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 14:31:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:31:06 -HTTP METHOD : GET
2019-05-06 14:31:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:31:06 -参数 : []
2019-05-06 14:31:06 -耗时 : 1
2019-05-06 14:31:06 -返回值 : system/dept/deptTree
2019-05-06 14:31:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:31:07 -HTTP METHOD : GET
2019-05-06 14:31:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:31:07 -参数 : []
2019-05-06 14:31:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:31:07 -==> Parameters: 
2019-05-06 14:31:08 -<==      Total: 3
2019-05-06 14:31:08 -耗时 : 1078
2019-05-06 14:31:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:31:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:31:16 -HTTP METHOD : GET
2019-05-06 14:31:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:31:16 -参数 : []
2019-05-06 14:31:16 -耗时 : 1
2019-05-06 14:31:16 -返回值 : system/dept/deptTree
2019-05-06 14:31:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:31:17 -HTTP METHOD : GET
2019-05-06 14:31:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:31:17 -参数 : []
2019-05-06 14:31:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:31:17 -==> Parameters: 
2019-05-06 14:31:17 -<==      Total: 3
2019-05-06 14:31:17 -耗时 : 5
2019-05-06 14:31:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:31:19 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 14:31:19 -HTTP METHOD : POST
2019-05-06 14:31:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:31:19 -参数 : [com.bootdo.water.vo.WaterVo@140fe9e5, com.bootdo.moneyLog.vo.WaterLogVo@7fc4b226]
2019-05-06 14:31:19 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 14:31:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:31:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 14:31:19.825(Timestamp)
2019-05-06 14:31:19 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$2ad219a0.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 14:31:20 -<==    Updates: 1
2019-05-06 14:31:32 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 14:32:00 -请求地址 : http://localhost:8081/index
2019-05-06 14:32:00 -HTTP METHOD : GET
2019-05-06 14:32:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:32:00 -参数 : [{}]
2019-05-06 14:32:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:32:00 -==> Parameters: 1(Long)
2019-05-06 14:32:00 -<==      Total: 49
2019-05-06 14:32:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:32:00 -==> Parameters: 138(Long)
2019-05-06 14:32:00 -<==      Total: 1
2019-05-06 14:32:00 -耗时 : 244
2019-05-06 14:32:00 -返回值 : index_v1
2019-05-06 14:32:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:32:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 245(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:32:00.283(Timestamp)
2019-05-06 14:32:00 -<==    Updates: 1
2019-05-06 14:32:00 -请求地址 : http://localhost:8081/main
2019-05-06 14:32:00 -HTTP METHOD : GET
2019-05-06 14:32:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:32:00 -参数 : []
2019-05-06 14:32:00 -耗时 : 1
2019-05-06 14:32:00 -返回值 : main
2019-05-06 14:32:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:32:01 -HTTP METHOD : GET
2019-05-06 14:32:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:32:01 -参数 : []
2019-05-06 14:32:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:32:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:32:01 -<==      Total: 0
2019-05-06 14:32:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:32:01 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:32:01 -<==      Total: 1
2019-05-06 14:32:01 -耗时 : 8
2019-05-06 14:32:01 -返回值 : com.bootdo.common.utils.PageUtils@312036ce
2019-05-06 14:32:01 -请求地址 : http://localhost:8081/main
2019-05-06 14:32:01 -HTTP METHOD : GET
2019-05-06 14:32:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:32:01 -参数 : []
2019-05-06 14:32:01 -耗时 : 0
2019-05-06 14:32:01 -返回值 : main
2019-05-06 14:32:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 14:32:07 -HTTP METHOD : GET
2019-05-06 14:32:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 14:32:07 -参数 : []
2019-05-06 14:32:07 -耗时 : 1
2019-05-06 14:32:07 -返回值 : charts/tableElecYY
2019-05-06 14:32:09 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 14:32:09 -HTTP METHOD : GET
2019-05-06 14:32:09 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:32:09 -参数 : []
2019-05-06 14:32:09 -耗时 : 1
2019-05-06 14:32:09 -返回值 : charts/tableWaterYY
2019-05-06 14:32:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 14:32:09 -HTTP METHOD : GET
2019-05-06 14:32:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 14:32:09 -参数 : [userType]
2019-05-06 14:32:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 14:32:09 -==> Parameters: userType(String)
2019-05-06 14:32:09 -<==      Total: 4
2019-05-06 14:32:09 -耗时 : 6
2019-05-06 14:32:09 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 14:32:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:32:12 -HTTP METHOD : GET
2019-05-06 14:32:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:32:12 -参数 : []
2019-05-06 14:32:12 -耗时 : 0
2019-05-06 14:32:12 -返回值 : system/dept/deptTree
2019-05-06 14:32:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:32:13 -HTTP METHOD : GET
2019-05-06 14:32:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:32:13 -参数 : []
2019-05-06 14:32:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:32:13 -==> Parameters: 
2019-05-06 14:32:13 -<==      Total: 3
2019-05-06 14:32:13 -耗时 : 3
2019-05-06 14:32:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:32:15 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 14:32:15 -HTTP METHOD : POST
2019-05-06 14:32:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:32:15 -参数 : [com.bootdo.water.vo.WaterVo@299b906b, com.bootdo.moneyLog.vo.WaterLogVo@2ebbe765]
2019-05-06 14:32:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 14:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:32:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 14:32:15.422(Timestamp)
2019-05-06 14:32:15 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$2ad219a0.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 14:32:15 -<==    Updates: 1
2019-05-06 14:36:14 -请求地址 : http://localhost:8081/index
2019-05-06 14:36:14 -HTTP METHOD : GET
2019-05-06 14:36:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:36:14 -参数 : [{}]
2019-05-06 14:36:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:36:14 -==> Parameters: 1(Long)
2019-05-06 14:36:14 -<==      Total: 49
2019-05-06 14:36:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:36:14 -==> Parameters: 138(Long)
2019-05-06 14:36:14 -<==      Total: 1
2019-05-06 14:36:14 -耗时 : 89
2019-05-06 14:36:14 -返回值 : index_v1
2019-05-06 14:36:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:36:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:36:14.242(Timestamp)
2019-05-06 14:36:14 -<==    Updates: 1
2019-05-06 14:36:14 -请求地址 : http://localhost:8081/main
2019-05-06 14:36:14 -HTTP METHOD : GET
2019-05-06 14:36:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:36:14 -参数 : []
2019-05-06 14:36:14 -耗时 : 0
2019-05-06 14:36:14 -返回值 : main
2019-05-06 14:36:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:36:14 -HTTP METHOD : GET
2019-05-06 14:36:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:36:14 -参数 : []
2019-05-06 14:36:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:36:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:36:14 -<==      Total: 0
2019-05-06 14:36:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:36:14 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:36:14 -<==      Total: 1
2019-05-06 14:36:14 -耗时 : 39
2019-05-06 14:36:14 -返回值 : com.bootdo.common.utils.PageUtils@1e5c5443
2019-05-06 14:36:14 -请求地址 : http://localhost:8081/main
2019-05-06 14:36:14 -HTTP METHOD : GET
2019-05-06 14:36:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:36:14 -参数 : []
2019-05-06 14:36:14 -耗时 : 2
2019-05-06 14:36:14 -返回值 : main
2019-05-06 14:36:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 14:36:23 -HTTP METHOD : GET
2019-05-06 14:36:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 14:36:23 -参数 : []
2019-05-06 14:36:23 -耗时 : 1
2019-05-06 14:36:23 -返回值 : charts/tableElecYY
2019-05-06 14:36:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 14:36:24 -HTTP METHOD : GET
2019-05-06 14:36:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:36:24 -参数 : []
2019-05-06 14:36:24 -耗时 : 2
2019-05-06 14:36:24 -返回值 : charts/tableWaterYY
2019-05-06 14:40:37 -请求地址 : http://localhost:8081/index
2019-05-06 14:40:37 -HTTP METHOD : GET
2019-05-06 14:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:40:37 -参数 : [{}]
2019-05-06 14:40:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:40:37 -==> Parameters: 1(Long)
2019-05-06 14:40:37 -<==      Total: 49
2019-05-06 14:40:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:40:37 -==> Parameters: 138(Long)
2019-05-06 14:40:37 -<==      Total: 1
2019-05-06 14:40:37 -耗时 : 32
2019-05-06 14:40:37 -返回值 : index_v1
2019-05-06 14:40:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:40:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:40:37.064(Timestamp)
2019-05-06 14:40:37 -请求地址 : http://localhost:8081/main
2019-05-06 14:40:37 -HTTP METHOD : GET
2019-05-06 14:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:40:37 -参数 : []
2019-05-06 14:40:37 -耗时 : 0
2019-05-06 14:40:37 -返回值 : main
2019-05-06 14:40:37 -<==    Updates: 1
2019-05-06 14:40:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:40:37 -HTTP METHOD : GET
2019-05-06 14:40:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:40:37 -参数 : []
2019-05-06 14:40:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:40:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:40:37 -<==      Total: 0
2019-05-06 14:40:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:40:37 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:40:37 -<==      Total: 1
2019-05-06 14:40:37 -耗时 : 17
2019-05-06 14:40:37 -返回值 : com.bootdo.common.utils.PageUtils@470b9fb1
2019-05-06 14:40:37 -请求地址 : http://localhost:8081/main
2019-05-06 14:40:37 -HTTP METHOD : GET
2019-05-06 14:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:40:37 -参数 : []
2019-05-06 14:40:37 -耗时 : 0
2019-05-06 14:40:37 -返回值 : main
2019-05-06 14:40:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 14:40:40 -==> Parameters: 1(Long)
2019-05-06 14:40:40 -<==      Total: 93
2019-05-06 14:40:40 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 14:40:40 -HTTP METHOD : GET
2019-05-06 14:40:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 14:40:40 -参数 : []
2019-05-06 14:40:40 -耗时 : 0
2019-05-06 14:40:40 -返回值 : charts/tableElecYY
2019-05-06 14:40:41 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 14:40:41 -HTTP METHOD : GET
2019-05-06 14:40:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:40:41 -参数 : []
2019-05-06 14:40:41 -耗时 : 0
2019-05-06 14:40:41 -返回值 : charts/tableWaterYY
2019-05-06 14:40:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 14:40:42 -HTTP METHOD : GET
2019-05-06 14:40:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 14:40:42 -参数 : [userType]
2019-05-06 14:40:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 14:40:42 -==> Parameters: userType(String)
2019-05-06 14:40:42 -<==      Total: 4
2019-05-06 14:40:42 -耗时 : 5
2019-05-06 14:40:42 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 14:40:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:40:45 -HTTP METHOD : GET
2019-05-06 14:40:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:40:45 -参数 : []
2019-05-06 14:40:45 -耗时 : 0
2019-05-06 14:40:45 -返回值 : system/dept/deptTree
2019-05-06 14:40:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:40:46 -HTTP METHOD : GET
2019-05-06 14:40:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:40:46 -参数 : []
2019-05-06 14:40:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:40:46 -==> Parameters: 
2019-05-06 14:40:46 -<==      Total: 3
2019-05-06 14:40:46 -耗时 : 4
2019-05-06 14:40:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:40:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:40:54 -HTTP METHOD : GET
2019-05-06 14:40:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:40:54 -参数 : []
2019-05-06 14:40:54 -耗时 : 0
2019-05-06 14:40:54 -返回值 : system/dept/deptTree
2019-05-06 14:40:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:40:54 -HTTP METHOD : GET
2019-05-06 14:40:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:40:54 -参数 : []
2019-05-06 14:40:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:40:54 -==> Parameters: 
2019-05-06 14:40:54 -<==      Total: 3
2019-05-06 14:40:54 -耗时 : 5
2019-05-06 14:40:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:40:57 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 14:40:57 -HTTP METHOD : POST
2019-05-06 14:40:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 14:40:57 -参数 : [com.bootdo.water.vo.WaterVo@73955c51, com.bootdo.moneyLog.vo.WaterLogVo@14ec7e4d]
2019-05-06 14:40:57 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 14:40:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:40:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 14:40:57.553(Timestamp)
2019-05-06 14:40:57 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$2ad219a0.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 14:40:57 -<==    Updates: 1
2019-05-06 14:58:23 -请求地址 : http://localhost:8081/index
2019-05-06 14:58:23 -HTTP METHOD : GET
2019-05-06 14:58:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 14:58:23 -参数 : [{}]
2019-05-06 14:58:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 14:58:23 -==> Parameters: 1(Long)
2019-05-06 14:58:23 -<==      Total: 49
2019-05-06 14:58:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 14:58:23 -==> Parameters: 138(Long)
2019-05-06 14:58:23 -<==      Total: 1
2019-05-06 14:58:23 -耗时 : 96
2019-05-06 14:58:23 -返回值 : index_v1
2019-05-06 14:58:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 14:58:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 96(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 14:58:23.731(Timestamp)
2019-05-06 14:58:23 -<==    Updates: 1
2019-05-06 14:58:23 -请求地址 : http://localhost:8081/main
2019-05-06 14:58:23 -HTTP METHOD : GET
2019-05-06 14:58:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:58:23 -参数 : []
2019-05-06 14:58:23 -耗时 : 20
2019-05-06 14:58:23 -返回值 : main
2019-05-06 14:58:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 14:58:24 -HTTP METHOD : GET
2019-05-06 14:58:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 14:58:24 -参数 : []
2019-05-06 14:58:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 14:58:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 14:58:24 -<==      Total: 0
2019-05-06 14:58:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 14:58:24 -==> Parameters: 1(Long), 0(String)
2019-05-06 14:58:24 -<==      Total: 1
2019-05-06 14:58:24 -耗时 : 13
2019-05-06 14:58:24 -返回值 : com.bootdo.common.utils.PageUtils@47f25079
2019-05-06 14:58:24 -请求地址 : http://localhost:8081/main
2019-05-06 14:58:24 -HTTP METHOD : GET
2019-05-06 14:58:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 14:58:24 -参数 : []
2019-05-06 14:58:24 -耗时 : 1
2019-05-06 14:58:24 -返回值 : main
2019-05-06 14:58:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 14:58:28 -==> Parameters: 1(Long)
2019-05-06 14:58:28 -<==      Total: 93
2019-05-06 14:58:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 14:58:28 -HTTP METHOD : GET
2019-05-06 14:58:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 14:58:28 -参数 : []
2019-05-06 14:58:28 -耗时 : 20
2019-05-06 14:58:28 -返回值 : charts/tableElecMM
2019-05-06 14:58:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 14:58:29 -HTTP METHOD : GET
2019-05-06 14:58:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 14:58:29 -参数 : []
2019-05-06 14:58:30 -耗时 : 15
2019-05-06 14:58:30 -返回值 : charts/tableWaterMM
2019-05-06 14:58:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 14:58:34 -HTTP METHOD : GET
2019-05-06 14:58:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 14:58:34 -参数 : []
2019-05-06 14:58:34 -耗时 : 1
2019-05-06 14:58:34 -返回值 : system/dept/deptTree
2019-05-06 14:58:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 14:58:34 -HTTP METHOD : GET
2019-05-06 14:58:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 14:58:34 -参数 : []
2019-05-06 14:58:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 14:58:34 -==> Parameters: 
2019-05-06 14:58:34 -<==      Total: 3
2019-05-06 14:58:34 -耗时 : 6
2019-05-06 14:58:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 14:58:35 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-06 14:58:35 -HTTP METHOD : POST
2019-05-06 14:58:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 14:58:35 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@3a46f3e1, com.bootdo.water.vo.WaterVo@45237b83]
2019-05-06 14:58:35 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 14:58:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 14:58:36 -<==      Total: 1
2019-05-06 14:58:36 -耗时 : 704
2019-05-06 14:58:36 -返回值 : {LMWaterSumPre=1, CountPrehu=2, SWaterCountOwe=1, LSWaterSumOwe=1, CountOweyu=1, MWaterCountOwe=1, CountPreyu=1, SWaterSumOwe=0, LSWaterCountPre=2, CountLogyu=160, LCountPrehu=4, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, LCountPreyu=2, SWaterSumPre=1, SWaterCountPre=1, CountAllyu=2, LMWaterCountPre=2, MWaterSumOwe=1, SumMWaterLog=100, LCountAllyu=5, LCountOwehu=6, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, LCountAllhu=10, LMWaterCountOwe=3, LCountOweyu=3, MWaterCostCount=2, SumSWaterLog=60, CountCosthu=4, SWaterCostSum=1, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, LStotalyu=2, LMtotalyu=3, LMtotalhu=5, LMWaterSumOwe=2, Mtotalyu=1, LStotalhu=5, LSWaterSumPre=1, LSWaterCountOwe=3, SWaterCostCount=2}
2019-05-06 14:59:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-05-06 15:00:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:00:06 -HTTP METHOD : GET
2019-05-06 15:00:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:00:06 -参数 : []
2019-05-06 15:00:06 -耗时 : 1
2019-05-06 15:00:06 -返回值 : charts/tableElecYY
2019-05-06 15:00:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:00:07 -HTTP METHOD : GET
2019-05-06 15:00:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:00:07 -参数 : []
2019-05-06 15:00:07 -耗时 : 0
2019-05-06 15:00:07 -返回值 : charts/tableWaterYY
2019-05-06 15:00:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:00:07 -HTTP METHOD : GET
2019-05-06 15:00:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:00:07 -参数 : [userType]
2019-05-06 15:00:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:00:07 -==> Parameters: userType(String)
2019-05-06 15:00:07 -<==      Total: 4
2019-05-06 15:00:07 -耗时 : 9
2019-05-06 15:00:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:00:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:00:15 -HTTP METHOD : GET
2019-05-06 15:00:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:00:15 -参数 : []
2019-05-06 15:00:15 -耗时 : 1
2019-05-06 15:00:15 -返回值 : system/dept/deptTree
2019-05-06 15:00:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:00:15 -HTTP METHOD : GET
2019-05-06 15:00:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:00:15 -参数 : []
2019-05-06 15:00:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:00:15 -==> Parameters: 
2019-05-06 15:00:15 -<==      Total: 3
2019-05-06 15:00:15 -耗时 : 4
2019-05-06 15:00:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:00:21 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:00:21 -HTTP METHOD : POST
2019-05-06 15:00:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:00:21 -参数 : [com.bootdo.water.vo.WaterVo@379fcbd4, com.bootdo.moneyLog.vo.WaterLogVo@2b86b128]
2019-05-06 15:00:21 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:00:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:00:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:00:21.901(Timestamp)
2019-05-06 15:00:21 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$2ad219a0.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor159.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:00:22 -<==    Updates: 1
2019-05-06 15:01:17 -请求地址 : http://localhost:8081/index
2019-05-06 15:01:17 -HTTP METHOD : GET
2019-05-06 15:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:01:18 -参数 : [{}]
2019-05-06 15:01:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:01:18 -==> Parameters: 1(Long)
2019-05-06 15:01:18 -<==      Total: 49
2019-05-06 15:01:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:01:18 -==> Parameters: 138(Long)
2019-05-06 15:01:18 -<==      Total: 1
2019-05-06 15:01:18 -耗时 : 56
2019-05-06 15:01:18 -返回值 : index_v1
2019-05-06 15:01:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:01:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 57(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:01:18.057(Timestamp)
2019-05-06 15:01:18 -<==    Updates: 1
2019-05-06 15:01:18 -请求地址 : http://localhost:8081/main
2019-05-06 15:01:18 -HTTP METHOD : GET
2019-05-06 15:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:01:18 -参数 : []
2019-05-06 15:01:18 -耗时 : 0
2019-05-06 15:01:18 -返回值 : main
2019-05-06 15:01:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:01:19 -HTTP METHOD : GET
2019-05-06 15:01:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:01:19 -参数 : []
2019-05-06 15:01:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:01:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:01:19 -<==      Total: 0
2019-05-06 15:01:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:01:19 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:01:19 -<==      Total: 1
2019-05-06 15:01:19 -耗时 : 9
2019-05-06 15:01:19 -返回值 : com.bootdo.common.utils.PageUtils@7c7de2ae
2019-05-06 15:01:19 -请求地址 : http://localhost:8081/main
2019-05-06 15:01:19 -HTTP METHOD : GET
2019-05-06 15:01:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:01:19 -参数 : []
2019-05-06 15:01:19 -耗时 : 2
2019-05-06 15:01:19 -返回值 : main
2019-05-06 15:01:22 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:01:22 -HTTP METHOD : GET
2019-05-06 15:01:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:01:22 -参数 : []
2019-05-06 15:01:22 -耗时 : 0
2019-05-06 15:01:22 -返回值 : charts/tableElecYY
2019-05-06 15:01:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:01:24 -HTTP METHOD : GET
2019-05-06 15:01:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:01:24 -参数 : []
2019-05-06 15:01:24 -耗时 : 0
2019-05-06 15:01:24 -返回值 : charts/tableWaterYY
2019-05-06 15:01:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:01:24 -HTTP METHOD : GET
2019-05-06 15:01:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:01:24 -参数 : [userType]
2019-05-06 15:01:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:01:24 -==> Parameters: userType(String)
2019-05-06 15:01:24 -<==      Total: 4
2019-05-06 15:01:24 -耗时 : 6
2019-05-06 15:01:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:01:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:01:43 -HTTP METHOD : GET
2019-05-06 15:01:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:01:43 -参数 : []
2019-05-06 15:01:43 -耗时 : 1
2019-05-06 15:01:43 -返回值 : system/dept/deptTree
2019-05-06 15:01:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:01:43 -HTTP METHOD : GET
2019-05-06 15:01:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:01:43 -参数 : []
2019-05-06 15:01:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:01:43 -==> Parameters: 
2019-05-06 15:01:43 -<==      Total: 3
2019-05-06 15:01:43 -耗时 : 35
2019-05-06 15:01:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:01:46 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:01:46 -HTTP METHOD : POST
2019-05-06 15:01:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:01:46 -参数 : [com.bootdo.water.vo.WaterVo@61bd0389, com.bootdo.moneyLog.vo.WaterLogVo@794698fa]
2019-05-06 15:01:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:01:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:01:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:01:46.104(Timestamp)
2019-05-06 15:01:46 -<==    Updates: 1
2019-05-06 15:01:46 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$2ad219a0.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor159.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:06:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 11660 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 15:06:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 15:06:42 -The following profiles are active: dev
2019-05-06 15:06:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Mon May 06 15:06:42 CST 2019]; root of context hierarchy
2019-05-06 15:06:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 15:07:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48cfd9cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3b290873] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 15:07:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 15:07:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 15:07:06 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 15:07:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 15:07:06 -Starting service [Tomcat]
2019-05-06 15:07:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 15:07:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 15:07:06 -Initializing Spring embedded WebApplicationContext
2019-05-06 15:07:06 -Root WebApplicationContext: initialization completed in 24062 ms
2019-05-06 15:07:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 15:07:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 15:07:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 15:07:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 15:07:07 -Filter xssFilter was not registered (disabled)
2019-05-06 15:07:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 15:07:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 15:07:07 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 15:07:07 -Servlet dispatcherServlet mapped to [/]
2019-05-06 15:07:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Mon May 06 15:06:42 CST 2019]; root of context hierarchy
2019-05-06 15:07:30 -Using default implementation for ThreadExecutor
2019-05-06 15:07:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 15:07:30 -Quartz Scheduler v.2.2.1 created.
2019-05-06 15:07:30 -RAMJobStore initialized.
2019-05-06 15:07:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 15:07:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 15:07:30 -Quartz scheduler version: 2.2.1
2019-05-06 15:07:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7f8cd5fc
2019-05-06 15:07:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 15:07:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 15:07:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 15:07:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 15:07:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 15:07:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 15:07:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 15:07:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 15:07:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 15:07:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 15:07:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-06 15:07:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 15:07:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 15:07:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 15:07:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 15:07:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 15:07:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 15:07:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 15:07:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 15:07:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 15:07:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 15:07:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 15:07:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 15:07:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 15:07:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 15:07:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 15:07:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 15:07:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 15:07:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 15:07:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 15:07:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 15:07:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 15:07:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 15:07:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 15:07:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 15:07:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 15:07:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 15:07:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 15:07:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 15:07:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 15:07:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 15:07:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 15:07:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 15:07:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 15:07:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 15:07:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 15:07:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 15:07:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 15:07:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 15:07:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 15:07:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 15:07:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 15:07:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 15:07:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 15:07:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 15:07:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 15:07:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 15:07:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 15:07:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 15:07:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 15:07:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 15:07:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 15:07:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 15:07:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 15:07:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 15:07:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 15:07:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 15:07:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 15:07:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 15:07:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 15:07:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 15:07:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 15:07:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 15:07:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 15:07:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 15:07:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 15:07:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 15:07:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 15:07:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 15:07:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 15:07:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 15:07:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 15:07:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 15:07:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 15:07:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 15:07:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 15:07:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 15:07:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 15:07:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 15:07:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 15:07:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 15:07:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 15:07:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 15:07:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 15:07:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Mon May 06 15:06:42 CST 2019]; root of context hierarchy
2019-05-06 15:07:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 15:07:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 15:07:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 15:07:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 15:07:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 15:07:46 -Registering beans for JMX exposure on startup
2019-05-06 15:07:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 15:07:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 15:07:47 -Starting beans in phase 2147483647
2019-05-06 15:07:47 -Context refreshed
2019-05-06 15:07:47 -Found 1 custom documentation plugin(s)
2019-05-06 15:07:47 -Scanning for api listing references
2019-05-06 15:07:48 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_1
2019-05-06 15:07:49 -Generating unique operation named: addUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: editUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: listUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_2
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_3
2019-05-06 15:07:49 -Generating unique operation named: saveUsingPOST_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPOST_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPUT_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 15:07:49 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 15:07:49 -Generating unique operation named: addUsingGET_2
2019-05-06 15:07:49 -Generating unique operation named: editUsingGET_2
2019-05-06 15:07:49 -Generating unique operation named: listUsingGET_2
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_4
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_5
2019-05-06 15:07:49 -Generating unique operation named: saveUsingPOST_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPOST_2
2019-05-06 15:07:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: addUsingGET_3
2019-05-06 15:07:49 -Generating unique operation named: editUsingGET_3
2019-05-06 15:07:49 -Generating unique operation named: listUsingGET_3
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_6
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_7
2019-05-06 15:07:49 -Generating unique operation named: saveUsingPOST_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingGET_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPOST_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPUT_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 15:07:49 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 15:07:49 -Generating unique operation named: addUsingGET_4
2019-05-06 15:07:49 -Generating unique operation named: editUsingGET_4
2019-05-06 15:07:49 -Generating unique operation named: listUsingGET_4
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_8
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_9
2019-05-06 15:07:49 -Generating unique operation named: saveUsingPOST_4
2019-05-06 15:07:49 -Generating unique operation named: updateUsingGET_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPOST_4
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPUT_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 15:07:49 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 15:07:49 -Generating unique operation named: ElecUsingGET_1
2019-05-06 15:07:49 -Generating unique operation named: addUsingGET_5
2019-05-06 15:07:49 -Generating unique operation named: editUsingGET_5
2019-05-06 15:07:49 -Generating unique operation named: listUsingGET_5
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_10
2019-05-06 15:07:49 -Generating unique operation named: removeUsingPOST_11
2019-05-06 15:07:50 -Generating unique operation named: saveUsingPOST_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingGET_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPUT_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 15:07:50 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_6
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_6
2019-05-06 15:07:50 -Generating unique operation named: addUsingGET_6
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_7
2019-05-06 15:07:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_7
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_12
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_13
2019-05-06 15:07:50 -Generating unique operation named: saveUsingPOST_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingGET_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPUT_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 15:07:50 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 15:07:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 15:07:50 -Generating unique operation named: addUsingGET_7
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_8
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_8
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_14
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_15
2019-05-06 15:07:50 -Generating unique operation named: saveUsingPOST_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingGET_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_8
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPUT_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 15:07:50 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 15:07:50 -Generating unique operation named: addUsingGET_8
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_9
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_9
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_16
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_17
2019-05-06 15:07:50 -Generating unique operation named: saveUsingPOST_8
2019-05-06 15:07:50 -Generating unique operation named: updateUsingGET_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_9
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPUT_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 15:07:50 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 15:07:50 -Generating unique operation named: addUsingGET_9
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_10
2019-05-06 15:07:50 -Generating unique operation named: infoUsingGET_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingPOST_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingPUT_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 15:07:50 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_10
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_18
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_19
2019-05-06 15:07:50 -Generating unique operation named: saveUsingPOST_9
2019-05-06 15:07:50 -Generating unique operation named: updateUsingPOST_10
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_11
2019-05-06 15:07:50 -Generating unique operation named: removeUsingPOST_20
2019-05-06 15:07:50 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 15:07:50 -Generating unique operation named: addUsingGET_10
2019-05-06 15:07:50 -Generating unique operation named: editUsingGET_11
2019-05-06 15:07:50 -Generating unique operation named: listUsingGET_12
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_21
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_10
2019-05-06 15:07:51 -Generating unique operation named: treeUsingGET_1
2019-05-06 15:07:51 -Generating unique operation named: treeUsingGET_2
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_11
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_11
2019-05-06 15:07:51 -Generating unique operation named: editUsingGET_12
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_13
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_22
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_23
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_11
2019-05-06 15:07:51 -Generating unique operation named: updateUsingGET_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_12
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPUT_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 15:07:51 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_12
2019-05-06 15:07:51 -Generating unique operation named: editUsingGET_13
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_14
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_24
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_25
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_12
2019-05-06 15:07:51 -Generating unique operation named: updateUsingGET_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_13
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPUT_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 15:07:51 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_13
2019-05-06 15:07:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 15:07:51 -Generating unique operation named: editUsingGET_14
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_15
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_13
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_14
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_14
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_16
2019-05-06 15:07:51 -Generating unique operation named: listUsingHEAD_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingPOST_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingPUT_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingPATCH_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingDELETE_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 15:07:51 -Generating unique operation named: listUsingTRACE_1
2019-05-06 15:07:51 -Generating unique operation named: countDDUsingGET_1
2019-05-06 15:07:51 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 15:07:51 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-06 15:07:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_14
2019-05-06 15:07:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 15:07:51 -Generating unique operation named: editUsingGET_15
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_17
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_26
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_15
2019-05-06 15:07:51 -Generating unique operation named: treeUsingGET_3
2019-05-06 15:07:51 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_15
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_15
2019-05-06 15:07:51 -Generating unique operation named: editUsingGET_16
2019-05-06 15:07:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 15:07:51 -Generating unique operation named: listUsingGET_18
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_27
2019-05-06 15:07:51 -Generating unique operation named: removeUsingPOST_28
2019-05-06 15:07:51 -Generating unique operation named: saveUsingPOST_16
2019-05-06 15:07:51 -Generating unique operation named: updateUsingGET_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPOST_16
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPUT_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 15:07:51 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 15:07:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 15:07:51 -Generating unique operation named: addUsingGET_16
2019-05-06 15:07:52 -Generating unique operation named: editUsingGET_17
2019-05-06 15:07:52 -Generating unique operation named: listUsingGET_19
2019-05-06 15:07:52 -Generating unique operation named: removeUsingPOST_29
2019-05-06 15:07:52 -Generating unique operation named: removeUsingPOST_30
2019-05-06 15:07:52 -Generating unique operation named: saveUsingPOST_17
2019-05-06 15:07:52 -Generating unique operation named: updateUsingGET_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPOST_17
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPUT_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 15:07:52 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 15:07:52 -Generating unique operation named: addUsingGET_17
2019-05-06 15:07:52 -Generating unique operation named: editUsingGET_18
2019-05-06 15:07:52 -Generating unique operation named: listUsingGET_20
2019-05-06 15:07:52 -Generating unique operation named: removeUsingPOST_31
2019-05-06 15:07:52 -Generating unique operation named: removeUsingPOST_32
2019-05-06 15:07:52 -Generating unique operation named: saveUsingPOST_18
2019-05-06 15:07:52 -Generating unique operation named: updateUsingGET_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPOST_18
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPUT_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 15:07:52 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 15:07:52 -Starting Quartz Scheduler now
2019-05-06 15:07:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 15:07:52 -Starting...
2019-05-06 15:07:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 15:07:52 -Started.
2019-05-06 15:07:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 15:07:52 -Using a shared selector for servlet write/read
2019-05-06 15:07:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 15:07:52 -Started BootdoApplication in 72.973 seconds (JVM running for 77.765)
2019-05-06 15:07:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 15:07:53 -==> Parameters: 
2019-05-06 15:07:53 -<==      Total: 1
2019-05-06 15:08:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 15:08:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 15:08:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-05-06 15:08:04 -Enabling session validation scheduler...
2019-05-06 15:08:04 -请求地址 : http://localhost:8081/login;JSESSIONID=a436637c-27da-42d9-beb0-4becce1b79d2
2019-05-06 15:08:04 -HTTP METHOD : GET
2019-05-06 15:08:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 15:08:04 -参数 : [{}]
2019-05-06 15:08:04 -耗时 : 3
2019-05-06 15:08:04 -返回值 : login
2019-05-06 15:08:07 -请求地址 : http://localhost:8081/getVerify
2019-05-06 15:08:07 -HTTP METHOD : GET
2019-05-06 15:08:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 15:08:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@41b7be11, org.apache.shiro.web.servlet.ShiroHttpServletResponse@57171e2e]
2019-05-06 15:08:28 -0210
2019-05-06 15:08:29 -耗时 : 22534
2019-05-06 15:08:29 -返回值 : null
2019-05-06 15:08:35 -请求地址 : http://localhost:8081/login
2019-05-06 15:08:35 -HTTP METHOD : POST
2019-05-06 15:08:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 15:08:35 -参数 : [admin, 111111, 0210, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6657a36b]
2019-05-06 15:08:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 15:08:35 -==> Parameters: admin(String)
2019-05-06 15:08:35 -<==      Total: 1
2019-05-06 15:08:35 -耗时 : 520
2019-05-06 15:08:35 -返回值 : {msg=操作成功, code=0}
2019-05-06 15:08:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 15:08:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:08:36 -请求地址 : http://localhost:8081/index
2019-05-06 15:08:36 -HTTP METHOD : GET
2019-05-06 15:08:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:08:36 -参数 : [{}]
2019-05-06 15:08:36 -==> Parameters: 1(Long), admin(String), 登录(String), 520(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 15:08:36.039(Timestamp)
2019-05-06 15:08:36 -<==    Updates: 1
2019-05-06 15:08:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:08:37 -==> Parameters: 1(Long)
2019-05-06 15:08:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-06 15:08:37 -<==      Total: 49
2019-05-06 15:08:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:08:37 -==> Parameters: 138(Long)
2019-05-06 15:08:37 -<==      Total: 1
2019-05-06 15:08:37 -耗时 : 1632
2019-05-06 15:08:37 -返回值 : index_v1
2019-05-06 15:08:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:08:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1633(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:08:37.943(Timestamp)
2019-05-06 15:08:38 -<==    Updates: 1
2019-05-06 15:08:38 -请求地址 : http://localhost:8081/main
2019-05-06 15:08:38 -HTTP METHOD : GET
2019-05-06 15:08:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:08:38 -参数 : []
2019-05-06 15:08:38 -耗时 : 2
2019-05-06 15:08:38 -返回值 : main
2019-05-06 15:08:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:08:38 -HTTP METHOD : GET
2019-05-06 15:08:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:08:38 -参数 : []
2019-05-06 15:08:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:08:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:08:38 -<==      Total: 0
2019-05-06 15:08:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:08:39 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:08:39 -请求地址 : http://localhost:8081/main
2019-05-06 15:08:39 -HTTP METHOD : GET
2019-05-06 15:08:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:08:39 -参数 : []
2019-05-06 15:08:39 -耗时 : 1
2019-05-06 15:08:39 -返回值 : main
2019-05-06 15:08:39 -<==      Total: 1
2019-05-06 15:08:39 -耗时 : 520
2019-05-06 15:08:39 -返回值 : com.bootdo.common.utils.PageUtils@1cbf3e7c
2019-05-06 15:08:47 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/867/ojwv05fu/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 15:08:47 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-06 15:08:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 15:08:54 -==> Parameters: 1(Long)
2019-05-06 15:08:55 -<==      Total: 93
2019-05-06 15:08:55 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 15:08:55 -HTTP METHOD : GET
2019-05-06 15:08:55 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 15:08:55 -参数 : []
2019-05-06 15:08:55 -耗时 : 1
2019-05-06 15:08:55 -返回值 : charts/countYY
2019-05-06 15:08:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:08:56 -HTTP METHOD : GET
2019-05-06 15:08:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:08:56 -参数 : [userType]
2019-05-06 15:08:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:08:56 -==> Parameters: userType(String)
2019-05-06 15:08:56 -<==      Total: 4
2019-05-06 15:08:56 -耗时 : 178
2019-05-06 15:08:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:08:57 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:08:57 -HTTP METHOD : GET
2019-05-06 15:08:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:08:57 -参数 : []
2019-05-06 15:08:57 -耗时 : 17
2019-05-06 15:08:57 -返回值 : charts/tableElecYY
2019-05-06 15:08:59 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-06 15:08:59 -HTTP METHOD : GET
2019-05-06 15:08:59 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-06 15:08:59 -参数 : []
2019-05-06 15:08:59 -耗时 : 1
2019-05-06 15:08:59 -返回值 : charts/countOwe
2019-05-06 15:08:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:08:59 -HTTP METHOD : GET
2019-05-06 15:08:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:08:59 -参数 : [userType]
2019-05-06 15:08:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:08:59 -==> Parameters: userType(String)
2019-05-06 15:08:59 -<==      Total: 4
2019-05-06 15:08:59 -耗时 : 5
2019-05-06 15:08:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:09:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:09:04 -HTTP METHOD : GET
2019-05-06 15:09:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:09:04 -参数 : []
2019-05-06 15:09:04 -耗时 : 16
2019-05-06 15:09:04 -返回值 : charts/tableWaterYY
2019-05-06 15:09:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:09:05 -HTTP METHOD : GET
2019-05-06 15:09:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:09:05 -参数 : [userType]
2019-05-06 15:09:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:09:05 -==> Parameters: userType(String)
2019-05-06 15:09:05 -<==      Total: 4
2019-05-06 15:09:05 -耗时 : 6
2019-05-06 15:09:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:09:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:09:10 -HTTP METHOD : GET
2019-05-06 15:09:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:09:10 -参数 : []
2019-05-06 15:09:10 -耗时 : 1
2019-05-06 15:09:10 -返回值 : system/dept/deptTree
2019-05-06 15:09:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:09:11 -HTTP METHOD : GET
2019-05-06 15:09:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:09:11 -参数 : []
2019-05-06 15:09:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:09:11 -==> Parameters: 
2019-05-06 15:09:11 -<==      Total: 3
2019-05-06 15:09:11 -耗时 : 167
2019-05-06 15:09:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:09:15 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:09:15 -HTTP METHOD : POST
2019-05-06 15:09:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:09:15 -参数 : [com.bootdo.water.vo.WaterVo@46ea9d2b, com.bootdo.moneyLog.vo.WaterLogVo@127d4294]
2019-05-06 15:09:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:09:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:09:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:09:15.389(Timestamp)
2019-05-06 15:09:15 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 15:09:15 -<==    Updates: 1
2019-05-06 15:09:17 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:09:17 -HTTP METHOD : POST
2019-05-06 15:09:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:09:17 -参数 : [com.bootdo.water.vo.WaterVo@71044b20, com.bootdo.moneyLog.vo.WaterLogVo@391e0adf]
2019-05-06 15:09:17 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:09:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:09:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:09:17.092(Timestamp)
2019-05-06 15:09:17 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 15:09:17 -<==    Updates: 1
2019-05-06 15:09:56 -请求地址 : http://localhost:8081/login;JSESSIONID=cfdafe2d-f0cd-40c8-b41c-a6fde573d90d
2019-05-06 15:09:56 -HTTP METHOD : GET
2019-05-06 15:09:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 15:09:56 -参数 : [{}]
2019-05-06 15:09:56 -耗时 : 1
2019-05-06 15:09:56 -返回值 : login
2019-05-06 15:09:57 -请求地址 : http://localhost:8081/getVerify
2019-05-06 15:09:57 -HTTP METHOD : GET
2019-05-06 15:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 15:09:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c783b4c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63b28fd4]
2019-05-06 15:09:57 -1480
2019-05-06 15:09:57 -耗时 : 16
2019-05-06 15:09:57 -返回值 : null
2019-05-06 15:09:57 -请求地址 : http://localhost:8081/login
2019-05-06 15:09:57 -HTTP METHOD : GET
2019-05-06 15:09:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 15:09:57 -参数 : [{}]
2019-05-06 15:09:57 -耗时 : 1
2019-05-06 15:09:57 -返回值 : login
2019-05-06 15:10:02 -请求地址 : http://localhost:8081/login
2019-05-06 15:10:02 -HTTP METHOD : POST
2019-05-06 15:10:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 15:10:02 -参数 : [admin, 111111, 1480, org.apache.shiro.web.servlet.ShiroHttpServletRequest@569469dd]
2019-05-06 15:10:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 15:10:02 -==> Parameters: admin(String)
2019-05-06 15:10:02 -<==      Total: 1
2019-05-06 15:10:02 -耗时 : 9
2019-05-06 15:10:02 -返回值 : {msg=操作成功, code=0}
2019-05-06 15:10:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:10:02 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 15:10:02.604(Timestamp)
2019-05-06 15:10:02 -请求地址 : http://localhost:8081/index
2019-05-06 15:10:02 -HTTP METHOD : GET
2019-05-06 15:10:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:10:02 -参数 : [{}]
2019-05-06 15:10:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:10:02 -==> Parameters: 1(Long)
2019-05-06 15:10:02 -<==    Updates: 1
2019-05-06 15:10:03 -<==      Total: 49
2019-05-06 15:10:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:10:03 -==> Parameters: 138(Long)
2019-05-06 15:10:03 -<==      Total: 1
2019-05-06 15:10:03 -耗时 : 619
2019-05-06 15:10:03 -返回值 : index_v1
2019-05-06 15:10:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:10:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 620(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:10:03.279(Timestamp)
2019-05-06 15:10:03 -请求地址 : http://localhost:8081/main
2019-05-06 15:10:03 -HTTP METHOD : GET
2019-05-06 15:10:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:10:03 -参数 : []
2019-05-06 15:10:03 -耗时 : 0
2019-05-06 15:10:03 -返回值 : main
2019-05-06 15:10:03 -<==    Updates: 1
2019-05-06 15:10:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:10:04 -HTTP METHOD : GET
2019-05-06 15:10:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:10:04 -参数 : []
2019-05-06 15:10:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:10:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:10:04 -<==      Total: 0
2019-05-06 15:10:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:10:04 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:10:04 -<==      Total: 1
2019-05-06 15:10:04 -耗时 : 195
2019-05-06 15:10:04 -返回值 : com.bootdo.common.utils.PageUtils@79b3fdc4
2019-05-06 15:10:04 -请求地址 : http://localhost:8081/main
2019-05-06 15:10:04 -HTTP METHOD : GET
2019-05-06 15:10:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:10:04 -参数 : []
2019-05-06 15:10:04 -耗时 : 1
2019-05-06 15:10:04 -返回值 : main
2019-05-06 15:10:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 15:10:11 -==> Parameters: 1(Long)
2019-05-06 15:10:11 -<==      Total: 93
2019-05-06 15:10:11 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:10:11 -HTTP METHOD : GET
2019-05-06 15:10:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:10:11 -参数 : []
2019-05-06 15:10:11 -耗时 : 0
2019-05-06 15:10:11 -返回值 : charts/tableElecYY
2019-05-06 15:10:12 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:10:12 -HTTP METHOD : GET
2019-05-06 15:10:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:10:12 -参数 : []
2019-05-06 15:10:12 -耗时 : 0
2019-05-06 15:10:12 -返回值 : charts/tableWaterYY
2019-05-06 15:10:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:10:13 -HTTP METHOD : GET
2019-05-06 15:10:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:10:13 -参数 : [userType]
2019-05-06 15:10:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:10:13 -==> Parameters: userType(String)
2019-05-06 15:10:13 -<==      Total: 4
2019-05-06 15:10:13 -耗时 : 106
2019-05-06 15:10:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:10:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:10:16 -HTTP METHOD : GET
2019-05-06 15:10:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:10:16 -参数 : []
2019-05-06 15:10:16 -耗时 : 0
2019-05-06 15:10:16 -返回值 : system/dept/deptTree
2019-05-06 15:10:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:10:17 -HTTP METHOD : GET
2019-05-06 15:10:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:10:17 -参数 : []
2019-05-06 15:10:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:10:17 -==> Parameters: 
2019-05-06 15:10:17 -<==      Total: 3
2019-05-06 15:10:17 -耗时 : 21
2019-05-06 15:10:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:10:18 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:10:18 -HTTP METHOD : POST
2019-05-06 15:10:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:10:18 -参数 : [com.bootdo.water.vo.WaterVo@6ed66c68, com.bootdo.moneyLog.vo.WaterLogVo@180fabee]
2019-05-06 15:10:18 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:10:18 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 15:10:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:10:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:10:18.84(Timestamp)
2019-05-06 15:10:19 -<==    Updates: 1
2019-05-06 15:15:29 -请求地址 : http://localhost:8081/index
2019-05-06 15:15:29 -HTTP METHOD : GET
2019-05-06 15:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:15:29 -参数 : [{}]
2019-05-06 15:15:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:15:29 -==> Parameters: 1(Long)
2019-05-06 15:15:29 -<==      Total: 49
2019-05-06 15:15:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:15:29 -==> Parameters: 138(Long)
2019-05-06 15:15:29 -<==      Total: 1
2019-05-06 15:15:29 -耗时 : 81
2019-05-06 15:15:29 -返回值 : index_v1
2019-05-06 15:15:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:15:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 81(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:15:29.197(Timestamp)
2019-05-06 15:15:29 -<==    Updates: 1
2019-05-06 15:15:29 -请求地址 : http://localhost:8081/main
2019-05-06 15:15:29 -HTTP METHOD : GET
2019-05-06 15:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:15:29 -参数 : []
2019-05-06 15:15:29 -耗时 : 36
2019-05-06 15:15:29 -返回值 : main
2019-05-06 15:15:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:15:29 -HTTP METHOD : GET
2019-05-06 15:15:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:15:29 -参数 : []
2019-05-06 15:15:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:15:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:15:29 -<==      Total: 0
2019-05-06 15:15:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:15:29 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:15:29 -<==      Total: 1
2019-05-06 15:15:29 -耗时 : 17
2019-05-06 15:15:29 -返回值 : com.bootdo.common.utils.PageUtils@136f39d5
2019-05-06 15:15:30 -请求地址 : http://localhost:8081/main
2019-05-06 15:15:30 -HTTP METHOD : GET
2019-05-06 15:15:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:15:30 -参数 : []
2019-05-06 15:15:30 -耗时 : 0
2019-05-06 15:15:30 -返回值 : main
2019-05-06 15:15:33 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 15:15:33 -HTTP METHOD : GET
2019-05-06 15:15:33 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 15:15:33 -参数 : []
2019-05-06 15:15:33 -耗时 : 1
2019-05-06 15:15:33 -返回值 : charts/countYY
2019-05-06 15:15:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:15:34 -HTTP METHOD : GET
2019-05-06 15:15:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:15:34 -参数 : [userType]
2019-05-06 15:15:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:15:34 -==> Parameters: userType(String)
2019-05-06 15:15:34 -<==      Total: 4
2019-05-06 15:15:34 -耗时 : 6
2019-05-06 15:15:34 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:15:35 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:15:35 -HTTP METHOD : GET
2019-05-06 15:15:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:15:35 -参数 : []
2019-05-06 15:15:35 -耗时 : 0
2019-05-06 15:15:35 -返回值 : charts/tableElecYY
2019-05-06 15:15:36 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:15:36 -HTTP METHOD : GET
2019-05-06 15:15:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:15:36 -参数 : []
2019-05-06 15:15:36 -耗时 : 1
2019-05-06 15:15:36 -返回值 : charts/tableWaterYY
2019-05-06 15:15:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:15:37 -HTTP METHOD : GET
2019-05-06 15:15:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:15:37 -参数 : [userType]
2019-05-06 15:15:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:15:37 -==> Parameters: userType(String)
2019-05-06 15:15:37 -<==      Total: 4
2019-05-06 15:15:37 -耗时 : 5
2019-05-06 15:15:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:15:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:15:47 -HTTP METHOD : GET
2019-05-06 15:15:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:15:47 -参数 : []
2019-05-06 15:15:47 -耗时 : 0
2019-05-06 15:15:47 -返回值 : system/dept/deptTree
2019-05-06 15:15:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:15:47 -HTTP METHOD : GET
2019-05-06 15:15:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:15:47 -参数 : []
2019-05-06 15:15:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:15:47 -==> Parameters: 
2019-05-06 15:15:47 -<==      Total: 3
2019-05-06 15:15:47 -耗时 : 5
2019-05-06 15:15:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:15:49 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:15:49 -HTTP METHOD : POST
2019-05-06 15:15:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:15:49 -参数 : [com.bootdo.water.vo.WaterVo@ae1f3ec, com.bootdo.moneyLog.vo.WaterLogVo@48933d19]
2019-05-06 15:16:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:17:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:17:39 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 15:17:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:17:39.708(Timestamp)
2019-05-06 15:17:39 -<==    Updates: 1
2019-05-06 15:31:04 -请求地址 : http://localhost:8081/index
2019-05-06 15:31:04 -HTTP METHOD : GET
2019-05-06 15:31:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:31:04 -参数 : [{}]
2019-05-06 15:31:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:31:04 -==> Parameters: 1(Long)
2019-05-06 15:31:04 -<==      Total: 49
2019-05-06 15:31:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:31:05 -==> Parameters: 138(Long)
2019-05-06 15:31:05 -<==      Total: 1
2019-05-06 15:31:05 -耗时 : 319
2019-05-06 15:31:05 -返回值 : index_v1
2019-05-06 15:31:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:31:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 319(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:31:05.039(Timestamp)
2019-05-06 15:31:05 -<==    Updates: 1
2019-05-06 15:31:06 -请求地址 : http://localhost:8081/main
2019-05-06 15:31:06 -HTTP METHOD : GET
2019-05-06 15:31:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:31:06 -参数 : []
2019-05-06 15:31:06 -耗时 : 3
2019-05-06 15:31:06 -返回值 : main
2019-05-06 15:31:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:31:07 -HTTP METHOD : GET
2019-05-06 15:31:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:31:07 -参数 : []
2019-05-06 15:31:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:31:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:31:07 -<==      Total: 0
2019-05-06 15:31:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:31:07 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:31:07 -<==      Total: 1
2019-05-06 15:31:07 -耗时 : 87
2019-05-06 15:31:07 -返回值 : com.bootdo.common.utils.PageUtils@3cf8c6bc
2019-05-06 15:31:07 -请求地址 : http://localhost:8081/main
2019-05-06 15:31:07 -HTTP METHOD : GET
2019-05-06 15:31:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:31:07 -参数 : []
2019-05-06 15:31:07 -耗时 : 10
2019-05-06 15:31:07 -返回值 : main
2019-05-06 15:31:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 15:31:10 -==> Parameters: 1(Long)
2019-05-06 15:31:10 -<==      Total: 93
2019-05-06 15:31:10 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 15:31:10 -HTTP METHOD : GET
2019-05-06 15:31:10 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 15:31:10 -参数 : []
2019-05-06 15:31:10 -耗时 : 0
2019-05-06 15:31:10 -返回值 : charts/countYY
2019-05-06 15:31:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:31:11 -HTTP METHOD : GET
2019-05-06 15:31:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:31:11 -参数 : [userType]
2019-05-06 15:31:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:31:11 -==> Parameters: userType(String)
2019-05-06 15:31:11 -<==      Total: 4
2019-05-06 15:31:11 -耗时 : 6
2019-05-06 15:31:11 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:31:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 15:31:28 -HTTP METHOD : GET
2019-05-06 15:31:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 15:31:28 -参数 : []
2019-05-06 15:31:28 -耗时 : 171
2019-05-06 15:31:28 -返回值 : charts/tableElecMM
2019-05-06 15:31:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:31:29 -HTTP METHOD : GET
2019-05-06 15:31:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:31:29 -参数 : []
2019-05-06 15:31:29 -耗时 : 1
2019-05-06 15:31:29 -返回值 : charts/tableElecYY
2019-05-06 15:31:31 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:31:31 -HTTP METHOD : GET
2019-05-06 15:31:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:31:31 -参数 : []
2019-05-06 15:31:31 -耗时 : 1
2019-05-06 15:31:31 -返回值 : charts/tableWaterYY
2019-05-06 15:31:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:31:31 -HTTP METHOD : GET
2019-05-06 15:31:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:31:31 -参数 : [userType]
2019-05-06 15:31:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:31:31 -==> Parameters: userType(String)
2019-05-06 15:31:31 -<==      Total: 4
2019-05-06 15:31:31 -耗时 : 19
2019-05-06 15:31:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:31:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:31:34 -HTTP METHOD : GET
2019-05-06 15:31:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:31:34 -参数 : []
2019-05-06 15:31:34 -耗时 : 0
2019-05-06 15:31:34 -返回值 : system/dept/deptTree
2019-05-06 15:31:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:31:35 -HTTP METHOD : GET
2019-05-06 15:31:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:31:35 -参数 : []
2019-05-06 15:31:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:31:35 -==> Parameters: 
2019-05-06 15:31:35 -<==      Total: 3
2019-05-06 15:31:35 -耗时 : 24
2019-05-06 15:31:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:31:38 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:31:38 -HTTP METHOD : POST
2019-05-06 15:31:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:31:38 -参数 : [com.bootdo.water.vo.WaterVo@2e40aed3, com.bootdo.moneyLog.vo.WaterLogVo@1f6d0022]
2019-05-06 15:31:38 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:31:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:31:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:31:38.071(Timestamp)
2019-05-06 15:31:38 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 15:31:38 -<==    Updates: 1
2019-05-06 15:31:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:31:49 -HTTP METHOD : GET
2019-05-06 15:31:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:31:49 -参数 : []
2019-05-06 15:31:49 -耗时 : 1
2019-05-06 15:31:49 -返回值 : system/dept/deptTree
2019-05-06 15:31:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:31:49 -HTTP METHOD : GET
2019-05-06 15:31:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:31:49 -参数 : []
2019-05-06 15:31:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:31:49 -==> Parameters: 
2019-05-06 15:31:49 -<==      Total: 3
2019-05-06 15:31:49 -耗时 : 5
2019-05-06 15:31:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:31:54 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-06 15:31:54 -HTTP METHOD : POST
2019-05-06 15:31:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 15:31:54 -参数 : [com.bootdo.elec.vo.ElecVo@7c987c45, com.bootdo.moneyLog.vo.ElecLogVo@3dafce19]
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:54 -<==      Total: 1
2019-05-06 15:31:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:55 -<==      Total: 1
2019-05-06 15:31:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:56 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:56 -<==      Total: 1
2019-05-06 15:31:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:56 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:56 -<==      Total: 1
2019-05-06 15:31:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:56 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:56 -<==      Total: 1
2019-05-06 15:31:56 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-06 15:31:56 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:31:56 -<==      Total: 1
2019-05-06 15:31:56 -耗时 : 1612
2019-05-06 15:31:56 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-06 15:32:53 -请求地址 : http://localhost:8081/index
2019-05-06 15:32:53 -HTTP METHOD : GET
2019-05-06 15:32:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:32:53 -参数 : [{}]
2019-05-06 15:32:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:32:53 -==> Parameters: 1(Long)
2019-05-06 15:32:53 -<==      Total: 49
2019-05-06 15:32:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:32:53 -==> Parameters: 138(Long)
2019-05-06 15:32:53 -<==      Total: 1
2019-05-06 15:32:53 -耗时 : 213
2019-05-06 15:32:53 -返回值 : index_v1
2019-05-06 15:32:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:32:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 213(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:32:53.583(Timestamp)
2019-05-06 15:32:53 -<==    Updates: 1
2019-05-06 15:32:53 -请求地址 : http://localhost:8081/main
2019-05-06 15:32:53 -HTTP METHOD : GET
2019-05-06 15:32:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:32:53 -参数 : []
2019-05-06 15:32:53 -耗时 : 0
2019-05-06 15:32:53 -返回值 : main
2019-05-06 15:32:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:32:53 -HTTP METHOD : GET
2019-05-06 15:32:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:32:53 -参数 : []
2019-05-06 15:32:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:32:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:32:53 -<==      Total: 0
2019-05-06 15:32:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:32:53 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:32:53 -<==      Total: 1
2019-05-06 15:32:53 -耗时 : 31
2019-05-06 15:32:53 -返回值 : com.bootdo.common.utils.PageUtils@75596d8d
2019-05-06 15:32:53 -请求地址 : http://localhost:8081/main
2019-05-06 15:32:53 -HTTP METHOD : GET
2019-05-06 15:32:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:32:53 -参数 : []
2019-05-06 15:32:53 -耗时 : 0
2019-05-06 15:32:53 -返回值 : main
2019-05-06 15:32:57 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 15:32:57 -HTTP METHOD : GET
2019-05-06 15:32:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 15:32:57 -参数 : []
2019-05-06 15:32:57 -耗时 : 0
2019-05-06 15:32:57 -返回值 : charts/tableElecMM
2019-05-06 15:32:59 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 15:32:59 -HTTP METHOD : GET
2019-05-06 15:32:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 15:32:59 -参数 : []
2019-05-06 15:32:59 -耗时 : 116
2019-05-06 15:32:59 -返回值 : charts/tableWaterMM
2019-05-06 15:33:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:33:03 -HTTP METHOD : GET
2019-05-06 15:33:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:33:03 -参数 : []
2019-05-06 15:33:03 -耗时 : 1
2019-05-06 15:33:03 -返回值 : system/dept/deptTree
2019-05-06 15:33:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:33:04 -HTTP METHOD : GET
2019-05-06 15:33:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:33:04 -参数 : []
2019-05-06 15:33:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:33:04 -==> Parameters: 
2019-05-06 15:33:04 -<==      Total: 3
2019-05-06 15:33:04 -耗时 : 118
2019-05-06 15:33:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:33:06 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-06 15:33:06 -HTTP METHOD : POST
2019-05-06 15:33:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 15:33:06 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@655e522e, com.bootdo.water.vo.WaterVo@5c87ec59]
2019-05-06 15:33:06 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:06 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:06 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-06 15:33:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-06 15:33:07 -<==      Total: 1
2019-05-06 15:33:07 -耗时 : 869
2019-05-06 15:33:07 -返回值 : {LMWaterSumPre=1, CountPrehu=2, SWaterCountOwe=1, LSWaterSumOwe=1, CountOweyu=1, MWaterCountOwe=1, CountPreyu=1, SWaterSumOwe=0, LSWaterCountPre=2, CountLogyu=160, LCountPrehu=4, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, LCountPreyu=2, SWaterSumPre=1, SWaterCountPre=1, CountAllyu=2, LMWaterCountPre=2, MWaterSumOwe=1, SumMWaterLog=100, LCountAllyu=5, LCountOwehu=6, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, LCountAllhu=10, LMWaterCountOwe=3, LCountOweyu=3, MWaterCostCount=2, SumSWaterLog=60, CountCosthu=4, SWaterCostSum=1, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, LStotalyu=2, LMtotalyu=3, LMtotalhu=5, LMWaterSumOwe=2, Mtotalyu=1, LStotalhu=5, LSWaterSumPre=1, LSWaterCountOwe=3, SWaterCostCount=2}
2019-05-06 15:38:08 -请求地址 : http://localhost:8081/index
2019-05-06 15:38:08 -HTTP METHOD : GET
2019-05-06 15:38:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:38:08 -参数 : [{}]
2019-05-06 15:38:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:38:08 -==> Parameters: 1(Long)
2019-05-06 15:38:08 -<==      Total: 49
2019-05-06 15:38:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:38:08 -==> Parameters: 138(Long)
2019-05-06 15:38:08 -<==      Total: 1
2019-05-06 15:38:08 -耗时 : 115
2019-05-06 15:38:08 -返回值 : index_v1
2019-05-06 15:38:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:38:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 115(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:38:08.774(Timestamp)
2019-05-06 15:38:08 -<==    Updates: 1
2019-05-06 15:38:08 -请求地址 : http://localhost:8081/main
2019-05-06 15:38:08 -HTTP METHOD : GET
2019-05-06 15:38:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:38:08 -参数 : []
2019-05-06 15:38:08 -耗时 : 1
2019-05-06 15:38:08 -返回值 : main
2019-05-06 15:38:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:38:09 -HTTP METHOD : GET
2019-05-06 15:38:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:38:09 -参数 : []
2019-05-06 15:38:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:38:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:38:09 -<==      Total: 0
2019-05-06 15:38:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:38:09 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:38:09 -<==      Total: 1
2019-05-06 15:38:09 -耗时 : 7
2019-05-06 15:38:09 -返回值 : com.bootdo.common.utils.PageUtils@53d90f8e
2019-05-06 15:38:09 -请求地址 : http://localhost:8081/main
2019-05-06 15:38:09 -HTTP METHOD : GET
2019-05-06 15:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:38:09 -参数 : []
2019-05-06 15:38:09 -耗时 : 0
2019-05-06 15:38:09 -返回值 : main
2019-05-06 15:38:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 75], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-05-06 15:39:40 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 15:39:40 -HTTP METHOD : GET
2019-05-06 15:39:40 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 15:39:40 -参数 : []
2019-05-06 15:39:40 -耗时 : 1
2019-05-06 15:39:40 -返回值 : charts/countYY
2019-05-06 15:39:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:39:40 -HTTP METHOD : GET
2019-05-06 15:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:39:40 -参数 : [userType]
2019-05-06 15:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:39:40 -==> Parameters: userType(String)
2019-05-06 15:39:40 -<==      Total: 4
2019-05-06 15:39:40 -耗时 : 6
2019-05-06 15:39:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:39:42 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:39:42 -HTTP METHOD : GET
2019-05-06 15:39:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:39:42 -参数 : []
2019-05-06 15:39:42 -耗时 : 2
2019-05-06 15:39:42 -返回值 : charts/tableElecYY
2019-05-06 15:39:44 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:39:44 -HTTP METHOD : GET
2019-05-06 15:39:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:39:44 -参数 : []
2019-05-06 15:39:44 -耗时 : 1
2019-05-06 15:39:44 -返回值 : charts/tableWaterYY
2019-05-06 15:39:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:39:44 -HTTP METHOD : GET
2019-05-06 15:39:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:39:44 -参数 : [userType]
2019-05-06 15:39:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:39:44 -==> Parameters: userType(String)
2019-05-06 15:39:44 -<==      Total: 4
2019-05-06 15:39:44 -耗时 : 6
2019-05-06 15:39:44 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:39:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:39:47 -HTTP METHOD : GET
2019-05-06 15:39:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:39:47 -参数 : []
2019-05-06 15:39:47 -耗时 : 1
2019-05-06 15:39:47 -返回值 : system/dept/deptTree
2019-05-06 15:39:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:39:48 -HTTP METHOD : GET
2019-05-06 15:39:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:39:48 -参数 : []
2019-05-06 15:39:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:39:48 -==> Parameters: 
2019-05-06 15:39:48 -<==      Total: 3
2019-05-06 15:39:48 -耗时 : 3
2019-05-06 15:39:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:39:51 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:39:51 -HTTP METHOD : POST
2019-05-06 15:39:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:39:51 -参数 : [com.bootdo.water.vo.WaterVo@6bf51ce5, com.bootdo.moneyLog.vo.WaterLogVo@4aae2697]
2019-05-06 15:40:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:40:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:40:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:40:20.739(Timestamp)
2019-05-06 15:40:20 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:40:20 -<==    Updates: 1
2019-05-06 15:40:46 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:40:46 -HTTP METHOD : POST
2019-05-06 15:40:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:40:46 -参数 : [com.bootdo.water.vo.WaterVo@8f18de2, com.bootdo.moneyLog.vo.WaterLogVo@5a61ef46]
2019-05-06 15:40:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:40:46 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:40:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:40:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:40:46.867(Timestamp)
2019-05-06 15:40:46 -<==    Updates: 1
2019-05-06 15:40:49 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:40:49 -HTTP METHOD : POST
2019-05-06 15:40:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:40:49 -参数 : [com.bootdo.water.vo.WaterVo@584165da, com.bootdo.moneyLog.vo.WaterLogVo@1b455fe3]
2019-05-06 15:40:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:40:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:40:49 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:40:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:40:49.169(Timestamp)
2019-05-06 15:40:49 -<==    Updates: 1
2019-05-06 15:40:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:40:54 -HTTP METHOD : GET
2019-05-06 15:40:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:40:54 -参数 : []
2019-05-06 15:40:54 -耗时 : 0
2019-05-06 15:40:54 -返回值 : charts/tableElecYY
2019-05-06 15:41:02 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:41:02 -HTTP METHOD : GET
2019-05-06 15:41:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:41:02 -参数 : []
2019-05-06 15:41:02 -耗时 : 0
2019-05-06 15:41:02 -返回值 : charts/tableWaterYY
2019-05-06 15:41:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:41:02 -HTTP METHOD : GET
2019-05-06 15:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:41:02 -参数 : [userType]
2019-05-06 15:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:41:02 -==> Parameters: userType(String)
2019-05-06 15:41:02 -<==      Total: 4
2019-05-06 15:41:02 -耗时 : 50
2019-05-06 15:41:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:41:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:41:08 -HTTP METHOD : GET
2019-05-06 15:41:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:41:08 -参数 : []
2019-05-06 15:41:08 -耗时 : 1
2019-05-06 15:41:08 -返回值 : system/dept/deptTree
2019-05-06 15:41:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:41:08 -HTTP METHOD : GET
2019-05-06 15:41:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:41:08 -参数 : []
2019-05-06 15:41:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:41:08 -==> Parameters: 
2019-05-06 15:41:08 -<==      Total: 3
2019-05-06 15:41:08 -耗时 : 4
2019-05-06 15:41:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:41:11 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:41:11 -HTTP METHOD : POST
2019-05-06 15:41:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:41:11 -参数 : [com.bootdo.water.vo.WaterVo@4e9f4003, com.bootdo.moneyLog.vo.WaterLogVo@5365259c]
2019-05-06 15:41:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:41:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:41:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:41:11.524(Timestamp)
2019-05-06 15:41:11 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:41:11 -<==    Updates: 1
2019-05-06 15:41:46 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:41:46 -HTTP METHOD : POST
2019-05-06 15:41:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:41:46 -参数 : [com.bootdo.water.vo.WaterVo@762d0d3, com.bootdo.moneyLog.vo.WaterLogVo@50aa4574]
2019-05-06 15:41:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:41:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:41:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:41:46.893(Timestamp)
2019-05-06 15:41:46 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:41:47 -<==    Updates: 1
2019-05-06 15:45:46 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:45:46 -HTTP METHOD : POST
2019-05-06 15:45:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:45:46 -参数 : [com.bootdo.water.vo.WaterVo@50b9de1d, com.bootdo.moneyLog.vo.WaterLogVo@31a35c6c]
2019-05-06 15:46:12 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:46:44 -请求地址 : http://localhost:8081/index
2019-05-06 15:46:44 -HTTP METHOD : GET
2019-05-06 15:46:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 15:46:44 -参数 : [{}]
2019-05-06 15:46:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 15:46:44 -==> Parameters: 1(Long)
2019-05-06 15:46:44 -<==      Total: 49
2019-05-06 15:46:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 15:46:44 -==> Parameters: 138(Long)
2019-05-06 15:46:44 -<==      Total: 1
2019-05-06 15:46:44 -耗时 : 22
2019-05-06 15:46:44 -返回值 : index_v1
2019-05-06 15:46:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:46:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 15:46:44.107(Timestamp)
2019-05-06 15:46:44 -<==    Updates: 1
2019-05-06 15:46:46 -请求地址 : http://localhost:8081/main
2019-05-06 15:46:46 -HTTP METHOD : GET
2019-05-06 15:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:46:46 -参数 : []
2019-05-06 15:46:46 -耗时 : 1
2019-05-06 15:46:46 -返回值 : main
2019-05-06 15:46:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 15:46:47 -HTTP METHOD : GET
2019-05-06 15:46:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 15:46:47 -参数 : []
2019-05-06 15:46:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 15:46:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 15:46:47 -<==      Total: 0
2019-05-06 15:46:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 15:46:47 -==> Parameters: 1(Long), 0(String)
2019-05-06 15:46:47 -<==      Total: 1
2019-05-06 15:46:47 -耗时 : 46
2019-05-06 15:46:47 -返回值 : com.bootdo.common.utils.PageUtils@5f9d941
2019-05-06 15:46:47 -请求地址 : http://localhost:8081/main
2019-05-06 15:46:47 -HTTP METHOD : GET
2019-05-06 15:46:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 15:46:47 -参数 : []
2019-05-06 15:46:47 -耗时 : 0
2019-05-06 15:46:47 -返回值 : main
2019-05-06 15:46:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:46:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:46:48.325(Timestamp)
2019-05-06 15:46:48 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:46:48 -<==    Updates: 1
2019-05-06 15:46:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 15:46:55 -==> Parameters: 1(Long)
2019-05-06 15:46:55 -<==      Total: 93
2019-05-06 15:46:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 15:46:55 -HTTP METHOD : GET
2019-05-06 15:46:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 15:46:55 -参数 : []
2019-05-06 15:46:55 -耗时 : 0
2019-05-06 15:46:55 -返回值 : charts/tableElecYY
2019-05-06 15:46:58 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 15:46:58 -HTTP METHOD : GET
2019-05-06 15:46:58 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:46:58 -参数 : []
2019-05-06 15:46:58 -耗时 : 2
2019-05-06 15:46:58 -返回值 : charts/tableWaterYY
2019-05-06 15:46:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 15:46:58 -HTTP METHOD : GET
2019-05-06 15:46:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 15:46:58 -参数 : [userType]
2019-05-06 15:46:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 15:46:58 -==> Parameters: userType(String)
2019-05-06 15:46:58 -<==      Total: 4
2019-05-06 15:46:58 -耗时 : 5
2019-05-06 15:46:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 15:47:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 15:47:09 -HTTP METHOD : GET
2019-05-06 15:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 15:47:09 -参数 : []
2019-05-06 15:47:09 -耗时 : 0
2019-05-06 15:47:09 -返回值 : system/dept/deptTree
2019-05-06 15:47:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 15:47:10 -HTTP METHOD : GET
2019-05-06 15:47:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 15:47:10 -参数 : []
2019-05-06 15:47:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 15:47:10 -==> Parameters: 
2019-05-06 15:47:10 -<==      Total: 3
2019-05-06 15:47:10 -耗时 : 3
2019-05-06 15:47:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 15:47:13 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:47:13 -HTTP METHOD : POST
2019-05-06 15:47:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:47:13 -参数 : [com.bootdo.water.vo.WaterVo@7fca45a7, com.bootdo.moneyLog.vo.WaterLogVo@30f022cc]
2019-05-06 15:47:18 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:47:31 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 15:47:31 -HTTP METHOD : POST
2019-05-06 15:47:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 15:47:31 -参数 : [com.bootdo.water.vo.WaterVo@7fca45a7, com.bootdo.moneyLog.vo.WaterLogVo@30f022cc]
2019-05-06 15:47:34 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 15:49:07 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$87285800.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor169.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 15:49:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 15:49:07 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 15:49:07.217(Timestamp)
2019-05-06 15:49:07 -<==    Updates: 1
2019-05-06 16:08:04 -Validating all active sessions...
2019-05-06 16:08:04 -Finished session validation.  [1] sessions were stopped.
2019-05-06 16:08:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 87], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 862]
2019-05-06 16:38:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 87], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1295]
2019-05-06 17:08:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 87], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1703]
2019-05-06 17:18:26 -Validating all active sessions...
2019-05-06 17:18:26 -Finished session validation.  [1] sessions were stopped.
2019-05-06 19:05:16 -Starting BootdoApplication on ZJZL-20180906VX with PID 6600 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-06 19:05:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-06 19:05:16 -The following profiles are active: dev
2019-05-06 19:05:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 19:05:16 CST 2019]; root of context hierarchy
2019-05-06 19:05:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-06 19:05:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-06 19:05:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-06 19:05:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-06 19:05:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-06 19:05:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-06 19:05:28 -Starting service [Tomcat]
2019-05-06 19:05:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-06 19:05:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-06 19:05:29 -Initializing Spring embedded WebApplicationContext
2019-05-06 19:05:29 -Root WebApplicationContext: initialization completed in 12437 ms
2019-05-06 19:05:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-06 19:05:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-06 19:05:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-06 19:05:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-06 19:05:30 -Filter xssFilter was not registered (disabled)
2019-05-06 19:05:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-06 19:05:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-06 19:05:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-06 19:05:30 -Servlet dispatcherServlet mapped to [/]
2019-05-06 19:05:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 19:05:16 CST 2019]; root of context hierarchy
2019-05-06 19:05:39 -Using default implementation for ThreadExecutor
2019-05-06 19:05:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-06 19:05:39 -Quartz Scheduler v.2.2.1 created.
2019-05-06 19:05:39 -RAMJobStore initialized.
2019-05-06 19:05:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-06 19:05:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-06 19:05:39 -Quartz scheduler version: 2.2.1
2019-05-06 19:05:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-05-06 19:05:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-06 19:05:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-06 19:05:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-06 19:05:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-06 19:05:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-06 19:05:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-06 19:05:44 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-06 19:05:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-06 19:05:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-06 19:05:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-06 19:05:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-06 19:05:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-06 19:05:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-06 19:05:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-06 19:05:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-06 19:05:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-06 19:05:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-06 19:05:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-06 19:05:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-06 19:05:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-06 19:05:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-06 19:05:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 19:05:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-06 19:05:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-06 19:05:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-06 19:05:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-06 19:05:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-06 19:05:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-06 19:05:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-06 19:05:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-06 19:05:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-06 19:05:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-06 19:05:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-06 19:05:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-06 19:05:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-06 19:05:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-06 19:05:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-06 19:05:45 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-06 19:05:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-06 19:05:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-06 19:05:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-06 19:05:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-06 19:05:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-06 19:05:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-06 19:05:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 19:05:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-06 19:05:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-06 19:05:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 19:05:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 19:05:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-06 19:05:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-06 19:05:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-06 19:05:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-06 19:05:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-06 19:05:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-06 19:05:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-06 19:05:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-06 19:05:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-06 19:05:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-06 19:05:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-06 19:05:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-06 19:05:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-06 19:05:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-06 19:05:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-06 19:05:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-06 19:05:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-06 19:05:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-06 19:05:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-06 19:05:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-06 19:05:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-06 19:05:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-06 19:05:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-06 19:05:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-06 19:05:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-06 19:05:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-06 19:05:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-06 19:05:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-06 19:05:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-06 19:05:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 19:05:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-06 19:05:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-06 19:05:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-06 19:05:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-06 19:05:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-06 19:05:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-06 19:05:45 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-06 19:05:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-06 19:05:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-06 19:05:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-06 19:05:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-06 19:05:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-06 19:05:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-06 19:05:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-06 19:05:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-06 19:05:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-06 19:05:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-06 19:05:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-06 19:05:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-06 19:05:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 19:05:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon May 06 19:05:16 CST 2019]; root of context hierarchy
2019-05-06 19:05:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 19:05:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 19:05:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-06 19:05:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-06 19:05:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-06 19:05:57 -Registering beans for JMX exposure on startup
2019-05-06 19:05:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-06 19:05:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-06 19:05:57 -Starting beans in phase 2147483647
2019-05-06 19:05:57 -Context refreshed
2019-05-06 19:05:57 -Found 1 custom documentation plugin(s)
2019-05-06 19:05:58 -Scanning for api listing references
2019-05-06 19:05:58 -Generating unique operation named: getCountDUsingPOST_1
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_1
2019-05-06 19:05:58 -Generating unique operation named: addUsingGET_1
2019-05-06 19:05:58 -Generating unique operation named: editUsingGET_1
2019-05-06 19:05:58 -Generating unique operation named: listUsingGET_1
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_2
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_3
2019-05-06 19:05:58 -Generating unique operation named: saveUsingPOST_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingGET_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingHEAD_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingPOST_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingPUT_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingPATCH_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingDELETE_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-06 19:05:58 -Generating unique operation named: updateUsingTRACE_1
2019-05-06 19:05:58 -Generating unique operation named: addUsingGET_2
2019-05-06 19:05:58 -Generating unique operation named: editUsingGET_2
2019-05-06 19:05:58 -Generating unique operation named: listUsingGET_2
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_4
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_5
2019-05-06 19:05:58 -Generating unique operation named: saveUsingPOST_2
2019-05-06 19:05:58 -Generating unique operation named: updateUsingPOST_2
2019-05-06 19:05:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-06 19:05:58 -Generating unique operation named: addUsingGET_3
2019-05-06 19:05:58 -Generating unique operation named: editUsingGET_3
2019-05-06 19:05:58 -Generating unique operation named: listUsingGET_3
2019-05-06 19:05:58 -Generating unique operation named: removeUsingPOST_6
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_7
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_2
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_4
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_4
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_4
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_8
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_9
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_3
2019-05-06 19:05:59 -Generating unique operation named: ElecUsingGET_1
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_5
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_5
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_5
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_10
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_11
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_4
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_6
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_6
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_6
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_7
2019-05-06 19:05:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_7
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_12
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_13
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_5
2019-05-06 19:05:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_7
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_8
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_8
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_14
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_15
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_6
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_8
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_9
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_9
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_16
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_17
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_9
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_7
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_9
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_10
2019-05-06 19:05:59 -Generating unique operation named: infoUsingGET_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingHEAD_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingPOST_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingPUT_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingPATCH_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingDELETE_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-06 19:05:59 -Generating unique operation named: infoUsingTRACE_1
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_10
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_18
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_19
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_9
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_10
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_11
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_20
2019-05-06 19:05:59 -Generating unique operation named: welcomeUsingGET_1
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_10
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_11
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_12
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_21
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_10
2019-05-06 19:05:59 -Generating unique operation named: treeUsingGET_1
2019-05-06 19:05:59 -Generating unique operation named: treeUsingGET_2
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_11
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_11
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_12
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_13
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_22
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_23
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_11
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPOST_12
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPUT_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-06 19:05:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-06 19:05:59 -Generating unique operation named: addUsingGET_12
2019-05-06 19:05:59 -Generating unique operation named: editUsingGET_13
2019-05-06 19:05:59 -Generating unique operation named: listUsingGET_14
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_24
2019-05-06 19:05:59 -Generating unique operation named: removeUsingPOST_25
2019-05-06 19:05:59 -Generating unique operation named: saveUsingPOST_12
2019-05-06 19:05:59 -Generating unique operation named: updateUsingGET_9
2019-05-06 19:05:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_13
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPUT_9
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPATCH_9
2019-05-06 19:06:00 -Generating unique operation named: updateUsingDELETE_9
2019-05-06 19:06:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-06 19:06:00 -Generating unique operation named: updateUsingTRACE_9
2019-05-06 19:06:00 -Generating unique operation named: addUsingGET_13
2019-05-06 19:06:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-06 19:06:00 -Generating unique operation named: editUsingGET_14
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_15
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_13
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_14
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_14
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_16
2019-05-06 19:06:00 -Generating unique operation named: listUsingHEAD_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingPOST_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingPUT_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingPATCH_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingDELETE_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingOPTIONS_1
2019-05-06 19:06:00 -Generating unique operation named: listUsingTRACE_1
2019-05-06 19:06:00 -Generating unique operation named: countDDUsingGET_1
2019-05-06 19:06:00 -Generating unique operation named: exportDDUsingGET_1
2019-05-06 19:06:00 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-06 19:06:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-06 19:06:00 -Generating unique operation named: addUsingGET_14
2019-05-06 19:06:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-06 19:06:00 -Generating unique operation named: editUsingGET_15
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_17
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_26
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_15
2019-05-06 19:06:00 -Generating unique operation named: treeUsingGET_3
2019-05-06 19:06:00 -Generating unique operation named: treeViewUsingGET_1
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_15
2019-05-06 19:06:00 -Generating unique operation named: addUsingGET_15
2019-05-06 19:06:00 -Generating unique operation named: editUsingGET_16
2019-05-06 19:06:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_18
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_27
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_28
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_16
2019-05-06 19:06:00 -Generating unique operation named: updateUsingGET_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingHEAD_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_16
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPUT_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPATCH_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingDELETE_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-06 19:06:00 -Generating unique operation named: updateUsingTRACE_10
2019-05-06 19:06:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-06 19:06:00 -Generating unique operation named: addUsingGET_16
2019-05-06 19:06:00 -Generating unique operation named: editUsingGET_17
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_19
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_29
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_30
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_17
2019-05-06 19:06:00 -Generating unique operation named: updateUsingGET_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingHEAD_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_17
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPUT_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPATCH_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingDELETE_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-06 19:06:00 -Generating unique operation named: updateUsingTRACE_11
2019-05-06 19:06:00 -Generating unique operation named: addUsingGET_17
2019-05-06 19:06:00 -Generating unique operation named: editUsingGET_18
2019-05-06 19:06:00 -Generating unique operation named: listUsingGET_20
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_31
2019-05-06 19:06:00 -Generating unique operation named: removeUsingPOST_32
2019-05-06 19:06:00 -Generating unique operation named: saveUsingPOST_18
2019-05-06 19:06:00 -Generating unique operation named: updateUsingGET_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingHEAD_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPOST_18
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPUT_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingPATCH_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingDELETE_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-06 19:06:00 -Generating unique operation named: updateUsingTRACE_12
2019-05-06 19:06:00 -Starting Quartz Scheduler now
2019-05-06 19:06:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-06 19:06:00 -Starting...
2019-05-06 19:06:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-06 19:06:00 -Started.
2019-05-06 19:06:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-06 19:06:00 -Using a shared selector for servlet write/read
2019-05-06 19:06:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-06 19:06:00 -Started BootdoApplication in 45.759 seconds (JVM running for 46.601)
2019-05-06 19:06:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-06 19:06:01 -==> Parameters: 
2019-05-06 19:06:01 -<==      Total: 1
2019-05-06 19:06:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-06 19:06:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-06 19:06:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-06 19:06:33 -Enabling session validation scheduler...
2019-05-06 19:06:33 -请求地址 : http://localhost:8081/login;JSESSIONID=feb890c7-6143-4da9-8447-705b0bd3fc33
2019-05-06 19:06:33 -HTTP METHOD : GET
2019-05-06 19:06:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 19:06:33 -参数 : [{}]
2019-05-06 19:06:33 -耗时 : 5
2019-05-06 19:06:33 -返回值 : login
2019-05-06 19:06:37 -请求地址 : http://localhost:8081/getVerify
2019-05-06 19:06:37 -HTTP METHOD : GET
2019-05-06 19:06:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 19:06:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fc1bf2d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@118c6bca]
2019-05-06 19:06:42 -0352
2019-05-06 19:06:42 -耗时 : 4896
2019-05-06 19:06:42 -返回值 : null
2019-05-06 19:06:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-06 19:07:28 -请求地址 : http://localhost:8081/login
2019-05-06 19:07:28 -HTTP METHOD : POST
2019-05-06 19:07:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 19:07:28 -参数 : [admin, 111111, 0352, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a9c6bb1]
2019-05-06 19:07:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 19:07:28 -==> Parameters: admin(String)
2019-05-06 19:07:28 -<==      Total: 1
2019-05-06 19:07:28 -耗时 : 213
2019-05-06 19:07:28 -返回值 : {msg=操作成功, code=0}
2019-05-06 19:07:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-06 19:07:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 19:07:29 -==> Parameters: 1(Long), admin(String), 登录(String), 213(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 19:07:29.087(Timestamp)
2019-05-06 19:07:29 -<==    Updates: 1
2019-05-06 19:07:29 -请求地址 : http://localhost:8081/index
2019-05-06 19:07:29 -HTTP METHOD : GET
2019-05-06 19:07:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 19:07:29 -参数 : [{}]
2019-05-06 19:07:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 19:07:29 -==> Parameters: 1(Long)
2019-05-06 19:07:29 -<==      Total: 49
2019-05-06 19:07:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 19:07:29 -==> Parameters: 138(Long)
2019-05-06 19:07:29 -<==      Total: 1
2019-05-06 19:07:29 -耗时 : 486
2019-05-06 19:07:29 -返回值 : index_v1
2019-05-06 19:07:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 19:07:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 487(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 19:07:29.973(Timestamp)
2019-05-06 19:07:30 -<==    Updates: 1
2019-05-06 19:07:30 -请求地址 : http://localhost:8081/main
2019-05-06 19:07:30 -HTTP METHOD : GET
2019-05-06 19:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:07:30 -参数 : []
2019-05-06 19:07:30 -耗时 : 1
2019-05-06 19:07:30 -返回值 : main
2019-05-06 19:07:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 19:07:31 -HTTP METHOD : GET
2019-05-06 19:07:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 19:07:31 -参数 : []
2019-05-06 19:07:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 19:07:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 19:07:31 -<==      Total: 0
2019-05-06 19:07:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 19:07:31 -==> Parameters: 1(Long), 0(String)
2019-05-06 19:07:31 -<==      Total: 1
2019-05-06 19:07:31 -耗时 : 152
2019-05-06 19:07:31 -返回值 : com.bootdo.common.utils.PageUtils@6ad88e93
2019-05-06 19:07:31 -请求地址 : http://localhost:8081/main
2019-05-06 19:07:31 -HTTP METHOD : GET
2019-05-06 19:07:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:07:31 -参数 : []
2019-05-06 19:07:31 -耗时 : 1
2019-05-06 19:07:31 -返回值 : main
2019-05-06 19:07:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 19:07:57 -==> Parameters: 1(Long)
2019-05-06 19:07:57 -<==      Total: 93
2019-05-06 19:07:57 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 19:07:57 -HTTP METHOD : GET
2019-05-06 19:07:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 19:07:57 -参数 : []
2019-05-06 19:07:57 -耗时 : 1
2019-05-06 19:07:57 -返回值 : charts/countYY
2019-05-06 19:07:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:07:58 -HTTP METHOD : GET
2019-05-06 19:07:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:07:58 -参数 : []
2019-05-06 19:07:58 -耗时 : 10
2019-05-06 19:07:58 -返回值 : charts/tableElecYY
2019-05-06 19:07:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:07:58 -HTTP METHOD : GET
2019-05-06 19:07:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:07:58 -参数 : [userType]
2019-05-06 19:07:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:07:58 -==> Parameters: userType(String)
2019-05-06 19:07:58 -<==      Total: 4
2019-05-06 19:07:58 -耗时 : 229
2019-05-06 19:07:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:07:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:07:59 -HTTP METHOD : GET
2019-05-06 19:07:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:07:59 -参数 : [userType]
2019-05-06 19:07:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:07:59 -==> Parameters: userType(String)
2019-05-06 19:07:59 -<==      Total: 4
2019-05-06 19:07:59 -耗时 : 52
2019-05-06 19:07:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:07:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 19:07:59 -HTTP METHOD : GET
2019-05-06 19:07:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 19:07:59 -参数 : []
2019-05-06 19:07:59 -耗时 : 16
2019-05-06 19:07:59 -返回值 : charts/tableElecMM
2019-05-06 19:08:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:00 -HTTP METHOD : GET
2019-05-06 19:08:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:00 -参数 : [userType]
2019-05-06 19:08:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:00 -==> Parameters: userType(String)
2019-05-06 19:08:00 -<==      Total: 4
2019-05-06 19:08:00 -耗时 : 7
2019-05-06 19:08:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:00 -请求地址 : http://localhost:8081/charts/countMM
2019-05-06 19:08:00 -HTTP METHOD : GET
2019-05-06 19:08:00 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-06 19:08:00 -参数 : []
2019-05-06 19:08:00 -耗时 : 12
2019-05-06 19:08:00 -返回值 : charts/countMM
2019-05-06 19:08:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:00 -HTTP METHOD : GET
2019-05-06 19:08:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:00 -参数 : [userType]
2019-05-06 19:08:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:00 -==> Parameters: userType(String)
2019-05-06 19:08:00 -<==      Total: 4
2019-05-06 19:08:00 -耗时 : 11
2019-05-06 19:08:00 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 19:08:08 -HTTP METHOD : GET
2019-05-06 19:08:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 19:08:08 -参数 : []
2019-05-06 19:08:08 -耗时 : 1
2019-05-06 19:08:08 -返回值 : system/dept/deptTree
2019-05-06 19:08:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 19:08:08 -HTTP METHOD : GET
2019-05-06 19:08:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 19:08:08 -参数 : []
2019-05-06 19:08:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 19:08:08 -==> Parameters: 
2019-05-06 19:08:08 -<==      Total: 3
2019-05-06 19:08:08 -耗时 : 20
2019-05-06 19:08:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 19:08:18 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 19:08:18 -HTTP METHOD : GET
2019-05-06 19:08:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 19:08:18 -参数 : []
2019-05-06 19:08:18 -耗时 : 13
2019-05-06 19:08:18 -返回值 : charts/tableWaterMM
2019-05-06 19:08:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:18 -HTTP METHOD : GET
2019-05-06 19:08:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:18 -参数 : [userType]
2019-05-06 19:08:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:18 -==> Parameters: userType(String)
2019-05-06 19:08:18 -<==      Total: 4
2019-05-06 19:08:18 -耗时 : 6
2019-05-06 19:08:18 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:21 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:21 -HTTP METHOD : GET
2019-05-06 19:08:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:21 -参数 : []
2019-05-06 19:08:21 -耗时 : 10
2019-05-06 19:08:21 -返回值 : charts/tableHeatMM
2019-05-06 19:08:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:21 -HTTP METHOD : GET
2019-05-06 19:08:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:21 -参数 : [userType]
2019-05-06 19:08:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:21 -==> Parameters: userType(String)
2019-05-06 19:08:21 -<==      Total: 4
2019-05-06 19:08:21 -耗时 : 8
2019-05-06 19:08:21 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 19:08:22 -HTTP METHOD : GET
2019-05-06 19:08:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 19:08:22 -参数 : []
2019-05-06 19:08:22 -耗时 : 1
2019-05-06 19:08:22 -返回值 : charts/tableElecMM
2019-05-06 19:08:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:22 -HTTP METHOD : GET
2019-05-06 19:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:22 -参数 : [userType]
2019-05-06 19:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:22 -==> Parameters: userType(String)
2019-05-06 19:08:22 -<==      Total: 4
2019-05-06 19:08:22 -耗时 : 6
2019-05-06 19:08:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:24 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:24 -HTTP METHOD : GET
2019-05-06 19:08:24 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:24 -参数 : []
2019-05-06 19:08:24 -耗时 : 0
2019-05-06 19:08:24 -返回值 : charts/tableHeatMM
2019-05-06 19:08:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:24 -HTTP METHOD : GET
2019-05-06 19:08:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:24 -参数 : [userType]
2019-05-06 19:08:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:24 -==> Parameters: userType(String)
2019-05-06 19:08:24 -<==      Total: 4
2019-05-06 19:08:24 -耗时 : 18
2019-05-06 19:08:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:24 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 19:08:24 -HTTP METHOD : GET
2019-05-06 19:08:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 19:08:24 -参数 : []
2019-05-06 19:08:24 -耗时 : 0
2019-05-06 19:08:24 -返回值 : charts/tableWaterMM
2019-05-06 19:08:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:24 -HTTP METHOD : GET
2019-05-06 19:08:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:24 -参数 : [userType]
2019-05-06 19:08:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:24 -==> Parameters: userType(String)
2019-05-06 19:08:24 -<==      Total: 4
2019-05-06 19:08:24 -耗时 : 5
2019-05-06 19:08:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:25 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:25 -HTTP METHOD : GET
2019-05-06 19:08:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:25 -参数 : []
2019-05-06 19:08:25 -耗时 : 0
2019-05-06 19:08:25 -返回值 : charts/tableHeatMM
2019-05-06 19:08:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:25 -HTTP METHOD : GET
2019-05-06 19:08:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:25 -参数 : [userType]
2019-05-06 19:08:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:25 -==> Parameters: userType(String)
2019-05-06 19:08:25 -<==      Total: 4
2019-05-06 19:08:25 -耗时 : 5
2019-05-06 19:08:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:26 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 19:08:26 -HTTP METHOD : GET
2019-05-06 19:08:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 19:08:26 -参数 : []
2019-05-06 19:08:26 -耗时 : 0
2019-05-06 19:08:26 -返回值 : charts/tableElecMM
2019-05-06 19:08:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:26 -HTTP METHOD : GET
2019-05-06 19:08:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:26 -参数 : [userType]
2019-05-06 19:08:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:26 -==> Parameters: userType(String)
2019-05-06 19:08:26 -<==      Total: 4
2019-05-06 19:08:26 -耗时 : 5
2019-05-06 19:08:26 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:26 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:26 -HTTP METHOD : GET
2019-05-06 19:08:26 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:26 -参数 : []
2019-05-06 19:08:26 -耗时 : 0
2019-05-06 19:08:26 -返回值 : charts/tableHeatMM
2019-05-06 19:08:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:27 -HTTP METHOD : GET
2019-05-06 19:08:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:27 -参数 : [userType]
2019-05-06 19:08:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:27 -==> Parameters: userType(String)
2019-05-06 19:08:27 -<==      Total: 4
2019-05-06 19:08:27 -耗时 : 5
2019-05-06 19:08:27 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:27 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 19:08:27 -HTTP METHOD : GET
2019-05-06 19:08:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 19:08:27 -参数 : []
2019-05-06 19:08:27 -耗时 : 1
2019-05-06 19:08:27 -返回值 : charts/tableWaterMM
2019-05-06 19:08:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:27 -HTTP METHOD : GET
2019-05-06 19:08:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:27 -参数 : [userType]
2019-05-06 19:08:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:27 -==> Parameters: userType(String)
2019-05-06 19:08:27 -<==      Total: 4
2019-05-06 19:08:27 -耗时 : 4
2019-05-06 19:08:27 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:28 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:28 -HTTP METHOD : GET
2019-05-06 19:08:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:28 -参数 : []
2019-05-06 19:08:28 -耗时 : 2
2019-05-06 19:08:28 -返回值 : charts/tableHeatMM
2019-05-06 19:08:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:28 -HTTP METHOD : GET
2019-05-06 19:08:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:28 -参数 : [userType]
2019-05-06 19:08:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:28 -==> Parameters: userType(String)
2019-05-06 19:08:28 -<==      Total: 4
2019-05-06 19:08:28 -耗时 : 5
2019-05-06 19:08:28 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 19:08:28 -HTTP METHOD : GET
2019-05-06 19:08:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 19:08:28 -参数 : []
2019-05-06 19:08:28 -耗时 : 0
2019-05-06 19:08:28 -返回值 : charts/tableElecMM
2019-05-06 19:08:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:28 -HTTP METHOD : GET
2019-05-06 19:08:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:28 -参数 : [userType]
2019-05-06 19:08:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:28 -==> Parameters: userType(String)
2019-05-06 19:08:28 -<==      Total: 4
2019-05-06 19:08:28 -耗时 : 6
2019-05-06 19:08:28 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 19:08:29 -HTTP METHOD : GET
2019-05-06 19:08:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 19:08:29 -参数 : []
2019-05-06 19:08:29 -耗时 : 1
2019-05-06 19:08:29 -返回值 : charts/tableWaterMM
2019-05-06 19:08:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:29 -HTTP METHOD : GET
2019-05-06 19:08:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:29 -参数 : [userType]
2019-05-06 19:08:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:29 -==> Parameters: userType(String)
2019-05-06 19:08:29 -<==      Total: 4
2019-05-06 19:08:29 -耗时 : 5
2019-05-06 19:08:29 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:52 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-06 19:08:52 -HTTP METHOD : GET
2019-05-06 19:08:52 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-06 19:08:52 -参数 : []
2019-05-06 19:08:52 -耗时 : 0
2019-05-06 19:08:52 -返回值 : charts/tableHeatMM
2019-05-06 19:08:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:53 -HTTP METHOD : GET
2019-05-06 19:08:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:53 -参数 : [userType]
2019-05-06 19:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:53 -==> Parameters: userType(String)
2019-05-06 19:08:53 -<==      Total: 4
2019-05-06 19:08:53 -耗时 : 4
2019-05-06 19:08:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:08:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 19:08:53 -HTTP METHOD : GET
2019-05-06 19:08:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 19:08:53 -参数 : []
2019-05-06 19:08:53 -耗时 : 1
2019-05-06 19:08:53 -返回值 : charts/tableElecMM
2019-05-06 19:08:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:08:53 -HTTP METHOD : GET
2019-05-06 19:08:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:08:53 -参数 : [userType]
2019-05-06 19:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:08:53 -==> Parameters: userType(String)
2019-05-06 19:08:53 -<==      Total: 4
2019-05-06 19:08:53 -耗时 : 5
2019-05-06 19:08:53 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:01 -请求地址 : http://localhost:8081/index
2019-05-06 19:09:01 -HTTP METHOD : GET
2019-05-06 19:09:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 19:09:01 -参数 : [{}]
2019-05-06 19:09:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 19:09:02 -==> Parameters: 1(Long)
2019-05-06 19:09:02 -<==      Total: 49
2019-05-06 19:09:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 19:09:02 -==> Parameters: 138(Long)
2019-05-06 19:09:02 -<==      Total: 1
2019-05-06 19:09:02 -耗时 : 42
2019-05-06 19:09:02 -返回值 : index_v1
2019-05-06 19:09:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 19:09:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 19:09:02.042(Timestamp)
2019-05-06 19:09:02 -<==    Updates: 1
2019-05-06 19:09:02 -请求地址 : http://localhost:8081/main
2019-05-06 19:09:02 -HTTP METHOD : GET
2019-05-06 19:09:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:09:02 -参数 : []
2019-05-06 19:09:02 -耗时 : 0
2019-05-06 19:09:02 -返回值 : main
2019-05-06 19:09:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 19:09:02 -HTTP METHOD : GET
2019-05-06 19:09:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 19:09:02 -参数 : []
2019-05-06 19:09:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 19:09:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 19:09:02 -<==      Total: 0
2019-05-06 19:09:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 19:09:02 -==> Parameters: 1(Long), 0(String)
2019-05-06 19:09:02 -<==      Total: 1
2019-05-06 19:09:02 -耗时 : 8
2019-05-06 19:09:02 -返回值 : com.bootdo.common.utils.PageUtils@a66f686
2019-05-06 19:09:02 -请求地址 : http://localhost:8081/main
2019-05-06 19:09:02 -HTTP METHOD : GET
2019-05-06 19:09:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:09:02 -参数 : []
2019-05-06 19:09:02 -耗时 : 0
2019-05-06 19:09:02 -返回值 : main
2019-05-06 19:09:07 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 19:09:07 -HTTP METHOD : GET
2019-05-06 19:09:07 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 19:09:07 -参数 : []
2019-05-06 19:09:07 -耗时 : 1
2019-05-06 19:09:07 -返回值 : charts/countYY
2019-05-06 19:09:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:07 -HTTP METHOD : GET
2019-05-06 19:09:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:07 -参数 : [userType]
2019-05-06 19:09:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:07 -==> Parameters: userType(String)
2019-05-06 19:09:07 -<==      Total: 4
2019-05-06 19:09:07 -耗时 : 6
2019-05-06 19:09:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:09 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-06 19:09:09 -HTTP METHOD : GET
2019-05-06 19:09:09 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-06 19:09:09 -参数 : []
2019-05-06 19:09:09 -耗时 : 0
2019-05-06 19:09:09 -返回值 : charts/countOwe
2019-05-06 19:09:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:09 -HTTP METHOD : GET
2019-05-06 19:09:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:09 -参数 : [userType]
2019-05-06 19:09:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:09 -==> Parameters: userType(String)
2019-05-06 19:09:09 -<==      Total: 4
2019-05-06 19:09:09 -耗时 : 4
2019-05-06 19:09:09 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:11 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:09:11 -HTTP METHOD : GET
2019-05-06 19:09:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:09:11 -参数 : []
2019-05-06 19:09:11 -耗时 : 1
2019-05-06 19:09:11 -返回值 : charts/tableElecYY
2019-05-06 19:09:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:11 -HTTP METHOD : GET
2019-05-06 19:09:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:11 -参数 : [userType]
2019-05-06 19:09:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:11 -==> Parameters: userType(String)
2019-05-06 19:09:11 -<==      Total: 4
2019-05-06 19:09:11 -耗时 : 5
2019-05-06 19:09:11 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:12 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:09:12 -HTTP METHOD : GET
2019-05-06 19:09:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:09:12 -参数 : []
2019-05-06 19:09:12 -耗时 : 16
2019-05-06 19:09:12 -返回值 : charts/tableWaterYY
2019-05-06 19:09:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:12 -HTTP METHOD : GET
2019-05-06 19:09:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:12 -参数 : [userType]
2019-05-06 19:09:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:12 -==> Parameters: userType(String)
2019-05-06 19:09:12 -<==      Total: 4
2019-05-06 19:09:12 -耗时 : 4
2019-05-06 19:09:12 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:15 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:15 -HTTP METHOD : GET
2019-05-06 19:09:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:15 -参数 : []
2019-05-06 19:09:15 -耗时 : 10
2019-05-06 19:09:15 -返回值 : charts/tableHeatYY
2019-05-06 19:09:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:15 -HTTP METHOD : GET
2019-05-06 19:09:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:15 -参数 : [userType]
2019-05-06 19:09:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:15 -==> Parameters: userType(String)
2019-05-06 19:09:15 -<==      Total: 4
2019-05-06 19:09:15 -耗时 : 5
2019-05-06 19:09:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:17 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:09:17 -HTTP METHOD : GET
2019-05-06 19:09:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:09:17 -参数 : []
2019-05-06 19:09:17 -耗时 : 0
2019-05-06 19:09:17 -返回值 : charts/tableWaterYY
2019-05-06 19:09:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:17 -HTTP METHOD : GET
2019-05-06 19:09:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:17 -参数 : [userType]
2019-05-06 19:09:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:17 -==> Parameters: userType(String)
2019-05-06 19:09:17 -<==      Total: 4
2019-05-06 19:09:17 -耗时 : 5
2019-05-06 19:09:17 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:18 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:18 -HTTP METHOD : GET
2019-05-06 19:09:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:18 -参数 : []
2019-05-06 19:09:18 -耗时 : 1
2019-05-06 19:09:18 -返回值 : charts/tableHeatYY
2019-05-06 19:09:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:18 -HTTP METHOD : GET
2019-05-06 19:09:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:18 -参数 : [userType]
2019-05-06 19:09:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:18 -==> Parameters: userType(String)
2019-05-06 19:09:18 -<==      Total: 4
2019-05-06 19:09:18 -耗时 : 5
2019-05-06 19:09:18 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:20 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:09:20 -HTTP METHOD : GET
2019-05-06 19:09:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:09:20 -参数 : []
2019-05-06 19:09:20 -耗时 : 0
2019-05-06 19:09:20 -返回值 : charts/tableElecYY
2019-05-06 19:09:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:21 -HTTP METHOD : GET
2019-05-06 19:09:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:21 -参数 : [userType]
2019-05-06 19:09:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:21 -==> Parameters: userType(String)
2019-05-06 19:09:21 -<==      Total: 4
2019-05-06 19:09:21 -耗时 : 5
2019-05-06 19:09:21 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:22 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:22 -HTTP METHOD : GET
2019-05-06 19:09:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:22 -参数 : []
2019-05-06 19:09:22 -耗时 : 1
2019-05-06 19:09:22 -返回值 : charts/tableHeatYY
2019-05-06 19:09:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:22 -HTTP METHOD : GET
2019-05-06 19:09:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:22 -参数 : [userType]
2019-05-06 19:09:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:22 -==> Parameters: userType(String)
2019-05-06 19:09:22 -<==      Total: 4
2019-05-06 19:09:22 -耗时 : 5
2019-05-06 19:09:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:22 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:09:22 -HTTP METHOD : GET
2019-05-06 19:09:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:09:22 -参数 : []
2019-05-06 19:09:22 -耗时 : 0
2019-05-06 19:09:22 -返回值 : charts/tableWaterYY
2019-05-06 19:09:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:23 -HTTP METHOD : GET
2019-05-06 19:09:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:23 -参数 : [userType]
2019-05-06 19:09:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:23 -==> Parameters: userType(String)
2019-05-06 19:09:23 -<==      Total: 4
2019-05-06 19:09:23 -耗时 : 6
2019-05-06 19:09:23 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:23 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:23 -HTTP METHOD : GET
2019-05-06 19:09:23 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:23 -参数 : []
2019-05-06 19:09:23 -耗时 : 1
2019-05-06 19:09:23 -返回值 : charts/tableHeatYY
2019-05-06 19:09:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:23 -HTTP METHOD : GET
2019-05-06 19:09:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:23 -参数 : [userType]
2019-05-06 19:09:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:23 -==> Parameters: userType(String)
2019-05-06 19:09:23 -<==      Total: 4
2019-05-06 19:09:23 -耗时 : 4
2019-05-06 19:09:23 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:09:23 -HTTP METHOD : GET
2019-05-06 19:09:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:09:23 -参数 : []
2019-05-06 19:09:23 -耗时 : 0
2019-05-06 19:09:23 -返回值 : charts/tableElecYY
2019-05-06 19:09:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:24 -HTTP METHOD : GET
2019-05-06 19:09:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:24 -参数 : [userType]
2019-05-06 19:09:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:24 -==> Parameters: userType(String)
2019-05-06 19:09:24 -<==      Total: 4
2019-05-06 19:09:24 -耗时 : 4
2019-05-06 19:09:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:24 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:24 -HTTP METHOD : GET
2019-05-06 19:09:24 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:24 -参数 : []
2019-05-06 19:09:24 -耗时 : 0
2019-05-06 19:09:24 -返回值 : charts/tableHeatYY
2019-05-06 19:09:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:24 -HTTP METHOD : GET
2019-05-06 19:09:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:24 -参数 : [userType]
2019-05-06 19:09:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:24 -==> Parameters: userType(String)
2019-05-06 19:09:24 -<==      Total: 4
2019-05-06 19:09:24 -耗时 : 4
2019-05-06 19:09:24 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:25 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:09:25 -HTTP METHOD : GET
2019-05-06 19:09:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:09:25 -参数 : []
2019-05-06 19:09:25 -耗时 : 1
2019-05-06 19:09:25 -返回值 : charts/tableWaterYY
2019-05-06 19:09:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:25 -HTTP METHOD : GET
2019-05-06 19:09:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:25 -参数 : [userType]
2019-05-06 19:09:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:25 -==> Parameters: userType(String)
2019-05-06 19:09:25 -<==      Total: 4
2019-05-06 19:09:25 -耗时 : 5
2019-05-06 19:09:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:27 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:27 -HTTP METHOD : GET
2019-05-06 19:09:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:27 -参数 : []
2019-05-06 19:09:27 -耗时 : 1
2019-05-06 19:09:27 -返回值 : charts/tableHeatYY
2019-05-06 19:09:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:28 -HTTP METHOD : GET
2019-05-06 19:09:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:28 -参数 : [userType]
2019-05-06 19:09:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:28 -==> Parameters: userType(String)
2019-05-06 19:09:28 -<==      Total: 4
2019-05-06 19:09:28 -耗时 : 5
2019-05-06 19:09:28 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:09:29 -HTTP METHOD : GET
2019-05-06 19:09:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:09:29 -参数 : []
2019-05-06 19:09:29 -耗时 : 1
2019-05-06 19:09:29 -返回值 : charts/tableElecYY
2019-05-06 19:09:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:29 -HTTP METHOD : GET
2019-05-06 19:09:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:29 -参数 : [userType]
2019-05-06 19:09:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:29 -==> Parameters: userType(String)
2019-05-06 19:09:29 -<==      Total: 4
2019-05-06 19:09:29 -耗时 : 5
2019-05-06 19:09:29 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:09:30 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:09:30 -HTTP METHOD : GET
2019-05-06 19:09:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:09:30 -参数 : []
2019-05-06 19:09:30 -耗时 : 1
2019-05-06 19:09:30 -返回值 : charts/tableHeatYY
2019-05-06 19:09:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:09:30 -HTTP METHOD : GET
2019-05-06 19:09:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:09:30 -参数 : [userType]
2019-05-06 19:09:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:09:30 -==> Parameters: userType(String)
2019-05-06 19:09:30 -<==      Total: 4
2019-05-06 19:09:30 -耗时 : 7
2019-05-06 19:09:30 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:17:54 -请求地址 : http://localhost:8081/index
2019-05-06 19:17:54 -HTTP METHOD : GET
2019-05-06 19:17:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 19:17:54 -参数 : [{}]
2019-05-06 19:17:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 19:17:54 -==> Parameters: 1(Long)
2019-05-06 19:17:54 -<==      Total: 49
2019-05-06 19:17:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 19:17:55 -==> Parameters: 138(Long)
2019-05-06 19:17:55 -<==      Total: 1
2019-05-06 19:17:55 -耗时 : 79
2019-05-06 19:17:55 -返回值 : index_v1
2019-05-06 19:17:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 19:17:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 79(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 19:17:55.006(Timestamp)
2019-05-06 19:17:55 -<==    Updates: 1
2019-05-06 19:17:55 -请求地址 : http://localhost:8081/main
2019-05-06 19:17:55 -HTTP METHOD : GET
2019-05-06 19:17:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:17:55 -参数 : []
2019-05-06 19:17:55 -耗时 : 0
2019-05-06 19:17:55 -返回值 : main
2019-05-06 19:17:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 19:17:55 -HTTP METHOD : GET
2019-05-06 19:17:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 19:17:55 -参数 : []
2019-05-06 19:17:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 19:17:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 19:17:55 -<==      Total: 0
2019-05-06 19:17:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 19:17:55 -==> Parameters: 1(Long), 0(String)
2019-05-06 19:17:55 -<==      Total: 1
2019-05-06 19:17:55 -耗时 : 40
2019-05-06 19:17:55 -返回值 : com.bootdo.common.utils.PageUtils@7a1a2711
2019-05-06 19:17:55 -请求地址 : http://localhost:8081/main
2019-05-06 19:17:55 -HTTP METHOD : GET
2019-05-06 19:17:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 19:17:55 -参数 : []
2019-05-06 19:17:55 -耗时 : 0
2019-05-06 19:17:55 -返回值 : main
2019-05-06 19:17:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 19:17:58 -==> Parameters: 1(Long)
2019-05-06 19:17:58 -<==      Total: 93
2019-05-06 19:17:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:17:58 -HTTP METHOD : GET
2019-05-06 19:17:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:17:58 -参数 : []
2019-05-06 19:17:58 -耗时 : 0
2019-05-06 19:17:58 -返回值 : charts/tableElecYY
2019-05-06 19:17:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:17:58 -HTTP METHOD : GET
2019-05-06 19:17:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:17:58 -参数 : [userType]
2019-05-06 19:17:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:17:58 -==> Parameters: userType(String)
2019-05-06 19:17:58 -<==      Total: 4
2019-05-06 19:17:58 -耗时 : 3
2019-05-06 19:17:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:18:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:18:07 -HTTP METHOD : GET
2019-05-06 19:18:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:18:07 -参数 : []
2019-05-06 19:18:07 -耗时 : 2
2019-05-06 19:18:07 -返回值 : charts/tableWaterYY
2019-05-06 19:18:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:18:07 -HTTP METHOD : GET
2019-05-06 19:18:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:18:07 -参数 : [userType]
2019-05-06 19:18:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:18:07 -==> Parameters: userType(String)
2019-05-06 19:18:07 -<==      Total: 4
2019-05-06 19:18:07 -耗时 : 4
2019-05-06 19:18:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:18:09 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 19:18:09 -HTTP METHOD : GET
2019-05-06 19:18:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 19:18:09 -参数 : []
2019-05-06 19:18:09 -耗时 : 1
2019-05-06 19:18:09 -返回值 : charts/tableHeatYY
2019-05-06 19:18:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:18:09 -HTTP METHOD : GET
2019-05-06 19:18:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:18:09 -参数 : [userType]
2019-05-06 19:18:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:18:09 -==> Parameters: userType(String)
2019-05-06 19:18:09 -<==      Total: 4
2019-05-06 19:18:09 -耗时 : 4
2019-05-06 19:18:09 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:18:13 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 19:18:13 -HTTP METHOD : GET
2019-05-06 19:18:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 19:18:13 -参数 : []
2019-05-06 19:18:13 -耗时 : 1
2019-05-06 19:18:13 -返回值 : charts/tableElecYY
2019-05-06 19:18:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:18:13 -HTTP METHOD : GET
2019-05-06 19:18:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:18:13 -参数 : [userType]
2019-05-06 19:18:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:18:13 -==> Parameters: userType(String)
2019-05-06 19:18:13 -<==      Total: 4
2019-05-06 19:18:13 -耗时 : 5
2019-05-06 19:18:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:18:50 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 19:18:50 -HTTP METHOD : GET
2019-05-06 19:18:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 19:18:50 -参数 : []
2019-05-06 19:18:50 -耗时 : 0
2019-05-06 19:18:50 -返回值 : charts/tableWaterYY
2019-05-06 19:18:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 19:18:50 -HTTP METHOD : GET
2019-05-06 19:18:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 19:18:50 -参数 : [userType]
2019-05-06 19:18:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 19:18:50 -==> Parameters: userType(String)
2019-05-06 19:18:50 -<==      Total: 4
2019-05-06 19:18:50 -耗时 : 6
2019-05-06 19:18:50 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 19:36:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 422]
2019-05-06 20:06:33 -Validating all active sessions...
2019-05-06 20:06:33 -Finished session validation.  [1] sessions were stopped.
2019-05-06 20:06:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 855]
2019-05-06 20:36:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1288]
2019-05-06 20:42:24 -请求地址 : http://localhost:8081/login;JSESSIONID=ebd24750-1387-49c2-aabb-e9e53878b8e9
2019-05-06 20:42:24 -HTTP METHOD : GET
2019-05-06 20:42:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 20:42:24 -参数 : [{}]
2019-05-06 20:42:24 -耗时 : 1
2019-05-06 20:42:24 -返回值 : login
2019-05-06 20:42:24 -请求地址 : http://localhost:8081/getVerify
2019-05-06 20:42:24 -HTTP METHOD : GET
2019-05-06 20:42:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 20:42:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fe0ef7b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6b792161]
2019-05-06 20:42:25 -0729
2019-05-06 20:42:25 -耗时 : 397
2019-05-06 20:42:25 -返回值 : null
2019-05-06 20:42:25 -请求地址 : http://localhost:8081/login
2019-05-06 20:42:25 -HTTP METHOD : GET
2019-05-06 20:42:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 20:42:25 -参数 : [{}]
2019-05-06 20:42:25 -耗时 : 0
2019-05-06 20:42:25 -返回值 : login
2019-05-06 20:42:31 -请求地址 : http://localhost:8081/login
2019-05-06 20:42:31 -HTTP METHOD : POST
2019-05-06 20:42:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 20:42:31 -参数 : [admin, 111111, 0729, org.apache.shiro.web.servlet.ShiroHttpServletRequest@bda99b]
2019-05-06 20:42:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 20:42:31 -==> Parameters: admin(String)
2019-05-06 20:42:31 -<==      Total: 1
2019-05-06 20:42:31 -耗时 : 62
2019-05-06 20:42:31 -返回值 : {msg=操作成功, code=0}
2019-05-06 20:42:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:42:31 -==> Parameters: 1(Long), admin(String), 登录(String), 62(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 20:42:31.193(Timestamp)
2019-05-06 20:42:31 -<==    Updates: 1
2019-05-06 20:42:31 -请求地址 : http://localhost:8081/index
2019-05-06 20:42:31 -HTTP METHOD : GET
2019-05-06 20:42:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 20:42:31 -参数 : [{}]
2019-05-06 20:42:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 20:42:31 -==> Parameters: 1(Long)
2019-05-06 20:42:31 -<==      Total: 49
2019-05-06 20:42:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 20:42:31 -==> Parameters: 138(Long)
2019-05-06 20:42:31 -<==      Total: 1
2019-05-06 20:42:31 -耗时 : 216
2019-05-06 20:42:31 -返回值 : index_v1
2019-05-06 20:42:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:42:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 216(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 20:42:31.462(Timestamp)
2019-05-06 20:42:31 -<==    Updates: 1
2019-05-06 20:42:31 -请求地址 : http://localhost:8081/main
2019-05-06 20:42:31 -HTTP METHOD : GET
2019-05-06 20:42:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:42:31 -参数 : []
2019-05-06 20:42:31 -耗时 : 0
2019-05-06 20:42:31 -返回值 : main
2019-05-06 20:42:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 20:42:31 -HTTP METHOD : GET
2019-05-06 20:42:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 20:42:31 -参数 : []
2019-05-06 20:42:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 20:42:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 20:42:31 -请求地址 : http://localhost:8081/main
2019-05-06 20:42:31 -HTTP METHOD : GET
2019-05-06 20:42:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:42:31 -参数 : []
2019-05-06 20:42:31 -耗时 : 2
2019-05-06 20:42:31 -返回值 : main
2019-05-06 20:42:31 -<==      Total: 0
2019-05-06 20:42:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 20:42:31 -==> Parameters: 1(Long), 0(String)
2019-05-06 20:42:31 -<==      Total: 1
2019-05-06 20:42:31 -耗时 : 145
2019-05-06 20:42:31 -返回值 : com.bootdo.common.utils.PageUtils@71c1c56b
2019-05-06 20:42:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 20:42:39 -==> Parameters: 1(Long)
2019-05-06 20:42:39 -<==      Total: 93
2019-05-06 20:42:39 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 20:42:39 -HTTP METHOD : GET
2019-05-06 20:42:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 20:42:39 -参数 : []
2019-05-06 20:42:39 -耗时 : 0
2019-05-06 20:42:39 -返回值 : charts/tableElecYY
2019-05-06 20:42:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:42:39 -HTTP METHOD : GET
2019-05-06 20:42:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:42:39 -参数 : [userType]
2019-05-06 20:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:42:39 -==> Parameters: userType(String)
2019-05-06 20:42:39 -<==      Total: 4
2019-05-06 20:42:39 -耗时 : 7
2019-05-06 20:42:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:42:40 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 20:42:40 -HTTP METHOD : GET
2019-05-06 20:42:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:42:40 -参数 : []
2019-05-06 20:42:40 -耗时 : 0
2019-05-06 20:42:40 -返回值 : charts/tableWaterYY
2019-05-06 20:42:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:42:40 -HTTP METHOD : GET
2019-05-06 20:42:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:42:40 -参数 : [userType]
2019-05-06 20:42:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:42:40 -==> Parameters: userType(String)
2019-05-06 20:42:40 -<==      Total: 4
2019-05-06 20:42:40 -耗时 : 6
2019-05-06 20:42:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:42:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 20:42:46 -HTTP METHOD : GET
2019-05-06 20:42:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 20:42:46 -参数 : []
2019-05-06 20:42:46 -耗时 : 0
2019-05-06 20:42:46 -返回值 : system/dept/deptTree
2019-05-06 20:42:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 20:42:46 -HTTP METHOD : GET
2019-05-06 20:42:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 20:42:46 -参数 : []
2019-05-06 20:42:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 20:42:46 -==> Parameters: 
2019-05-06 20:42:46 -<==      Total: 3
2019-05-06 20:42:46 -耗时 : 37
2019-05-06 20:42:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 20:42:49 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:42:49 -HTTP METHOD : POST
2019-05-06 20:42:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:42:49 -参数 : [com.bootdo.water.vo.WaterVo@2e61fcdb, com.bootdo.moneyLog.vo.WaterLogVo@41c514a0]
2019-05-06 20:42:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 20:42:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:42:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 20:42:49.599(Timestamp)
2019-05-06 20:42:49 -<==    Updates: 1
2019-05-06 20:42:49 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 20:42:49 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:42:49 -HTTP METHOD : POST
2019-05-06 20:42:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:42:49 -参数 : [com.bootdo.water.vo.WaterVo@7d77248c, com.bootdo.moneyLog.vo.WaterLogVo@3618cc97]
2019-05-06 20:42:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-06 20:42:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:42:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-06 20:42:50.026(Timestamp)
2019-05-06 20:42:50 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 20:42:50 -<==    Updates: 1
2019-05-06 20:43:04 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:43:04 -HTTP METHOD : POST
2019-05-06 20:43:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:43:04 -参数 : [com.bootdo.water.vo.WaterVo@15a6402d, com.bootdo.moneyLog.vo.WaterLogVo@789f12a5]
2019-05-06 20:43:04 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? 
2019-05-06 20:43:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:43:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).(String), null, 2019-05-06 20:43:04.31(Timestamp)
2019-05-06 20:43:04 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 20:43:04 -<==    Updates: 1
2019-05-06 20:43:11 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:43:11 -HTTP METHOD : POST
2019-05-06 20:43:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:43:11 -参数 : [com.bootdo.water.vo.WaterVo@5c166c29, com.bootdo.moneyLog.vo.WaterLogVo@4ec70950]
2019-05-06 20:43:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? 
2019-05-06 20:43:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:43:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).(String), null, 2019-05-06 20:43:11.069(Timestamp)
2019-05-06 20:43:11 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #3 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 20:43:11 -<==    Updates: 1
2019-05-06 20:43:20 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:43:20 -HTTP METHOD : POST
2019-05-06 20:43:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:43:20 -参数 : [com.bootdo.water.vo.WaterVo@1fe98d05, com.bootdo.moneyLog.vo.WaterLogVo@37f15f48]
2019-05-06 20:43:20 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? and user_id = ? 
2019-05-06 20:43:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:43:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).(String), null, 2019-05-06 20:43:20.956(Timestamp)
2019-05-06 20:43:20 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 115 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 116 common frames omitted
2019-05-06 20:43:21 -<==    Updates: 1
2019-05-06 20:45:27 -请求地址 : http://localhost:8081/index
2019-05-06 20:45:27 -HTTP METHOD : GET
2019-05-06 20:45:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 20:45:27 -参数 : [{}]
2019-05-06 20:45:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 20:45:27 -==> Parameters: 1(Long)
2019-05-06 20:45:27 -<==      Total: 49
2019-05-06 20:45:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 20:45:27 -==> Parameters: 138(Long)
2019-05-06 20:45:27 -<==      Total: 1
2019-05-06 20:45:27 -耗时 : 88
2019-05-06 20:45:27 -返回值 : index_v1
2019-05-06 20:45:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:45:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 20:45:27.785(Timestamp)
2019-05-06 20:45:27 -请求地址 : http://localhost:8081/main
2019-05-06 20:45:27 -HTTP METHOD : GET
2019-05-06 20:45:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:45:27 -参数 : []
2019-05-06 20:45:27 -耗时 : 1
2019-05-06 20:45:27 -返回值 : main
2019-05-06 20:45:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 20:45:28 -HTTP METHOD : GET
2019-05-06 20:45:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 20:45:28 -参数 : []
2019-05-06 20:45:28 -请求地址 : http://localhost:8081/main
2019-05-06 20:45:28 -HTTP METHOD : GET
2019-05-06 20:45:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:45:28 -参数 : []
2019-05-06 20:45:28 -耗时 : 71
2019-05-06 20:45:28 -返回值 : main
2019-05-06 20:45:28 -<==    Updates: 1
2019-05-06 20:45:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 20:45:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 20:45:28 -<==      Total: 0
2019-05-06 20:45:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 20:45:28 -==> Parameters: 1(Long), 0(String)
2019-05-06 20:45:28 -<==      Total: 1
2019-05-06 20:45:28 -耗时 : 345
2019-05-06 20:45:28 -返回值 : com.bootdo.common.utils.PageUtils@56ee641
2019-05-06 20:45:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 20:45:32 -HTTP METHOD : GET
2019-05-06 20:45:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 20:45:32 -参数 : []
2019-05-06 20:45:32 -耗时 : 1
2019-05-06 20:45:32 -返回值 : charts/tableElecMM
2019-05-06 20:45:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:45:33 -HTTP METHOD : GET
2019-05-06 20:45:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:45:33 -参数 : [userType]
2019-05-06 20:45:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:45:33 -==> Parameters: userType(String)
2019-05-06 20:45:33 -<==      Total: 4
2019-05-06 20:45:33 -耗时 : 123
2019-05-06 20:45:33 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:45:36 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-06 20:45:36 -HTTP METHOD : GET
2019-05-06 20:45:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-06 20:45:36 -参数 : []
2019-05-06 20:45:36 -耗时 : 1
2019-05-06 20:45:36 -返回值 : charts/tableWaterMM
2019-05-06 20:45:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:45:36 -HTTP METHOD : GET
2019-05-06 20:45:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:45:36 -参数 : [userType]
2019-05-06 20:45:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:45:36 -==> Parameters: userType(String)
2019-05-06 20:45:36 -<==      Total: 4
2019-05-06 20:45:36 -耗时 : 6
2019-05-06 20:45:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:46:59 -请求地址 : http://localhost:8081/index
2019-05-06 20:46:59 -HTTP METHOD : GET
2019-05-06 20:46:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 20:46:59 -参数 : [{}]
2019-05-06 20:46:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 20:46:59 -==> Parameters: 1(Long)
2019-05-06 20:46:59 -<==      Total: 49
2019-05-06 20:46:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 20:46:59 -==> Parameters: 138(Long)
2019-05-06 20:46:59 -<==      Total: 1
2019-05-06 20:46:59 -耗时 : 253
2019-05-06 20:46:59 -返回值 : index_v1
2019-05-06 20:46:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:46:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 253(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 20:46:59.644(Timestamp)
2019-05-06 20:46:59 -请求地址 : http://localhost:8081/main
2019-05-06 20:46:59 -HTTP METHOD : GET
2019-05-06 20:46:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:46:59 -参数 : []
2019-05-06 20:46:59 -耗时 : 1
2019-05-06 20:46:59 -返回值 : main
2019-05-06 20:46:59 -<==    Updates: 1
2019-05-06 20:46:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 20:46:59 -HTTP METHOD : GET
2019-05-06 20:46:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 20:46:59 -参数 : []
2019-05-06 20:46:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 20:46:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 20:47:00 -请求地址 : http://localhost:8081/main
2019-05-06 20:47:00 -HTTP METHOD : GET
2019-05-06 20:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 20:47:00 -参数 : []
2019-05-06 20:47:00 -耗时 : 0
2019-05-06 20:47:00 -返回值 : main
2019-05-06 20:47:00 -<==      Total: 0
2019-05-06 20:47:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 20:47:00 -==> Parameters: 1(Long), 0(String)
2019-05-06 20:47:00 -<==      Total: 1
2019-05-06 20:47:00 -耗时 : 105
2019-05-06 20:47:00 -返回值 : com.bootdo.common.utils.PageUtils@2bfaed96
2019-05-06 20:47:04 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 20:47:04 -HTTP METHOD : GET
2019-05-06 20:47:04 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 20:47:04 -参数 : []
2019-05-06 20:47:04 -耗时 : 0
2019-05-06 20:47:04 -返回值 : charts/countYY
2019-05-06 20:47:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:47:04 -HTTP METHOD : GET
2019-05-06 20:47:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:47:04 -参数 : [userType]
2019-05-06 20:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:47:04 -==> Parameters: userType(String)
2019-05-06 20:47:04 -<==      Total: 4
2019-05-06 20:47:04 -耗时 : 5
2019-05-06 20:47:04 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:47:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 20:47:05 -HTTP METHOD : GET
2019-05-06 20:47:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 20:47:05 -参数 : []
2019-05-06 20:47:05 -耗时 : 0
2019-05-06 20:47:05 -返回值 : charts/tableElecYY
2019-05-06 20:47:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:47:05 -HTTP METHOD : GET
2019-05-06 20:47:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:47:05 -参数 : [userType]
2019-05-06 20:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:47:05 -==> Parameters: userType(String)
2019-05-06 20:47:05 -<==      Total: 4
2019-05-06 20:47:05 -耗时 : 5
2019-05-06 20:47:05 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:47:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 20:47:09 -HTTP METHOD : GET
2019-05-06 20:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 20:47:09 -参数 : []
2019-05-06 20:47:09 -耗时 : 0
2019-05-06 20:47:09 -返回值 : system/dept/deptTree
2019-05-06 20:47:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 20:47:09 -HTTP METHOD : GET
2019-05-06 20:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 20:47:09 -参数 : []
2019-05-06 20:47:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 20:47:09 -==> Parameters: 
2019-05-06 20:47:10 -<==      Total: 3
2019-05-06 20:47:10 -耗时 : 676
2019-05-06 20:47:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 20:47:16 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 20:47:16 -HTTP METHOD : GET
2019-05-06 20:47:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:47:16 -参数 : []
2019-05-06 20:47:16 -耗时 : 0
2019-05-06 20:47:16 -返回值 : charts/tableWaterYY
2019-05-06 20:47:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 20:47:17 -HTTP METHOD : GET
2019-05-06 20:47:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 20:47:17 -参数 : [userType]
2019-05-06 20:47:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 20:47:17 -==> Parameters: userType(String)
2019-05-06 20:47:17 -<==      Total: 4
2019-05-06 20:47:17 -耗时 : 4
2019-05-06 20:47:17 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 20:47:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-06 20:47:20 -HTTP METHOD : GET
2019-05-06 20:47:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-06 20:47:20 -参数 : []
2019-05-06 20:47:20 -耗时 : 1
2019-05-06 20:47:20 -返回值 : system/dept/deptTree
2019-05-06 20:47:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-06 20:47:21 -HTTP METHOD : GET
2019-05-06 20:47:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-06 20:47:21 -参数 : []
2019-05-06 20:47:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-06 20:47:21 -==> Parameters: 
2019-05-06 20:47:21 -<==      Total: 3
2019-05-06 20:47:21 -耗时 : 5
2019-05-06 20:47:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-06 20:47:26 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:47:26 -HTTP METHOD : POST
2019-05-06 20:47:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:47:26 -参数 : [com.bootdo.water.vo.WaterVo@3e119fc3, com.bootdo.moneyLog.vo.WaterLogVo@9307f11]
2019-05-06 20:47:26 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? and user_id = ? 
2019-05-06 20:47:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:47:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).(String), null, 2019-05-06 20:47:26.824(Timestamp)
2019-05-06 20:47:26 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 20:47:26 -<==    Updates: 1
2019-05-06 20:47:42 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:47:42 -HTTP METHOD : POST
2019-05-06 20:47:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:47:42 -参数 : [com.bootdo.water.vo.WaterVo@1f555342, com.bootdo.moneyLog.vo.WaterLogVo@2266eaa7]
2019-05-06 20:47:42 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? and user_id = ? 
2019-05-06 20:47:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:47:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).(String), null, 2019-05-06 20:47:42.847(Timestamp)
2019-05-06 20:47:42 -<==    Updates: 1
2019-05-06 20:47:42 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 20:47:43 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-06 20:47:43 -HTTP METHOD : POST
2019-05-06 20:47:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 20:47:43 -参数 : [com.bootdo.water.vo.WaterVo@773b8d2e, com.bootdo.moneyLog.vo.WaterLogVo@60445154]
2019-05-06 20:47:43 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = CONCAT("?","-01") and user_type = ? and user_org = ? and user_id = ? 
2019-05-06 20:47:43 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterCountPre1(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterCountPre1(WaterServiceImpl.java:179)
	at com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(tableWaterYYController.java:54)
	at com.bootdo.charts.controller.tableWaterYYController$$FastClassBySpringCGLIB$$e46653e2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterYYController$$EnhancerBySpringCGLIB$$adeee894.tableWaterYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor172.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-06 20:47:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 20:47:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterYY/tableWaterYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #4 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).(String), null, 2019-05-06 20:47:43.921(Timestamp)
2019-05-06 20:47:44 -<==    Updates: 1
2019-05-06 21:06:33 -Validating all active sessions...
2019-05-06 21:06:33 -Finished session validation.  No sessions were stopped.
2019-05-06 21:06:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1719]
2019-05-06 21:36:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2152]
2019-05-06 21:48:17 -请求地址 : http://localhost:8081/login;JSESSIONID=24a68683-b763-4f0b-afae-83b8e06ca148
2019-05-06 21:48:17 -HTTP METHOD : GET
2019-05-06 21:48:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 21:48:17 -参数 : [{}]
2019-05-06 21:48:17 -耗时 : 1
2019-05-06 21:48:17 -返回值 : login
2019-05-06 21:48:17 -请求地址 : http://localhost:8081/login;JSESSIONID=24a68683-b763-4f0b-afae-83b8e06ca148
2019-05-06 21:48:17 -HTTP METHOD : GET
2019-05-06 21:48:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-06 21:48:17 -参数 : [{}]
2019-05-06 21:48:17 -耗时 : 1
2019-05-06 21:48:17 -返回值 : login
2019-05-06 21:48:19 -请求地址 : http://localhost:8081/getVerify
2019-05-06 21:48:19 -HTTP METHOD : GET
2019-05-06 21:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-06 21:48:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6aed54bc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@60af6607]
2019-05-06 21:48:19 -2153
2019-05-06 21:48:19 -耗时 : 185
2019-05-06 21:48:19 -返回值 : null
2019-05-06 21:48:24 -请求地址 : http://localhost:8081/login
2019-05-06 21:48:24 -HTTP METHOD : POST
2019-05-06 21:48:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-06 21:48:24 -参数 : [admin, 111111, 2153, org.apache.shiro.web.servlet.ShiroHttpServletRequest@615e05c2]
2019-05-06 21:48:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-06 21:48:25 -==> Parameters: admin(String)
2019-05-06 21:48:25 -<==      Total: 1
2019-05-06 21:48:25 -耗时 : 1354
2019-05-06 21:48:25 -返回值 : {msg=操作成功, code=0}
2019-05-06 21:48:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 21:48:25 -请求地址 : http://localhost:8081/index
2019-05-06 21:48:25 -HTTP METHOD : GET
2019-05-06 21:48:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-06 21:48:25 -参数 : [{}]
2019-05-06 21:48:25 -==> Parameters: 1(Long), admin(String), 登录(String), 1354(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-06 21:48:25.595(Timestamp)
2019-05-06 21:48:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-06 21:48:25 -==> Parameters: 1(Long)
2019-05-06 21:48:25 -<==    Updates: 1
2019-05-06 21:48:26 -<==      Total: 49
2019-05-06 21:48:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-06 21:48:26 -==> Parameters: 138(Long)
2019-05-06 21:48:26 -<==      Total: 1
2019-05-06 21:48:26 -耗时 : 427
2019-05-06 21:48:26 -返回值 : index_v1
2019-05-06 21:48:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-06 21:48:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 427(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-06 21:48:26.058(Timestamp)
2019-05-06 21:48:26 -请求地址 : http://localhost:8081/main
2019-05-06 21:48:26 -HTTP METHOD : GET
2019-05-06 21:48:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 21:48:26 -参数 : []
2019-05-06 21:48:26 -耗时 : 0
2019-05-06 21:48:26 -返回值 : main
2019-05-06 21:48:26 -<==    Updates: 1
2019-05-06 21:48:27 -请求地址 : http://localhost:8081/main
2019-05-06 21:48:27 -HTTP METHOD : GET
2019-05-06 21:48:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-06 21:48:27 -参数 : []
2019-05-06 21:48:27 -耗时 : 0
2019-05-06 21:48:27 -返回值 : main
2019-05-06 21:48:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-06 21:48:27 -HTTP METHOD : GET
2019-05-06 21:48:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-06 21:48:27 -参数 : []
2019-05-06 21:48:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-06 21:48:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-06 21:48:27 -<==      Total: 0
2019-05-06 21:48:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-06 21:48:27 -==> Parameters: 1(Long), 0(String)
2019-05-06 21:48:27 -<==      Total: 1
2019-05-06 21:48:27 -耗时 : 111
2019-05-06 21:48:27 -返回值 : com.bootdo.common.utils.PageUtils@3acd7b19
2019-05-06 21:48:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-06 21:48:31 -==> Parameters: 1(Long)
2019-05-06 21:48:31 -<==      Total: 93
2019-05-06 21:48:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-06 21:48:31 -HTTP METHOD : GET
2019-05-06 21:48:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-06 21:48:31 -参数 : []
2019-05-06 21:48:31 -耗时 : 1
2019-05-06 21:48:31 -返回值 : charts/tableElecMM
2019-05-06 21:48:36 -请求地址 : http://localhost:8081/charts/countYY
2019-05-06 21:48:36 -HTTP METHOD : GET
2019-05-06 21:48:36 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-06 21:48:36 -参数 : []
2019-05-06 21:48:36 -耗时 : 1
2019-05-06 21:48:36 -返回值 : charts/countYY
2019-05-06 21:48:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 21:48:37 -HTTP METHOD : GET
2019-05-06 21:48:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 21:48:37 -参数 : [userType]
2019-05-06 21:48:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 21:48:37 -==> Parameters: userType(String)
2019-05-06 21:48:37 -<==      Total: 4
2019-05-06 21:48:37 -耗时 : 46
2019-05-06 21:48:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 21:48:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 21:48:37 -HTTP METHOD : GET
2019-05-06 21:48:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 21:48:37 -参数 : [userType]
2019-05-06 21:48:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 21:48:37 -==> Parameters: userType(String)
2019-05-06 21:48:37 -<==      Total: 4
2019-05-06 21:48:37 -耗时 : 3
2019-05-06 21:48:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 21:48:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-06 21:48:38 -HTTP METHOD : GET
2019-05-06 21:48:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-06 21:48:38 -参数 : []
2019-05-06 21:48:38 -耗时 : 1
2019-05-06 21:48:38 -返回值 : charts/tableElecYY
2019-05-06 21:48:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 21:48:38 -HTTP METHOD : GET
2019-05-06 21:48:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 21:48:38 -参数 : [userType]
2019-05-06 21:48:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 21:48:38 -==> Parameters: userType(String)
2019-05-06 21:48:38 -<==      Total: 4
2019-05-06 21:48:38 -耗时 : 4
2019-05-06 21:48:38 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 21:48:40 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-06 21:48:40 -HTTP METHOD : GET
2019-05-06 21:48:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-06 21:48:40 -参数 : []
2019-05-06 21:48:40 -耗时 : 1
2019-05-06 21:48:40 -返回值 : charts/tableWaterYY
2019-05-06 21:48:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 21:48:40 -HTTP METHOD : GET
2019-05-06 21:48:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 21:48:40 -参数 : [userType]
2019-05-06 21:48:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 21:48:40 -==> Parameters: userType(String)
2019-05-06 21:48:40 -<==      Total: 4
2019-05-06 21:48:40 -耗时 : 8
2019-05-06 21:48:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 21:48:40 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-06 21:48:40 -HTTP METHOD : GET
2019-05-06 21:48:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-06 21:48:40 -参数 : []
2019-05-06 21:48:40 -耗时 : 13
2019-05-06 21:48:40 -返回值 : charts/tableHeatYY
2019-05-06 21:48:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-06 21:48:41 -HTTP METHOD : GET
2019-05-06 21:48:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-06 21:48:41 -参数 : [userType]
2019-05-06 21:48:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-06 21:48:41 -==> Parameters: userType(String)
2019-05-06 21:48:41 -<==      Total: 4
2019-05-06 21:48:41 -耗时 : 8
2019-05-06 21:48:41 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-06 22:06:33 -Validating all active sessions...
2019-05-06 22:06:33 -Finished session validation.  No sessions were stopped.
2019-05-06 22:06:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2585]
2019-05-06 22:36:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3018]
2019-05-06 23:06:33 -Validating all active sessions...
2019-05-06 23:06:36 -Finished session validation.  [1] sessions were stopped.
2019-05-06 23:06:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3451]

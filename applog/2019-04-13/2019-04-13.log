2019-04-13 17:23:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 8408 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-13 17:23:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-13 17:23:13 -The following profiles are active: dev
2019-04-13 17:23:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:23:13 CST 2019]; root of context hierarchy
2019-04-13 17:23:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-13 17:23:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5402751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f79955f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-13 17:23:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-13 17:23:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:23:24 -Tomcat initialized with port(s): 8081 (http)
2019-04-13 17:23:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-13 17:23:25 -Starting service [Tomcat]
2019-04-13 17:23:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-13 17:23:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-13 17:23:25 -Initializing Spring embedded WebApplicationContext
2019-04-13 17:23:25 -Root WebApplicationContext: initialization completed in 11976 ms
2019-04-13 17:23:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-13 17:23:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-13 17:23:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-13 17:23:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-13 17:23:26 -Filter xssFilter was not registered (disabled)
2019-04-13 17:23:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-13 17:23:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-13 17:23:26 -Servlet statViewServlet mapped to [/druid/*]
2019-04-13 17:23:26 -Servlet dispatcherServlet mapped to [/]
2019-04-13 17:23:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:23:13 CST 2019]; root of context hierarchy
2019-04-13 17:23:30 -Using default implementation for ThreadExecutor
2019-04-13 17:23:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-13 17:23:30 -Quartz Scheduler v.2.2.1 created.
2019-04-13 17:23:30 -RAMJobStore initialized.
2019-04-13 17:23:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-13 17:23:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-13 17:23:30 -Quartz scheduler version: 2.2.1
2019-04-13 17:23:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66b0e207
2019-04-13 17:23:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-13 17:23:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-13 17:23:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:23:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-13 17:23:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-13 17:23:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-13 17:23:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:23:34 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-13 17:23:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:23:34 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-13 17:23:34 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-13 17:23:34 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-13 17:23:34 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-13 17:23:34 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-13 17:23:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-13 17:23:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-13 17:23:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-13 17:23:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-13 17:23:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-13 17:23:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:23:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-13 17:23:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:23:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-13 17:23:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-13 17:23:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-13 17:23:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-13 17:23:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-13 17:23:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-13 17:23:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-13 17:23:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-13 17:23:34 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-13 17:23:34 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-13 17:23:34 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-13 17:23:34 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-13 17:23:34 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-13 17:23:34 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-13 17:23:34 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-13 17:23:34 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-13 17:23:34 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-13 17:23:34 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:23:34 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:23:34 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-13 17:23:34 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-13 17:23:34 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-13 17:23:34 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-13 17:23:34 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:23:34 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:23:34 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:23:34 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-13 17:23:34 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-13 17:23:34 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-13 17:23:34 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-13 17:23:34 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-13 17:23:34 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-13 17:23:34 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-13 17:23:34 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-13 17:23:34 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-13 17:23:34 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-13 17:23:34 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-13 17:23:34 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-13 17:23:34 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-13 17:23:34 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-13 17:23:34 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-13 17:23:34 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-13 17:23:34 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-13 17:23:34 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-13 17:23:34 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-13 17:23:34 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-13 17:23:34 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-13 17:23:34 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-13 17:23:34 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-13 17:23:34 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-13 17:23:34 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-13 17:23:34 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-13 17:23:34 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-13 17:23:34 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-13 17:23:34 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-13 17:23:34 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:23:34 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:23:34 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-13 17:23:34 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-13 17:23:34 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-13 17:23:34 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-13 17:23:34 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-13 17:23:34 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-13 17:23:34 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:23:34 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:23:34 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:23:34 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-13 17:23:34 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-13 17:23:34 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:23:34 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-13 17:23:34 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-13 17:23:34 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-13 17:23:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-13 17:23:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-13 17:23:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-13 17:23:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:23:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:23:13 CST 2019]; root of context hierarchy
2019-04-13 17:23:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:23:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:23:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:23:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-13 17:23:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-13 17:23:40 -Registering beans for JMX exposure on startup
2019-04-13 17:23:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-13 17:23:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-13 17:23:40 -Starting beans in phase 2147483647
2019-04-13 17:23:40 -Context refreshed
2019-04-13 17:23:40 -Found 1 custom documentation plugin(s)
2019-04-13 17:23:40 -Scanning for api listing references
2019-04-13 17:23:41 -Generating unique operation named: getCountDUsingPOST_1
2019-04-13 17:23:41 -Generating unique operation named: getCountDUsingPOST_2
2019-04-13 17:23:41 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-13 17:23:41 -Generating unique operation named: getCountDUsingPOST_3
2019-04-13 17:23:41 -Generating unique operation named: removeUsingPOST_1
2019-04-13 17:23:42 -Generating unique operation named: addUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: editUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: listUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_2
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_3
2019-04-13 17:23:42 -Generating unique operation named: saveUsingPOST_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingHEAD_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPOST_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPUT_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPATCH_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingDELETE_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-13 17:23:42 -Generating unique operation named: updateUsingTRACE_1
2019-04-13 17:23:42 -Generating unique operation named: addUsingGET_2
2019-04-13 17:23:42 -Generating unique operation named: editUsingGET_2
2019-04-13 17:23:42 -Generating unique operation named: listUsingGET_2
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_4
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_5
2019-04-13 17:23:42 -Generating unique operation named: saveUsingPOST_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPOST_2
2019-04-13 17:23:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: addUsingGET_3
2019-04-13 17:23:42 -Generating unique operation named: editUsingGET_3
2019-04-13 17:23:42 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-13 17:23:42 -Generating unique operation named: listUsingGET_3
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_6
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_7
2019-04-13 17:23:42 -Generating unique operation named: saveUsingPOST_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingGET_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingHEAD_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPOST_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPUT_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPATCH_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingDELETE_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-13 17:23:42 -Generating unique operation named: updateUsingTRACE_2
2019-04-13 17:23:42 -Generating unique operation named: addUsingGET_4
2019-04-13 17:23:42 -Generating unique operation named: editUsingGET_4
2019-04-13 17:23:42 -Generating unique operation named: listUsingGET_4
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_8
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_9
2019-04-13 17:23:42 -Generating unique operation named: saveUsingPOST_4
2019-04-13 17:23:42 -Generating unique operation named: updateUsingGET_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingHEAD_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPOST_4
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPUT_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingPATCH_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingDELETE_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-13 17:23:42 -Generating unique operation named: updateUsingTRACE_3
2019-04-13 17:23:42 -Generating unique operation named: ElecUsingGET_1
2019-04-13 17:23:42 -Generating unique operation named: addUsingGET_5
2019-04-13 17:23:42 -Generating unique operation named: editUsingGET_5
2019-04-13 17:23:42 -Generating unique operation named: listUsingGET_5
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_10
2019-04-13 17:23:42 -Generating unique operation named: removeUsingPOST_11
2019-04-13 17:23:42 -Generating unique operation named: saveUsingPOST_5
2019-04-13 17:23:42 -Generating unique operation named: updateUsingGET_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingHEAD_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPUT_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPATCH_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingDELETE_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-13 17:23:43 -Generating unique operation named: updateUsingTRACE_4
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_6
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_6
2019-04-13 17:23:43 -Generating unique operation named: addUsingGET_6
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_7
2019-04-13 17:23:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_7
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_12
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_13
2019-04-13 17:23:43 -Generating unique operation named: saveUsingPOST_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingGET_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingHEAD_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPUT_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPATCH_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingDELETE_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-13 17:23:43 -Generating unique operation named: updateUsingTRACE_5
2019-04-13 17:23:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-13 17:23:43 -Generating unique operation named: addUsingGET_7
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_8
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_8
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_14
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_15
2019-04-13 17:23:43 -Generating unique operation named: saveUsingPOST_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingGET_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingHEAD_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_8
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPUT_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPATCH_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingDELETE_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-13 17:23:43 -Generating unique operation named: updateUsingTRACE_6
2019-04-13 17:23:43 -Generating unique operation named: addUsingGET_8
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_9
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_9
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_16
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_17
2019-04-13 17:23:43 -Generating unique operation named: saveUsingPOST_8
2019-04-13 17:23:43 -Generating unique operation named: updateUsingGET_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingHEAD_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_9
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPUT_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPATCH_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingDELETE_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-13 17:23:43 -Generating unique operation named: updateUsingTRACE_7
2019-04-13 17:23:43 -Generating unique operation named: addUsingGET_9
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_10
2019-04-13 17:23:43 -Generating unique operation named: infoUsingGET_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingHEAD_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingPOST_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingPUT_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingPATCH_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingDELETE_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-13 17:23:43 -Generating unique operation named: infoUsingTRACE_1
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_10
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_18
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_19
2019-04-13 17:23:43 -Generating unique operation named: saveUsingPOST_9
2019-04-13 17:23:43 -Generating unique operation named: updateUsingPOST_10
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_11
2019-04-13 17:23:43 -Generating unique operation named: removeUsingPOST_20
2019-04-13 17:23:43 -Generating unique operation named: welcomeUsingGET_1
2019-04-13 17:23:43 -Generating unique operation named: addUsingGET_10
2019-04-13 17:23:43 -Generating unique operation named: editUsingGET_11
2019-04-13 17:23:43 -Generating unique operation named: listUsingGET_12
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_21
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_10
2019-04-13 17:23:44 -Generating unique operation named: treeUsingGET_1
2019-04-13 17:23:44 -Generating unique operation named: treeUsingGET_2
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_11
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_11
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_12
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_13
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_22
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_23
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_11
2019-04-13 17:23:44 -Generating unique operation named: updateUsingGET_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingHEAD_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_12
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPUT_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPATCH_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingDELETE_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-13 17:23:44 -Generating unique operation named: updateUsingTRACE_8
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_12
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_13
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_14
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_24
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_25
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_12
2019-04-13 17:23:44 -Generating unique operation named: updateUsingGET_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingHEAD_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_13
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPUT_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPATCH_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingDELETE_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-13 17:23:44 -Generating unique operation named: updateUsingTRACE_9
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_13
2019-04-13 17:23:44 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_14
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_15
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_13
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_14
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_14
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_16
2019-04-13 17:23:44 -Generating unique operation named: listUsingHEAD_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingPOST_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingPUT_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingPATCH_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingDELETE_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingOPTIONS_1
2019-04-13 17:23:44 -Generating unique operation named: listUsingTRACE_1
2019-04-13 17:23:44 -Generating unique operation named: countDDUsingGET_1
2019-04-13 17:23:44 -Generating unique operation named: getCountDUsingPOST_4
2019-04-13 17:23:44 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-13 17:23:44 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-13 17:23:44 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-13 17:23:44 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-13 17:23:44 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-13 17:23:44 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_14
2019-04-13 17:23:44 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_15
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_17
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_26
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_15
2019-04-13 17:23:44 -Generating unique operation named: treeUsingGET_3
2019-04-13 17:23:44 -Generating unique operation named: treeViewUsingGET_1
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_15
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_15
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_16
2019-04-13 17:23:44 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_18
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_27
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_28
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_16
2019-04-13 17:23:44 -Generating unique operation named: updateUsingGET_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingHEAD_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_16
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPUT_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPATCH_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingDELETE_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-13 17:23:44 -Generating unique operation named: updateUsingTRACE_10
2019-04-13 17:23:44 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-13 17:23:44 -Generating unique operation named: addUsingGET_16
2019-04-13 17:23:44 -Generating unique operation named: editUsingGET_17
2019-04-13 17:23:44 -Generating unique operation named: listUsingGET_19
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_29
2019-04-13 17:23:44 -Generating unique operation named: removeUsingPOST_30
2019-04-13 17:23:44 -Generating unique operation named: saveUsingPOST_17
2019-04-13 17:23:44 -Generating unique operation named: updateUsingGET_11
2019-04-13 17:23:44 -Generating unique operation named: updateUsingHEAD_11
2019-04-13 17:23:44 -Generating unique operation named: updateUsingPOST_17
2019-04-13 17:23:45 -Generating unique operation named: updateUsingPUT_11
2019-04-13 17:23:45 -Generating unique operation named: updateUsingPATCH_11
2019-04-13 17:23:45 -Generating unique operation named: updateUsingDELETE_11
2019-04-13 17:23:45 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-13 17:23:45 -Generating unique operation named: updateUsingTRACE_11
2019-04-13 17:23:45 -Generating unique operation named: addUsingGET_17
2019-04-13 17:23:45 -Generating unique operation named: editUsingGET_18
2019-04-13 17:23:45 -Generating unique operation named: listUsingGET_20
2019-04-13 17:23:45 -Generating unique operation named: removeUsingPOST_31
2019-04-13 17:23:45 -Generating unique operation named: removeUsingPOST_32
2019-04-13 17:23:45 -Generating unique operation named: saveUsingPOST_18
2019-04-13 17:23:45 -Generating unique operation named: updateUsingGET_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingHEAD_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingPOST_18
2019-04-13 17:23:45 -Generating unique operation named: updateUsingPUT_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingPATCH_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingDELETE_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-13 17:23:45 -Generating unique operation named: updateUsingTRACE_12
2019-04-13 17:23:45 -Starting Quartz Scheduler now
2019-04-13 17:23:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-13 17:23:45 -Starting...
2019-04-13 17:23:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-13 17:23:45 -Started.
2019-04-13 17:23:45 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-13 17:23:45 -Using a shared selector for servlet write/read
2019-04-13 17:23:45 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-13 17:23:45 -Started BootdoApplication in 35.223 seconds (JVM running for 36.885)
2019-04-13 17:24:35 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-13 17:28:09 -Starting BootdoApplication on ZJZL-20180906VX with PID 500 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-13 17:28:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-13 17:28:09 -The following profiles are active: dev
2019-04-13 17:28:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sat Apr 13 17:28:10 CST 2019]; root of context hierarchy
2019-04-13 17:28:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-13 17:28:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a2791c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fafba7c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-13 17:28:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-13 17:28:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:28:16 -Tomcat initialized with port(s): 8081 (http)
2019-04-13 17:28:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-13 17:28:16 -Starting service [Tomcat]
2019-04-13 17:28:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-13 17:28:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-13 17:28:17 -Initializing Spring embedded WebApplicationContext
2019-04-13 17:28:17 -Root WebApplicationContext: initialization completed in 7031 ms
2019-04-13 17:28:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-13 17:28:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-13 17:28:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-13 17:28:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-13 17:28:17 -Filter xssFilter was not registered (disabled)
2019-04-13 17:28:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-13 17:28:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-13 17:28:17 -Servlet statViewServlet mapped to [/druid/*]
2019-04-13 17:28:17 -Servlet dispatcherServlet mapped to [/]
2019-04-13 17:28:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sat Apr 13 17:28:10 CST 2019]; root of context hierarchy
2019-04-13 17:28:20 -Using default implementation for ThreadExecutor
2019-04-13 17:28:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-13 17:28:20 -Quartz Scheduler v.2.2.1 created.
2019-04-13 17:28:20 -RAMJobStore initialized.
2019-04-13 17:28:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-13 17:28:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-13 17:28:20 -Quartz scheduler version: 2.2.1
2019-04-13 17:28:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4c5406b
2019-04-13 17:28:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-13 17:28:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-13 17:28:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-13 17:28:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:28:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-13 17:28:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-13 17:28:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:28:23 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-13 17:28:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-13 17:28:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:28:23 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-13 17:28:23 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-13 17:28:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-13 17:28:23 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-13 17:28:23 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-13 17:28:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-13 17:28:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-13 17:28:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-13 17:28:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-13 17:28:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-13 17:28:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:28:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:28:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-13 17:28:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-13 17:28:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-13 17:28:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-13 17:28:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-13 17:28:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-13 17:28:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-13 17:28:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-13 17:28:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-13 17:28:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-13 17:28:23 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-13 17:28:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-13 17:28:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-13 17:28:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-13 17:28:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-13 17:28:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-13 17:28:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-13 17:28:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:28:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:28:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-13 17:28:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-13 17:28:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-13 17:28:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-13 17:28:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:28:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:28:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-13 17:28:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-13 17:28:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-13 17:28:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-13 17:28:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-13 17:28:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-13 17:28:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-13 17:28:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-13 17:28:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-13 17:28:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-13 17:28:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-13 17:28:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-13 17:28:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-13 17:28:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-13 17:28:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-13 17:28:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-13 17:28:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-13 17:28:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-13 17:28:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-13 17:28:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-13 17:28:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-13 17:28:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-13 17:28:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-13 17:28:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-13 17:28:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-13 17:28:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-13 17:28:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-13 17:28:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-13 17:28:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:28:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:28:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-13 17:28:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-13 17:28:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-13 17:28:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-13 17:28:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-13 17:28:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:28:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-13 17:28:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-13 17:28:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-13 17:28:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:28:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:28:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:28:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-13 17:28:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-13 17:28:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-13 17:28:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-13 17:28:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-13 17:28:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-13 17:28:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:28:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sat Apr 13 17:28:10 CST 2019]; root of context hierarchy
2019-04-13 17:28:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:28:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:28:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:28:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-13 17:28:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-13 17:28:26 -Registering beans for JMX exposure on startup
2019-04-13 17:28:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-13 17:28:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-13 17:28:26 -Starting beans in phase 2147483647
2019-04-13 17:28:26 -Context refreshed
2019-04-13 17:28:26 -Found 1 custom documentation plugin(s)
2019-04-13 17:28:27 -Scanning for api listing references
2019-04-13 17:28:27 -Generating unique operation named: getCountDUsingPOST_1
2019-04-13 17:28:27 -Generating unique operation named: getCountDUsingPOST_2
2019-04-13 17:28:27 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: getCountDUsingPOST_3
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_1
2019-04-13 17:28:27 -Generating unique operation named: addUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: editUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: listUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_2
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_3
2019-04-13 17:28:27 -Generating unique operation named: saveUsingPOST_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingHEAD_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPOST_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPUT_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPATCH_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingDELETE_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-13 17:28:27 -Generating unique operation named: updateUsingTRACE_1
2019-04-13 17:28:27 -Generating unique operation named: addUsingGET_2
2019-04-13 17:28:27 -Generating unique operation named: editUsingGET_2
2019-04-13 17:28:27 -Generating unique operation named: listUsingGET_2
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_4
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_5
2019-04-13 17:28:27 -Generating unique operation named: saveUsingPOST_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPOST_2
2019-04-13 17:28:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-13 17:28:27 -Generating unique operation named: addUsingGET_3
2019-04-13 17:28:27 -Generating unique operation named: editUsingGET_3
2019-04-13 17:28:27 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-13 17:28:27 -Generating unique operation named: listUsingGET_3
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_6
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_7
2019-04-13 17:28:27 -Generating unique operation named: saveUsingPOST_3
2019-04-13 17:28:27 -Generating unique operation named: updateUsingGET_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingHEAD_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPOST_3
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPUT_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingPATCH_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingDELETE_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-13 17:28:27 -Generating unique operation named: updateUsingTRACE_2
2019-04-13 17:28:27 -Generating unique operation named: addUsingGET_4
2019-04-13 17:28:27 -Generating unique operation named: editUsingGET_4
2019-04-13 17:28:27 -Generating unique operation named: listUsingGET_4
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_8
2019-04-13 17:28:27 -Generating unique operation named: removeUsingPOST_9
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_3
2019-04-13 17:28:28 -Generating unique operation named: ElecUsingGET_1
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_5
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_5
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_5
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_10
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_11
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_4
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_6
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_6
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_6
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_7
2019-04-13 17:28:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_7
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_12
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_13
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_5
2019-04-13 17:28:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_7
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_8
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_8
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_14
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_15
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_6
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_8
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_9
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_9
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_16
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_17
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_9
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_7
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_9
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_10
2019-04-13 17:28:28 -Generating unique operation named: infoUsingGET_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingHEAD_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingPOST_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingPUT_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingPATCH_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingDELETE_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-13 17:28:28 -Generating unique operation named: infoUsingTRACE_1
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_10
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_18
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_19
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_9
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_10
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_11
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_20
2019-04-13 17:28:28 -Generating unique operation named: welcomeUsingGET_1
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_10
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_11
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_12
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_21
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_10
2019-04-13 17:28:28 -Generating unique operation named: treeUsingGET_1
2019-04-13 17:28:28 -Generating unique operation named: treeUsingGET_2
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_11
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_11
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_12
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_13
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_22
2019-04-13 17:28:28 -Generating unique operation named: removeUsingPOST_23
2019-04-13 17:28:28 -Generating unique operation named: saveUsingPOST_11
2019-04-13 17:28:28 -Generating unique operation named: updateUsingGET_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingHEAD_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPOST_12
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPUT_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingPATCH_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingDELETE_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-13 17:28:28 -Generating unique operation named: updateUsingTRACE_8
2019-04-13 17:28:28 -Generating unique operation named: addUsingGET_12
2019-04-13 17:28:28 -Generating unique operation named: editUsingGET_13
2019-04-13 17:28:28 -Generating unique operation named: listUsingGET_14
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_24
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_25
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingGET_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingHEAD_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_13
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPUT_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPATCH_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingDELETE_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-13 17:28:29 -Generating unique operation named: updateUsingTRACE_9
2019-04-13 17:28:29 -Generating unique operation named: addUsingGET_13
2019-04-13 17:28:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-13 17:28:29 -Generating unique operation named: editUsingGET_14
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_15
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_13
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_14
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_14
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_16
2019-04-13 17:28:29 -Generating unique operation named: listUsingHEAD_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingPOST_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingPUT_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingPATCH_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingDELETE_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingOPTIONS_1
2019-04-13 17:28:29 -Generating unique operation named: listUsingTRACE_1
2019-04-13 17:28:29 -Generating unique operation named: countDDUsingGET_1
2019-04-13 17:28:29 -Generating unique operation named: getCountDUsingPOST_4
2019-04-13 17:28:29 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-13 17:28:29 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-13 17:28:29 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-13 17:28:29 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-13 17:28:29 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-13 17:28:29 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-13 17:28:29 -Generating unique operation named: addUsingGET_14
2019-04-13 17:28:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-13 17:28:29 -Generating unique operation named: editUsingGET_15
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_17
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_26
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_15
2019-04-13 17:28:29 -Generating unique operation named: treeUsingGET_3
2019-04-13 17:28:29 -Generating unique operation named: treeViewUsingGET_1
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_15
2019-04-13 17:28:29 -Generating unique operation named: addUsingGET_15
2019-04-13 17:28:29 -Generating unique operation named: editUsingGET_16
2019-04-13 17:28:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_18
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_27
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_28
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_16
2019-04-13 17:28:29 -Generating unique operation named: updateUsingGET_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingHEAD_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_16
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPUT_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPATCH_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingDELETE_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-13 17:28:29 -Generating unique operation named: updateUsingTRACE_10
2019-04-13 17:28:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-13 17:28:29 -Generating unique operation named: addUsingGET_16
2019-04-13 17:28:29 -Generating unique operation named: editUsingGET_17
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_19
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_29
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_30
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_17
2019-04-13 17:28:29 -Generating unique operation named: updateUsingGET_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingHEAD_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_17
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPUT_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPATCH_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingDELETE_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-13 17:28:29 -Generating unique operation named: updateUsingTRACE_11
2019-04-13 17:28:29 -Generating unique operation named: addUsingGET_17
2019-04-13 17:28:29 -Generating unique operation named: editUsingGET_18
2019-04-13 17:28:29 -Generating unique operation named: listUsingGET_20
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_31
2019-04-13 17:28:29 -Generating unique operation named: removeUsingPOST_32
2019-04-13 17:28:29 -Generating unique operation named: saveUsingPOST_18
2019-04-13 17:28:29 -Generating unique operation named: updateUsingGET_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingHEAD_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPOST_18
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPUT_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingPATCH_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingDELETE_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-13 17:28:29 -Generating unique operation named: updateUsingTRACE_12
2019-04-13 17:28:29 -Starting Quartz Scheduler now
2019-04-13 17:28:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-13 17:28:29 -Starting...
2019-04-13 17:28:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-13 17:28:29 -Started.
2019-04-13 17:28:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-13 17:28:29 -Using a shared selector for servlet write/read
2019-04-13 17:28:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-13 17:28:29 -Started BootdoApplication in 20.812 seconds (JVM running for 21.599)
2019-04-13 17:29:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-13 17:39:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 11144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-13 17:39:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-13 17:39:15 -The following profiles are active: dev
2019-04-13 17:39:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:39:16 CST 2019]; root of context hierarchy
2019-04-13 17:39:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-13 17:39:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5402751] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f79955f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-13 17:39:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-13 17:39:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:39:22 -Tomcat initialized with port(s): 8081 (http)
2019-04-13 17:39:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-13 17:39:22 -Starting service [Tomcat]
2019-04-13 17:39:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-13 17:39:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-13 17:39:22 -Initializing Spring embedded WebApplicationContext
2019-04-13 17:39:22 -Root WebApplicationContext: initialization completed in 6572 ms
2019-04-13 17:39:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-13 17:39:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-13 17:39:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-13 17:39:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-13 17:39:23 -Filter xssFilter was not registered (disabled)
2019-04-13 17:39:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-13 17:39:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-13 17:39:23 -Servlet statViewServlet mapped to [/druid/*]
2019-04-13 17:39:23 -Servlet dispatcherServlet mapped to [/]
2019-04-13 17:39:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:39:16 CST 2019]; root of context hierarchy
2019-04-13 17:39:26 -Using default implementation for ThreadExecutor
2019-04-13 17:39:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-13 17:39:26 -Quartz Scheduler v.2.2.1 created.
2019-04-13 17:39:26 -RAMJobStore initialized.
2019-04-13 17:39:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-13 17:39:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-13 17:39:26 -Quartz scheduler version: 2.2.1
2019-04-13 17:39:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@66b0e207
2019-04-13 17:39:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-13 17:39:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-13 17:39:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:39:28 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-13 17:39:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-13 17:39:28 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:28 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-13 17:39:28 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:39:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-13 17:39:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-13 17:39:28 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:39:28 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-13 17:39:28 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-13 17:39:28 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-13 17:39:28 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-13 17:39:28 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:28 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-13 17:39:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-13 17:39:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-13 17:39:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-13 17:39:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-13 17:39:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-13 17:39:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:39:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-13 17:39:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:39:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-13 17:39:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-13 17:39:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-13 17:39:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-13 17:39:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-13 17:39:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-13 17:39:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-13 17:39:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-13 17:39:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-13 17:39:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-13 17:39:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-13 17:39:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-13 17:39:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-13 17:39:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-13 17:39:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-13 17:39:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-13 17:39:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:39:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:39:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-13 17:39:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-13 17:39:29 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-13 17:39:29 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-13 17:39:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:39:29 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:39:29 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:39:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-13 17:39:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-13 17:39:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-13 17:39:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-13 17:39:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-13 17:39:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-13 17:39:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-13 17:39:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-13 17:39:29 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-13 17:39:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-13 17:39:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-13 17:39:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-13 17:39:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-13 17:39:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-13 17:39:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-13 17:39:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-13 17:39:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-13 17:39:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-13 17:39:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-13 17:39:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-13 17:39:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-13 17:39:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-13 17:39:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-13 17:39:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-13 17:39:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-13 17:39:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-13 17:39:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-13 17:39:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-13 17:39:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:39:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:39:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-13 17:39:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-13 17:39:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-13 17:39:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-13 17:39:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-13 17:39:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-13 17:39:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:39:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-13 17:39:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:39:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-13 17:39:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:39:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:39:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-13 17:39:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-13 17:39:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-13 17:39:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-13 17:39:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-13 17:39:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-13 17:39:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:39:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:39:16 CST 2019]; root of context hierarchy
2019-04-13 17:39:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:39:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:39:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:39:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-13 17:39:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-13 17:39:32 -Registering beans for JMX exposure on startup
2019-04-13 17:39:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-13 17:39:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-13 17:39:32 -Starting beans in phase 2147483647
2019-04-13 17:39:32 -Context refreshed
2019-04-13 17:39:32 -Found 1 custom documentation plugin(s)
2019-04-13 17:39:32 -Scanning for api listing references
2019-04-13 17:39:32 -Generating unique operation named: getCountDUsingPOST_1
2019-04-13 17:39:32 -Generating unique operation named: getCountDUsingPOST_2
2019-04-13 17:39:32 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-13 17:39:32 -Generating unique operation named: getCountDUsingPOST_3
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_1
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_2
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_3
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_1
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_4
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_5
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_2
2019-04-13 17:39:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_3
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_3
2019-04-13 17:39:33 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_3
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_6
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_7
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_2
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_4
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_4
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_4
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_8
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_9
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_3
2019-04-13 17:39:33 -Generating unique operation named: ElecUsingGET_1
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_5
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_5
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_5
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_10
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_11
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_4
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_6
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_6
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_6
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_7
2019-04-13 17:39:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_7
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_12
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_13
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_5
2019-04-13 17:39:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_7
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_8
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_8
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_14
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_15
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_8
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_6
2019-04-13 17:39:33 -Generating unique operation named: addUsingGET_8
2019-04-13 17:39:33 -Generating unique operation named: editUsingGET_9
2019-04-13 17:39:33 -Generating unique operation named: listUsingGET_9
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_16
2019-04-13 17:39:33 -Generating unique operation named: removeUsingPOST_17
2019-04-13 17:39:33 -Generating unique operation named: saveUsingPOST_8
2019-04-13 17:39:33 -Generating unique operation named: updateUsingGET_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingHEAD_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPOST_9
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPUT_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingPATCH_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingDELETE_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-13 17:39:33 -Generating unique operation named: updateUsingTRACE_7
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_9
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_10
2019-04-13 17:39:34 -Generating unique operation named: infoUsingGET_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingPOST_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingPUT_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-13 17:39:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_10
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_18
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_19
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_10
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_11
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_20
2019-04-13 17:39:34 -Generating unique operation named: welcomeUsingGET_1
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_10
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_11
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_12
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_21
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_10
2019-04-13 17:39:34 -Generating unique operation named: treeUsingGET_1
2019-04-13 17:39:34 -Generating unique operation named: treeUsingGET_2
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_11
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_11
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_12
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_13
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_22
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_23
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingGET_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingHEAD_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPUT_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPATCH_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingDELETE_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-13 17:39:34 -Generating unique operation named: updateUsingTRACE_8
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_12
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_13
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_14
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_24
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_25
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingGET_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingHEAD_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_13
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPUT_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPATCH_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingDELETE_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-13 17:39:34 -Generating unique operation named: updateUsingTRACE_9
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_13
2019-04-13 17:39:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_14
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_15
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_13
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_14
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_14
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_16
2019-04-13 17:39:34 -Generating unique operation named: listUsingHEAD_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingPOST_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingPUT_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingPATCH_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingDELETE_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingOPTIONS_1
2019-04-13 17:39:34 -Generating unique operation named: listUsingTRACE_1
2019-04-13 17:39:34 -Generating unique operation named: countDDUsingGET_1
2019-04-13 17:39:34 -Generating unique operation named: getCountDUsingPOST_4
2019-04-13 17:39:34 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-13 17:39:34 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-13 17:39:34 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-13 17:39:34 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-13 17:39:34 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-13 17:39:34 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_14
2019-04-13 17:39:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_15
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_17
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_26
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_15
2019-04-13 17:39:34 -Generating unique operation named: treeUsingGET_3
2019-04-13 17:39:34 -Generating unique operation named: treeViewUsingGET_1
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_15
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_15
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_16
2019-04-13 17:39:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_18
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_27
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_28
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_16
2019-04-13 17:39:34 -Generating unique operation named: updateUsingGET_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingHEAD_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_16
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPUT_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPATCH_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingDELETE_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-13 17:39:34 -Generating unique operation named: updateUsingTRACE_10
2019-04-13 17:39:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_16
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_17
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_19
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_29
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_30
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_17
2019-04-13 17:39:34 -Generating unique operation named: updateUsingGET_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingHEAD_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_17
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPUT_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPATCH_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingDELETE_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-13 17:39:34 -Generating unique operation named: updateUsingTRACE_11
2019-04-13 17:39:34 -Generating unique operation named: addUsingGET_17
2019-04-13 17:39:34 -Generating unique operation named: editUsingGET_18
2019-04-13 17:39:34 -Generating unique operation named: listUsingGET_20
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_31
2019-04-13 17:39:34 -Generating unique operation named: removeUsingPOST_32
2019-04-13 17:39:34 -Generating unique operation named: saveUsingPOST_18
2019-04-13 17:39:34 -Generating unique operation named: updateUsingGET_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingHEAD_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPOST_18
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPUT_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingPATCH_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingDELETE_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-13 17:39:34 -Generating unique operation named: updateUsingTRACE_12
2019-04-13 17:39:35 -Starting Quartz Scheduler now
2019-04-13 17:39:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-13 17:39:35 -Starting...
2019-04-13 17:39:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-13 17:39:35 -Started.
2019-04-13 17:39:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-13 17:39:35 -Using a shared selector for servlet write/read
2019-04-13 17:39:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-13 17:39:35 -Started BootdoApplication in 20.149 seconds (JVM running for 20.946)
2019-04-13 17:39:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-13 17:39:35 -==> Parameters: 
2019-04-13 17:39:35 -<==      Total: 1
2019-04-13 17:39:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-13 17:39:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-13 17:39:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2019-04-13 17:39:45 -Enabling session validation scheduler...
2019-04-13 17:39:45 -请求地址 : http://localhost:8081/login;JSESSIONID=78800825-ab97-4164-88e4-fb77d6345ab7
2019-04-13 17:39:45 -HTTP METHOD : GET
2019-04-13 17:39:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 17:39:45 -参数 : [{}]
2019-04-13 17:39:45 -耗时 : 4
2019-04-13 17:39:45 -返回值 : login
2019-04-13 17:39:50 -请求地址 : http://localhost:8081/getVerify
2019-04-13 17:39:50 -HTTP METHOD : GET
2019-04-13 17:39:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-13 17:39:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@56fa4111, org.apache.shiro.web.servlet.ShiroHttpServletResponse@484aa853]
2019-04-13 17:39:55 -4269
2019-04-13 17:39:55 -耗时 : 5286
2019-04-13 17:39:55 -返回值 : null
2019-04-13 17:39:56 -请求地址 : http://localhost:8081/login
2019-04-13 17:39:56 -HTTP METHOD : GET
2019-04-13 17:39:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 17:39:56 -参数 : [{}]
2019-04-13 17:39:56 -耗时 : 1
2019-04-13 17:39:56 -返回值 : login
2019-04-13 17:40:04 -请求地址 : http://localhost:8081/login
2019-04-13 17:40:04 -HTTP METHOD : POST
2019-04-13 17:40:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-13 17:40:04 -参数 : [admin, 111111, 4269, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b325bf6]
2019-04-13 17:40:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-13 17:40:04 -==> Parameters: admin(String)
2019-04-13 17:40:04 -<==      Total: 1
2019-04-13 17:40:04 -耗时 : 118
2019-04-13 17:40:04 -返回值 : {msg=操作成功, code=0}
2019-04-13 17:40:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-13 17:40:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:40:04 -==> Parameters: 1(Long), admin(String), 登录(String), 118(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-13 17:40:04.819(Timestamp)
2019-04-13 17:40:05 -<==    Updates: 1
2019-04-13 17:40:05 -请求地址 : http://localhost:8081/index
2019-04-13 17:40:05 -HTTP METHOD : GET
2019-04-13 17:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 17:40:05 -参数 : [{}]
2019-04-13 17:40:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 17:40:05 -==> Parameters: 1(Long)
2019-04-13 17:40:05 -<==      Total: 48
2019-04-13 17:40:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 17:40:05 -==> Parameters: 138(Long)
2019-04-13 17:40:05 -<==      Total: 1
2019-04-13 17:40:05 -耗时 : 490
2019-04-13 17:40:05 -返回值 : index_v1
2019-04-13 17:40:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:40:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 491(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 17:40:05.692(Timestamp)
2019-04-13 17:40:05 -<==    Updates: 1
2019-04-13 17:40:06 -请求地址 : http://localhost:8081/main
2019-04-13 17:40:06 -HTTP METHOD : GET
2019-04-13 17:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 17:40:06 -参数 : []
2019-04-13 17:40:06 -耗时 : 8
2019-04-13 17:40:06 -返回值 : main
2019-04-13 17:40:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 17:40:09 -HTTP METHOD : GET
2019-04-13 17:40:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 17:40:09 -参数 : []
2019-04-13 17:40:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 17:40:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 17:40:09 -<==      Total: 0
2019-04-13 17:40:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 17:40:09 -==> Parameters: 1(Long), 0(String)
2019-04-13 17:40:09 -<==      Total: 1
2019-04-13 17:40:09 -耗时 : 43
2019-04-13 17:40:09 -返回值 : com.bootdo.common.utils.PageUtils@3975636c
2019-04-13 17:40:09 -请求地址 : http://localhost:8081/main
2019-04-13 17:40:09 -HTTP METHOD : GET
2019-04-13 17:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 17:40:09 -参数 : []
2019-04-13 17:40:09 -耗时 : 0
2019-04-13 17:40:09 -返回值 : main
2019-04-13 17:40:29 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-13 17:40:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 17:40:29 -==> Parameters: 1(Long)
2019-04-13 17:40:29 -<==      Total: 92
2019-04-13 17:40:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-13 17:40:29 -HTTP METHOD : GET
2019-04-13 17:40:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-13 17:40:29 -参数 : []
2019-04-13 17:40:29 -耗时 : 1
2019-04-13 17:40:29 -返回值 : /moneyLog/elecLog/elecLog
2019-04-13 17:40:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:40:31 -HTTP METHOD : GET
2019-04-13 17:40:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:40:31 -参数 : [userType]
2019-04-13 17:40:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:40:31 -==> Parameters: userType(String)
2019-04-13 17:40:31 -<==      Total: 4
2019-04-13 17:40:31 -耗时 : 26
2019-04-13 17:40:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:40:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-13 17:40:31 -HTTP METHOD : GET
2019-04-13 17:40:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-13 17:40:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-13 17:40:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-13 17:40:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:40:31 -<==      Total: 8
2019-04-13 17:40:31 -==>  Preparing: select count(*) from elec_log WHERE select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log 
2019-04-13 17:40:31 -==> Parameters: 
2019-04-13 17:40:31 -{conn-10001, pstmt-20010} execute error. select count(*) from elec_log
		  WHERE select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.count(ElecLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:74)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$6bdf5f4b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 17:40:31 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-04-13 17:40:31 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-04-13 17:40:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:40:31 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from elec_log     WHERE select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from elec_log     WHERE select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.count(ElecLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:74)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$6bdf5f4b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-04-13 17:40:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from elec_log     WHERE select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM' at line 2(String), null, 2019-04-13 17:40:31.808(Timestamp)
2019-04-13 17:40:31 -<==    Updates: 1
2019-04-13 17:49:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 14276 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-13 17:49:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-13 17:49:03 -The following profiles are active: dev
2019-04-13 17:49:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:49:04 CST 2019]; root of context hierarchy
2019-04-13 17:49:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-13 17:49:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8592ad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77ebdbda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-13 17:49:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-13 17:49:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 17:49:11 -Tomcat initialized with port(s): 8081 (http)
2019-04-13 17:49:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-13 17:49:11 -Starting service [Tomcat]
2019-04-13 17:49:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-13 17:49:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-13 17:49:11 -Initializing Spring embedded WebApplicationContext
2019-04-13 17:49:11 -Root WebApplicationContext: initialization completed in 7402 ms
2019-04-13 17:49:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-13 17:49:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-13 17:49:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-13 17:49:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-13 17:49:12 -Filter xssFilter was not registered (disabled)
2019-04-13 17:49:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-13 17:49:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-13 17:49:12 -Servlet statViewServlet mapped to [/druid/*]
2019-04-13 17:49:12 -Servlet dispatcherServlet mapped to [/]
2019-04-13 17:49:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:49:04 CST 2019]; root of context hierarchy
2019-04-13 17:49:15 -Using default implementation for ThreadExecutor
2019-04-13 17:49:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-13 17:49:15 -Quartz Scheduler v.2.2.1 created.
2019-04-13 17:49:15 -RAMJobStore initialized.
2019-04-13 17:49:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-13 17:49:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-13 17:49:15 -Quartz scheduler version: 2.2.1
2019-04-13 17:49:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5170bc02
2019-04-13 17:49:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-13 17:49:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-13 17:49:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:49:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-13 17:49:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-13 17:49:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-13 17:49:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:49:18 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-13 17:49:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 17:49:18 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-13 17:49:18 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-13 17:49:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-13 17:49:18 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-13 17:49:18 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-13 17:49:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-13 17:49:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-13 17:49:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-13 17:49:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-13 17:49:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-13 17:49:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-13 17:49:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:49:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-13 17:49:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 17:49:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-13 17:49:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-13 17:49:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-13 17:49:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-13 17:49:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-13 17:49:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-13 17:49:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-13 17:49:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-13 17:49:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-13 17:49:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-13 17:49:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-13 17:49:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-13 17:49:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-13 17:49:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-13 17:49:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-13 17:49:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-13 17:49:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:49:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-13 17:49:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-13 17:49:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-13 17:49:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-13 17:49:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-13 17:49:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:49:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-13 17:49:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:49:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-13 17:49:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-13 17:49:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-13 17:49:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-13 17:49:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-13 17:49:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-13 17:49:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-13 17:49:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-13 17:49:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-13 17:49:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-13 17:49:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-13 17:49:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-13 17:49:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-13 17:49:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-13 17:49:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-13 17:49:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-13 17:49:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-13 17:49:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-13 17:49:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-13 17:49:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-13 17:49:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-13 17:49:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-13 17:49:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-13 17:49:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-13 17:49:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-13 17:49:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-13 17:49:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-13 17:49:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-13 17:49:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:49:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 17:49:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-13 17:49:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-13 17:49:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-13 17:49:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-13 17:49:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 17:49:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-13 17:49:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 17:49:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-13 17:49:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 17:49:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-13 17:49:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 17:49:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-13 17:49:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-13 17:49:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-13 17:49:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-13 17:49:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-13 17:49:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-13 17:49:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:49:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 17:49:04 CST 2019]; root of context hierarchy
2019-04-13 17:49:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:49:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:49:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 17:49:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-13 17:49:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-13 17:49:22 -Registering beans for JMX exposure on startup
2019-04-13 17:49:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-13 17:49:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-13 17:49:22 -Starting beans in phase 2147483647
2019-04-13 17:49:22 -Context refreshed
2019-04-13 17:49:22 -Found 1 custom documentation plugin(s)
2019-04-13 17:49:22 -Scanning for api listing references
2019-04-13 17:49:23 -Generating unique operation named: getCountDUsingPOST_1
2019-04-13 17:49:23 -Generating unique operation named: getCountDUsingPOST_2
2019-04-13 17:49:23 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: getCountDUsingPOST_3
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_1
2019-04-13 17:49:23 -Generating unique operation named: addUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: editUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: listUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_2
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_3
2019-04-13 17:49:23 -Generating unique operation named: saveUsingPOST_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingHEAD_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPOST_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPUT_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPATCH_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingDELETE_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-13 17:49:23 -Generating unique operation named: updateUsingTRACE_1
2019-04-13 17:49:23 -Generating unique operation named: addUsingGET_2
2019-04-13 17:49:23 -Generating unique operation named: editUsingGET_2
2019-04-13 17:49:23 -Generating unique operation named: listUsingGET_2
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_4
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_5
2019-04-13 17:49:23 -Generating unique operation named: saveUsingPOST_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPOST_2
2019-04-13 17:49:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-13 17:49:23 -Generating unique operation named: addUsingGET_3
2019-04-13 17:49:23 -Generating unique operation named: editUsingGET_3
2019-04-13 17:49:23 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-13 17:49:23 -Generating unique operation named: listUsingGET_3
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_6
2019-04-13 17:49:23 -Generating unique operation named: removeUsingPOST_7
2019-04-13 17:49:23 -Generating unique operation named: saveUsingPOST_3
2019-04-13 17:49:23 -Generating unique operation named: updateUsingGET_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingHEAD_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPOST_3
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPUT_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingPATCH_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingDELETE_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-13 17:49:23 -Generating unique operation named: updateUsingTRACE_2
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_4
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_4
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_4
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_8
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_9
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingGET_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingHEAD_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPUT_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPATCH_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingDELETE_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-13 17:49:24 -Generating unique operation named: updateUsingTRACE_3
2019-04-13 17:49:24 -Generating unique operation named: ElecUsingGET_1
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_5
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_5
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_5
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_10
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_11
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingGET_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingHEAD_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPUT_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPATCH_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingDELETE_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-13 17:49:24 -Generating unique operation named: updateUsingTRACE_4
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_6
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_6
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_6
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_7
2019-04-13 17:49:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_7
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_12
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_13
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingGET_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingHEAD_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPUT_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPATCH_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingDELETE_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-13 17:49:24 -Generating unique operation named: updateUsingTRACE_5
2019-04-13 17:49:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_7
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_8
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_8
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_14
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_15
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingGET_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingHEAD_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_8
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPUT_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPATCH_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingDELETE_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-13 17:49:24 -Generating unique operation named: updateUsingTRACE_6
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_8
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_9
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_9
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_16
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_17
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_8
2019-04-13 17:49:24 -Generating unique operation named: updateUsingGET_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingHEAD_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_9
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPUT_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPATCH_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingDELETE_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-13 17:49:24 -Generating unique operation named: updateUsingTRACE_7
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_9
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_10
2019-04-13 17:49:24 -Generating unique operation named: infoUsingGET_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingHEAD_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingPOST_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingPUT_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingPATCH_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingDELETE_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-13 17:49:24 -Generating unique operation named: infoUsingTRACE_1
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_10
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_18
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_19
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_9
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_10
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_11
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_20
2019-04-13 17:49:24 -Generating unique operation named: welcomeUsingGET_1
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_10
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_11
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_12
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_21
2019-04-13 17:49:24 -Generating unique operation named: saveUsingPOST_10
2019-04-13 17:49:24 -Generating unique operation named: treeUsingGET_1
2019-04-13 17:49:24 -Generating unique operation named: treeUsingGET_2
2019-04-13 17:49:24 -Generating unique operation named: updateUsingPOST_11
2019-04-13 17:49:24 -Generating unique operation named: addUsingGET_11
2019-04-13 17:49:24 -Generating unique operation named: editUsingGET_12
2019-04-13 17:49:24 -Generating unique operation named: listUsingGET_13
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_22
2019-04-13 17:49:24 -Generating unique operation named: removeUsingPOST_23
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingGET_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingHEAD_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPUT_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPATCH_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingDELETE_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-13 17:49:25 -Generating unique operation named: updateUsingTRACE_8
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_12
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_13
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_14
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_24
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_25
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingGET_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingHEAD_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_13
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPUT_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPATCH_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingDELETE_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-13 17:49:25 -Generating unique operation named: updateUsingTRACE_9
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_13
2019-04-13 17:49:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_14
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_15
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_13
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_14
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_14
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_16
2019-04-13 17:49:25 -Generating unique operation named: listUsingHEAD_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingPOST_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingPUT_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingPATCH_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingDELETE_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingOPTIONS_1
2019-04-13 17:49:25 -Generating unique operation named: listUsingTRACE_1
2019-04-13 17:49:25 -Generating unique operation named: countDDUsingGET_1
2019-04-13 17:49:25 -Generating unique operation named: getCountDUsingPOST_4
2019-04-13 17:49:25 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-13 17:49:25 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-13 17:49:25 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-13 17:49:25 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-13 17:49:25 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-13 17:49:25 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_14
2019-04-13 17:49:25 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_15
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_17
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_26
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_15
2019-04-13 17:49:25 -Generating unique operation named: treeUsingGET_3
2019-04-13 17:49:25 -Generating unique operation named: treeViewUsingGET_1
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_15
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_15
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_16
2019-04-13 17:49:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_18
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_27
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_28
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_16
2019-04-13 17:49:25 -Generating unique operation named: updateUsingGET_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingHEAD_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_16
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPUT_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPATCH_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingDELETE_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-13 17:49:25 -Generating unique operation named: updateUsingTRACE_10
2019-04-13 17:49:25 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_16
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_17
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_19
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_29
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_30
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_17
2019-04-13 17:49:25 -Generating unique operation named: updateUsingGET_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingHEAD_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_17
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPUT_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPATCH_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingDELETE_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-13 17:49:25 -Generating unique operation named: updateUsingTRACE_11
2019-04-13 17:49:25 -Generating unique operation named: addUsingGET_17
2019-04-13 17:49:25 -Generating unique operation named: editUsingGET_18
2019-04-13 17:49:25 -Generating unique operation named: listUsingGET_20
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_31
2019-04-13 17:49:25 -Generating unique operation named: removeUsingPOST_32
2019-04-13 17:49:25 -Generating unique operation named: saveUsingPOST_18
2019-04-13 17:49:25 -Generating unique operation named: updateUsingGET_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingHEAD_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPOST_18
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPUT_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingPATCH_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingDELETE_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-13 17:49:25 -Generating unique operation named: updateUsingTRACE_12
2019-04-13 17:49:25 -Starting Quartz Scheduler now
2019-04-13 17:49:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-13 17:49:25 -Starting...
2019-04-13 17:49:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-13 17:49:25 -Started.
2019-04-13 17:49:25 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-13 17:49:25 -Using a shared selector for servlet write/read
2019-04-13 17:49:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-13 17:49:25 -Started BootdoApplication in 23.25 seconds (JVM running for 24.082)
2019-04-13 17:49:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-13 17:49:26 -==> Parameters: 
2019-04-13 17:49:26 -<==      Total: 1
2019-04-13 17:49:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-13 17:49:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-13 17:49:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-04-13 17:49:51 -Enabling session validation scheduler...
2019-04-13 17:49:51 -请求地址 : http://localhost:8081/login;JSESSIONID=68cd9c3f-65ca-4c2e-a375-7cfc6a3ab826
2019-04-13 17:49:51 -HTTP METHOD : GET
2019-04-13 17:49:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 17:49:51 -参数 : [{}]
2019-04-13 17:49:51 -耗时 : 3
2019-04-13 17:49:51 -返回值 : login
2019-04-13 17:49:53 -请求地址 : http://localhost:8081/getVerify
2019-04-13 17:49:53 -HTTP METHOD : GET
2019-04-13 17:49:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-13 17:49:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@53ab6f08, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3fdb552d]
2019-04-13 17:49:53 -3778
2019-04-13 17:49:53 -耗时 : 636
2019-04-13 17:49:53 -返回值 : null
2019-04-13 17:49:53 -请求地址 : http://localhost:8081/login
2019-04-13 17:49:53 -HTTP METHOD : GET
2019-04-13 17:49:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 17:49:53 -参数 : [{}]
2019-04-13 17:49:53 -耗时 : 1
2019-04-13 17:49:53 -返回值 : login
2019-04-13 17:49:58 -请求地址 : http://localhost:8081/login
2019-04-13 17:49:58 -HTTP METHOD : POST
2019-04-13 17:49:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-13 17:49:58 -参数 : [admin, 111111, 3778, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68205b68]
2019-04-13 17:49:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-13 17:49:58 -==> Parameters: admin(String)
2019-04-13 17:49:58 -<==      Total: 1
2019-04-13 17:49:58 -耗时 : 141
2019-04-13 17:49:58 -返回值 : {msg=操作成功, code=0}
2019-04-13 17:49:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-13 17:49:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:49:58 -==> Parameters: 1(Long), admin(String), 登录(String), 142(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-13 17:49:58.633(Timestamp)
2019-04-13 17:49:58 -请求地址 : http://localhost:8081/index
2019-04-13 17:49:58 -HTTP METHOD : GET
2019-04-13 17:49:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 17:49:58 -参数 : [{}]
2019-04-13 17:49:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 17:49:58 -<==    Updates: 1
2019-04-13 17:49:58 -==> Parameters: 1(Long)
2019-04-13 17:49:58 -<==      Total: 48
2019-04-13 17:49:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 17:49:58 -==> Parameters: 138(Long)
2019-04-13 17:49:58 -<==      Total: 1
2019-04-13 17:49:58 -耗时 : 137
2019-04-13 17:49:58 -返回值 : index_v1
2019-04-13 17:49:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:49:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 137(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 17:49:58.919(Timestamp)
2019-04-13 17:49:58 -<==    Updates: 1
2019-04-13 17:49:59 -请求地址 : http://localhost:8081/main
2019-04-13 17:49:59 -HTTP METHOD : GET
2019-04-13 17:49:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 17:49:59 -参数 : []
2019-04-13 17:49:59 -耗时 : 0
2019-04-13 17:49:59 -返回值 : main
2019-04-13 17:49:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 17:49:59 -HTTP METHOD : GET
2019-04-13 17:49:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 17:49:59 -参数 : []
2019-04-13 17:49:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 17:49:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 17:49:59 -<==      Total: 0
2019-04-13 17:49:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 17:49:59 -==> Parameters: 1(Long), 0(String)
2019-04-13 17:49:59 -<==      Total: 1
2019-04-13 17:49:59 -耗时 : 32
2019-04-13 17:49:59 -返回值 : com.bootdo.common.utils.PageUtils@6bb88a29
2019-04-13 17:49:59 -请求地址 : http://localhost:8081/main
2019-04-13 17:49:59 -HTTP METHOD : GET
2019-04-13 17:49:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 17:49:59 -参数 : []
2019-04-13 17:49:59 -耗时 : 1
2019-04-13 17:49:59 -返回值 : main
2019-04-13 17:50:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-13 17:50:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 17:50:22 -==> Parameters: 1(Long)
2019-04-13 17:50:22 -<==      Total: 92
2019-04-13 17:50:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-13 17:50:22 -HTTP METHOD : GET
2019-04-13 17:50:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-13 17:50:22 -参数 : []
2019-04-13 17:50:22 -耗时 : 0
2019-04-13 17:50:22 -返回值 : /moneyLog/elecLog/elecLog
2019-04-13 17:50:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:23 -HTTP METHOD : GET
2019-04-13 17:50:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:23 -参数 : [userType]
2019-04-13 17:50:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:23 -==> Parameters: userType(String)
2019-04-13 17:50:23 -<==      Total: 4
2019-04-13 17:50:23 -耗时 : 21
2019-04-13 17:50:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-13 17:50:23 -HTTP METHOD : GET
2019-04-13 17:50:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-13 17:50:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-13 17:50:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-13 17:50:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:23 -<==      Total: 8
2019-04-13 17:50:23 -==>  Preparing: select count(*) from elec_log 
2019-04-13 17:50:23 -==> Parameters: 
2019-04-13 17:50:23 -<==      Total: 1
2019-04-13 17:50:23 -耗时 : 48
2019-04-13 17:50:23 -返回值 : com.bootdo.common.utils.PageUtils@5fdcf301
2019-04-13 17:50:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-13 17:50:27 -HTTP METHOD : GET
2019-04-13 17:50:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-13 17:50:27 -参数 : []
2019-04-13 17:50:27 -耗时 : 1
2019-04-13 17:50:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-13 17:50:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:28 -HTTP METHOD : GET
2019-04-13 17:50:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:28 -参数 : [userType]
2019-04-13 17:50:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:28 -==> Parameters: userType(String)
2019-04-13 17:50:28 -<==      Total: 4
2019-04-13 17:50:28 -耗时 : 6
2019-04-13 17:50:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-13 17:50:28 -HTTP METHOD : GET
2019-04-13 17:50:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-13 17:50:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-13 17:50:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-13 17:50:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:28 -<==      Total: 6
2019-04-13 17:50:28 -==>  Preparing: select count(*) from heat_log 
2019-04-13 17:50:28 -==> Parameters: 
2019-04-13 17:50:28 -<==      Total: 1
2019-04-13 17:50:28 -耗时 : 26
2019-04-13 17:50:28 -返回值 : com.bootdo.common.utils.PageUtils@50687551
2019-04-13 17:50:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-13 17:50:29 -HTTP METHOD : GET
2019-04-13 17:50:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-13 17:50:29 -参数 : []
2019-04-13 17:50:29 -耗时 : 0
2019-04-13 17:50:29 -返回值 : /moneyLog/waterLog/waterLog
2019-04-13 17:50:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:29 -HTTP METHOD : GET
2019-04-13 17:50:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:29 -参数 : [userType]
2019-04-13 17:50:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:29 -==> Parameters: userType(String)
2019-04-13 17:50:29 -<==      Total: 4
2019-04-13 17:50:29 -耗时 : 8
2019-04-13 17:50:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:29 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:50:29 -HTTP METHOD : GET
2019-04-13 17:50:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:50:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-13 17:50:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-13 17:50:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:29 -<==      Total: 6
2019-04-13 17:50:29 -==>  Preparing: select count(*) from water_log 
2019-04-13 17:50:29 -==> Parameters: 
2019-04-13 17:50:29 -<==      Total: 1
2019-04-13 17:50:29 -耗时 : 28
2019-04-13 17:50:29 -返回值 : com.bootdo.common.utils.PageUtils@760bdc93
2019-04-13 17:50:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-13 17:50:30 -HTTP METHOD : GET
2019-04-13 17:50:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-13 17:50:30 -参数 : []
2019-04-13 17:50:30 -耗时 : 1
2019-04-13 17:50:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-13 17:50:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:31 -HTTP METHOD : GET
2019-04-13 17:50:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:31 -参数 : [userType]
2019-04-13 17:50:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:31 -==> Parameters: userType(String)
2019-04-13 17:50:31 -<==      Total: 4
2019-04-13 17:50:31 -耗时 : 11
2019-04-13 17:50:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-13 17:50:31 -HTTP METHOD : GET
2019-04-13 17:50:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-13 17:50:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-13 17:50:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-13 17:50:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:31 -<==      Total: 8
2019-04-13 17:50:31 -==>  Preparing: select count(*) from elec_log 
2019-04-13 17:50:31 -==> Parameters: 
2019-04-13 17:50:31 -<==      Total: 1
2019-04-13 17:50:31 -耗时 : 17
2019-04-13 17:50:31 -返回值 : com.bootdo.common.utils.PageUtils@75f8d6cc
2019-04-13 17:50:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-13 17:50:40 -HTTP METHOD : GET
2019-04-13 17:50:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-13 17:50:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-04-13 17:50:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-13 17:50:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-13 17:50:40 -<==      Total: 3
2019-04-13 17:50:40 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-04-13 17:50:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-13 17:50:40 -<==      Total: 1
2019-04-13 17:50:40 -耗时 : 11
2019-04-13 17:50:40 -返回值 : com.bootdo.common.utils.PageUtils@3cfec858
2019-04-13 17:50:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-13 17:50:43 -HTTP METHOD : GET
2019-04-13 17:50:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-13 17:50:43 -参数 : []
2019-04-13 17:50:43 -耗时 : 1
2019-04-13 17:50:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-13 17:50:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:43 -HTTP METHOD : GET
2019-04-13 17:50:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:43 -参数 : [userType]
2019-04-13 17:50:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:43 -==> Parameters: userType(String)
2019-04-13 17:50:43 -<==      Total: 4
2019-04-13 17:50:43 -耗时 : 4
2019-04-13 17:50:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-13 17:50:43 -HTTP METHOD : GET
2019-04-13 17:50:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-13 17:50:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-13 17:50:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-13 17:50:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:43 -<==      Total: 6
2019-04-13 17:50:43 -==>  Preparing: select count(*) from heat_log 
2019-04-13 17:50:43 -==> Parameters: 
2019-04-13 17:50:43 -<==      Total: 1
2019-04-13 17:50:43 -耗时 : 10
2019-04-13 17:50:43 -返回值 : com.bootdo.common.utils.PageUtils@8c7a91
2019-04-13 17:50:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-13 17:50:51 -HTTP METHOD : GET
2019-04-13 17:50:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-13 17:50:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=2019-03-08}]
2019-04-13 17:50:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-04-13 17:50:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-13 17:50:51 -<==      Total: 3
2019-04-13 17:50:51 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-04-13 17:50:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-13 17:50:51 -<==      Total: 1
2019-04-13 17:50:51 -耗时 : 13
2019-04-13 17:50:51 -返回值 : com.bootdo.common.utils.PageUtils@66ddc47
2019-04-13 17:50:52 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-13 17:50:52 -HTTP METHOD : GET
2019-04-13 17:50:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-13 17:50:52 -参数 : []
2019-04-13 17:50:52 -耗时 : 1
2019-04-13 17:50:52 -返回值 : /moneyLog/waterLog/waterLog
2019-04-13 17:50:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:50:52 -HTTP METHOD : GET
2019-04-13 17:50:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:50:52 -参数 : [userType]
2019-04-13 17:50:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:50:52 -==> Parameters: userType(String)
2019-04-13 17:50:52 -<==      Total: 4
2019-04-13 17:50:52 -耗时 : 5
2019-04-13 17:50:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:50:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:50:53 -HTTP METHOD : GET
2019-04-13 17:50:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:50:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-13 17:50:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-13 17:50:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-13 17:50:53 -<==      Total: 6
2019-04-13 17:50:53 -==>  Preparing: select count(*) from water_log 
2019-04-13 17:50:53 -==> Parameters: 
2019-04-13 17:50:53 -<==      Total: 1
2019-04-13 17:50:53 -耗时 : 666
2019-04-13 17:50:53 -返回值 : com.bootdo.common.utils.PageUtils@36eca276
2019-04-13 17:51:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:51:01 -HTTP METHOD : GET
2019-04-13 17:51:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:51:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-04-13 17:51:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-13 17:51:01 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-13 17:51:01 -<==      Total: 3
2019-04-13 17:51:01 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-04-13 17:51:01 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-13 17:51:01 -<==      Total: 1
2019-04-13 17:51:01 -耗时 : 12
2019-04-13 17:51:01 -返回值 : com.bootdo.common.utils.PageUtils@3260a507
2019-04-13 17:51:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 17:51:02 -HTTP METHOD : GET
2019-04-13 17:51:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 17:51:02 -参数 : []
2019-04-13 17:51:02 -耗时 : 0
2019-04-13 17:51:02 -返回值 : system/dept/deptTree
2019-04-13 17:51:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 17:51:02 -HTTP METHOD : GET
2019-04-13 17:51:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 17:51:02 -参数 : []
2019-04-13 17:51:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 17:51:03 -==> Parameters: 
2019-04-13 17:51:03 -<==      Total: 3
2019-04-13 17:51:03 -耗时 : 17
2019-04-13 17:51:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 17:51:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:51:04 -HTTP METHOD : GET
2019-04-13 17:51:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:51:04 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-13 17:51:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-04-13 17:51:04 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-04-13 17:51:04 -<==      Total: 2
2019-04-13 17:51:04 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-13 17:51:04 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-04-13 17:51:04 -<==      Total: 1
2019-04-13 17:51:04 -耗时 : 21
2019-04-13 17:51:04 -返回值 : com.bootdo.common.utils.PageUtils@1e0ec8cd
2019-04-13 17:51:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:51:07 -HTTP METHOD : GET
2019-04-13 17:51:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:51:07 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-13 17:51:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-13 17:51:07 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String), 0(Integer), 10(Integer)
2019-04-13 17:51:07 -<==      Total: 2
2019-04-13 17:51:07 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:51:07 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-04-13 17:51:07 -<==      Total: 1
2019-04-13 17:51:07 -耗时 : 22
2019-04-13 17:51:07 -返回值 : com.bootdo.common.utils.PageUtils@c506678
2019-04-13 17:51:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-13 17:51:07 -HTTP METHOD : GET
2019-04-13 17:51:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-13 17:51:07 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-13 17:51:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-13 17:51:07 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String), 0(Integer), 10(Integer)
2019-04-13 17:51:07 -<==      Total: 2
2019-04-13 17:51:07 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:51:07 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-04-13 17:51:07 -<==      Total: 1
2019-04-13 17:51:07 -耗时 : 7
2019-04-13 17:51:07 -返回值 : com.bootdo.common.utils.PageUtils@59f56e6
2019-04-13 17:51:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-04-13 17:51:14 -HTTP METHOD : GET
2019-04-13 17:51:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-13 17:51:14 -参数 : [1, {}]
2019-04-13 17:51:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-13 17:51:14 -==> Parameters: 1(Long)
2019-04-13 17:51:14 -<==      Total: 1
2019-04-13 17:51:14 -耗时 : 9
2019-04-13 17:51:14 -返回值 : moneyLog/waterLog/edit
2019-04-13 17:51:14 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-13 17:51:14 -HTTP METHOD : GET
2019-04-13 17:51:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:51:14 -参数 : [waterType]
2019-04-13 17:51:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:51:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:51:14 -HTTP METHOD : GET
2019-04-13 17:51:14 -==> Parameters: waterType(String)
2019-04-13 17:51:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:51:14 -参数 : [userType]
2019-04-13 17:51:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:51:14 -<==      Total: 6
2019-04-13 17:51:14 -==> Parameters: userType(String)
2019-04-13 17:51:14 -耗时 : 6
2019-04-13 17:51:14 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:51:14 -<==      Total: 4
2019-04-13 17:51:14 -耗时 : 10
2019-04-13 17:51:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:51:21 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 17:51:21 -HTTP METHOD : GET
2019-04-13 17:51:21 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 17:51:21 -参数 : []
2019-04-13 17:51:21 -耗时 : 9
2019-04-13 17:51:21 -返回值 : charts/countDD
2019-04-13 17:51:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 17:51:21 -HTTP METHOD : GET
2019-04-13 17:51:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 17:51:21 -参数 : [userType]
2019-04-13 17:51:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 17:51:21 -==> Parameters: userType(String)
2019-04-13 17:51:21 -<==      Total: 4
2019-04-13 17:51:21 -耗时 : 4
2019-04-13 17:51:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 17:52:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 17:52:09 -HTTP METHOD : GET
2019-04-13 17:52:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 17:52:09 -参数 : []
2019-04-13 17:52:09 -耗时 : 1
2019-04-13 17:52:09 -返回值 : system/dept/deptTree
2019-04-13 17:52:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 17:52:10 -HTTP METHOD : GET
2019-04-13 17:52:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 17:52:10 -参数 : []
2019-04-13 17:52:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 17:52:10 -==> Parameters: 
2019-04-13 17:52:10 -<==      Total: 3
2019-04-13 17:52:10 -耗时 : 3
2019-04-13 17:52:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 17:52:13 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 17:52:13 -HTTP METHOD : POST
2019-04-13 17:52:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 17:52:13 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@708d4db3, com.bootdo.moneyLog.vo.WaterLogVo@436d3626, com.bootdo.moneyLog.vo.HeatLogVo@255c3403]
2019-04-13 17:52:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:13 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:13 -<==      Total: 1
2019-04-13 17:52:13 -耗时 : 39
2019-04-13 17:52:13 -返回值 : com.bootdo.charts.vo.CountDayVo@cbef9a1
2019-04-13 17:52:40 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-13 17:52:40 -HTTP METHOD : GET
2019-04-13 17:52:40 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-13 17:52:40 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7d86424f, com.bootdo.moneyLog.vo.HeatLogVo@f3fa1f6, com.bootdo.moneyLog.vo.WaterLogVo@2562e89e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27f71a09]
2019-04-13 17:52:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:41 -<==      Total: 3
2019-04-13 17:52:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? 
2019-04-13 17:52:41 -==> Parameters: A(String), 2(String)
2019-04-13 17:52:41 -<==      Total: 5
2019-04-13 17:52:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:52:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 17:52:41 -<==      Total: 1
2019-04-13 17:52:41 -耗时 : 1209
2019-04-13 17:52:41 -返回值 : null
2019-04-13 17:57:11 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 17:57:11 -HTTP METHOD : POST
2019-04-13 17:57:11 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 17:57:11 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3b026578, com.bootdo.moneyLog.vo.WaterLogVo@28d35db4, com.bootdo.moneyLog.vo.HeatLogVo@4d152ab6]
2019-04-13 17:57:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:57:11 -==> Parameters: 2019-03-17 00:00:00(String), 2019-03-17 23:59:59(String), A(String), 2(String)
2019-04-13 17:57:11 -<==      Total: 1
2019-04-13 17:57:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 17:57:11 -==> Parameters: 2019-03-17 00:00:00(String), 2019-03-17 23:59:59(String), A(String), 2(String)
2019-04-13 17:57:11 -<==      Total: 1
2019-04-13 17:57:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 17:57:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 17:57:11.535(Timestamp)
2019-04-13 17:57:11 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$e71da279.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 17:57:11 -<==    Updates: 1
2019-04-13 18:02:14 -请求地址 : http://localhost:8081/index
2019-04-13 18:02:14 -HTTP METHOD : GET
2019-04-13 18:02:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:02:14 -参数 : [{}]
2019-04-13 18:02:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:02:14 -==> Parameters: 1(Long)
2019-04-13 18:02:14 -<==      Total: 48
2019-04-13 18:02:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:02:14 -==> Parameters: 138(Long)
2019-04-13 18:02:14 -<==      Total: 1
2019-04-13 18:02:14 -耗时 : 34
2019-04-13 18:02:14 -返回值 : index_v1
2019-04-13 18:02:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:02:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:02:14.491(Timestamp)
2019-04-13 18:02:14 -<==    Updates: 1
2019-04-13 18:02:14 -请求地址 : http://localhost:8081/main
2019-04-13 18:02:14 -HTTP METHOD : GET
2019-04-13 18:02:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:02:14 -参数 : []
2019-04-13 18:02:14 -耗时 : 0
2019-04-13 18:02:14 -返回值 : main
2019-04-13 18:02:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:02:15 -HTTP METHOD : GET
2019-04-13 18:02:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:02:15 -参数 : []
2019-04-13 18:02:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:02:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:02:15 -<==      Total: 0
2019-04-13 18:02:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:02:15 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:02:15 -<==      Total: 1
2019-04-13 18:02:15 -耗时 : 27
2019-04-13 18:02:15 -返回值 : com.bootdo.common.utils.PageUtils@488a5233
2019-04-13 18:02:15 -请求地址 : http://localhost:8081/main
2019-04-13 18:02:15 -HTTP METHOD : GET
2019-04-13 18:02:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:02:15 -参数 : []
2019-04-13 18:02:15 -耗时 : 1
2019-04-13 18:02:15 -返回值 : main
2019-04-13 18:02:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 18:02:17 -==> Parameters: 1(Long)
2019-04-13 18:02:17 -<==      Total: 92
2019-04-13 18:02:17 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:02:17 -HTTP METHOD : GET
2019-04-13 18:02:17 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:02:17 -参数 : []
2019-04-13 18:02:17 -耗时 : 1
2019-04-13 18:02:17 -返回值 : charts/countDD
2019-04-13 18:02:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:02:17 -HTTP METHOD : GET
2019-04-13 18:02:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:02:17 -参数 : [userType]
2019-04-13 18:02:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:02:17 -==> Parameters: userType(String)
2019-04-13 18:02:17 -<==      Total: 4
2019-04-13 18:02:17 -耗时 : 4
2019-04-13 18:02:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:02:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:02:26 -HTTP METHOD : GET
2019-04-13 18:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:02:26 -参数 : []
2019-04-13 18:02:26 -耗时 : 1
2019-04-13 18:02:26 -返回值 : system/dept/deptTree
2019-04-13 18:02:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:02:26 -HTTP METHOD : GET
2019-04-13 18:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:02:26 -参数 : []
2019-04-13 18:02:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:02:26 -==> Parameters: 
2019-04-13 18:02:26 -<==      Total: 3
2019-04-13 18:02:26 -耗时 : 6
2019-04-13 18:02:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:02:28 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:02:28 -HTTP METHOD : POST
2019-04-13 18:02:28 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:02:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@58dc4bb9, com.bootdo.moneyLog.vo.WaterLogVo@166b5e34, com.bootdo.moneyLog.vo.HeatLogVo@3f95481f]
2019-04-13 18:02:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:02:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:02:28 -<==      Total: 1
2019-04-13 18:02:28 -耗时 : 21
2019-04-13 18:02:28 -返回值 : com.bootdo.charts.vo.CountDayVo@550555d8
2019-04-13 18:03:03 -请求地址 : http://localhost:8081/login;JSESSIONID=584df5cf-3f62-4fb6-8646-5cb1e57d62e8
2019-04-13 18:03:03 -HTTP METHOD : GET
2019-04-13 18:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:03:03 -参数 : [{}]
2019-04-13 18:03:03 -耗时 : 1
2019-04-13 18:03:03 -返回值 : login
2019-04-13 18:03:03 -请求地址 : http://localhost:8081/getVerify
2019-04-13 18:03:03 -HTTP METHOD : GET
2019-04-13 18:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-13 18:03:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7be3dbf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7dddc35e]
2019-04-13 18:03:03 -0972
2019-04-13 18:03:03 -耗时 : 40
2019-04-13 18:03:03 -返回值 : null
2019-04-13 18:03:04 -请求地址 : http://localhost:8081/login
2019-04-13 18:03:04 -HTTP METHOD : GET
2019-04-13 18:03:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:03:04 -参数 : [{}]
2019-04-13 18:03:04 -耗时 : 1
2019-04-13 18:03:04 -返回值 : login
2019-04-13 18:03:09 -请求地址 : http://localhost:8081/login
2019-04-13 18:03:09 -HTTP METHOD : POST
2019-04-13 18:03:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-13 18:03:09 -参数 : [admin, 111111, 0972, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e42a392]
2019-04-13 18:03:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-13 18:03:09 -==> Parameters: admin(String)
2019-04-13 18:03:09 -<==      Total: 1
2019-04-13 18:03:09 -耗时 : 4
2019-04-13 18:03:09 -返回值 : {msg=操作成功, code=0}
2019-04-13 18:03:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:03:09 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-13 18:03:09.911(Timestamp)
2019-04-13 18:03:09 -请求地址 : http://localhost:8081/index
2019-04-13 18:03:09 -HTTP METHOD : GET
2019-04-13 18:03:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:03:09 -参数 : [{}]
2019-04-13 18:03:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:03:09 -==> Parameters: 1(Long)
2019-04-13 18:03:09 -<==      Total: 48
2019-04-13 18:03:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:03:09 -==> Parameters: 138(Long)
2019-04-13 18:03:09 -<==      Total: 1
2019-04-13 18:03:09 -耗时 : 30
2019-04-13 18:03:09 -返回值 : index_v1
2019-04-13 18:03:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:03:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:03:09.965(Timestamp)
2019-04-13 18:03:10 -<==    Updates: 1
2019-04-13 18:03:10 -请求地址 : http://localhost:8081/main
2019-04-13 18:03:10 -HTTP METHOD : GET
2019-04-13 18:03:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:03:10 -参数 : []
2019-04-13 18:03:10 -耗时 : 0
2019-04-13 18:03:10 -返回值 : main
2019-04-13 18:03:10 -<==    Updates: 1
2019-04-13 18:03:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:03:10 -HTTP METHOD : GET
2019-04-13 18:03:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:03:10 -参数 : []
2019-04-13 18:03:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:03:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:03:10 -<==      Total: 0
2019-04-13 18:03:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:03:10 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:03:10 -<==      Total: 1
2019-04-13 18:03:10 -耗时 : 14
2019-04-13 18:03:10 -返回值 : com.bootdo.common.utils.PageUtils@5f957227
2019-04-13 18:03:10 -请求地址 : http://localhost:8081/main
2019-04-13 18:03:10 -HTTP METHOD : GET
2019-04-13 18:03:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:03:10 -参数 : []
2019-04-13 18:03:10 -耗时 : 1
2019-04-13 18:03:10 -返回值 : main
2019-04-13 18:03:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 18:03:13 -==> Parameters: 1(Long)
2019-04-13 18:03:13 -<==      Total: 92
2019-04-13 18:03:13 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:03:13 -HTTP METHOD : GET
2019-04-13 18:03:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:03:13 -参数 : []
2019-04-13 18:03:13 -耗时 : 1
2019-04-13 18:03:13 -返回值 : charts/countDD
2019-04-13 18:03:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:03:13 -HTTP METHOD : GET
2019-04-13 18:03:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:03:13 -参数 : [userType]
2019-04-13 18:03:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:03:13 -==> Parameters: userType(String)
2019-04-13 18:03:13 -<==      Total: 4
2019-04-13 18:03:13 -耗时 : 4
2019-04-13 18:03:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:03:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:03:20 -HTTP METHOD : GET
2019-04-13 18:03:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:03:20 -参数 : []
2019-04-13 18:03:20 -耗时 : 0
2019-04-13 18:03:20 -返回值 : system/dept/deptTree
2019-04-13 18:03:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:03:20 -HTTP METHOD : GET
2019-04-13 18:03:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:03:20 -参数 : []
2019-04-13 18:03:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:03:20 -==> Parameters: 
2019-04-13 18:03:20 -<==      Total: 3
2019-04-13 18:03:20 -耗时 : 4
2019-04-13 18:03:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:03:22 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:03:22 -HTTP METHOD : POST
2019-04-13 18:03:22 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:03:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@59b5174e, com.bootdo.moneyLog.vo.WaterLogVo@d274c7e, com.bootdo.moneyLog.vo.HeatLogVo@29790865]
2019-04-13 18:03:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:03:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:03:22 -<==      Total: 1
2019-04-13 18:03:22 -耗时 : 23
2019-04-13 18:03:22 -返回值 : com.bootdo.charts.vo.CountDayVo@6367d92e
2019-04-13 18:06:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 12388 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-13 18:06:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-13 18:06:51 -The following profiles are active: dev
2019-04-13 18:06:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 18:06:51 CST 2019]; root of context hierarchy
2019-04-13 18:06:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-13 18:06:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f27e339] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$818111e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-13 18:06:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-13 18:06:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:06:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-13 18:07:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-13 18:07:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-13 18:07:00 -Starting service [Tomcat]
2019-04-13 18:07:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-13 18:07:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-13 18:07:01 -Initializing Spring embedded WebApplicationContext
2019-04-13 18:07:01 -Root WebApplicationContext: initialization completed in 10009 ms
2019-04-13 18:07:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-13 18:07:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-13 18:07:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-13 18:07:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-13 18:07:02 -Filter xssFilter was not registered (disabled)
2019-04-13 18:07:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-13 18:07:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-13 18:07:02 -Servlet statViewServlet mapped to [/druid/*]
2019-04-13 18:07:02 -Servlet dispatcherServlet mapped to [/]
2019-04-13 18:07:05 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 18:06:51 CST 2019]; root of context hierarchy
2019-04-13 18:07:05 -Using default implementation for ThreadExecutor
2019-04-13 18:07:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-13 18:07:05 -Quartz Scheduler v.2.2.1 created.
2019-04-13 18:07:05 -RAMJobStore initialized.
2019-04-13 18:07:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-13 18:07:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-13 18:07:05 -Quartz scheduler version: 2.2.1
2019-04-13 18:07:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@45984654
2019-04-13 18:07:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-13 18:07:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-13 18:07:09 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 18:07:09 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-13 18:07:09 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-13 18:07:09 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-13 18:07:09 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 18:07:09 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-13 18:07:09 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-13 18:07:09 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-13 18:07:09 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.tableDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-13 18:07:09 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exprotDD(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-13 18:07:09 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-13 18:07:09 -Mapped "{[/charts/tableHeatMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-13 18:07:09 -Mapped "{[/charts/tableWaterMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-13 18:07:09 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-13 18:07:09 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-13 18:07:09 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:09 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-13 18:07:09 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-13 18:07:09 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-13 18:07:09 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-13 18:07:09 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:09 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:09 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-13 18:07:09 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 18:07:09 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-13 18:07:09 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-13 18:07:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-13 18:07:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-13 18:07:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-13 18:07:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-13 18:07:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-13 18:07:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-13 18:07:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-13 18:07:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-13 18:07:09 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-13 18:07:09 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-13 18:07:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-13 18:07:09 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-13 18:07:09 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:09 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-13 18:07:09 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:09 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:09 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-13 18:07:09 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:09 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-13 18:07:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-13 18:07:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-13 18:07:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-13 18:07:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-13 18:07:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-13 18:07:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-13 18:07:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-13 18:07:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-13 18:07:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-13 18:07:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-13 18:07:10 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-13 18:07:10 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 18:07:10 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 18:07:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-13 18:07:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 18:07:10 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-13 18:07:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-13 18:07:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-13 18:07:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-13 18:07:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-13 18:07:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-13 18:07:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-13 18:07:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-13 18:07:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-13 18:07:10 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-13 18:07:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-13 18:07:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-13 18:07:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-13 18:07:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-13 18:07:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-13 18:07:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-13 18:07:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-13 18:07:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-13 18:07:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-13 18:07:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-13 18:07:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-13 18:07:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-13 18:07:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-13 18:07:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-13 18:07:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-13 18:07:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-13 18:07:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-13 18:07:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-13 18:07:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 18:07:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-13 18:07:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-13 18:07:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-13 18:07:10 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-13 18:07:10 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-13 18:07:10 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-13 18:07:10 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-13 18:07:10 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-13 18:07:10 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-13 18:07:10 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-13 18:07:10 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-13 18:07:10 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-13 18:07:10 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-13 18:07:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-13 18:07:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-13 18:07:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-13 18:07:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-13 18:07:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-13 18:07:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-13 18:07:11 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-13 18:07:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 18:07:11 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sat Apr 13 18:06:51 CST 2019]; root of context hierarchy
2019-04-13 18:07:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 18:07:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 18:07:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-13 18:07:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-13 18:07:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-13 18:07:14 -Registering beans for JMX exposure on startup
2019-04-13 18:07:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-13 18:07:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-13 18:07:14 -Starting beans in phase 2147483647
2019-04-13 18:07:14 -Context refreshed
2019-04-13 18:07:14 -Found 1 custom documentation plugin(s)
2019-04-13 18:07:14 -Scanning for api listing references
2019-04-13 18:07:15 -Generating unique operation named: getCountDUsingPOST_1
2019-04-13 18:07:15 -Generating unique operation named: getCountDUsingPOST_2
2019-04-13 18:07:15 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-13 18:07:15 -Generating unique operation named: getCountDUsingPOST_3
2019-04-13 18:07:15 -Generating unique operation named: removeUsingPOST_1
2019-04-13 18:07:15 -Generating unique operation named: addUsingGET_1
2019-04-13 18:07:15 -Generating unique operation named: editUsingGET_1
2019-04-13 18:07:15 -Generating unique operation named: listUsingGET_1
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_2
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_3
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingGET_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingHEAD_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPUT_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPATCH_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingDELETE_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-13 18:07:16 -Generating unique operation named: updateUsingTRACE_1
2019-04-13 18:07:16 -Generating unique operation named: addUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_4
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_5
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_2
2019-04-13 18:07:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-13 18:07:16 -Generating unique operation named: addUsingGET_3
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_3
2019-04-13 18:07:16 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_3
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_6
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_7
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingHEAD_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPUT_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPATCH_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingDELETE_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-13 18:07:16 -Generating unique operation named: updateUsingTRACE_2
2019-04-13 18:07:16 -Generating unique operation named: addUsingGET_4
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_4
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_4
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_8
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_9
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingGET_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingHEAD_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPUT_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPATCH_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingDELETE_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-13 18:07:16 -Generating unique operation named: updateUsingTRACE_3
2019-04-13 18:07:16 -Generating unique operation named: ElecUsingGET_1
2019-04-13 18:07:16 -Generating unique operation named: addUsingGET_5
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_5
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_5
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_10
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_11
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_5
2019-04-13 18:07:16 -Generating unique operation named: updateUsingGET_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingHEAD_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_5
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPUT_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPATCH_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingDELETE_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-13 18:07:16 -Generating unique operation named: updateUsingTRACE_4
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_6
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_6
2019-04-13 18:07:16 -Generating unique operation named: updateUsingPOST_6
2019-04-13 18:07:16 -Generating unique operation named: addUsingGET_6
2019-04-13 18:07:16 -Generating unique operation named: editUsingGET_7
2019-04-13 18:07:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-13 18:07:16 -Generating unique operation named: listUsingGET_7
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_12
2019-04-13 18:07:16 -Generating unique operation named: removeUsingPOST_13
2019-04-13 18:07:16 -Generating unique operation named: saveUsingPOST_6
2019-04-13 18:07:16 -Generating unique operation named: updateUsingGET_5
2019-04-13 18:07:16 -Generating unique operation named: updateUsingHEAD_5
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPUT_5
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPATCH_5
2019-04-13 18:07:17 -Generating unique operation named: updateUsingDELETE_5
2019-04-13 18:07:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-13 18:07:17 -Generating unique operation named: updateUsingTRACE_5
2019-04-13 18:07:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_7
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_8
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_8
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_14
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_15
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingGET_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingHEAD_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPUT_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPATCH_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingDELETE_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-13 18:07:17 -Generating unique operation named: updateUsingTRACE_6
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_8
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_9
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_9
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_16
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_17
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingGET_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingHEAD_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPUT_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPATCH_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingDELETE_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-13 18:07:17 -Generating unique operation named: updateUsingTRACE_7
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_9
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_10
2019-04-13 18:07:17 -Generating unique operation named: infoUsingGET_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingHEAD_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingPOST_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingPUT_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingPATCH_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingDELETE_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-13 18:07:17 -Generating unique operation named: infoUsingTRACE_1
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_10
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_18
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_19
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_10
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_11
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_20
2019-04-13 18:07:17 -Generating unique operation named: welcomeUsingGET_1
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_10
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_11
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_12
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_21
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_10
2019-04-13 18:07:17 -Generating unique operation named: treeUsingGET_1
2019-04-13 18:07:17 -Generating unique operation named: treeUsingGET_2
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_11
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_11
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_12
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_13
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_22
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_23
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_11
2019-04-13 18:07:17 -Generating unique operation named: updateUsingGET_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingHEAD_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_12
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPUT_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPATCH_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingDELETE_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-13 18:07:17 -Generating unique operation named: updateUsingTRACE_8
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_12
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_13
2019-04-13 18:07:17 -Generating unique operation named: listUsingGET_14
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_24
2019-04-13 18:07:17 -Generating unique operation named: removeUsingPOST_25
2019-04-13 18:07:17 -Generating unique operation named: saveUsingPOST_12
2019-04-13 18:07:17 -Generating unique operation named: updateUsingGET_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingHEAD_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPOST_13
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPUT_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingPATCH_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingDELETE_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-13 18:07:17 -Generating unique operation named: updateUsingTRACE_9
2019-04-13 18:07:17 -Generating unique operation named: addUsingGET_13
2019-04-13 18:07:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-13 18:07:17 -Generating unique operation named: editUsingGET_14
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_15
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_13
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_14
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPOST_14
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_16
2019-04-13 18:07:18 -Generating unique operation named: listUsingHEAD_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingPOST_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingPUT_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingPATCH_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingDELETE_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingOPTIONS_1
2019-04-13 18:07:18 -Generating unique operation named: listUsingTRACE_1
2019-04-13 18:07:18 -Generating unique operation named: countDDUsingGET_1
2019-04-13 18:07:18 -Generating unique operation named: getCountDUsingPOST_4
2019-04-13 18:07:18 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-13 18:07:18 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-13 18:07:18 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-13 18:07:18 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-13 18:07:18 -Generating unique operation named: exprotElecLogUsingGET_5
2019-04-13 18:07:18 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-13 18:07:18 -Generating unique operation named: addUsingGET_14
2019-04-13 18:07:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-13 18:07:18 -Generating unique operation named: editUsingGET_15
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_17
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_26
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_15
2019-04-13 18:07:18 -Generating unique operation named: treeUsingGET_3
2019-04-13 18:07:18 -Generating unique operation named: treeViewUsingGET_1
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPOST_15
2019-04-13 18:07:18 -Generating unique operation named: addUsingGET_15
2019-04-13 18:07:18 -Generating unique operation named: editUsingGET_16
2019-04-13 18:07:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_18
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_27
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_28
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_16
2019-04-13 18:07:18 -Generating unique operation named: updateUsingGET_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingHEAD_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPOST_16
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPUT_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPATCH_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingDELETE_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-13 18:07:18 -Generating unique operation named: updateUsingTRACE_10
2019-04-13 18:07:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-13 18:07:18 -Generating unique operation named: addUsingGET_16
2019-04-13 18:07:18 -Generating unique operation named: editUsingGET_17
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_19
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_29
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_30
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_17
2019-04-13 18:07:18 -Generating unique operation named: updateUsingGET_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingHEAD_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPOST_17
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPUT_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPATCH_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingDELETE_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-13 18:07:18 -Generating unique operation named: updateUsingTRACE_11
2019-04-13 18:07:18 -Generating unique operation named: addUsingGET_17
2019-04-13 18:07:18 -Generating unique operation named: editUsingGET_18
2019-04-13 18:07:18 -Generating unique operation named: listUsingGET_20
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_31
2019-04-13 18:07:18 -Generating unique operation named: removeUsingPOST_32
2019-04-13 18:07:18 -Generating unique operation named: saveUsingPOST_18
2019-04-13 18:07:18 -Generating unique operation named: updateUsingGET_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingHEAD_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPOST_18
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPUT_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingPATCH_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingDELETE_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-13 18:07:18 -Generating unique operation named: updateUsingTRACE_12
2019-04-13 18:07:18 -Starting Quartz Scheduler now
2019-04-13 18:07:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-13 18:07:18 -Starting...
2019-04-13 18:07:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-13 18:07:18 -Started.
2019-04-13 18:07:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-13 18:07:18 -Using a shared selector for servlet write/read
2019-04-13 18:07:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-13 18:07:18 -Started BootdoApplication in 29.289 seconds (JVM running for 30.283)
2019-04-13 18:07:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-13 18:07:19 -==> Parameters: 
2019-04-13 18:07:19 -<==      Total: 1
2019-04-13 18:07:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-13 18:07:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-13 18:07:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-04-13 18:07:30 -Enabling session validation scheduler...
2019-04-13 18:07:30 -请求地址 : http://localhost:8081/login;JSESSIONID=9a493478-3fa3-44fa-8376-ab2ca6ca8cd5
2019-04-13 18:07:30 -HTTP METHOD : GET
2019-04-13 18:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:07:30 -参数 : [{}]
2019-04-13 18:07:30 -耗时 : 5
2019-04-13 18:07:30 -返回值 : login
2019-04-13 18:07:32 -请求地址 : http://localhost:8081/getVerify
2019-04-13 18:07:32 -HTTP METHOD : GET
2019-04-13 18:07:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-13 18:07:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b04b2f6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3d3d22e0]
2019-04-13 18:07:32 -4624
2019-04-13 18:07:32 -耗时 : 468
2019-04-13 18:07:32 -返回值 : null
2019-04-13 18:07:32 -请求地址 : http://localhost:8081/login
2019-04-13 18:07:32 -HTTP METHOD : GET
2019-04-13 18:07:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:07:32 -参数 : [{}]
2019-04-13 18:07:32 -耗时 : 1
2019-04-13 18:07:32 -返回值 : login
2019-04-13 18:07:42 -请求地址 : http://localhost:8081/login
2019-04-13 18:07:42 -HTTP METHOD : POST
2019-04-13 18:07:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-13 18:07:42 -参数 : [admin, 111111, 4624, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5436d026]
2019-04-13 18:07:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-13 18:07:42 -==> Parameters: admin(String)
2019-04-13 18:07:42 -<==      Total: 1
2019-04-13 18:07:42 -耗时 : 60
2019-04-13 18:07:42 -返回值 : {msg=操作成功, code=0}
2019-04-13 18:07:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-13 18:07:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:07:42 -==> Parameters: 1(Long), admin(String), 登录(String), 61(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-13 18:07:42.863(Timestamp)
2019-04-13 18:07:42 -请求地址 : http://localhost:8081/index
2019-04-13 18:07:42 -HTTP METHOD : GET
2019-04-13 18:07:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:07:42 -参数 : [{}]
2019-04-13 18:07:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:07:43 -<==    Updates: 1
2019-04-13 18:07:43 -==> Parameters: 1(Long)
2019-04-13 18:07:43 -<==      Total: 48
2019-04-13 18:07:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:07:43 -==> Parameters: 138(Long)
2019-04-13 18:07:43 -<==      Total: 1
2019-04-13 18:07:43 -耗时 : 254
2019-04-13 18:07:43 -返回值 : index_v1
2019-04-13 18:07:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:07:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 254(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:07:43.229(Timestamp)
2019-04-13 18:07:43 -<==    Updates: 1
2019-04-13 18:07:43 -请求地址 : http://localhost:8081/main
2019-04-13 18:07:43 -HTTP METHOD : GET
2019-04-13 18:07:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:07:43 -参数 : []
2019-04-13 18:07:43 -耗时 : 1
2019-04-13 18:07:43 -返回值 : main
2019-04-13 18:07:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:07:44 -HTTP METHOD : GET
2019-04-13 18:07:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:07:44 -参数 : []
2019-04-13 18:07:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:07:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:07:44 -<==      Total: 0
2019-04-13 18:07:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:07:44 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:07:44 -<==      Total: 1
2019-04-13 18:07:44 -耗时 : 59
2019-04-13 18:07:44 -返回值 : com.bootdo.common.utils.PageUtils@36fdd1f6
2019-04-13 18:07:44 -请求地址 : http://localhost:8081/main
2019-04-13 18:07:44 -HTTP METHOD : GET
2019-04-13 18:07:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:07:44 -参数 : []
2019-04-13 18:07:44 -耗时 : 5
2019-04-13 18:07:44 -返回值 : main
2019-04-13 18:07:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 18:07:56 -==> Parameters: 1(Long)
2019-04-13 18:07:56 -<==      Total: 92
2019-04-13 18:07:56 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:07:56 -HTTP METHOD : GET
2019-04-13 18:07:56 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:07:56 -参数 : []
2019-04-13 18:07:56 -耗时 : 13
2019-04-13 18:07:56 -返回值 : charts/countDD
2019-04-13 18:07:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:07:57 -HTTP METHOD : GET
2019-04-13 18:07:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:07:57 -参数 : [userType]
2019-04-13 18:07:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:07:57 -==> Parameters: userType(String)
2019-04-13 18:07:57 -<==      Total: 4
2019-04-13 18:07:57 -耗时 : 28
2019-04-13 18:07:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:08:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:08:05 -HTTP METHOD : GET
2019-04-13 18:08:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:08:05 -参数 : []
2019-04-13 18:08:05 -耗时 : 0
2019-04-13 18:08:05 -返回值 : system/dept/deptTree
2019-04-13 18:08:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:08:05 -HTTP METHOD : GET
2019-04-13 18:08:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:08:05 -参数 : []
2019-04-13 18:08:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:08:05 -==> Parameters: 
2019-04-13 18:08:05 -<==      Total: 3
2019-04-13 18:08:05 -耗时 : 24
2019-04-13 18:08:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:08:11 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-13 18:08:21 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:08:21 -HTTP METHOD : POST
2019-04-13 18:08:21 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:08:21 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7c385075, com.bootdo.moneyLog.vo.WaterLogVo@78e0592, com.bootdo.moneyLog.vo.HeatLogVo@5b5e7afb]
2019-04-13 18:08:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:08:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:08:21 -<==      Total: 1
2019-04-13 18:08:21 -耗时 : 31
2019-04-13 18:08:21 -返回值 : com.bootdo.charts.vo.CountDayVo@7108875b
2019-04-13 18:09:21 -请求地址 : http://localhost:8081/index
2019-04-13 18:09:21 -HTTP METHOD : GET
2019-04-13 18:09:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:09:21 -参数 : [{}]
2019-04-13 18:09:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:09:21 -==> Parameters: 1(Long)
2019-04-13 18:09:21 -<==      Total: 48
2019-04-13 18:09:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:09:21 -==> Parameters: 138(Long)
2019-04-13 18:09:21 -<==      Total: 1
2019-04-13 18:09:21 -耗时 : 43
2019-04-13 18:09:21 -返回值 : index_v1
2019-04-13 18:09:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:09:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 44(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:09:21.831(Timestamp)
2019-04-13 18:09:22 -请求地址 : http://localhost:8081/main
2019-04-13 18:09:22 -HTTP METHOD : GET
2019-04-13 18:09:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:09:22 -参数 : []
2019-04-13 18:09:22 -耗时 : 1
2019-04-13 18:09:22 -返回值 : main
2019-04-13 18:09:22 -<==    Updates: 1
2019-04-13 18:09:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:09:22 -HTTP METHOD : GET
2019-04-13 18:09:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:09:22 -参数 : []
2019-04-13 18:09:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:09:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:09:22 -<==      Total: 0
2019-04-13 18:09:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:09:22 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:09:22 -<==      Total: 1
2019-04-13 18:09:22 -耗时 : 7
2019-04-13 18:09:22 -返回值 : com.bootdo.common.utils.PageUtils@19abc12f
2019-04-13 18:09:22 -请求地址 : http://localhost:8081/main
2019-04-13 18:09:22 -HTTP METHOD : GET
2019-04-13 18:09:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:09:22 -参数 : []
2019-04-13 18:09:22 -耗时 : 1
2019-04-13 18:09:22 -返回值 : main
2019-04-13 18:09:25 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:09:25 -HTTP METHOD : GET
2019-04-13 18:09:25 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:09:25 -参数 : []
2019-04-13 18:09:25 -耗时 : 1
2019-04-13 18:09:25 -返回值 : charts/countDD
2019-04-13 18:09:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:09:25 -HTTP METHOD : GET
2019-04-13 18:09:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:09:25 -参数 : [userType]
2019-04-13 18:09:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:09:25 -==> Parameters: userType(String)
2019-04-13 18:09:25 -<==      Total: 4
2019-04-13 18:09:25 -耗时 : 4
2019-04-13 18:09:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:09:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:09:31 -HTTP METHOD : GET
2019-04-13 18:09:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:09:31 -参数 : []
2019-04-13 18:09:31 -耗时 : 1
2019-04-13 18:09:31 -返回值 : system/dept/deptTree
2019-04-13 18:09:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:09:32 -HTTP METHOD : GET
2019-04-13 18:09:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:09:32 -参数 : []
2019-04-13 18:09:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:09:32 -==> Parameters: 
2019-04-13 18:09:32 -<==      Total: 3
2019-04-13 18:09:32 -耗时 : 6
2019-04-13 18:09:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:09:33 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:09:33 -HTTP METHOD : POST
2019-04-13 18:09:33 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:09:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3becccdf, com.bootdo.moneyLog.vo.WaterLogVo@4e4ce761, com.bootdo.moneyLog.vo.HeatLogVo@5bb8aeb9]
2019-04-13 18:09:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:09:33 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:09:33 -<==      Total: 1
2019-04-13 18:09:33 -耗时 : 24
2019-04-13 18:09:33 -返回值 : com.bootdo.charts.vo.CountDayVo@11a307fb
2019-04-13 18:10:25 -请求地址 : http://localhost:8081/login;JSESSIONID=8d64976a-71a4-43e9-9728-6c38a29f9d14
2019-04-13 18:10:25 -HTTP METHOD : GET
2019-04-13 18:10:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:10:25 -参数 : [{}]
2019-04-13 18:10:25 -耗时 : 1
2019-04-13 18:10:25 -返回值 : login
2019-04-13 18:10:26 -请求地址 : http://localhost:8081/getVerify
2019-04-13 18:10:26 -HTTP METHOD : GET
2019-04-13 18:10:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-13 18:10:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38ae016b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@771826ef]
2019-04-13 18:10:26 -1143
2019-04-13 18:10:26 -耗时 : 19
2019-04-13 18:10:26 -返回值 : null
2019-04-13 18:10:26 -请求地址 : http://localhost:8081/login
2019-04-13 18:10:26 -HTTP METHOD : GET
2019-04-13 18:10:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-13 18:10:26 -参数 : [{}]
2019-04-13 18:10:26 -耗时 : 0
2019-04-13 18:10:26 -返回值 : login
2019-04-13 18:10:29 -请求地址 : http://localhost:8081/login
2019-04-13 18:10:29 -HTTP METHOD : POST
2019-04-13 18:10:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-13 18:10:29 -参数 : [admin, 111111, 1143, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55c2e46f]
2019-04-13 18:10:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-13 18:10:29 -==> Parameters: admin(String)
2019-04-13 18:10:29 -<==      Total: 1
2019-04-13 18:10:29 -耗时 : 7
2019-04-13 18:10:29 -返回值 : {msg=操作成功, code=0}
2019-04-13 18:10:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:10:29 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-13 18:10:29.906(Timestamp)
2019-04-13 18:10:29 -请求地址 : http://localhost:8081/index
2019-04-13 18:10:29 -HTTP METHOD : GET
2019-04-13 18:10:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:10:29 -参数 : [{}]
2019-04-13 18:10:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:10:29 -==> Parameters: 1(Long)
2019-04-13 18:10:30 -<==    Updates: 1
2019-04-13 18:10:30 -<==      Total: 48
2019-04-13 18:10:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:10:30 -==> Parameters: 138(Long)
2019-04-13 18:10:30 -<==      Total: 1
2019-04-13 18:10:30 -耗时 : 206
2019-04-13 18:10:30 -返回值 : index_v1
2019-04-13 18:10:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:10:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 206(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:10:30.139(Timestamp)
2019-04-13 18:10:30 -<==    Updates: 1
2019-04-13 18:10:30 -请求地址 : http://localhost:8081/main
2019-04-13 18:10:30 -HTTP METHOD : GET
2019-04-13 18:10:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:10:30 -参数 : []
2019-04-13 18:10:30 -耗时 : 1
2019-04-13 18:10:30 -返回值 : main
2019-04-13 18:10:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:10:30 -HTTP METHOD : GET
2019-04-13 18:10:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:10:30 -参数 : []
2019-04-13 18:10:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:10:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:10:30 -<==      Total: 0
2019-04-13 18:10:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:10:30 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:10:30 -<==      Total: 1
2019-04-13 18:10:30 -耗时 : 58
2019-04-13 18:10:30 -返回值 : com.bootdo.common.utils.PageUtils@6c1ff43d
2019-04-13 18:10:30 -请求地址 : http://localhost:8081/main
2019-04-13 18:10:30 -HTTP METHOD : GET
2019-04-13 18:10:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:10:30 -参数 : []
2019-04-13 18:10:30 -耗时 : 1
2019-04-13 18:10:30 -返回值 : main
2019-04-13 18:10:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 18:10:35 -==> Parameters: 1(Long)
2019-04-13 18:10:35 -<==      Total: 92
2019-04-13 18:10:35 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:10:35 -HTTP METHOD : GET
2019-04-13 18:10:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:10:35 -参数 : []
2019-04-13 18:10:35 -耗时 : 1
2019-04-13 18:10:35 -返回值 : charts/countDD
2019-04-13 18:10:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:10:36 -HTTP METHOD : GET
2019-04-13 18:10:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:10:36 -参数 : [userType]
2019-04-13 18:10:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:10:36 -==> Parameters: userType(String)
2019-04-13 18:10:36 -<==      Total: 4
2019-04-13 18:10:36 -耗时 : 7
2019-04-13 18:10:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:10:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:10:43 -HTTP METHOD : GET
2019-04-13 18:10:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:10:43 -参数 : []
2019-04-13 18:10:43 -耗时 : 0
2019-04-13 18:10:43 -返回值 : system/dept/deptTree
2019-04-13 18:10:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:10:43 -HTTP METHOD : GET
2019-04-13 18:10:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:10:43 -参数 : []
2019-04-13 18:10:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:10:43 -==> Parameters: 
2019-04-13 18:10:43 -<==      Total: 3
2019-04-13 18:10:43 -耗时 : 5
2019-04-13 18:10:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:10:45 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:10:45 -HTTP METHOD : POST
2019-04-13 18:10:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:10:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6d175c0f, com.bootdo.moneyLog.vo.WaterLogVo@2d937ed2, com.bootdo.moneyLog.vo.HeatLogVo@460e553c]
2019-04-13 18:10:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:10:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:10:45 -<==      Total: 1
2019-04-13 18:10:45 -耗时 : 19
2019-04-13 18:10:45 -返回值 : com.bootdo.charts.vo.CountDayVo@5a04ecc
2019-04-13 18:10:56 -请求地址 : http://localhost:8081/index
2019-04-13 18:10:56 -HTTP METHOD : GET
2019-04-13 18:10:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:10:56 -参数 : [{}]
2019-04-13 18:10:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:10:56 -==> Parameters: 1(Long)
2019-04-13 18:10:56 -<==      Total: 48
2019-04-13 18:10:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:10:56 -==> Parameters: 138(Long)
2019-04-13 18:10:56 -<==      Total: 1
2019-04-13 18:10:56 -耗时 : 32
2019-04-13 18:10:56 -返回值 : index_v1
2019-04-13 18:10:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:10:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:10:56.687(Timestamp)
2019-04-13 18:10:56 -<==    Updates: 1
2019-04-13 18:10:56 -请求地址 : http://localhost:8081/main
2019-04-13 18:10:56 -HTTP METHOD : GET
2019-04-13 18:10:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:10:56 -参数 : []
2019-04-13 18:10:56 -耗时 : 0
2019-04-13 18:10:56 -返回值 : main
2019-04-13 18:10:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:10:57 -HTTP METHOD : GET
2019-04-13 18:10:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:10:57 -参数 : []
2019-04-13 18:10:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:10:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:10:57 -<==      Total: 0
2019-04-13 18:10:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:10:57 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:10:57 -<==      Total: 1
2019-04-13 18:10:57 -耗时 : 6
2019-04-13 18:10:57 -返回值 : com.bootdo.common.utils.PageUtils@2115eaaa
2019-04-13 18:10:57 -请求地址 : http://localhost:8081/main
2019-04-13 18:10:57 -HTTP METHOD : GET
2019-04-13 18:10:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:10:57 -参数 : []
2019-04-13 18:10:57 -耗时 : 1
2019-04-13 18:10:57 -返回值 : main
2019-04-13 18:10:59 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-13 18:10:59 -HTTP METHOD : GET
2019-04-13 18:10:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-13 18:10:59 -参数 : []
2019-04-13 18:10:59 -耗时 : 13
2019-04-13 18:10:59 -返回值 : charts/tableDD
2019-04-13 18:11:02 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:11:02 -HTTP METHOD : GET
2019-04-13 18:11:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:11:02 -参数 : []
2019-04-13 18:11:02 -耗时 : 1
2019-04-13 18:11:02 -返回值 : charts/countDD
2019-04-13 18:11:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:11:02 -HTTP METHOD : GET
2019-04-13 18:11:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:11:02 -参数 : [userType]
2019-04-13 18:11:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:11:02 -==> Parameters: userType(String)
2019-04-13 18:11:02 -<==      Total: 4
2019-04-13 18:11:02 -耗时 : 6
2019-04-13 18:11:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:11:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:11:19 -HTTP METHOD : GET
2019-04-13 18:11:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:11:19 -参数 : []
2019-04-13 18:11:19 -耗时 : 0
2019-04-13 18:11:19 -返回值 : system/dept/deptTree
2019-04-13 18:11:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:11:19 -HTTP METHOD : GET
2019-04-13 18:11:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:11:19 -参数 : []
2019-04-13 18:11:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:11:19 -==> Parameters: 
2019-04-13 18:11:19 -<==      Total: 3
2019-04-13 18:11:19 -耗时 : 4
2019-04-13 18:11:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:11:21 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:11:21 -HTTP METHOD : POST
2019-04-13 18:11:21 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:11:21 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4cd7f423, com.bootdo.moneyLog.vo.WaterLogVo@1571746a, com.bootdo.moneyLog.vo.HeatLogVo@5cdf156]
2019-04-13 18:11:21 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:11:21 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:11:21 -<==      Total: 1
2019-04-13 18:11:21 -耗时 : 19
2019-04-13 18:11:21 -返回值 : com.bootdo.charts.vo.CountDayVo@6c61f758
2019-04-13 18:12:09 -请求地址 : http://localhost:8081/index
2019-04-13 18:12:09 -HTTP METHOD : GET
2019-04-13 18:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:12:09 -参数 : [{}]
2019-04-13 18:12:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:12:09 -==> Parameters: 1(Long)
2019-04-13 18:12:09 -<==      Total: 48
2019-04-13 18:12:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:12:09 -==> Parameters: 138(Long)
2019-04-13 18:12:09 -<==      Total: 1
2019-04-13 18:12:09 -耗时 : 26
2019-04-13 18:12:09 -返回值 : index_v1
2019-04-13 18:12:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:12:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:12:09.093(Timestamp)
2019-04-13 18:12:09 -请求地址 : http://localhost:8081/main
2019-04-13 18:12:09 -HTTP METHOD : GET
2019-04-13 18:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:12:09 -参数 : []
2019-04-13 18:12:09 -耗时 : 1
2019-04-13 18:12:09 -返回值 : main
2019-04-13 18:12:09 -<==    Updates: 1
2019-04-13 18:12:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:12:09 -HTTP METHOD : GET
2019-04-13 18:12:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:12:09 -参数 : []
2019-04-13 18:12:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:12:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:12:09 -<==      Total: 0
2019-04-13 18:12:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:12:09 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:12:09 -<==      Total: 1
2019-04-13 18:12:09 -耗时 : 8
2019-04-13 18:12:09 -返回值 : com.bootdo.common.utils.PageUtils@3fcc97f6
2019-04-13 18:12:09 -请求地址 : http://localhost:8081/main
2019-04-13 18:12:09 -HTTP METHOD : GET
2019-04-13 18:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:12:09 -参数 : []
2019-04-13 18:12:09 -耗时 : 0
2019-04-13 18:12:09 -返回值 : main
2019-04-13 18:12:12 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:12:12 -HTTP METHOD : GET
2019-04-13 18:12:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:12:12 -参数 : []
2019-04-13 18:12:12 -耗时 : 1
2019-04-13 18:12:12 -返回值 : charts/countDD
2019-04-13 18:12:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:12:12 -HTTP METHOD : GET
2019-04-13 18:12:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:12:12 -参数 : [userType]
2019-04-13 18:12:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:12:12 -==> Parameters: userType(String)
2019-04-13 18:12:12 -<==      Total: 4
2019-04-13 18:12:12 -耗时 : 4
2019-04-13 18:12:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:12:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:12:22 -HTTP METHOD : GET
2019-04-13 18:12:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:12:22 -参数 : []
2019-04-13 18:12:22 -耗时 : 0
2019-04-13 18:12:22 -返回值 : system/dept/deptTree
2019-04-13 18:12:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:12:22 -HTTP METHOD : GET
2019-04-13 18:12:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:12:22 -参数 : []
2019-04-13 18:12:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:12:22 -==> Parameters: 
2019-04-13 18:12:22 -<==      Total: 3
2019-04-13 18:12:22 -耗时 : 4
2019-04-13 18:12:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:12:24 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:12:24 -HTTP METHOD : POST
2019-04-13 18:12:24 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:12:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@230be768, com.bootdo.moneyLog.vo.WaterLogVo@76a1a9ba, com.bootdo.moneyLog.vo.HeatLogVo@29b20958]
2019-04-13 18:12:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:24 -<==      Total: 1
2019-04-13 18:12:24 -耗时 : 17
2019-04-13 18:12:24 -返回值 : com.bootdo.charts.vo.CountDayVo@5313548c
2019-04-13 18:12:40 -请求地址 : http://localhost:8081/index
2019-04-13 18:12:40 -HTTP METHOD : GET
2019-04-13 18:12:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:12:40 -参数 : [{}]
2019-04-13 18:12:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:12:40 -==> Parameters: 1(Long)
2019-04-13 18:12:40 -<==      Total: 48
2019-04-13 18:12:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:12:40 -==> Parameters: 138(Long)
2019-04-13 18:12:40 -<==      Total: 1
2019-04-13 18:12:40 -耗时 : 29
2019-04-13 18:12:40 -返回值 : index_v1
2019-04-13 18:12:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:12:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:12:40.143(Timestamp)
2019-04-13 18:12:40 -<==    Updates: 1
2019-04-13 18:12:40 -请求地址 : http://localhost:8081/main
2019-04-13 18:12:40 -HTTP METHOD : GET
2019-04-13 18:12:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:12:40 -参数 : []
2019-04-13 18:12:40 -耗时 : 0
2019-04-13 18:12:40 -返回值 : main
2019-04-13 18:12:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:12:40 -HTTP METHOD : GET
2019-04-13 18:12:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:12:40 -参数 : []
2019-04-13 18:12:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:12:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:12:40 -<==      Total: 0
2019-04-13 18:12:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:12:40 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:12:40 -<==      Total: 1
2019-04-13 18:12:40 -耗时 : 6
2019-04-13 18:12:40 -返回值 : com.bootdo.common.utils.PageUtils@427f40e1
2019-04-13 18:12:40 -请求地址 : http://localhost:8081/main
2019-04-13 18:12:40 -HTTP METHOD : GET
2019-04-13 18:12:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:12:40 -参数 : []
2019-04-13 18:12:40 -耗时 : 1
2019-04-13 18:12:40 -返回值 : main
2019-04-13 18:12:42 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:12:42 -HTTP METHOD : GET
2019-04-13 18:12:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:12:42 -参数 : []
2019-04-13 18:12:42 -耗时 : 1
2019-04-13 18:12:42 -返回值 : charts/countDD
2019-04-13 18:12:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:12:43 -HTTP METHOD : GET
2019-04-13 18:12:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:12:43 -参数 : [userType]
2019-04-13 18:12:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:12:43 -==> Parameters: userType(String)
2019-04-13 18:12:43 -<==      Total: 4
2019-04-13 18:12:43 -耗时 : 4
2019-04-13 18:12:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:12:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:12:48 -HTTP METHOD : GET
2019-04-13 18:12:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:12:48 -参数 : []
2019-04-13 18:12:48 -耗时 : 0
2019-04-13 18:12:48 -返回值 : system/dept/deptTree
2019-04-13 18:12:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:12:48 -HTTP METHOD : GET
2019-04-13 18:12:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:12:48 -参数 : []
2019-04-13 18:12:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:12:48 -==> Parameters: 
2019-04-13 18:12:48 -<==      Total: 3
2019-04-13 18:12:48 -耗时 : 8
2019-04-13 18:12:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:12:50 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:12:50 -HTTP METHOD : POST
2019-04-13 18:12:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:12:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5fead721, com.bootdo.moneyLog.vo.WaterLogVo@5e101b28, com.bootdo.moneyLog.vo.HeatLogVo@65f8a8f6]
2019-04-13 18:12:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:50 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:50 -<==      Total: 1
2019-04-13 18:12:50 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:12:50 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), A(String), 2(String)
2019-04-13 18:12:50 -<==      Total: 1
2019-04-13 18:12:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:12:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:12:50.326(Timestamp)
2019-04-13 18:12:50 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:12:50 -<==    Updates: 1
2019-04-13 18:22:36 -请求地址 : http://localhost:8081/index
2019-04-13 18:22:36 -HTTP METHOD : GET
2019-04-13 18:22:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:22:36 -参数 : [{}]
2019-04-13 18:22:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:22:36 -==> Parameters: 1(Long)
2019-04-13 18:22:36 -<==      Total: 48
2019-04-13 18:22:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:22:36 -==> Parameters: 138(Long)
2019-04-13 18:22:36 -<==      Total: 1
2019-04-13 18:22:36 -耗时 : 24
2019-04-13 18:22:36 -返回值 : index_v1
2019-04-13 18:22:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:22:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:22:36.602(Timestamp)
2019-04-13 18:22:36 -<==    Updates: 1
2019-04-13 18:22:36 -请求地址 : http://localhost:8081/main
2019-04-13 18:22:36 -HTTP METHOD : GET
2019-04-13 18:22:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:22:36 -参数 : []
2019-04-13 18:22:36 -耗时 : 1
2019-04-13 18:22:36 -返回值 : main
2019-04-13 18:22:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:22:37 -HTTP METHOD : GET
2019-04-13 18:22:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:22:37 -参数 : []
2019-04-13 18:22:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:22:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:22:37 -<==      Total: 0
2019-04-13 18:22:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:22:37 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:22:37 -<==      Total: 1
2019-04-13 18:22:37 -耗时 : 6
2019-04-13 18:22:37 -返回值 : com.bootdo.common.utils.PageUtils@2deed4a
2019-04-13 18:22:37 -请求地址 : http://localhost:8081/main
2019-04-13 18:22:37 -HTTP METHOD : GET
2019-04-13 18:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:22:37 -参数 : []
2019-04-13 18:22:37 -耗时 : 1
2019-04-13 18:22:37 -返回值 : main
2019-04-13 18:27:48 -请求地址 : http://localhost:8081/index
2019-04-13 18:27:48 -HTTP METHOD : GET
2019-04-13 18:27:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:27:48 -参数 : [{}]
2019-04-13 18:27:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:27:48 -==> Parameters: 1(Long)
2019-04-13 18:27:49 -<==      Total: 48
2019-04-13 18:27:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:27:49 -==> Parameters: 138(Long)
2019-04-13 18:27:49 -<==      Total: 1
2019-04-13 18:27:49 -耗时 : 113
2019-04-13 18:27:49 -返回值 : index_v1
2019-04-13 18:27:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:27:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 114(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:27:49.026(Timestamp)
2019-04-13 18:27:49 -<==    Updates: 1
2019-04-13 18:27:49 -请求地址 : http://localhost:8081/main
2019-04-13 18:27:49 -HTTP METHOD : GET
2019-04-13 18:27:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:27:49 -参数 : []
2019-04-13 18:27:49 -耗时 : 1
2019-04-13 18:27:49 -返回值 : main
2019-04-13 18:27:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:27:49 -HTTP METHOD : GET
2019-04-13 18:27:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:27:49 -参数 : []
2019-04-13 18:27:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:27:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:27:49 -<==      Total: 0
2019-04-13 18:27:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:27:49 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:27:49 -<==      Total: 1
2019-04-13 18:27:49 -耗时 : 5
2019-04-13 18:27:49 -返回值 : com.bootdo.common.utils.PageUtils@3081799f
2019-04-13 18:27:49 -请求地址 : http://localhost:8081/main
2019-04-13 18:27:49 -HTTP METHOD : GET
2019-04-13 18:27:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:27:49 -参数 : []
2019-04-13 18:27:49 -耗时 : 0
2019-04-13 18:27:49 -返回值 : main
2019-04-13 18:27:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-13 18:27:52 -==> Parameters: 1(Long)
2019-04-13 18:27:52 -<==      Total: 92
2019-04-13 18:27:52 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:27:52 -HTTP METHOD : GET
2019-04-13 18:27:52 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:27:52 -参数 : []
2019-04-13 18:27:52 -耗时 : 1
2019-04-13 18:27:52 -返回值 : charts/countDD
2019-04-13 18:27:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:27:52 -HTTP METHOD : GET
2019-04-13 18:27:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:27:52 -参数 : [userType]
2019-04-13 18:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:27:52 -==> Parameters: userType(String)
2019-04-13 18:27:52 -<==      Total: 4
2019-04-13 18:27:52 -耗时 : 4
2019-04-13 18:27:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:27:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:27:58 -HTTP METHOD : GET
2019-04-13 18:27:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:27:58 -参数 : []
2019-04-13 18:27:58 -耗时 : 0
2019-04-13 18:27:58 -返回值 : system/dept/deptTree
2019-04-13 18:27:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:27:58 -HTTP METHOD : GET
2019-04-13 18:27:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:27:58 -参数 : []
2019-04-13 18:27:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:27:58 -==> Parameters: 
2019-04-13 18:27:58 -<==      Total: 3
2019-04-13 18:27:58 -耗时 : 3
2019-04-13 18:27:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:28:00 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:28:00 -HTTP METHOD : POST
2019-04-13 18:28:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:28:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5e5ab7b, com.bootdo.moneyLog.vo.WaterLogVo@3d1519d7, com.bootdo.moneyLog.vo.HeatLogVo@6b682abd]
2019-04-13 18:28:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:28:00 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:28:00 -<==      Total: 1
2019-04-13 18:28:00 -耗时 : 17
2019-04-13 18:28:00 -返回值 : com.bootdo.charts.vo.CountDayVo@4226f9df
2019-04-13 18:29:11 -请求地址 : http://localhost:8081/index
2019-04-13 18:29:11 -HTTP METHOD : GET
2019-04-13 18:29:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:29:11 -参数 : [{}]
2019-04-13 18:29:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:29:11 -==> Parameters: 1(Long)
2019-04-13 18:29:11 -<==      Total: 48
2019-04-13 18:29:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:29:11 -==> Parameters: 138(Long)
2019-04-13 18:29:11 -<==      Total: 1
2019-04-13 18:29:11 -耗时 : 23
2019-04-13 18:29:11 -返回值 : index_v1
2019-04-13 18:29:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:29:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:29:11.845(Timestamp)
2019-04-13 18:29:11 -请求地址 : http://localhost:8081/main
2019-04-13 18:29:11 -HTTP METHOD : GET
2019-04-13 18:29:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:29:11 -参数 : []
2019-04-13 18:29:11 -耗时 : 2
2019-04-13 18:29:11 -返回值 : main
2019-04-13 18:29:11 -<==    Updates: 1
2019-04-13 18:29:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:29:12 -HTTP METHOD : GET
2019-04-13 18:29:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:29:12 -参数 : []
2019-04-13 18:29:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:29:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:29:12 -<==      Total: 0
2019-04-13 18:29:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:29:12 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:29:12 -<==      Total: 1
2019-04-13 18:29:12 -耗时 : 10
2019-04-13 18:29:12 -返回值 : com.bootdo.common.utils.PageUtils@4a59d954
2019-04-13 18:29:12 -请求地址 : http://localhost:8081/main
2019-04-13 18:29:12 -HTTP METHOD : GET
2019-04-13 18:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:29:12 -参数 : []
2019-04-13 18:29:12 -耗时 : 1
2019-04-13 18:29:12 -返回值 : main
2019-04-13 18:29:13 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:29:13 -HTTP METHOD : GET
2019-04-13 18:29:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:29:13 -参数 : []
2019-04-13 18:29:13 -耗时 : 1
2019-04-13 18:29:13 -返回值 : charts/countDD
2019-04-13 18:29:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:29:14 -HTTP METHOD : GET
2019-04-13 18:29:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:29:14 -参数 : [userType]
2019-04-13 18:29:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:29:14 -==> Parameters: userType(String)
2019-04-13 18:29:14 -<==      Total: 4
2019-04-13 18:29:14 -耗时 : 4
2019-04-13 18:29:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:29:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:29:22 -HTTP METHOD : GET
2019-04-13 18:29:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:29:22 -参数 : []
2019-04-13 18:29:22 -耗时 : 1
2019-04-13 18:29:22 -返回值 : system/dept/deptTree
2019-04-13 18:29:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:29:22 -HTTP METHOD : GET
2019-04-13 18:29:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:29:22 -参数 : []
2019-04-13 18:29:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:29:22 -==> Parameters: 
2019-04-13 18:29:22 -<==      Total: 3
2019-04-13 18:29:22 -耗时 : 5
2019-04-13 18:29:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:29:34 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:29:34 -HTTP METHOD : POST
2019-04-13 18:29:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:29:34 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3960c716, com.bootdo.moneyLog.vo.WaterLogVo@7e2bdba1, com.bootdo.moneyLog.vo.HeatLogVo@2eb58d03]
2019-04-13 18:29:34 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:29:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:29:34 -<==      Total: 1
2019-04-13 18:29:34 -耗时 : 20
2019-04-13 18:29:34 -返回值 : com.bootdo.charts.vo.CountDayVo@77627562
2019-04-13 18:29:52 -请求地址 : http://localhost:8081/index
2019-04-13 18:29:52 -HTTP METHOD : GET
2019-04-13 18:29:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:29:52 -参数 : [{}]
2019-04-13 18:29:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:29:52 -==> Parameters: 1(Long)
2019-04-13 18:29:52 -<==      Total: 48
2019-04-13 18:29:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:29:52 -==> Parameters: 138(Long)
2019-04-13 18:29:52 -<==      Total: 1
2019-04-13 18:29:52 -耗时 : 24
2019-04-13 18:29:52 -返回值 : index_v1
2019-04-13 18:29:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:29:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:29:52.117(Timestamp)
2019-04-13 18:29:52 -请求地址 : http://localhost:8081/main
2019-04-13 18:29:52 -HTTP METHOD : GET
2019-04-13 18:29:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:29:52 -参数 : []
2019-04-13 18:29:52 -耗时 : 0
2019-04-13 18:29:52 -返回值 : main
2019-04-13 18:29:52 -<==    Updates: 1
2019-04-13 18:29:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:29:52 -HTTP METHOD : GET
2019-04-13 18:29:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:29:52 -参数 : []
2019-04-13 18:29:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:29:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:29:52 -<==      Total: 0
2019-04-13 18:29:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:29:52 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:29:52 -<==      Total: 1
2019-04-13 18:29:52 -耗时 : 8
2019-04-13 18:29:52 -返回值 : com.bootdo.common.utils.PageUtils@64cc392
2019-04-13 18:29:52 -请求地址 : http://localhost:8081/main
2019-04-13 18:29:52 -HTTP METHOD : GET
2019-04-13 18:29:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:29:52 -参数 : []
2019-04-13 18:29:52 -耗时 : 1
2019-04-13 18:29:52 -返回值 : main
2019-04-13 18:29:54 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:29:54 -HTTP METHOD : GET
2019-04-13 18:29:54 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:29:54 -参数 : []
2019-04-13 18:29:54 -耗时 : 1
2019-04-13 18:29:54 -返回值 : charts/countDD
2019-04-13 18:29:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:29:54 -HTTP METHOD : GET
2019-04-13 18:29:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:29:54 -参数 : [userType]
2019-04-13 18:29:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:29:54 -==> Parameters: userType(String)
2019-04-13 18:29:54 -<==      Total: 4
2019-04-13 18:29:54 -耗时 : 4
2019-04-13 18:29:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:30:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:30:00 -HTTP METHOD : GET
2019-04-13 18:30:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:30:00 -参数 : []
2019-04-13 18:30:00 -耗时 : 1
2019-04-13 18:30:00 -返回值 : system/dept/deptTree
2019-04-13 18:30:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:30:01 -HTTP METHOD : GET
2019-04-13 18:30:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:30:01 -参数 : []
2019-04-13 18:30:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:30:01 -==> Parameters: 
2019-04-13 18:30:01 -<==      Total: 3
2019-04-13 18:30:01 -耗时 : 4
2019-04-13 18:30:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:30:02 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:30:02 -HTTP METHOD : POST
2019-04-13 18:30:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:30:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2c9b8973, com.bootdo.moneyLog.vo.WaterLogVo@4d86aa5a, com.bootdo.moneyLog.vo.HeatLogVo@29ab1fed]
2019-04-13 18:30:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:02 -<==      Total: 1
2019-04-13 18:30:02 -耗时 : 18
2019-04-13 18:30:02 -返回值 : com.bootdo.charts.vo.CountDayVo@6d1cafb0
2019-04-13 18:30:14 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:30:14 -HTTP METHOD : POST
2019-04-13 18:30:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:30:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@11513886, com.bootdo.moneyLog.vo.WaterLogVo@34ec1385, com.bootdo.moneyLog.vo.HeatLogVo@65f24b0f]
2019-04-13 18:30:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:14 -==> Parameters: 2019-08-19 00:00:00(String), 2019-08-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:14 -<==      Total: 1
2019-04-13 18:30:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:30:14 -==> Parameters: 2019-08-19 00:00:00(String), 2019-08-19 23:59:59(String), A(String), 2(String)
2019-04-13 18:30:14 -<==      Total: 1
2019-04-13 18:30:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:30:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:30:14.803(Timestamp)
2019-04-13 18:30:14 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:30:14 -<==    Updates: 1
2019-04-13 18:31:58 -请求地址 : http://localhost:8081/index
2019-04-13 18:31:58 -HTTP METHOD : GET
2019-04-13 18:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-13 18:31:58 -参数 : [{}]
2019-04-13 18:31:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-13 18:31:58 -==> Parameters: 1(Long)
2019-04-13 18:31:58 -<==      Total: 48
2019-04-13 18:31:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-13 18:31:58 -==> Parameters: 138(Long)
2019-04-13 18:31:58 -<==      Total: 1
2019-04-13 18:31:58 -耗时 : 24
2019-04-13 18:31:58 -返回值 : index_v1
2019-04-13 18:31:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:31:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"(String), 127.0.0.1(String), 2019-04-13 18:31:58.577(Timestamp)
2019-04-13 18:31:58 -<==    Updates: 1
2019-04-13 18:31:58 -请求地址 : http://localhost:8081/main
2019-04-13 18:31:58 -HTTP METHOD : GET
2019-04-13 18:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:31:58 -参数 : []
2019-04-13 18:31:58 -耗时 : 0
2019-04-13 18:31:58 -返回值 : main
2019-04-13 18:31:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-13 18:31:58 -HTTP METHOD : GET
2019-04-13 18:31:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-13 18:31:58 -参数 : []
2019-04-13 18:31:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-13 18:31:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-13 18:31:58 -<==      Total: 0
2019-04-13 18:31:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-13 18:31:58 -==> Parameters: 1(Long), 0(String)
2019-04-13 18:31:58 -<==      Total: 1
2019-04-13 18:31:58 -耗时 : 32
2019-04-13 18:31:58 -返回值 : com.bootdo.common.utils.PageUtils@1414a6f5
2019-04-13 18:31:58 -请求地址 : http://localhost:8081/main
2019-04-13 18:31:58 -HTTP METHOD : GET
2019-04-13 18:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-13 18:31:58 -参数 : []
2019-04-13 18:31:58 -耗时 : 0
2019-04-13 18:31:58 -返回值 : main
2019-04-13 18:32:01 -请求地址 : http://localhost:8081/charts/countDD
2019-04-13 18:32:01 -HTTP METHOD : GET
2019-04-13 18:32:01 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-13 18:32:01 -参数 : []
2019-04-13 18:32:01 -耗时 : 0
2019-04-13 18:32:01 -返回值 : charts/countDD
2019-04-13 18:32:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-13 18:32:01 -HTTP METHOD : GET
2019-04-13 18:32:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-13 18:32:01 -参数 : [userType]
2019-04-13 18:32:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-13 18:32:01 -==> Parameters: userType(String)
2019-04-13 18:32:01 -<==      Total: 4
2019-04-13 18:32:01 -耗时 : 4
2019-04-13 18:32:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-13 18:32:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-13 18:32:08 -HTTP METHOD : GET
2019-04-13 18:32:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-13 18:32:08 -参数 : []
2019-04-13 18:32:08 -耗时 : 1
2019-04-13 18:32:08 -返回值 : system/dept/deptTree
2019-04-13 18:32:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-13 18:32:08 -HTTP METHOD : GET
2019-04-13 18:32:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-13 18:32:08 -参数 : []
2019-04-13 18:32:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-13 18:32:08 -==> Parameters: 
2019-04-13 18:32:08 -<==      Total: 3
2019-04-13 18:32:08 -耗时 : 4
2019-04-13 18:32:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-13 18:32:10 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:32:10 -HTTP METHOD : POST
2019-04-13 18:32:10 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:32:10 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4d33ea6, com.bootdo.moneyLog.vo.WaterLogVo@7518466d, com.bootdo.moneyLog.vo.HeatLogVo@4561fff8]
2019-04-13 18:32:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:10 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:10 -<==      Total: 1
2019-04-13 18:32:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:10 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:10 -<==      Total: 1
2019-04-13 18:32:10 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:32:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:32:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:32:10.259(Timestamp)
2019-04-13 18:32:10 -<==    Updates: 1
2019-04-13 18:32:13 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:32:13 -HTTP METHOD : POST
2019-04-13 18:32:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:32:13 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4f63958c, com.bootdo.moneyLog.vo.WaterLogVo@4bf4764d, com.bootdo.moneyLog.vo.HeatLogVo@758c61e6]
2019-04-13 18:32:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:13 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:13 -<==      Total: 1
2019-04-13 18:32:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:13 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:13 -<==      Total: 1
2019-04-13 18:32:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:32:13 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:32:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:32:13.388(Timestamp)
2019-04-13 18:32:13 -<==    Updates: 1
2019-04-13 18:32:15 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:32:15 -HTTP METHOD : POST
2019-04-13 18:32:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:32:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@736fbae1, com.bootdo.moneyLog.vo.WaterLogVo@4761055, com.bootdo.moneyLog.vo.HeatLogVo@5eb37d05]
2019-04-13 18:32:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:15 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:15 -<==      Total: 1
2019-04-13 18:32:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:15 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:15 -<==      Total: 1
2019-04-13 18:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:32:15 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:32:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:32:15.811(Timestamp)
2019-04-13 18:32:15 -<==    Updates: 1
2019-04-13 18:32:18 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-13 18:32:18 -HTTP METHOD : POST
2019-04-13 18:32:18 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-13 18:32:18 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5f46b102, com.bootdo.moneyLog.vo.WaterLogVo@7ca645ef, com.bootdo.moneyLog.vo.HeatLogVo@4db46780]
2019-04-13 18:32:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:18 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:18 -<==      Total: 1
2019-04-13 18:32:18 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-13 18:32:18 -==> Parameters: 2019-03-01 00:00:00(String), 2019-03-01 23:59:59(String), A(String), 2(String)
2019-04-13 18:32:18 -<==      Total: 1
2019-04-13 18:32:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-13 18:32:18 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:64)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:69)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$8f4c8101.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-13 18:32:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-13 18:32:18.616(Timestamp)
2019-04-13 18:32:18 -<==    Updates: 1
2019-04-13 18:38:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-04-13 19:07:29 -Validating all active sessions...
2019-04-13 19:07:30 -Finished session validation.  [2] sessions were stopped.
2019-04-13 19:08:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-04-13 19:38:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1300]
2019-04-13 20:07:29 -Validating all active sessions...
2019-04-13 20:07:29 -Finished session validation.  No sessions were stopped.
2019-04-13 20:08:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1733]
2019-04-13 20:38:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2166]
2019-04-13 21:07:29 -Validating all active sessions...
2019-04-13 21:07:29 -Finished session validation.  No sessions were stopped.
2019-04-13 21:08:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2599]
2019-04-13 21:38:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3032]
2019-04-13 22:07:29 -Validating all active sessions...
2019-04-13 22:07:29 -Finished session validation.  No sessions were stopped.
2019-04-13 22:08:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3465]
2019-04-13 22:38:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3898]

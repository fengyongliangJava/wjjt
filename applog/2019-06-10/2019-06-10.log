2019-06-10 17:46:41 -Starting BootdoApplication on PC-201905091110 with PID 21096 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-10 17:46:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-10 17:46:41 -The following profiles are active: dev
2019-06-10 17:46:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e985ce9: startup date [Mon Jun 10 17:46:41 CST 2019]; root of context hierarchy
2019-06-10 17:46:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 17:47:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5740b653] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4999e4fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-10 17:47:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-10 17:47:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 17:47:07 -Tomcat initialized with port(s): 8081 (http)
2019-06-10 17:47:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-10 17:47:07 -Starting service [Tomcat]
2019-06-10 17:47:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-10 17:47:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-10 17:47:08 -Initializing Spring embedded WebApplicationContext
2019-06-10 17:47:08 -Root WebApplicationContext: initialization completed in 26170 ms
2019-06-10 17:47:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-10 17:47:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-10 17:47:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-10 17:47:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-10 17:47:09 -Filter xssFilter was not registered (disabled)
2019-06-10 17:47:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-10 17:47:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-10 17:47:09 -Servlet statViewServlet mapped to [/druid/*]
2019-06-10 17:47:09 -Servlet dispatcherServlet mapped to [/]
2019-06-10 17:47:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e985ce9: startup date [Mon Jun 10 17:46:41 CST 2019]; root of context hierarchy
2019-06-10 17:47:17 -Using default implementation for ThreadExecutor
2019-06-10 17:47:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-10 17:47:17 -Quartz Scheduler v.2.3.0 created.
2019-06-10 17:47:17 -RAMJobStore initialized.
2019-06-10 17:47:17 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-10 17:47:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-10 17:47:17 -Quartz scheduler version: 2.3.0
2019-06-10 17:47:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6949cead
2019-06-10 17:47:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-10 17:47:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-10 17:47:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-10 17:47:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-10 17:47:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-10 17:47:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-10 17:47:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-10 17:47:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-10 17:47:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-10 17:47:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-10 17:47:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-10 17:47:23 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-10 17:47:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-10 17:47:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-10 17:47:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-10 17:47:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-10 17:47:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-10 17:47:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-10 17:47:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 17:47:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-10 17:47:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 17:47:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-10 17:47:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-10 17:47:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-10 17:47:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-10 17:47:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-10 17:47:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-10 17:47:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-10 17:47:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-10 17:47:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-10 17:47:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-10 17:47:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-10 17:47:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-10 17:47:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-10 17:47:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-10 17:47:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-10 17:47:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-10 17:47:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-10 17:47:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-10 17:47:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-10 17:47:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-10 17:47:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-10 17:47:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-10 17:47:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-10 17:47:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-10 17:47:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-10 17:47:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-10 17:47:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-10 17:47:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-10 17:47:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-10 17:47:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-10 17:47:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-10 17:47:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-10 17:47:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-10 17:47:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-10 17:47:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-10 17:47:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-10 17:47:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-10 17:47:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-10 17:47:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-10 17:47:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-10 17:47:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-10 17:47:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-10 17:47:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-10 17:47:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-10 17:47:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-10 17:47:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-10 17:47:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 17:47:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 17:47:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-10 17:47:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-10 17:47:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-10 17:47:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-10 17:47:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-10 17:47:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-10 17:47:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-10 17:47:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 17:47:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-10 17:47:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-10 17:47:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 17:47:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 17:47:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 17:47:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-10 17:47:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-10 17:47:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-10 17:47:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-10 17:47:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-10 17:47:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-10 17:47:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 17:47:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e985ce9: startup date [Mon Jun 10 17:46:41 CST 2019]; root of context hierarchy
2019-06-10 17:47:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 17:47:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 17:47:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-10 17:47:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-10 17:47:37 -Registering beans for JMX exposure on startup
2019-06-10 17:47:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-10 17:47:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-10 17:47:37 -Starting beans in phase 2147483647
2019-06-10 17:47:37 -Context refreshed
2019-06-10 17:47:37 -Found 1 custom documentation plugin(s)
2019-06-10 17:47:37 -Scanning for api listing references
2019-06-10 17:47:38 -Generating unique operation named: removeUsingPOST_1
2019-06-10 17:47:38 -Generating unique operation named: addUsingGET_1
2019-06-10 17:47:38 -Generating unique operation named: editUsingGET_1
2019-06-10 17:47:38 -Generating unique operation named: listUsingGET_1
2019-06-10 17:47:38 -Generating unique operation named: removeUsingPOST_2
2019-06-10 17:47:38 -Generating unique operation named: removeUsingPOST_3
2019-06-10 17:47:38 -Generating unique operation named: saveUsingPOST_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingGET_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingHEAD_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingPOST_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingPUT_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingPATCH_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingDELETE_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-10 17:47:38 -Generating unique operation named: updateUsingTRACE_1
2019-06-10 17:47:39 -Generating unique operation named: addUsingGET_2
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_2
2019-06-10 17:47:39 -Generating unique operation named: listUsingGET_2
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_4
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_5
2019-06-10 17:47:39 -Generating unique operation named: saveUsingPOST_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPOST_2
2019-06-10 17:47:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-10 17:47:39 -Generating unique operation named: addUsingGET_3
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_3
2019-06-10 17:47:39 -Generating unique operation named: listUsingGET_3
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_6
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_7
2019-06-10 17:47:39 -Generating unique operation named: saveUsingPOST_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingGET_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingHEAD_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPOST_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPUT_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPATCH_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingDELETE_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-10 17:47:39 -Generating unique operation named: updateUsingTRACE_2
2019-06-10 17:47:39 -Generating unique operation named: addUsingGET_4
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_4
2019-06-10 17:47:39 -Generating unique operation named: listUsingGET_4
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_8
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_9
2019-06-10 17:47:39 -Generating unique operation named: saveUsingPOST_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingGET_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingHEAD_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPOST_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPUT_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPATCH_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingDELETE_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-10 17:47:39 -Generating unique operation named: updateUsingTRACE_3
2019-06-10 17:47:39 -Generating unique operation named: ElecUsingGET_1
2019-06-10 17:47:39 -Generating unique operation named: addUsingGET_5
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_5
2019-06-10 17:47:39 -Generating unique operation named: listUsingGET_5
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_10
2019-06-10 17:47:39 -Generating unique operation named: removeUsingPOST_11
2019-06-10 17:47:39 -Generating unique operation named: saveUsingPOST_5
2019-06-10 17:47:39 -Generating unique operation named: updateUsingGET_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingHEAD_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPOST_5
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPUT_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPATCH_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingDELETE_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-10 17:47:39 -Generating unique operation named: updateUsingTRACE_4
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_6
2019-06-10 17:47:39 -Generating unique operation named: listUsingGET_6
2019-06-10 17:47:39 -Generating unique operation named: updateUsingPOST_6
2019-06-10 17:47:39 -Generating unique operation named: addUsingGET_6
2019-06-10 17:47:39 -Generating unique operation named: editUsingGET_7
2019-06-10 17:47:40 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-10 17:47:40 -Generating unique operation named: listUsingGET_7
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_12
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_13
2019-06-10 17:47:40 -Generating unique operation named: saveUsingPOST_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingGET_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingHEAD_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPOST_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPUT_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPATCH_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingDELETE_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-10 17:47:40 -Generating unique operation named: updateUsingTRACE_5
2019-06-10 17:47:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-10 17:47:40 -Generating unique operation named: addUsingGET_7
2019-06-10 17:47:40 -Generating unique operation named: editUsingGET_8
2019-06-10 17:47:40 -Generating unique operation named: listUsingGET_8
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_14
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_15
2019-06-10 17:47:40 -Generating unique operation named: saveUsingPOST_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingGET_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingHEAD_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPOST_8
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPUT_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPATCH_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingDELETE_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-10 17:47:40 -Generating unique operation named: updateUsingTRACE_6
2019-06-10 17:47:40 -Generating unique operation named: addUsingGET_8
2019-06-10 17:47:40 -Generating unique operation named: editUsingGET_9
2019-06-10 17:47:40 -Generating unique operation named: listUsingGET_9
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_16
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_17
2019-06-10 17:47:40 -Generating unique operation named: saveUsingPOST_8
2019-06-10 17:47:40 -Generating unique operation named: updateUsingGET_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingHEAD_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPOST_9
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPUT_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPATCH_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingDELETE_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-10 17:47:40 -Generating unique operation named: updateUsingTRACE_7
2019-06-10 17:47:40 -Generating unique operation named: addUsingGET_9
2019-06-10 17:47:40 -Generating unique operation named: editUsingGET_10
2019-06-10 17:47:40 -Generating unique operation named: infoUsingGET_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingHEAD_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingPOST_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingPUT_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingPATCH_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingDELETE_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-10 17:47:40 -Generating unique operation named: infoUsingTRACE_1
2019-06-10 17:47:40 -Generating unique operation named: listUsingGET_10
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_18
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_19
2019-06-10 17:47:40 -Generating unique operation named: saveUsingPOST_9
2019-06-10 17:47:40 -Generating unique operation named: updateUsingPOST_10
2019-06-10 17:47:40 -Generating unique operation named: listUsingGET_11
2019-06-10 17:47:40 -Generating unique operation named: removeUsingPOST_20
2019-06-10 17:47:41 -Generating unique operation named: welcomeUsingGET_1
2019-06-10 17:47:41 -Generating unique operation named: addUsingGET_10
2019-06-10 17:47:41 -Generating unique operation named: editUsingGET_11
2019-06-10 17:47:41 -Generating unique operation named: listUsingGET_12
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_21
2019-06-10 17:47:41 -Generating unique operation named: saveUsingPOST_10
2019-06-10 17:47:41 -Generating unique operation named: treeUsingGET_1
2019-06-10 17:47:41 -Generating unique operation named: treeUsingGET_2
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPOST_11
2019-06-10 17:47:41 -Generating unique operation named: addUsingGET_11
2019-06-10 17:47:41 -Generating unique operation named: editUsingGET_12
2019-06-10 17:47:41 -Generating unique operation named: listUsingGET_13
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_22
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_23
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPOST_12
2019-06-10 17:47:41 -Generating unique operation named: addUsingGET_12
2019-06-10 17:47:41 -Generating unique operation named: editUsingGET_13
2019-06-10 17:47:41 -Generating unique operation named: listUsingGET_14
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_24
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_25
2019-06-10 17:47:41 -Generating unique operation named: saveUsingPOST_11
2019-06-10 17:47:41 -Generating unique operation named: updateUsingGET_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingHEAD_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPOST_13
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPUT_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPATCH_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingDELETE_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-10 17:47:41 -Generating unique operation named: updateUsingTRACE_8
2019-06-10 17:47:41 -Generating unique operation named: addUsingGET_13
2019-06-10 17:47:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-10 17:47:41 -Generating unique operation named: editUsingGET_14
2019-06-10 17:47:41 -Generating unique operation named: listUsingGET_15
2019-06-10 17:47:41 -Generating unique operation named: printEditUsingGET_1
2019-06-10 17:47:41 -Generating unique operation named: removeUsingPOST_26
2019-06-10 17:47:41 -Generating unique operation named: saveUsingPOST_12
2019-06-10 17:47:41 -Generating unique operation named: updateUsingGET_9
2019-06-10 17:47:41 -Generating unique operation named: updateUsingHEAD_9
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPOST_14
2019-06-10 17:47:41 -Generating unique operation named: updateUsingPUT_9
2019-06-10 17:47:42 -Generating unique operation named: updateUsingPATCH_9
2019-06-10 17:47:42 -Generating unique operation named: updateUsingDELETE_9
2019-06-10 17:47:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-10 17:47:42 -Generating unique operation named: updateUsingTRACE_9
2019-06-10 17:47:42 -Generating unique operation named: addUsingGET_14
2019-06-10 17:47:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-10 17:47:42 -Generating unique operation named: editUsingGET_15
2019-06-10 17:47:42 -Generating unique operation named: listUsingGET_16
2019-06-10 17:47:42 -Generating unique operation named: saveUsingPOST_13
2019-06-10 17:47:42 -Generating unique operation named: saveUsingPOST_14
2019-06-10 17:47:42 -Generating unique operation named: updateUsingPOST_15
2019-06-10 17:47:42 -Generating unique operation named: listUsingGET_17
2019-06-10 17:47:42 -Generating unique operation named: listUsingHEAD_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingPOST_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingPUT_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingPATCH_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingDELETE_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingOPTIONS_1
2019-06-10 17:47:42 -Generating unique operation named: listUsingTRACE_1
2019-06-10 17:47:42 -Generating unique operation named: countDDUsingGET_1
2019-06-10 17:47:42 -Generating unique operation named: exportDDUsingGET_1
2019-06-10 17:47:42 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-10 17:47:42 -Generating unique operation named: addUsingGET_15
2019-06-10 17:47:42 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-10 17:47:42 -Generating unique operation named: editUsingGET_16
2019-06-10 17:47:42 -Generating unique operation named: listUsingGET_18
2019-06-10 17:47:42 -Generating unique operation named: removeUsingPOST_27
2019-06-10 17:47:42 -Generating unique operation named: saveUsingPOST_15
2019-06-10 17:47:42 -Generating unique operation named: treeUsingGET_3
2019-06-10 17:47:42 -Generating unique operation named: treeViewUsingGET_1
2019-06-10 17:47:42 -Generating unique operation named: updateUsingPOST_16
2019-06-10 17:47:43 -Generating unique operation named: addUsingGET_16
2019-06-10 17:47:43 -Generating unique operation named: editUsingGET_17
2019-06-10 17:47:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-10 17:47:43 -Generating unique operation named: listUsingGET_19
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_28
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_29
2019-06-10 17:47:43 -Generating unique operation named: saveUsingPOST_16
2019-06-10 17:47:43 -Generating unique operation named: updateUsingGET_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingHEAD_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPOST_17
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPUT_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPATCH_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingDELETE_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-10 17:47:43 -Generating unique operation named: updateUsingTRACE_10
2019-06-10 17:47:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-10 17:47:43 -Generating unique operation named: addUsingGET_17
2019-06-10 17:47:43 -Generating unique operation named: editUsingGET_18
2019-06-10 17:47:43 -Generating unique operation named: listUsingGET_20
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_30
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_31
2019-06-10 17:47:43 -Generating unique operation named: saveUsingPOST_17
2019-06-10 17:47:43 -Generating unique operation named: updateUsingGET_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingHEAD_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPOST_18
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPUT_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPATCH_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingDELETE_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-10 17:47:43 -Generating unique operation named: updateUsingTRACE_11
2019-06-10 17:47:43 -Generating unique operation named: addUsingGET_18
2019-06-10 17:47:43 -Generating unique operation named: editUsingGET_19
2019-06-10 17:47:43 -Generating unique operation named: listUsingGET_21
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_32
2019-06-10 17:47:43 -Generating unique operation named: removeUsingPOST_33
2019-06-10 17:47:43 -Generating unique operation named: saveUsingPOST_18
2019-06-10 17:47:43 -Generating unique operation named: updateUsingGET_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingHEAD_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPOST_19
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPUT_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingPATCH_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingDELETE_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-10 17:47:43 -Generating unique operation named: updateUsingTRACE_12
2019-06-10 17:47:43 -Starting Quartz Scheduler now
2019-06-10 17:47:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-10 17:47:43 -Starting...
2019-06-10 17:47:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-10 17:47:43 -Started.
2019-06-10 17:47:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-10 17:47:43 -Using a shared selector for servlet write/read
2019-06-10 17:47:44 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-10 17:47:44 -Started BootdoApplication in 67.683 seconds (JVM running for 71.482)
2019-06-10 17:47:44 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-10 17:47:44 -==> Parameters: 
2019-06-10 17:47:45 -<==      Total: 1
2019-06-10 17:48:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-10 17:48:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-10 17:48:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 85 ms
2019-06-10 17:48:05 -Enabling session validation scheduler...
2019-06-10 17:48:05 -请求地址 : http://localhost:8081/login;JSESSIONID=4050eb51-67b7-4205-ae25-8f6b530634f6
2019-06-10 17:48:05 -HTTP METHOD : GET
2019-06-10 17:48:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 17:48:05 -参数 : [{}]
2019-06-10 17:48:05 -耗时 : 6
2019-06-10 17:48:05 -返回值 : login
2019-06-10 17:48:18 -请求地址 : http://localhost:8081/getVerify
2019-06-10 17:48:18 -HTTP METHOD : GET
2019-06-10 17:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-10 17:48:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@21cadfdc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@15bb0cf9]
2019-06-10 17:48:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-10 17:48:31 -8666
2019-06-10 17:48:33 -耗时 : 15261
2019-06-10 17:48:33 -返回值 : null
2019-06-10 17:48:38 -请求地址 : http://localhost:8081/login
2019-06-10 17:48:38 -HTTP METHOD : POST
2019-06-10 17:48:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-10 17:48:38 -参数 : [admin, 111111, 8666, org.apache.shiro.web.servlet.ShiroHttpServletRequest@72cccbde]
2019-06-10 17:48:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-10 17:48:38 -==> Parameters: admin(String)
2019-06-10 17:48:39 -<==      Total: 1
2019-06-10 17:48:39 -耗时 : 1068
2019-06-10 17:48:39 -返回值 : {msg=操作成功, code=0}
2019-06-10 17:48:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-10 17:48:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 17:48:39 -==> Parameters: 1(Long), admin(String), 登录(String), 1068(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-10 17:48:39.595(Timestamp)
2019-06-10 17:48:39 -请求地址 : http://localhost:8081/index
2019-06-10 17:48:39 -HTTP METHOD : GET
2019-06-10 17:48:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 17:48:39 -参数 : [{}]
2019-06-10 17:48:40 -<==    Updates: 1
2019-06-10 17:48:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 17:48:40 -==> Parameters: 1(Long)
2019-06-10 17:48:41 -<==      Total: 50
2019-06-10 17:48:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 17:48:41 -==> Parameters: 138(Long)
2019-06-10 17:48:41 -<==      Total: 1
2019-06-10 17:48:41 -耗时 : 1250
2019-06-10 17:48:41 -返回值 : index_v1
2019-06-10 17:48:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 17:48:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1250(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 17:48:41.392(Timestamp)
2019-06-10 17:48:42 -请求地址 : http://localhost:8081/main
2019-06-10 17:48:42 -HTTP METHOD : GET
2019-06-10 17:48:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:48:42 -参数 : []
2019-06-10 17:48:42 -耗时 : 49
2019-06-10 17:48:42 -返回值 : main
2019-06-10 17:48:42 -<==    Updates: 1
2019-06-10 17:48:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 17:48:44 -HTTP METHOD : GET
2019-06-10 17:48:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 17:48:44 -参数 : []
2019-06-10 17:48:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 17:48:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 17:48:44 -请求地址 : http://localhost:8081/main
2019-06-10 17:48:44 -HTTP METHOD : GET
2019-06-10 17:48:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:48:44 -参数 : []
2019-06-10 17:48:44 -耗时 : 1
2019-06-10 17:48:44 -返回值 : main
2019-06-10 17:48:45 -<==      Total: 0
2019-06-10 17:48:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 17:48:45 -==> Parameters: 1(Long), 0(String)
2019-06-10 17:48:45 -<==      Total: 1
2019-06-10 17:48:45 -耗时 : 1353
2019-06-10 17:48:45 -返回值 : com.bootdo.common.utils.PageUtils@22d50178
2019-06-10 17:48:50 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/695/_w05v0e6/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-10 17:48:50 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-10 17:48:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 17:48:50 -==> Parameters: 1(Long)
2019-06-10 17:48:51 -<==      Total: 94
2019-06-10 17:48:51 -请求地址 : http://localhost:8081/print/print
2019-06-10 17:48:51 -HTTP METHOD : GET
2019-06-10 17:48:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 17:48:51 -参数 : []
2019-06-10 17:48:51 -耗时 : 0
2019-06-10 17:48:51 -返回值 : print/print/print
2019-06-10 17:49:07 -请求地址 : http://localhost:8081/index
2019-06-10 17:49:07 -HTTP METHOD : GET
2019-06-10 17:49:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 17:49:07 -参数 : [{}]
2019-06-10 17:49:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 17:49:07 -==> Parameters: 1(Long)
2019-06-10 17:49:07 -<==      Total: 50
2019-06-10 17:49:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 17:49:07 -==> Parameters: 138(Long)
2019-06-10 17:49:07 -<==      Total: 1
2019-06-10 17:49:07 -耗时 : 41
2019-06-10 17:49:07 -返回值 : index_v1
2019-06-10 17:49:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 17:49:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 17:49:07.819(Timestamp)
2019-06-10 17:49:07 -<==    Updates: 1
2019-06-10 17:49:08 -请求地址 : http://localhost:8081/main
2019-06-10 17:49:08 -HTTP METHOD : GET
2019-06-10 17:49:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:49:08 -参数 : []
2019-06-10 17:49:08 -耗时 : 0
2019-06-10 17:49:08 -返回值 : main
2019-06-10 17:49:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 17:49:08 -HTTP METHOD : GET
2019-06-10 17:49:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 17:49:08 -参数 : []
2019-06-10 17:49:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 17:49:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 17:49:08 -<==      Total: 0
2019-06-10 17:49:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 17:49:08 -==> Parameters: 1(Long), 0(String)
2019-06-10 17:49:08 -<==      Total: 1
2019-06-10 17:49:08 -耗时 : 13
2019-06-10 17:49:08 -返回值 : com.bootdo.common.utils.PageUtils@43bf61f4
2019-06-10 17:49:08 -请求地址 : http://localhost:8081/main
2019-06-10 17:49:08 -HTTP METHOD : GET
2019-06-10 17:49:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:49:08 -参数 : []
2019-06-10 17:49:08 -耗时 : 1
2019-06-10 17:49:08 -返回值 : main
2019-06-10 17:49:09 -请求地址 : http://localhost:8081/print/print
2019-06-10 17:49:09 -HTTP METHOD : GET
2019-06-10 17:49:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 17:49:09 -参数 : []
2019-06-10 17:49:09 -耗时 : 1
2019-06-10 17:49:09 -返回值 : print/print/print
2019-06-10 17:52:27 -请求地址 : http://localhost:8081/index
2019-06-10 17:52:27 -HTTP METHOD : GET
2019-06-10 17:52:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 17:52:27 -参数 : [{}]
2019-06-10 17:52:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 17:52:27 -==> Parameters: 1(Long)
2019-06-10 17:52:27 -<==      Total: 50
2019-06-10 17:52:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 17:52:27 -==> Parameters: 138(Long)
2019-06-10 17:52:27 -<==      Total: 1
2019-06-10 17:52:27 -耗时 : 71
2019-06-10 17:52:27 -返回值 : index_v1
2019-06-10 17:52:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 17:52:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 17:52:27.264(Timestamp)
2019-06-10 17:52:27 -<==    Updates: 1
2019-06-10 17:52:27 -请求地址 : http://localhost:8081/main
2019-06-10 17:52:27 -HTTP METHOD : GET
2019-06-10 17:52:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:52:27 -参数 : []
2019-06-10 17:52:27 -耗时 : 0
2019-06-10 17:52:27 -返回值 : main
2019-06-10 17:52:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 17:52:28 -HTTP METHOD : GET
2019-06-10 17:52:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 17:52:28 -参数 : []
2019-06-10 17:52:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 17:52:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 17:52:28 -<==      Total: 0
2019-06-10 17:52:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 17:52:28 -==> Parameters: 1(Long), 0(String)
2019-06-10 17:52:28 -<==      Total: 1
2019-06-10 17:52:28 -耗时 : 63
2019-06-10 17:52:28 -返回值 : com.bootdo.common.utils.PageUtils@5c6b26e3
2019-06-10 17:52:28 -请求地址 : http://localhost:8081/main
2019-06-10 17:52:28 -HTTP METHOD : GET
2019-06-10 17:52:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:52:28 -参数 : []
2019-06-10 17:52:28 -耗时 : 0
2019-06-10 17:52:28 -返回值 : main
2019-06-10 17:52:33 -请求地址 : http://localhost:8081/print/print
2019-06-10 17:52:33 -HTTP METHOD : GET
2019-06-10 17:52:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 17:52:33 -参数 : []
2019-06-10 17:52:33 -耗时 : 1
2019-06-10 17:52:33 -返回值 : print/print/print
2019-06-10 17:58:46 -请求地址 : http://localhost:8081/index
2019-06-10 17:58:46 -HTTP METHOD : GET
2019-06-10 17:58:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 17:58:46 -参数 : [{}]
2019-06-10 17:58:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 17:58:46 -==> Parameters: 1(Long)
2019-06-10 17:58:46 -<==      Total: 50
2019-06-10 17:58:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 17:58:46 -==> Parameters: 138(Long)
2019-06-10 17:58:46 -<==      Total: 1
2019-06-10 17:58:46 -耗时 : 93
2019-06-10 17:58:46 -返回值 : index_v1
2019-06-10 17:58:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 17:58:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 17:58:46.751(Timestamp)
2019-06-10 17:58:46 -请求地址 : http://localhost:8081/main
2019-06-10 17:58:46 -HTTP METHOD : GET
2019-06-10 17:58:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:58:46 -参数 : []
2019-06-10 17:58:46 -耗时 : 6
2019-06-10 17:58:46 -返回值 : main
2019-06-10 17:58:46 -<==    Updates: 1
2019-06-10 17:58:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 17:58:47 -HTTP METHOD : GET
2019-06-10 17:58:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 17:58:47 -参数 : []
2019-06-10 17:58:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 17:58:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 17:58:47 -<==      Total: 0
2019-06-10 17:58:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 17:58:47 -==> Parameters: 1(Long), 0(String)
2019-06-10 17:58:47 -<==      Total: 1
2019-06-10 17:58:47 -耗时 : 24
2019-06-10 17:58:47 -返回值 : com.bootdo.common.utils.PageUtils@5c8d84ff
2019-06-10 17:58:47 -请求地址 : http://localhost:8081/main
2019-06-10 17:58:47 -HTTP METHOD : GET
2019-06-10 17:58:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 17:58:47 -参数 : []
2019-06-10 17:58:47 -耗时 : 1
2019-06-10 17:58:47 -返回值 : main
2019-06-10 17:58:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 17:58:53 -==> Parameters: 1(Long)
2019-06-10 17:58:53 -<==      Total: 94
2019-06-10 17:58:53 -请求地址 : http://localhost:8081/print/print
2019-06-10 17:58:53 -HTTP METHOD : GET
2019-06-10 17:58:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 17:58:53 -参数 : []
2019-06-10 17:58:53 -耗时 : 0
2019-06-10 17:58:53 -返回值 : print/print/print
2019-06-10 18:00:28 -请求地址 : http://localhost:8081/index
2019-06-10 18:00:28 -HTTP METHOD : GET
2019-06-10 18:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:00:28 -参数 : [{}]
2019-06-10 18:00:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:00:28 -==> Parameters: 1(Long)
2019-06-10 18:00:28 -<==      Total: 50
2019-06-10 18:00:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:00:28 -==> Parameters: 138(Long)
2019-06-10 18:00:28 -<==      Total: 1
2019-06-10 18:00:28 -耗时 : 26
2019-06-10 18:00:28 -返回值 : index_v1
2019-06-10 18:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:00:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:00:28.4(Timestamp)
2019-06-10 18:00:28 -<==    Updates: 1
2019-06-10 18:00:28 -请求地址 : http://localhost:8081/main
2019-06-10 18:00:28 -HTTP METHOD : GET
2019-06-10 18:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:00:28 -参数 : []
2019-06-10 18:00:28 -耗时 : 1
2019-06-10 18:00:28 -返回值 : main
2019-06-10 18:00:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:00:28 -HTTP METHOD : GET
2019-06-10 18:00:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:00:28 -参数 : []
2019-06-10 18:00:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:00:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:00:28 -<==      Total: 0
2019-06-10 18:00:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:00:28 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:00:28 -<==      Total: 1
2019-06-10 18:00:28 -耗时 : 19
2019-06-10 18:00:28 -返回值 : com.bootdo.common.utils.PageUtils@3dea9175
2019-06-10 18:00:29 -请求地址 : http://localhost:8081/main
2019-06-10 18:00:29 -HTTP METHOD : GET
2019-06-10 18:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:00:29 -参数 : []
2019-06-10 18:00:29 -耗时 : 0
2019-06-10 18:00:29 -返回值 : main
2019-06-10 18:00:31 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:00:31 -HTTP METHOD : GET
2019-06-10 18:00:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:00:31 -参数 : []
2019-06-10 18:00:31 -耗时 : 0
2019-06-10 18:00:31 -返回值 : print/print/print
2019-06-10 18:02:20 -请求地址 : http://localhost:8081/index
2019-06-10 18:02:20 -HTTP METHOD : GET
2019-06-10 18:02:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:02:20 -参数 : [{}]
2019-06-10 18:02:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:02:20 -==> Parameters: 1(Long)
2019-06-10 18:02:20 -<==      Total: 50
2019-06-10 18:02:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:02:20 -==> Parameters: 138(Long)
2019-06-10 18:02:20 -<==      Total: 1
2019-06-10 18:02:20 -耗时 : 96
2019-06-10 18:02:20 -返回值 : index_v1
2019-06-10 18:02:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:02:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 96(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:02:20.744(Timestamp)
2019-06-10 18:02:20 -<==    Updates: 1
2019-06-10 18:02:20 -请求地址 : http://localhost:8081/main
2019-06-10 18:02:20 -HTTP METHOD : GET
2019-06-10 18:02:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:02:20 -参数 : []
2019-06-10 18:02:20 -耗时 : 0
2019-06-10 18:02:20 -返回值 : main
2019-06-10 18:02:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:02:21 -HTTP METHOD : GET
2019-06-10 18:02:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:02:21 -参数 : []
2019-06-10 18:02:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:02:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:02:21 -<==      Total: 0
2019-06-10 18:02:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:02:21 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:02:21 -<==      Total: 1
2019-06-10 18:02:21 -耗时 : 23
2019-06-10 18:02:21 -返回值 : com.bootdo.common.utils.PageUtils@6eadd118
2019-06-10 18:02:21 -请求地址 : http://localhost:8081/main
2019-06-10 18:02:21 -HTTP METHOD : GET
2019-06-10 18:02:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:02:21 -参数 : []
2019-06-10 18:02:21 -耗时 : 1
2019-06-10 18:02:21 -返回值 : main
2019-06-10 18:02:23 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:02:23 -HTTP METHOD : GET
2019-06-10 18:02:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:02:23 -参数 : []
2019-06-10 18:02:23 -耗时 : 1
2019-06-10 18:02:23 -返回值 : print/print/print
2019-06-10 18:04:21 -请求地址 : http://localhost:8081/login;JSESSIONID=8662e4dc-bba1-4ea8-b937-d2b198546ab4
2019-06-10 18:04:21 -HTTP METHOD : GET
2019-06-10 18:04:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 18:04:21 -参数 : [{}]
2019-06-10 18:04:21 -耗时 : 0
2019-06-10 18:04:21 -返回值 : login
2019-06-10 18:04:21 -请求地址 : http://localhost:8081/getVerify
2019-06-10 18:04:21 -HTTP METHOD : GET
2019-06-10 18:04:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-10 18:04:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30fc7e59, org.apache.shiro.web.servlet.ShiroHttpServletResponse@403c6c64]
2019-06-10 18:04:21 -1813
2019-06-10 18:04:21 -耗时 : 24
2019-06-10 18:04:21 -返回值 : null
2019-06-10 18:04:21 -请求地址 : http://localhost:8081/login
2019-06-10 18:04:21 -HTTP METHOD : GET
2019-06-10 18:04:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 18:04:21 -参数 : [{}]
2019-06-10 18:04:21 -耗时 : 0
2019-06-10 18:04:21 -返回值 : login
2019-06-10 18:04:25 -请求地址 : http://localhost:8081/login
2019-06-10 18:04:25 -HTTP METHOD : POST
2019-06-10 18:04:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-10 18:04:25 -参数 : [admin, 111111, 1813, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4921fd82]
2019-06-10 18:04:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-10 18:04:25 -==> Parameters: admin(String)
2019-06-10 18:04:25 -<==      Total: 1
2019-06-10 18:04:25 -耗时 : 7
2019-06-10 18:04:25 -返回值 : {msg=操作成功, code=0}
2019-06-10 18:04:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:04:25 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-10 18:04:25.769(Timestamp)
2019-06-10 18:04:25 -请求地址 : http://localhost:8081/index
2019-06-10 18:04:25 -HTTP METHOD : GET
2019-06-10 18:04:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:04:25 -参数 : [{}]
2019-06-10 18:04:25 -<==    Updates: 1
2019-06-10 18:04:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:04:25 -==> Parameters: 1(Long)
2019-06-10 18:04:26 -<==      Total: 50
2019-06-10 18:04:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:04:26 -==> Parameters: 138(Long)
2019-06-10 18:04:26 -<==      Total: 1
2019-06-10 18:04:26 -耗时 : 236
2019-06-10 18:04:26 -返回值 : index_v1
2019-06-10 18:04:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:04:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 236(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:04:26.035(Timestamp)
2019-06-10 18:04:26 -<==    Updates: 1
2019-06-10 18:04:26 -请求地址 : http://localhost:8081/main
2019-06-10 18:04:26 -HTTP METHOD : GET
2019-06-10 18:04:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:04:26 -参数 : []
2019-06-10 18:04:26 -耗时 : 1
2019-06-10 18:04:26 -返回值 : main
2019-06-10 18:04:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:04:26 -HTTP METHOD : GET
2019-06-10 18:04:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:04:26 -参数 : []
2019-06-10 18:04:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:04:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:04:26 -<==      Total: 0
2019-06-10 18:04:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:04:26 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:04:26 -<==      Total: 1
2019-06-10 18:04:26 -耗时 : 109
2019-06-10 18:04:26 -返回值 : com.bootdo.common.utils.PageUtils@1ebe659c
2019-06-10 18:04:26 -请求地址 : http://localhost:8081/main
2019-06-10 18:04:26 -HTTP METHOD : GET
2019-06-10 18:04:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:04:26 -参数 : []
2019-06-10 18:04:26 -耗时 : 1
2019-06-10 18:04:26 -返回值 : main
2019-06-10 18:04:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:04:29 -==> Parameters: 1(Long)
2019-06-10 18:04:29 -<==      Total: 94
2019-06-10 18:04:29 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:04:29 -HTTP METHOD : GET
2019-06-10 18:04:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:04:29 -参数 : []
2019-06-10 18:04:29 -耗时 : 0
2019-06-10 18:04:29 -返回值 : print/print/print
2019-06-10 18:07:30 -请求地址 : http://localhost:8081/index
2019-06-10 18:07:30 -HTTP METHOD : GET
2019-06-10 18:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:07:30 -参数 : [{}]
2019-06-10 18:07:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:07:30 -==> Parameters: 1(Long)
2019-06-10 18:07:30 -<==      Total: 50
2019-06-10 18:07:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:07:30 -==> Parameters: 138(Long)
2019-06-10 18:07:30 -<==      Total: 1
2019-06-10 18:07:30 -耗时 : 25
2019-06-10 18:07:30 -返回值 : index_v1
2019-06-10 18:07:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:07:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:07:30.21(Timestamp)
2019-06-10 18:07:30 -请求地址 : http://localhost:8081/main
2019-06-10 18:07:30 -HTTP METHOD : GET
2019-06-10 18:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:07:30 -参数 : []
2019-06-10 18:07:30 -耗时 : 1
2019-06-10 18:07:30 -返回值 : main
2019-06-10 18:07:30 -<==    Updates: 1
2019-06-10 18:07:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:07:30 -HTTP METHOD : GET
2019-06-10 18:07:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:07:30 -参数 : []
2019-06-10 18:07:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:07:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:07:30 -<==      Total: 0
2019-06-10 18:07:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:07:30 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:07:30 -<==      Total: 1
2019-06-10 18:07:30 -耗时 : 7
2019-06-10 18:07:30 -返回值 : com.bootdo.common.utils.PageUtils@51829a27
2019-06-10 18:07:30 -请求地址 : http://localhost:8081/main
2019-06-10 18:07:30 -HTTP METHOD : GET
2019-06-10 18:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:07:30 -参数 : []
2019-06-10 18:07:30 -耗时 : 1
2019-06-10 18:07:30 -返回值 : main
2019-06-10 18:07:32 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:07:32 -HTTP METHOD : GET
2019-06-10 18:07:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:07:32 -参数 : []
2019-06-10 18:07:32 -耗时 : 3
2019-06-10 18:07:32 -返回值 : print/print/print
2019-06-10 18:07:53 -请求地址 : http://localhost:8081/index
2019-06-10 18:07:53 -HTTP METHOD : GET
2019-06-10 18:07:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:07:53 -参数 : [{}]
2019-06-10 18:07:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:07:53 -==> Parameters: 1(Long)
2019-06-10 18:07:53 -<==      Total: 50
2019-06-10 18:07:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:07:53 -==> Parameters: 138(Long)
2019-06-10 18:07:53 -<==      Total: 1
2019-06-10 18:07:53 -耗时 : 22
2019-06-10 18:07:53 -返回值 : index_v1
2019-06-10 18:07:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:07:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:07:53.192(Timestamp)
2019-06-10 18:07:53 -<==    Updates: 1
2019-06-10 18:07:53 -请求地址 : http://localhost:8081/main
2019-06-10 18:07:53 -HTTP METHOD : GET
2019-06-10 18:07:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:07:53 -参数 : []
2019-06-10 18:07:53 -耗时 : 1
2019-06-10 18:07:53 -返回值 : main
2019-06-10 18:07:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:07:53 -HTTP METHOD : GET
2019-06-10 18:07:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:07:53 -参数 : []
2019-06-10 18:07:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:07:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:07:53 -<==      Total: 0
2019-06-10 18:07:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:07:53 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:07:53 -<==      Total: 1
2019-06-10 18:07:53 -耗时 : 6
2019-06-10 18:07:53 -返回值 : com.bootdo.common.utils.PageUtils@6b2ed661
2019-06-10 18:07:53 -请求地址 : http://localhost:8081/main
2019-06-10 18:07:53 -HTTP METHOD : GET
2019-06-10 18:07:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:07:53 -参数 : []
2019-06-10 18:07:53 -耗时 : 0
2019-06-10 18:07:53 -返回值 : main
2019-06-10 18:07:56 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:07:56 -HTTP METHOD : GET
2019-06-10 18:07:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:07:56 -参数 : []
2019-06-10 18:07:56 -耗时 : 0
2019-06-10 18:07:56 -返回值 : print/print/print
2019-06-10 18:12:26 -Starting BootdoApplication on PC-201905091110 with PID 32548 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-10 18:12:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-10 18:12:26 -The following profiles are active: dev
2019-06-10 18:12:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@180e6ac4: startup date [Mon Jun 10 18:12:27 CST 2019]; root of context hierarchy
2019-06-10 18:12:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 18:12:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af446ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a19d9e9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-10 18:12:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-10 18:12:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 18:12:46 -Tomcat initialized with port(s): 8081 (http)
2019-06-10 18:12:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-10 18:12:47 -Starting service [Tomcat]
2019-06-10 18:12:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-10 18:12:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-10 18:12:47 -Initializing Spring embedded WebApplicationContext
2019-06-10 18:12:47 -Root WebApplicationContext: initialization completed in 20136 ms
2019-06-10 18:12:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-10 18:12:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-10 18:12:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-10 18:12:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-10 18:12:49 -Filter xssFilter was not registered (disabled)
2019-06-10 18:12:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-10 18:12:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-10 18:12:49 -Servlet statViewServlet mapped to [/druid/*]
2019-06-10 18:12:49 -Servlet dispatcherServlet mapped to [/]
2019-06-10 18:12:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@180e6ac4: startup date [Mon Jun 10 18:12:27 CST 2019]; root of context hierarchy
2019-06-10 18:13:00 -Using default implementation for ThreadExecutor
2019-06-10 18:13:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-10 18:13:00 -Quartz Scheduler v.2.3.0 created.
2019-06-10 18:13:00 -RAMJobStore initialized.
2019-06-10 18:13:00 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-10 18:13:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-10 18:13:00 -Quartz scheduler version: 2.3.0
2019-06-10 18:13:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7305cfb1
2019-06-10 18:13:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-10 18:13:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-10 18:13:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-10 18:13:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-10 18:13:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-10 18:13:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-10 18:13:07 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:07 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-10 18:13:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-10 18:13:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:07 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-10 18:13:08 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-10 18:13:08 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-10 18:13:08 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 18:13:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-10 18:13:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-10 18:13:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-10 18:13:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-10 18:13:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-10 18:13:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-10 18:13:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 18:13:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-10 18:13:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 18:13:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-10 18:13:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-10 18:13:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-10 18:13:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-10 18:13:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-10 18:13:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-10 18:13:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-10 18:13:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-10 18:13:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-10 18:13:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-10 18:13:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-10 18:13:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-10 18:13:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-10 18:13:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-10 18:13:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-10 18:13:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-10 18:13:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-10 18:13:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-10 18:13:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-10 18:13:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-10 18:13:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-10 18:13:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-10 18:13:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-10 18:13:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-10 18:13:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-10 18:13:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-10 18:13:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-10 18:13:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-10 18:13:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-10 18:13:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-10 18:13:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-10 18:13:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-10 18:13:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-10 18:13:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-10 18:13:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-10 18:13:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-10 18:13:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-10 18:13:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-10 18:13:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-10 18:13:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-10 18:13:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-10 18:13:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-10 18:13:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-10 18:13:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-10 18:13:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-10 18:13:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-10 18:13:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-10 18:13:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 18:13:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-10 18:13:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 18:13:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-10 18:13:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-10 18:13:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-10 18:13:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-10 18:13:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-10 18:13:08 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-10 18:13:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 18:13:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 18:13:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 18:13:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-10 18:13:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-10 18:13:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 18:13:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-10 18:13:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-10 18:13:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-10 18:13:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-10 18:13:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-10 18:13:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-10 18:13:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 18:13:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@180e6ac4: startup date [Mon Jun 10 18:12:27 CST 2019]; root of context hierarchy
2019-06-10 18:13:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 18:13:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 18:13:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-10 18:13:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-10 18:13:18 -Registering beans for JMX exposure on startup
2019-06-10 18:13:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-10 18:13:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-10 18:13:18 -Starting beans in phase 2147483647
2019-06-10 18:13:18 -Context refreshed
2019-06-10 18:13:18 -Found 1 custom documentation plugin(s)
2019-06-10 18:13:19 -Scanning for api listing references
2019-06-10 18:13:20 -Generating unique operation named: removeUsingPOST_1
2019-06-10 18:13:20 -Generating unique operation named: addUsingGET_1
2019-06-10 18:13:20 -Generating unique operation named: editUsingGET_1
2019-06-10 18:13:20 -Generating unique operation named: listUsingGET_1
2019-06-10 18:13:20 -Generating unique operation named: removeUsingPOST_2
2019-06-10 18:13:20 -Generating unique operation named: removeUsingPOST_3
2019-06-10 18:13:20 -Generating unique operation named: saveUsingPOST_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingGET_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingHEAD_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingPOST_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingPUT_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingPATCH_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingDELETE_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-10 18:13:20 -Generating unique operation named: updateUsingTRACE_1
2019-06-10 18:13:20 -Generating unique operation named: addUsingGET_2
2019-06-10 18:13:20 -Generating unique operation named: editUsingGET_2
2019-06-10 18:13:20 -Generating unique operation named: listUsingGET_2
2019-06-10 18:13:20 -Generating unique operation named: removeUsingPOST_4
2019-06-10 18:13:20 -Generating unique operation named: removeUsingPOST_5
2019-06-10 18:13:20 -Generating unique operation named: saveUsingPOST_2
2019-06-10 18:13:20 -Generating unique operation named: updateUsingPOST_2
2019-06-10 18:13:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-10 18:13:21 -Generating unique operation named: addUsingGET_3
2019-06-10 18:13:21 -Generating unique operation named: editUsingGET_3
2019-06-10 18:13:21 -Generating unique operation named: listUsingGET_3
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_6
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_7
2019-06-10 18:13:21 -Generating unique operation named: saveUsingPOST_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingGET_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingHEAD_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPOST_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPUT_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPATCH_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingDELETE_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-10 18:13:21 -Generating unique operation named: updateUsingTRACE_2
2019-06-10 18:13:21 -Generating unique operation named: addUsingGET_4
2019-06-10 18:13:21 -Generating unique operation named: editUsingGET_4
2019-06-10 18:13:21 -Generating unique operation named: listUsingGET_4
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_8
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_9
2019-06-10 18:13:21 -Generating unique operation named: saveUsingPOST_4
2019-06-10 18:13:21 -Generating unique operation named: updateUsingGET_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingHEAD_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPOST_4
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPUT_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingPATCH_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingDELETE_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-10 18:13:21 -Generating unique operation named: updateUsingTRACE_3
2019-06-10 18:13:21 -Generating unique operation named: ElecUsingGET_1
2019-06-10 18:13:21 -Generating unique operation named: addUsingGET_5
2019-06-10 18:13:21 -Generating unique operation named: editUsingGET_5
2019-06-10 18:13:21 -Generating unique operation named: listUsingGET_5
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_10
2019-06-10 18:13:21 -Generating unique operation named: removeUsingPOST_11
2019-06-10 18:13:21 -Generating unique operation named: saveUsingPOST_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingGET_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingHEAD_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPOST_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPUT_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPATCH_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingDELETE_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-10 18:13:22 -Generating unique operation named: updateUsingTRACE_4
2019-06-10 18:13:22 -Generating unique operation named: editUsingGET_6
2019-06-10 18:13:22 -Generating unique operation named: listUsingGET_6
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPOST_6
2019-06-10 18:13:22 -Generating unique operation named: addUsingGET_6
2019-06-10 18:13:22 -Generating unique operation named: editUsingGET_7
2019-06-10 18:13:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-10 18:13:22 -Generating unique operation named: listUsingGET_7
2019-06-10 18:13:22 -Generating unique operation named: removeUsingPOST_12
2019-06-10 18:13:22 -Generating unique operation named: removeUsingPOST_13
2019-06-10 18:13:22 -Generating unique operation named: saveUsingPOST_6
2019-06-10 18:13:22 -Generating unique operation named: updateUsingGET_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingHEAD_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPOST_7
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPUT_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingPATCH_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingDELETE_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-10 18:13:22 -Generating unique operation named: updateUsingTRACE_5
2019-06-10 18:13:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-10 18:13:22 -Generating unique operation named: addUsingGET_7
2019-06-10 18:13:22 -Generating unique operation named: editUsingGET_8
2019-06-10 18:13:22 -Generating unique operation named: listUsingGET_8
2019-06-10 18:13:22 -Generating unique operation named: removeUsingPOST_14
2019-06-10 18:13:23 -Generating unique operation named: removeUsingPOST_15
2019-06-10 18:13:23 -Generating unique operation named: saveUsingPOST_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingGET_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingHEAD_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPOST_8
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPUT_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPATCH_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingDELETE_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-10 18:13:23 -Generating unique operation named: updateUsingTRACE_6
2019-06-10 18:13:23 -Generating unique operation named: addUsingGET_8
2019-06-10 18:13:23 -Generating unique operation named: editUsingGET_9
2019-06-10 18:13:23 -Generating unique operation named: listUsingGET_9
2019-06-10 18:13:23 -Generating unique operation named: removeUsingPOST_16
2019-06-10 18:13:23 -Generating unique operation named: removeUsingPOST_17
2019-06-10 18:13:23 -Generating unique operation named: saveUsingPOST_8
2019-06-10 18:13:23 -Generating unique operation named: updateUsingGET_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingHEAD_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPOST_9
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPUT_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingPATCH_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingDELETE_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-10 18:13:23 -Generating unique operation named: updateUsingTRACE_7
2019-06-10 18:13:23 -Generating unique operation named: addUsingGET_9
2019-06-10 18:13:23 -Generating unique operation named: editUsingGET_10
2019-06-10 18:13:23 -Generating unique operation named: infoUsingGET_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingHEAD_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingPOST_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingPUT_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingPATCH_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingDELETE_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-10 18:13:23 -Generating unique operation named: infoUsingTRACE_1
2019-06-10 18:13:23 -Generating unique operation named: listUsingGET_10
2019-06-10 18:13:24 -Generating unique operation named: removeUsingPOST_18
2019-06-10 18:13:24 -Generating unique operation named: removeUsingPOST_19
2019-06-10 18:13:24 -Generating unique operation named: saveUsingPOST_9
2019-06-10 18:13:24 -Generating unique operation named: updateUsingPOST_10
2019-06-10 18:13:24 -Generating unique operation named: listUsingGET_11
2019-06-10 18:13:24 -Generating unique operation named: removeUsingPOST_20
2019-06-10 18:13:24 -Generating unique operation named: welcomeUsingGET_1
2019-06-10 18:13:24 -Generating unique operation named: addUsingGET_10
2019-06-10 18:13:24 -Generating unique operation named: editUsingGET_11
2019-06-10 18:13:24 -Generating unique operation named: listUsingGET_12
2019-06-10 18:13:24 -Generating unique operation named: removeUsingPOST_21
2019-06-10 18:13:24 -Generating unique operation named: saveUsingPOST_10
2019-06-10 18:13:24 -Generating unique operation named: treeUsingGET_1
2019-06-10 18:13:24 -Generating unique operation named: treeUsingGET_2
2019-06-10 18:13:25 -Generating unique operation named: updateUsingPOST_11
2019-06-10 18:13:25 -Generating unique operation named: addUsingGET_11
2019-06-10 18:13:25 -Generating unique operation named: editUsingGET_12
2019-06-10 18:13:25 -Generating unique operation named: listUsingGET_13
2019-06-10 18:13:25 -Generating unique operation named: removeUsingPOST_22
2019-06-10 18:13:25 -Generating unique operation named: removeUsingPOST_23
2019-06-10 18:13:25 -Generating unique operation named: updateUsingPOST_12
2019-06-10 18:13:25 -Generating unique operation named: addUsingGET_12
2019-06-10 18:13:25 -Generating unique operation named: editUsingGET_13
2019-06-10 18:13:25 -Generating unique operation named: listUsingGET_14
2019-06-10 18:13:25 -Generating unique operation named: removeUsingPOST_24
2019-06-10 18:13:25 -Generating unique operation named: removeUsingPOST_25
2019-06-10 18:13:25 -Generating unique operation named: saveUsingPOST_11
2019-06-10 18:13:25 -Generating unique operation named: updateUsingGET_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingHEAD_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingPOST_13
2019-06-10 18:13:25 -Generating unique operation named: updateUsingPUT_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingPATCH_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingDELETE_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-10 18:13:25 -Generating unique operation named: updateUsingTRACE_8
2019-06-10 18:13:25 -Generating unique operation named: addUsingGET_13
2019-06-10 18:13:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-10 18:13:25 -Generating unique operation named: editUsingGET_14
2019-06-10 18:13:25 -Generating unique operation named: listUsingGET_15
2019-06-10 18:13:25 -Generating unique operation named: printEditUsingGET_1
2019-06-10 18:13:25 -Generating unique operation named: removeUsingPOST_26
2019-06-10 18:13:26 -Generating unique operation named: saveUsingPOST_12
2019-06-10 18:13:26 -Generating unique operation named: updateUsingGET_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingHEAD_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingPOST_14
2019-06-10 18:13:26 -Generating unique operation named: updateUsingPUT_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingPATCH_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingDELETE_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-10 18:13:26 -Generating unique operation named: updateUsingTRACE_9
2019-06-10 18:13:26 -Generating unique operation named: addUsingGET_14
2019-06-10 18:13:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-10 18:13:26 -Generating unique operation named: editUsingGET_15
2019-06-10 18:13:26 -Generating unique operation named: listUsingGET_16
2019-06-10 18:13:26 -Generating unique operation named: saveUsingPOST_13
2019-06-10 18:13:26 -Generating unique operation named: saveUsingPOST_14
2019-06-10 18:13:26 -Generating unique operation named: updateUsingPOST_15
2019-06-10 18:13:26 -Generating unique operation named: listUsingGET_17
2019-06-10 18:13:26 -Generating unique operation named: listUsingHEAD_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingPOST_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingPUT_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingPATCH_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingDELETE_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingOPTIONS_1
2019-06-10 18:13:26 -Generating unique operation named: listUsingTRACE_1
2019-06-10 18:13:26 -Generating unique operation named: countDDUsingGET_1
2019-06-10 18:13:26 -Generating unique operation named: exportDDUsingGET_1
2019-06-10 18:13:26 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-10 18:13:26 -Generating unique operation named: addUsingGET_15
2019-06-10 18:13:26 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-10 18:13:26 -Generating unique operation named: editUsingGET_16
2019-06-10 18:13:27 -Generating unique operation named: listUsingGET_18
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_27
2019-06-10 18:13:27 -Generating unique operation named: saveUsingPOST_15
2019-06-10 18:13:27 -Generating unique operation named: treeUsingGET_3
2019-06-10 18:13:27 -Generating unique operation named: treeViewUsingGET_1
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPOST_16
2019-06-10 18:13:27 -Generating unique operation named: addUsingGET_16
2019-06-10 18:13:27 -Generating unique operation named: editUsingGET_17
2019-06-10 18:13:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-10 18:13:27 -Generating unique operation named: listUsingGET_19
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_28
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_29
2019-06-10 18:13:27 -Generating unique operation named: saveUsingPOST_16
2019-06-10 18:13:27 -Generating unique operation named: updateUsingGET_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingHEAD_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPOST_17
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPUT_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPATCH_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingDELETE_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-10 18:13:27 -Generating unique operation named: updateUsingTRACE_10
2019-06-10 18:13:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-10 18:13:27 -Generating unique operation named: addUsingGET_17
2019-06-10 18:13:27 -Generating unique operation named: editUsingGET_18
2019-06-10 18:13:27 -Generating unique operation named: listUsingGET_20
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_30
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_31
2019-06-10 18:13:27 -Generating unique operation named: saveUsingPOST_17
2019-06-10 18:13:27 -Generating unique operation named: updateUsingGET_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingHEAD_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPOST_18
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPUT_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPATCH_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingDELETE_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-10 18:13:27 -Generating unique operation named: updateUsingTRACE_11
2019-06-10 18:13:27 -Generating unique operation named: addUsingGET_18
2019-06-10 18:13:27 -Generating unique operation named: editUsingGET_19
2019-06-10 18:13:27 -Generating unique operation named: listUsingGET_21
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_32
2019-06-10 18:13:27 -Generating unique operation named: removeUsingPOST_33
2019-06-10 18:13:27 -Generating unique operation named: saveUsingPOST_18
2019-06-10 18:13:27 -Generating unique operation named: updateUsingGET_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingHEAD_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPOST_19
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPUT_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingPATCH_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingDELETE_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-10 18:13:27 -Generating unique operation named: updateUsingTRACE_12
2019-06-10 18:13:28 -Starting Quartz Scheduler now
2019-06-10 18:13:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-10 18:13:28 -Starting...
2019-06-10 18:13:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-10 18:13:28 -Started.
2019-06-10 18:13:28 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-10 18:13:28 -Using a shared selector for servlet write/read
2019-06-10 18:13:28 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-10 18:13:28 -Started BootdoApplication in 67.956 seconds (JVM running for 71.089)
2019-06-10 18:13:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-10 18:13:32 -==> Parameters: 
2019-06-10 18:13:34 -<==      Total: 1
2019-06-10 18:13:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-10 18:13:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-10 18:13:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2019-06-10 18:13:45 -Enabling session validation scheduler...
2019-06-10 18:13:45 -请求地址 : http://localhost:8081/login;JSESSIONID=a1a41f52-dd26-4359-a0e5-e0622c513e1a
2019-06-10 18:13:45 -HTTP METHOD : GET
2019-06-10 18:13:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 18:13:45 -参数 : [{}]
2019-06-10 18:13:45 -耗时 : 12
2019-06-10 18:13:45 -返回值 : login
2019-06-10 18:13:47 -请求地址 : http://localhost:8081/getVerify
2019-06-10 18:13:47 -HTTP METHOD : GET
2019-06-10 18:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-10 18:13:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@468a9488, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2767890b]
2019-06-10 18:13:50 -5255
2019-06-10 18:13:50 -耗时 : 3071
2019-06-10 18:13:50 -返回值 : null
2019-06-10 18:13:54 -请求地址 : http://localhost:8081/login
2019-06-10 18:13:54 -HTTP METHOD : POST
2019-06-10 18:13:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-10 18:13:54 -参数 : [admin, 111111, 5255, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f91d9b8]
2019-06-10 18:13:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-10 18:13:54 -==> Parameters: admin(String)
2019-06-10 18:13:54 -<==      Total: 1
2019-06-10 18:13:54 -耗时 : 309
2019-06-10 18:13:54 -返回值 : {msg=操作成功, code=0}
2019-06-10 18:13:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-10 18:13:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:13:54 -==> Parameters: 1(Long), admin(String), 登录(String), 309(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-10 18:13:54.579(Timestamp)
2019-06-10 18:13:54 -请求地址 : http://localhost:8081/index
2019-06-10 18:13:54 -HTTP METHOD : GET
2019-06-10 18:13:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:13:54 -参数 : [{}]
2019-06-10 18:13:54 -<==    Updates: 1
2019-06-10 18:13:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:13:55 -==> Parameters: 1(Long)
2019-06-10 18:13:55 -<==      Total: 50
2019-06-10 18:13:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:13:55 -==> Parameters: 138(Long)
2019-06-10 18:13:55 -<==      Total: 1
2019-06-10 18:13:55 -耗时 : 571
2019-06-10 18:13:55 -返回值 : index_v1
2019-06-10 18:13:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:13:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 571(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:13:55.345(Timestamp)
2019-06-10 18:13:55 -<==    Updates: 1
2019-06-10 18:13:55 -请求地址 : http://localhost:8081/main
2019-06-10 18:13:55 -HTTP METHOD : GET
2019-06-10 18:13:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:13:55 -参数 : []
2019-06-10 18:13:55 -耗时 : 1
2019-06-10 18:13:55 -返回值 : main
2019-06-10 18:13:56 -请求地址 : http://localhost:8081/main
2019-06-10 18:13:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:13:56 -HTTP METHOD : GET
2019-06-10 18:13:56 -HTTP METHOD : GET
2019-06-10 18:13:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:13:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:13:56 -参数 : []
2019-06-10 18:13:56 -参数 : []
2019-06-10 18:13:56 -耗时 : 3
2019-06-10 18:13:56 -返回值 : main
2019-06-10 18:13:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:13:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:13:56 -<==      Total: 0
2019-06-10 18:13:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:13:56 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:13:56 -<==      Total: 1
2019-06-10 18:13:56 -耗时 : 199
2019-06-10 18:13:56 -返回值 : com.bootdo.common.utils.PageUtils@4f167c19
2019-06-10 18:13:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:13:58 -==> Parameters: 1(Long)
2019-06-10 18:13:58 -<==      Total: 94
2019-06-10 18:13:58 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-10 18:13:58 -HTTP METHOD : GET
2019-06-10 18:13:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-10 18:13:58 -参数 : []
2019-06-10 18:13:58 -耗时 : 0
2019-06-10 18:13:58 -返回值 : moneyList/moneyList
2019-06-10 18:14:03 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:14:03 -HTTP METHOD : GET
2019-06-10 18:14:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:14:03 -参数 : []
2019-06-10 18:14:03 -耗时 : 0
2019-06-10 18:14:03 -返回值 : print/print/print
2019-06-10 18:14:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-06-10 18:16:36 -请求地址 : http://localhost:8081/index
2019-06-10 18:16:36 -HTTP METHOD : GET
2019-06-10 18:16:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:16:36 -参数 : [{}]
2019-06-10 18:16:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:16:36 -==> Parameters: 1(Long)
2019-06-10 18:16:36 -<==      Total: 50
2019-06-10 18:16:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:16:36 -==> Parameters: 138(Long)
2019-06-10 18:16:36 -<==      Total: 1
2019-06-10 18:16:36 -耗时 : 33
2019-06-10 18:16:36 -返回值 : index_v1
2019-06-10 18:16:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:16:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:16:36.984(Timestamp)
2019-06-10 18:16:37 -<==    Updates: 1
2019-06-10 18:16:37 -请求地址 : http://localhost:8081/main
2019-06-10 18:16:37 -HTTP METHOD : GET
2019-06-10 18:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:16:37 -参数 : []
2019-06-10 18:16:37 -耗时 : 0
2019-06-10 18:16:37 -返回值 : main
2019-06-10 18:16:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:16:37 -HTTP METHOD : GET
2019-06-10 18:16:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:16:37 -参数 : []
2019-06-10 18:16:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:16:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:16:37 -<==      Total: 0
2019-06-10 18:16:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:16:37 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:16:37 -<==      Total: 1
2019-06-10 18:16:37 -耗时 : 6
2019-06-10 18:16:37 -返回值 : com.bootdo.common.utils.PageUtils@777b575f
2019-06-10 18:16:38 -请求地址 : http://localhost:8081/main
2019-06-10 18:16:38 -HTTP METHOD : GET
2019-06-10 18:16:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:16:38 -参数 : []
2019-06-10 18:16:38 -耗时 : 0
2019-06-10 18:16:38 -返回值 : main
2019-06-10 18:16:40 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:16:40 -HTTP METHOD : GET
2019-06-10 18:16:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:16:40 -参数 : []
2019-06-10 18:16:40 -耗时 : 0
2019-06-10 18:16:40 -返回值 : print/print/print
2019-06-10 18:17:50 -请求地址 : http://localhost:8081/sys/role
2019-06-10 18:17:50 -HTTP METHOD : GET
2019-06-10 18:17:50 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-06-10 18:17:50 -参数 : []
2019-06-10 18:17:50 -耗时 : 0
2019-06-10 18:17:50 -返回值 : system/role/role
2019-06-10 18:17:51 -请求地址 : http://localhost:8081/sys/role/list
2019-06-10 18:17:51 -HTTP METHOD : GET
2019-06-10 18:17:51 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-06-10 18:17:51 -参数 : []
2019-06-10 18:17:51 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-06-10 18:17:51 -==> Parameters: 
2019-06-10 18:17:51 -<==      Total: 10
2019-06-10 18:17:51 -耗时 : 189
2019-06-10 18:17:51 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-06-10 18:17:56 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-06-10 18:17:56 -HTTP METHOD : GET
2019-06-10 18:17:56 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-06-10 18:17:56 -参数 : [1, {}]
2019-06-10 18:17:56 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-06-10 18:17:56 -==> Parameters: 1(Long)
2019-06-10 18:17:56 -<==      Total: 1
2019-06-10 18:17:56 -耗时 : 52
2019-06-10 18:17:56 -返回值 : system/role/edit
2019-06-10 18:17:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:17:56 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 52(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-06-10 18:17:56.98(Timestamp)
2019-06-10 18:17:57 -<==    Updates: 1
2019-06-10 18:17:57 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-06-10 18:17:57 -HTTP METHOD : GET
2019-06-10 18:17:57 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-06-10 18:17:57 -参数 : [1]
2019-06-10 18:17:57 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-06-10 18:17:57 -==> Parameters: 
2019-06-10 18:17:57 -<==      Total: 110
2019-06-10 18:17:57 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-06-10 18:17:57 -==> Parameters: 1(Long)
2019-06-10 18:17:57 -<==      Total: 111
2019-06-10 18:17:57 -耗时 : 62
2019-06-10 18:17:57 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","state":{"selected":true},"text":"乌镇管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","state":{"selected":true},"text":"年统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","state":{"selected":true},"text":"月统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","state":{"selected":true},"text":"日统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-10 18:18:52 -请求地址 : http://localhost:8081/index
2019-06-10 18:18:52 -HTTP METHOD : GET
2019-06-10 18:18:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:18:52 -参数 : [{}]
2019-06-10 18:18:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:18:52 -==> Parameters: 1(Long)
2019-06-10 18:18:52 -<==      Total: 50
2019-06-10 18:18:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:18:52 -==> Parameters: 138(Long)
2019-06-10 18:18:52 -<==      Total: 1
2019-06-10 18:18:52 -耗时 : 38
2019-06-10 18:18:52 -返回值 : index_v1
2019-06-10 18:18:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:18:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:18:52.692(Timestamp)
2019-06-10 18:18:52 -请求地址 : http://localhost:8081/main
2019-06-10 18:18:52 -HTTP METHOD : GET
2019-06-10 18:18:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:18:52 -参数 : []
2019-06-10 18:18:52 -耗时 : 0
2019-06-10 18:18:52 -返回值 : main
2019-06-10 18:18:53 -<==    Updates: 1
2019-06-10 18:18:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:18:53 -HTTP METHOD : GET
2019-06-10 18:18:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:18:53 -参数 : []
2019-06-10 18:18:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:18:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:18:53 -<==      Total: 0
2019-06-10 18:18:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:18:53 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:18:53 -<==      Total: 1
2019-06-10 18:18:53 -耗时 : 10
2019-06-10 18:18:53 -返回值 : com.bootdo.common.utils.PageUtils@5ea082d8
2019-06-10 18:18:53 -请求地址 : http://localhost:8081/main
2019-06-10 18:18:53 -HTTP METHOD : GET
2019-06-10 18:18:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:18:53 -参数 : []
2019-06-10 18:18:53 -耗时 : 0
2019-06-10 18:18:53 -返回值 : main
2019-06-10 18:19:00 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:19:00 -HTTP METHOD : GET
2019-06-10 18:19:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:19:00 -参数 : []
2019-06-10 18:19:00 -耗时 : 0
2019-06-10 18:19:00 -返回值 : print/print/print
2019-06-10 18:20:32 -请求地址 : http://localhost:8081/index
2019-06-10 18:20:32 -HTTP METHOD : GET
2019-06-10 18:20:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:20:32 -参数 : [{}]
2019-06-10 18:20:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:20:32 -==> Parameters: 1(Long)
2019-06-10 18:20:32 -<==      Total: 50
2019-06-10 18:20:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:20:32 -==> Parameters: 138(Long)
2019-06-10 18:20:32 -<==      Total: 1
2019-06-10 18:20:32 -耗时 : 26
2019-06-10 18:20:32 -返回值 : index_v1
2019-06-10 18:20:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:20:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:20:32.946(Timestamp)
2019-06-10 18:20:33 -请求地址 : http://localhost:8081/main
2019-06-10 18:20:33 -HTTP METHOD : GET
2019-06-10 18:20:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:20:33 -参数 : []
2019-06-10 18:20:33 -耗时 : 0
2019-06-10 18:20:33 -返回值 : main
2019-06-10 18:20:33 -<==    Updates: 1
2019-06-10 18:20:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:20:33 -HTTP METHOD : GET
2019-06-10 18:20:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:20:33 -参数 : []
2019-06-10 18:20:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:20:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:20:33 -<==      Total: 0
2019-06-10 18:20:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:20:33 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:20:33 -<==      Total: 1
2019-06-10 18:20:33 -耗时 : 9
2019-06-10 18:20:33 -返回值 : com.bootdo.common.utils.PageUtils@1a512cc7
2019-06-10 18:20:33 -请求地址 : http://localhost:8081/main
2019-06-10 18:20:33 -HTTP METHOD : GET
2019-06-10 18:20:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:20:33 -参数 : []
2019-06-10 18:20:33 -耗时 : 2
2019-06-10 18:20:33 -返回值 : main
2019-06-10 18:20:34 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:20:34 -HTTP METHOD : GET
2019-06-10 18:20:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:20:34 -参数 : []
2019-06-10 18:20:34 -耗时 : 0
2019-06-10 18:20:34 -返回值 : print/print/print
2019-06-10 18:22:37 -请求地址 : http://localhost:8081/index
2019-06-10 18:22:37 -HTTP METHOD : GET
2019-06-10 18:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:22:37 -参数 : [{}]
2019-06-10 18:22:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:22:37 -==> Parameters: 1(Long)
2019-06-10 18:22:37 -<==      Total: 50
2019-06-10 18:22:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:22:37 -==> Parameters: 138(Long)
2019-06-10 18:22:37 -<==      Total: 1
2019-06-10 18:22:37 -耗时 : 28
2019-06-10 18:22:37 -返回值 : index_v1
2019-06-10 18:22:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:22:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:22:37.698(Timestamp)
2019-06-10 18:22:37 -<==    Updates: 1
2019-06-10 18:22:37 -请求地址 : http://localhost:8081/main
2019-06-10 18:22:37 -HTTP METHOD : GET
2019-06-10 18:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:22:37 -参数 : []
2019-06-10 18:22:37 -耗时 : 0
2019-06-10 18:22:37 -返回值 : main
2019-06-10 18:22:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:22:38 -HTTP METHOD : GET
2019-06-10 18:22:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:22:38 -参数 : []
2019-06-10 18:22:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:22:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:22:38 -<==      Total: 0
2019-06-10 18:22:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:22:38 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:22:38 -<==      Total: 1
2019-06-10 18:22:38 -耗时 : 12
2019-06-10 18:22:38 -返回值 : com.bootdo.common.utils.PageUtils@3b44f260
2019-06-10 18:22:38 -请求地址 : http://localhost:8081/main
2019-06-10 18:22:38 -HTTP METHOD : GET
2019-06-10 18:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:22:38 -参数 : []
2019-06-10 18:22:38 -耗时 : 1
2019-06-10 18:22:38 -返回值 : main
2019-06-10 18:22:43 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:22:43 -HTTP METHOD : GET
2019-06-10 18:22:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:22:43 -参数 : []
2019-06-10 18:22:43 -耗时 : 0
2019-06-10 18:22:43 -返回值 : print/print/print
2019-06-10 18:24:37 -请求地址 : http://localhost:8081/index
2019-06-10 18:24:37 -HTTP METHOD : GET
2019-06-10 18:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:24:37 -参数 : [{}]
2019-06-10 18:24:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:24:37 -==> Parameters: 1(Long)
2019-06-10 18:24:37 -<==      Total: 50
2019-06-10 18:24:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:24:37 -==> Parameters: 138(Long)
2019-06-10 18:24:37 -<==      Total: 1
2019-06-10 18:24:37 -耗时 : 22
2019-06-10 18:24:37 -返回值 : index_v1
2019-06-10 18:24:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:24:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:24:37.221(Timestamp)
2019-06-10 18:24:37 -<==    Updates: 1
2019-06-10 18:24:37 -请求地址 : http://localhost:8081/main
2019-06-10 18:24:37 -HTTP METHOD : GET
2019-06-10 18:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:24:37 -参数 : []
2019-06-10 18:24:37 -耗时 : 0
2019-06-10 18:24:37 -返回值 : main
2019-06-10 18:24:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:24:37 -HTTP METHOD : GET
2019-06-10 18:24:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:24:37 -参数 : []
2019-06-10 18:24:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:24:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:24:37 -<==      Total: 0
2019-06-10 18:24:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:24:37 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:24:37 -<==      Total: 1
2019-06-10 18:24:37 -耗时 : 8
2019-06-10 18:24:37 -返回值 : com.bootdo.common.utils.PageUtils@78825bbc
2019-06-10 18:24:37 -请求地址 : http://localhost:8081/main
2019-06-10 18:24:37 -HTTP METHOD : GET
2019-06-10 18:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:24:37 -参数 : []
2019-06-10 18:24:37 -耗时 : 1
2019-06-10 18:24:37 -返回值 : main
2019-06-10 18:24:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:24:41 -==> Parameters: 1(Long)
2019-06-10 18:24:41 -<==      Total: 94
2019-06-10 18:24:41 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:24:41 -HTTP METHOD : GET
2019-06-10 18:24:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:24:41 -参数 : []
2019-06-10 18:24:41 -耗时 : 0
2019-06-10 18:24:41 -返回值 : print/print/print
2019-06-10 18:26:31 -请求地址 : http://localhost:8081/index
2019-06-10 18:26:31 -HTTP METHOD : GET
2019-06-10 18:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:26:31 -参数 : [{}]
2019-06-10 18:26:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:26:31 -==> Parameters: 1(Long)
2019-06-10 18:26:31 -<==      Total: 50
2019-06-10 18:26:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:26:31 -==> Parameters: 138(Long)
2019-06-10 18:26:31 -<==      Total: 1
2019-06-10 18:26:31 -耗时 : 22
2019-06-10 18:26:31 -返回值 : index_v1
2019-06-10 18:26:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:26:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:26:31.709(Timestamp)
2019-06-10 18:26:31 -请求地址 : http://localhost:8081/main
2019-06-10 18:26:31 -HTTP METHOD : GET
2019-06-10 18:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:26:31 -参数 : []
2019-06-10 18:26:31 -耗时 : 0
2019-06-10 18:26:31 -返回值 : main
2019-06-10 18:26:31 -<==    Updates: 1
2019-06-10 18:26:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:26:32 -HTTP METHOD : GET
2019-06-10 18:26:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:26:32 -参数 : []
2019-06-10 18:26:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:26:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:26:32 -请求地址 : http://localhost:8081/main
2019-06-10 18:26:32 -HTTP METHOD : GET
2019-06-10 18:26:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:26:32 -参数 : []
2019-06-10 18:26:32 -耗时 : 0
2019-06-10 18:26:32 -返回值 : main
2019-06-10 18:26:32 -<==      Total: 0
2019-06-10 18:26:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:26:32 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:26:32 -<==      Total: 1
2019-06-10 18:26:32 -耗时 : 171
2019-06-10 18:26:32 -返回值 : com.bootdo.common.utils.PageUtils@22035a19
2019-06-10 18:28:07 -请求地址 : http://localhost:8081/index
2019-06-10 18:28:07 -HTTP METHOD : GET
2019-06-10 18:28:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:28:07 -参数 : [{}]
2019-06-10 18:28:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:28:07 -==> Parameters: 1(Long)
2019-06-10 18:28:07 -<==      Total: 50
2019-06-10 18:28:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:28:07 -==> Parameters: 138(Long)
2019-06-10 18:28:07 -<==      Total: 1
2019-06-10 18:28:07 -耗时 : 22
2019-06-10 18:28:07 -返回值 : index_v1
2019-06-10 18:28:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:28:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:28:07.94(Timestamp)
2019-06-10 18:28:08 -请求地址 : http://localhost:8081/main
2019-06-10 18:28:08 -HTTP METHOD : GET
2019-06-10 18:28:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:28:08 -参数 : []
2019-06-10 18:28:08 -耗时 : 0
2019-06-10 18:28:08 -返回值 : main
2019-06-10 18:28:08 -<==    Updates: 1
2019-06-10 18:28:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:28:08 -HTTP METHOD : GET
2019-06-10 18:28:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:28:08 -参数 : []
2019-06-10 18:28:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:28:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:28:08 -<==      Total: 0
2019-06-10 18:28:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:28:08 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:28:08 -<==      Total: 1
2019-06-10 18:28:08 -耗时 : 13
2019-06-10 18:28:08 -返回值 : com.bootdo.common.utils.PageUtils@1122eb5
2019-06-10 18:28:08 -请求地址 : http://localhost:8081/main
2019-06-10 18:28:08 -HTTP METHOD : GET
2019-06-10 18:28:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:28:08 -参数 : []
2019-06-10 18:28:08 -耗时 : 1
2019-06-10 18:28:08 -返回值 : main
2019-06-10 18:28:10 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:28:10 -HTTP METHOD : GET
2019-06-10 18:28:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:28:10 -参数 : []
2019-06-10 18:28:10 -耗时 : 0
2019-06-10 18:28:10 -返回值 : print/print/print
2019-06-10 18:29:18 -请求地址 : http://localhost:8081/index
2019-06-10 18:29:18 -HTTP METHOD : GET
2019-06-10 18:29:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:29:18 -参数 : [{}]
2019-06-10 18:29:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:29:18 -==> Parameters: 1(Long)
2019-06-10 18:29:18 -<==      Total: 50
2019-06-10 18:29:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:29:18 -==> Parameters: 138(Long)
2019-06-10 18:29:18 -<==      Total: 1
2019-06-10 18:29:18 -耗时 : 26
2019-06-10 18:29:18 -返回值 : index_v1
2019-06-10 18:29:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:29:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:29:18.108(Timestamp)
2019-06-10 18:29:18 -<==    Updates: 1
2019-06-10 18:29:18 -请求地址 : http://localhost:8081/main
2019-06-10 18:29:18 -HTTP METHOD : GET
2019-06-10 18:29:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:29:18 -参数 : []
2019-06-10 18:29:18 -耗时 : 0
2019-06-10 18:29:18 -返回值 : main
2019-06-10 18:29:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:29:18 -HTTP METHOD : GET
2019-06-10 18:29:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:29:18 -参数 : []
2019-06-10 18:29:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:29:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:29:18 -<==      Total: 0
2019-06-10 18:29:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:29:18 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:29:18 -<==      Total: 1
2019-06-10 18:29:18 -耗时 : 11
2019-06-10 18:29:18 -返回值 : com.bootdo.common.utils.PageUtils@6f3974b4
2019-06-10 18:29:18 -请求地址 : http://localhost:8081/main
2019-06-10 18:29:18 -HTTP METHOD : GET
2019-06-10 18:29:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:29:18 -参数 : []
2019-06-10 18:29:18 -耗时 : 1
2019-06-10 18:29:18 -返回值 : main
2019-06-10 18:29:24 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:29:24 -HTTP METHOD : GET
2019-06-10 18:29:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:29:24 -参数 : []
2019-06-10 18:29:24 -耗时 : 0
2019-06-10 18:29:24 -返回值 : print/print/print
2019-06-10 18:29:49 -请求地址 : http://localhost:8081/index
2019-06-10 18:29:49 -HTTP METHOD : GET
2019-06-10 18:29:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:29:49 -参数 : [{}]
2019-06-10 18:29:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:29:49 -==> Parameters: 1(Long)
2019-06-10 18:29:49 -<==      Total: 50
2019-06-10 18:29:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:29:49 -==> Parameters: 138(Long)
2019-06-10 18:29:49 -<==      Total: 1
2019-06-10 18:29:49 -耗时 : 22
2019-06-10 18:29:49 -返回值 : index_v1
2019-06-10 18:29:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:29:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:29:49.567(Timestamp)
2019-06-10 18:29:49 -请求地址 : http://localhost:8081/main
2019-06-10 18:29:49 -HTTP METHOD : GET
2019-06-10 18:29:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:29:49 -参数 : []
2019-06-10 18:29:49 -耗时 : 1
2019-06-10 18:29:49 -返回值 : main
2019-06-10 18:29:49 -<==    Updates: 1
2019-06-10 18:29:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:29:49 -HTTP METHOD : GET
2019-06-10 18:29:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:29:49 -参数 : []
2019-06-10 18:29:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:29:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:29:49 -<==      Total: 0
2019-06-10 18:29:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:29:49 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:29:49 -<==      Total: 1
2019-06-10 18:29:49 -耗时 : 6
2019-06-10 18:29:49 -返回值 : com.bootdo.common.utils.PageUtils@1f8eb71e
2019-06-10 18:29:50 -请求地址 : http://localhost:8081/main
2019-06-10 18:29:50 -HTTP METHOD : GET
2019-06-10 18:29:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:29:50 -参数 : []
2019-06-10 18:29:50 -耗时 : 2
2019-06-10 18:29:50 -返回值 : main
2019-06-10 18:29:52 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:29:52 -HTTP METHOD : GET
2019-06-10 18:29:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:29:52 -参数 : []
2019-06-10 18:29:52 -耗时 : 0
2019-06-10 18:29:52 -返回值 : print/print/print
2019-06-10 18:29:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:29:53 -HTTP METHOD : GET
2019-06-10 18:29:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:29:53 -参数 : [userType]
2019-06-10 18:29:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:29:53 -==> Parameters: userType(String)
2019-06-10 18:29:53 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:29:53 -HTTP METHOD : GET
2019-06-10 18:29:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:29:53 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:29:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:29:53 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:29:53 -<==      Total: 4
2019-06-10 18:29:53 -耗时 : 318
2019-06-10 18:29:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:29:53 -<==      Total: 3
2019-06-10 18:29:53 -==>  Preparing: select count(*) from print 
2019-06-10 18:29:53 -==> Parameters: 
2019-06-10 18:29:53 -<==      Total: 1
2019-06-10 18:29:53 -耗时 : 639
2019-06-10 18:29:53 -返回值 : com.bootdo.common.utils.PageUtils@7d0ec28f
2019-06-10 18:30:04 -请求地址 : http://localhost:8081/print/print/edit/1
2019-06-10 18:30:04 -HTTP METHOD : GET
2019-06-10 18:30:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-06-10 18:30:04 -参数 : [1, {}]
2019-06-10 18:30:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-06-10 18:30:04 -==> Parameters: 1(Long)
2019-06-10 18:30:04 -<==      Total: 1
2019-06-10 18:30:04 -耗时 : 16
2019-06-10 18:30:04 -返回值 : print/print/edit
2019-06-10 18:30:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:30:05 -HTTP METHOD : GET
2019-06-10 18:30:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:30:05 -参数 : [userType]
2019-06-10 18:30:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:30:05 -==> Parameters: userType(String)
2019-06-10 18:30:05 -<==      Total: 4
2019-06-10 18:30:05 -耗时 : 115
2019-06-10 18:30:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:30:12 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:30:12 -HTTP METHOD : GET
2019-06-10 18:30:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:30:12 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:30:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:30:12 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:30:12 -<==      Total: 3
2019-06-10 18:30:12 -==>  Preparing: select count(*) from print 
2019-06-10 18:30:12 -==> Parameters: 
2019-06-10 18:30:12 -<==      Total: 1
2019-06-10 18:30:12 -耗时 : 7
2019-06-10 18:30:12 -返回值 : com.bootdo.common.utils.PageUtils@54c0d3b6
2019-06-10 18:31:21 -请求地址 : http://localhost:8081/index
2019-06-10 18:31:21 -HTTP METHOD : GET
2019-06-10 18:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:31:21 -参数 : [{}]
2019-06-10 18:31:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:31:21 -==> Parameters: 1(Long)
2019-06-10 18:31:21 -<==      Total: 50
2019-06-10 18:31:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:31:21 -==> Parameters: 138(Long)
2019-06-10 18:31:21 -<==      Total: 1
2019-06-10 18:31:21 -耗时 : 180
2019-06-10 18:31:21 -返回值 : index_v1
2019-06-10 18:31:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:31:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 180(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:31:21.224(Timestamp)
2019-06-10 18:31:21 -<==    Updates: 1
2019-06-10 18:31:21 -请求地址 : http://localhost:8081/main
2019-06-10 18:31:21 -HTTP METHOD : GET
2019-06-10 18:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:31:21 -参数 : []
2019-06-10 18:31:21 -耗时 : 1
2019-06-10 18:31:21 -返回值 : main
2019-06-10 18:31:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:31:21 -HTTP METHOD : GET
2019-06-10 18:31:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:31:21 -参数 : []
2019-06-10 18:31:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:31:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:31:21 -请求地址 : http://localhost:8081/main
2019-06-10 18:31:21 -HTTP METHOD : GET
2019-06-10 18:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:31:21 -参数 : []
2019-06-10 18:31:21 -耗时 : 0
2019-06-10 18:31:21 -返回值 : main
2019-06-10 18:31:21 -<==      Total: 0
2019-06-10 18:31:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:31:21 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:31:21 -<==      Total: 1
2019-06-10 18:31:21 -耗时 : 281
2019-06-10 18:31:21 -返回值 : com.bootdo.common.utils.PageUtils@5ea392f0
2019-06-10 18:31:24 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:31:24 -HTTP METHOD : GET
2019-06-10 18:31:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:31:24 -参数 : []
2019-06-10 18:31:24 -耗时 : 1
2019-06-10 18:31:24 -返回值 : print/print/print
2019-06-10 18:31:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:31:25 -HTTP METHOD : GET
2019-06-10 18:31:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:31:25 -参数 : [userType]
2019-06-10 18:31:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:31:25 -==> Parameters: userType(String)
2019-06-10 18:31:25 -<==      Total: 4
2019-06-10 18:31:25 -耗时 : 11
2019-06-10 18:31:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:31:25 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:31:25 -HTTP METHOD : GET
2019-06-10 18:31:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:31:25 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:31:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:31:25 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:31:25 -<==      Total: 3
2019-06-10 18:31:25 -==>  Preparing: select count(*) from print 
2019-06-10 18:31:25 -==> Parameters: 
2019-06-10 18:31:25 -<==      Total: 1
2019-06-10 18:31:25 -耗时 : 12
2019-06-10 18:31:25 -返回值 : com.bootdo.common.utils.PageUtils@6943221f
2019-06-10 18:31:54 -请求地址 : http://localhost:8081/index
2019-06-10 18:31:54 -HTTP METHOD : GET
2019-06-10 18:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:31:54 -参数 : [{}]
2019-06-10 18:31:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:31:54 -==> Parameters: 1(Long)
2019-06-10 18:31:54 -<==      Total: 50
2019-06-10 18:31:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:31:54 -==> Parameters: 138(Long)
2019-06-10 18:31:54 -<==      Total: 1
2019-06-10 18:31:54 -耗时 : 20
2019-06-10 18:31:54 -返回值 : index_v1
2019-06-10 18:31:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:31:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:31:54.72(Timestamp)
2019-06-10 18:31:54 -请求地址 : http://localhost:8081/main
2019-06-10 18:31:54 -HTTP METHOD : GET
2019-06-10 18:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:31:54 -参数 : []
2019-06-10 18:31:54 -耗时 : 0
2019-06-10 18:31:54 -返回值 : main
2019-06-10 18:31:54 -<==    Updates: 1
2019-06-10 18:31:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:31:55 -HTTP METHOD : GET
2019-06-10 18:31:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:31:55 -参数 : []
2019-06-10 18:31:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:31:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:31:55 -<==      Total: 0
2019-06-10 18:31:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:31:55 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:31:55 -<==      Total: 1
2019-06-10 18:31:55 -耗时 : 8
2019-06-10 18:31:55 -返回值 : com.bootdo.common.utils.PageUtils@571608e
2019-06-10 18:31:55 -请求地址 : http://localhost:8081/main
2019-06-10 18:31:55 -HTTP METHOD : GET
2019-06-10 18:31:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:31:55 -参数 : []
2019-06-10 18:31:55 -耗时 : 0
2019-06-10 18:31:55 -返回值 : main
2019-06-10 18:31:59 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:31:59 -HTTP METHOD : GET
2019-06-10 18:31:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:31:59 -参数 : []
2019-06-10 18:31:59 -耗时 : 0
2019-06-10 18:31:59 -返回值 : print/print/print
2019-06-10 18:32:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:32:00 -HTTP METHOD : GET
2019-06-10 18:32:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:32:00 -参数 : [userType]
2019-06-10 18:32:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:32:00 -==> Parameters: userType(String)
2019-06-10 18:32:00 -<==      Total: 4
2019-06-10 18:32:00 -耗时 : 7
2019-06-10 18:32:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:32:00 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:32:00 -HTTP METHOD : GET
2019-06-10 18:32:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:32:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:32:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:32:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:32:00 -<==      Total: 3
2019-06-10 18:32:00 -==>  Preparing: select count(*) from print 
2019-06-10 18:32:00 -==> Parameters: 
2019-06-10 18:32:00 -<==      Total: 1
2019-06-10 18:32:00 -耗时 : 8
2019-06-10 18:32:00 -返回值 : com.bootdo.common.utils.PageUtils@42032fb0
2019-06-10 18:33:11 -请求地址 : http://localhost:8081/index
2019-06-10 18:33:11 -HTTP METHOD : GET
2019-06-10 18:33:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:33:11 -参数 : [{}]
2019-06-10 18:33:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:33:11 -==> Parameters: 1(Long)
2019-06-10 18:33:11 -<==      Total: 50
2019-06-10 18:33:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:33:11 -==> Parameters: 138(Long)
2019-06-10 18:33:11 -<==      Total: 1
2019-06-10 18:33:11 -耗时 : 26
2019-06-10 18:33:11 -返回值 : index_v1
2019-06-10 18:33:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:33:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:33:11.794(Timestamp)
2019-06-10 18:33:11 -<==    Updates: 1
2019-06-10 18:33:11 -请求地址 : http://localhost:8081/main
2019-06-10 18:33:11 -HTTP METHOD : GET
2019-06-10 18:33:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:33:11 -参数 : []
2019-06-10 18:33:11 -耗时 : 0
2019-06-10 18:33:11 -返回值 : main
2019-06-10 18:33:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:33:12 -HTTP METHOD : GET
2019-06-10 18:33:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:33:12 -参数 : []
2019-06-10 18:33:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:33:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:33:12 -<==      Total: 0
2019-06-10 18:33:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:33:12 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:33:12 -<==      Total: 1
2019-06-10 18:33:12 -耗时 : 96
2019-06-10 18:33:12 -返回值 : com.bootdo.common.utils.PageUtils@6a12ef45
2019-06-10 18:33:12 -请求地址 : http://localhost:8081/main
2019-06-10 18:33:12 -HTTP METHOD : GET
2019-06-10 18:33:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:33:12 -参数 : []
2019-06-10 18:33:12 -耗时 : 0
2019-06-10 18:33:12 -返回值 : main
2019-06-10 18:33:15 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:33:15 -HTTP METHOD : GET
2019-06-10 18:33:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:33:15 -参数 : []
2019-06-10 18:33:15 -耗时 : 0
2019-06-10 18:33:15 -返回值 : print/print/print
2019-06-10 18:33:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:33:16 -HTTP METHOD : GET
2019-06-10 18:33:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:33:16 -参数 : [userType]
2019-06-10 18:33:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:33:16 -==> Parameters: userType(String)
2019-06-10 18:33:16 -<==      Total: 4
2019-06-10 18:33:16 -耗时 : 6
2019-06-10 18:33:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:33:16 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:33:16 -HTTP METHOD : GET
2019-06-10 18:33:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:33:16 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:33:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:33:16 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:33:16 -<==      Total: 3
2019-06-10 18:33:16 -==>  Preparing: select count(*) from print 
2019-06-10 18:33:16 -==> Parameters: 
2019-06-10 18:33:16 -<==      Total: 1
2019-06-10 18:33:16 -耗时 : 18
2019-06-10 18:33:16 -返回值 : com.bootdo.common.utils.PageUtils@5cfcd81b
2019-06-10 18:33:58 -请求地址 : http://localhost:8081/index
2019-06-10 18:33:58 -HTTP METHOD : GET
2019-06-10 18:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:33:58 -参数 : [{}]
2019-06-10 18:33:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:33:58 -==> Parameters: 1(Long)
2019-06-10 18:33:58 -<==      Total: 50
2019-06-10 18:33:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:33:58 -==> Parameters: 138(Long)
2019-06-10 18:33:58 -<==      Total: 1
2019-06-10 18:33:58 -耗时 : 15
2019-06-10 18:33:58 -返回值 : index_v1
2019-06-10 18:33:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:33:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:33:58.391(Timestamp)
2019-06-10 18:33:58 -请求地址 : http://localhost:8081/main
2019-06-10 18:33:58 -HTTP METHOD : GET
2019-06-10 18:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:33:58 -参数 : []
2019-06-10 18:33:58 -耗时 : 2
2019-06-10 18:33:58 -返回值 : main
2019-06-10 18:33:58 -<==    Updates: 1
2019-06-10 18:33:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:33:58 -HTTP METHOD : GET
2019-06-10 18:33:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:33:58 -参数 : []
2019-06-10 18:33:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:33:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:33:58 -<==      Total: 0
2019-06-10 18:33:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:33:58 -请求地址 : http://localhost:8081/main
2019-06-10 18:33:58 -HTTP METHOD : GET
2019-06-10 18:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:33:58 -参数 : []
2019-06-10 18:33:58 -耗时 : 0
2019-06-10 18:33:58 -返回值 : main
2019-06-10 18:33:58 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:33:58 -<==      Total: 1
2019-06-10 18:33:58 -耗时 : 76
2019-06-10 18:33:58 -返回值 : com.bootdo.common.utils.PageUtils@61e13983
2019-06-10 18:34:02 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:34:02 -HTTP METHOD : GET
2019-06-10 18:34:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:34:02 -参数 : []
2019-06-10 18:34:02 -耗时 : 0
2019-06-10 18:34:02 -返回值 : print/print/print
2019-06-10 18:34:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:34:02 -HTTP METHOD : GET
2019-06-10 18:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:34:02 -参数 : [userType]
2019-06-10 18:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:34:02 -==> Parameters: userType(String)
2019-06-10 18:34:02 -<==      Total: 4
2019-06-10 18:34:02 -耗时 : 6
2019-06-10 18:34:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:34:02 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:34:02 -HTTP METHOD : GET
2019-06-10 18:34:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:34:02 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:34:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:34:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:34:02 -<==      Total: 3
2019-06-10 18:34:02 -==>  Preparing: select count(*) from print 
2019-06-10 18:34:02 -==> Parameters: 
2019-06-10 18:34:02 -<==      Total: 1
2019-06-10 18:34:02 -耗时 : 11
2019-06-10 18:34:02 -返回值 : com.bootdo.common.utils.PageUtils@2cccefb7
2019-06-10 18:37:59 -请求地址 : http://localhost:8081/index
2019-06-10 18:37:59 -HTTP METHOD : GET
2019-06-10 18:37:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:37:59 -参数 : [{}]
2019-06-10 18:37:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:37:59 -==> Parameters: 1(Long)
2019-06-10 18:37:59 -<==      Total: 50
2019-06-10 18:37:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:37:59 -==> Parameters: 138(Long)
2019-06-10 18:37:59 -<==      Total: 1
2019-06-10 18:37:59 -耗时 : 23
2019-06-10 18:37:59 -返回值 : index_v1
2019-06-10 18:37:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:37:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:37:59.461(Timestamp)
2019-06-10 18:37:59 -请求地址 : http://localhost:8081/main
2019-06-10 18:37:59 -HTTP METHOD : GET
2019-06-10 18:37:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:37:59 -参数 : []
2019-06-10 18:37:59 -耗时 : 1
2019-06-10 18:37:59 -返回值 : main
2019-06-10 18:37:59 -<==    Updates: 1
2019-06-10 18:37:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:37:59 -HTTP METHOD : GET
2019-06-10 18:37:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:37:59 -参数 : []
2019-06-10 18:37:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:37:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:37:59 -<==      Total: 0
2019-06-10 18:37:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:37:59 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:37:59 -<==      Total: 1
2019-06-10 18:37:59 -耗时 : 6
2019-06-10 18:37:59 -返回值 : com.bootdo.common.utils.PageUtils@503570ca
2019-06-10 18:37:59 -请求地址 : http://localhost:8081/main
2019-06-10 18:37:59 -HTTP METHOD : GET
2019-06-10 18:37:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:37:59 -参数 : []
2019-06-10 18:37:59 -耗时 : 0
2019-06-10 18:37:59 -返回值 : main
2019-06-10 18:38:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:38:03 -==> Parameters: 1(Long)
2019-06-10 18:38:03 -<==      Total: 94
2019-06-10 18:38:03 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:38:03 -HTTP METHOD : GET
2019-06-10 18:38:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:38:03 -参数 : []
2019-06-10 18:38:03 -耗时 : 0
2019-06-10 18:38:03 -返回值 : print/print/print
2019-06-10 18:39:27 -请求地址 : http://localhost:8081/index
2019-06-10 18:39:27 -HTTP METHOD : GET
2019-06-10 18:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:39:27 -参数 : [{}]
2019-06-10 18:39:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:39:27 -==> Parameters: 1(Long)
2019-06-10 18:39:27 -<==      Total: 50
2019-06-10 18:39:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:39:27 -==> Parameters: 138(Long)
2019-06-10 18:39:27 -<==      Total: 1
2019-06-10 18:39:27 -耗时 : 27
2019-06-10 18:39:27 -返回值 : index_v1
2019-06-10 18:39:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:39:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:39:27.373(Timestamp)
2019-06-10 18:39:27 -请求地址 : http://localhost:8081/main
2019-06-10 18:39:27 -HTTP METHOD : GET
2019-06-10 18:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:39:27 -参数 : []
2019-06-10 18:39:27 -耗时 : 1
2019-06-10 18:39:27 -返回值 : main
2019-06-10 18:39:27 -<==    Updates: 1
2019-06-10 18:39:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:39:27 -HTTP METHOD : GET
2019-06-10 18:39:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:39:27 -参数 : []
2019-06-10 18:39:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:39:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:39:27 -<==      Total: 0
2019-06-10 18:39:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:39:27 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:39:27 -<==      Total: 1
2019-06-10 18:39:27 -耗时 : 23
2019-06-10 18:39:27 -返回值 : com.bootdo.common.utils.PageUtils@1e5ae3f6
2019-06-10 18:39:27 -请求地址 : http://localhost:8081/main
2019-06-10 18:39:27 -HTTP METHOD : GET
2019-06-10 18:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:39:27 -参数 : []
2019-06-10 18:39:27 -耗时 : 1
2019-06-10 18:39:27 -返回值 : main
2019-06-10 18:39:29 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:39:29 -HTTP METHOD : GET
2019-06-10 18:39:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:39:29 -参数 : []
2019-06-10 18:39:29 -耗时 : 0
2019-06-10 18:39:29 -返回值 : print/print/print
2019-06-10 18:39:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:39:30 -HTTP METHOD : GET
2019-06-10 18:39:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:39:30 -参数 : [userType]
2019-06-10 18:39:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:39:30 -==> Parameters: userType(String)
2019-06-10 18:39:30 -<==      Total: 4
2019-06-10 18:39:30 -耗时 : 6
2019-06-10 18:39:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:39:30 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:39:30 -HTTP METHOD : GET
2019-06-10 18:39:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:39:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:39:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:39:30 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:39:30 -<==      Total: 3
2019-06-10 18:39:30 -==>  Preparing: select count(*) from print 
2019-06-10 18:39:30 -==> Parameters: 
2019-06-10 18:39:30 -<==      Total: 1
2019-06-10 18:39:30 -耗时 : 9
2019-06-10 18:39:30 -返回值 : com.bootdo.common.utils.PageUtils@26693cbc
2019-06-10 18:40:05 -请求地址 : http://localhost:8081/index
2019-06-10 18:40:05 -HTTP METHOD : GET
2019-06-10 18:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:40:05 -参数 : [{}]
2019-06-10 18:40:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:40:05 -==> Parameters: 1(Long)
2019-06-10 18:40:05 -<==      Total: 50
2019-06-10 18:40:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:40:05 -==> Parameters: 138(Long)
2019-06-10 18:40:05 -<==      Total: 1
2019-06-10 18:40:05 -耗时 : 19
2019-06-10 18:40:05 -返回值 : index_v1
2019-06-10 18:40:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:40:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:40:05.906(Timestamp)
2019-06-10 18:40:06 -<==    Updates: 1
2019-06-10 18:40:06 -请求地址 : http://localhost:8081/main
2019-06-10 18:40:06 -HTTP METHOD : GET
2019-06-10 18:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:40:06 -参数 : []
2019-06-10 18:40:06 -耗时 : 0
2019-06-10 18:40:06 -返回值 : main
2019-06-10 18:40:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:40:06 -HTTP METHOD : GET
2019-06-10 18:40:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:40:06 -参数 : []
2019-06-10 18:40:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:40:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:40:06 -<==      Total: 0
2019-06-10 18:40:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:40:06 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:40:06 -<==      Total: 1
2019-06-10 18:40:06 -耗时 : 10
2019-06-10 18:40:06 -返回值 : com.bootdo.common.utils.PageUtils@61ead619
2019-06-10 18:40:06 -请求地址 : http://localhost:8081/main
2019-06-10 18:40:06 -HTTP METHOD : GET
2019-06-10 18:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:40:06 -参数 : []
2019-06-10 18:40:06 -耗时 : 1
2019-06-10 18:40:06 -返回值 : main
2019-06-10 18:40:09 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:40:09 -HTTP METHOD : GET
2019-06-10 18:40:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:40:09 -参数 : []
2019-06-10 18:40:09 -耗时 : 0
2019-06-10 18:40:09 -返回值 : print/print/print
2019-06-10 18:41:36 -请求地址 : http://localhost:8081/index
2019-06-10 18:41:36 -HTTP METHOD : GET
2019-06-10 18:41:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:41:36 -参数 : [{}]
2019-06-10 18:41:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:41:36 -==> Parameters: 1(Long)
2019-06-10 18:41:36 -<==      Total: 50
2019-06-10 18:41:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:41:36 -==> Parameters: 138(Long)
2019-06-10 18:41:36 -<==      Total: 1
2019-06-10 18:41:36 -耗时 : 20
2019-06-10 18:41:36 -返回值 : index_v1
2019-06-10 18:41:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:41:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:41:36.682(Timestamp)
2019-06-10 18:41:36 -请求地址 : http://localhost:8081/main
2019-06-10 18:41:36 -HTTP METHOD : GET
2019-06-10 18:41:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:41:36 -参数 : []
2019-06-10 18:41:36 -耗时 : 1
2019-06-10 18:41:36 -返回值 : main
2019-06-10 18:41:36 -<==    Updates: 1
2019-06-10 18:41:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:41:37 -HTTP METHOD : GET
2019-06-10 18:41:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:41:37 -参数 : []
2019-06-10 18:41:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:41:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:41:37 -<==      Total: 0
2019-06-10 18:41:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:41:37 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:41:37 -<==      Total: 1
2019-06-10 18:41:37 -耗时 : 10
2019-06-10 18:41:37 -返回值 : com.bootdo.common.utils.PageUtils@73706cff
2019-06-10 18:41:37 -请求地址 : http://localhost:8081/main
2019-06-10 18:41:37 -HTTP METHOD : GET
2019-06-10 18:41:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:41:37 -参数 : []
2019-06-10 18:41:37 -耗时 : 1
2019-06-10 18:41:37 -返回值 : main
2019-06-10 18:41:40 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:41:40 -HTTP METHOD : GET
2019-06-10 18:41:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:41:40 -参数 : []
2019-06-10 18:41:40 -耗时 : 1
2019-06-10 18:41:40 -返回值 : print/print/print
2019-06-10 18:42:52 -请求地址 : http://localhost:8081/index
2019-06-10 18:42:52 -HTTP METHOD : GET
2019-06-10 18:42:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:42:52 -参数 : [{}]
2019-06-10 18:42:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:42:52 -==> Parameters: 1(Long)
2019-06-10 18:42:52 -<==      Total: 50
2019-06-10 18:42:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:42:52 -==> Parameters: 138(Long)
2019-06-10 18:42:52 -<==      Total: 1
2019-06-10 18:42:52 -耗时 : 18
2019-06-10 18:42:52 -返回值 : index_v1
2019-06-10 18:42:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:42:52 -请求地址 : http://localhost:8081/main
2019-06-10 18:42:52 -HTTP METHOD : GET
2019-06-10 18:42:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:42:52 -参数 : []
2019-06-10 18:42:52 -耗时 : 0
2019-06-10 18:42:52 -返回值 : main
2019-06-10 18:42:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:42:52.307(Timestamp)
2019-06-10 18:42:52 -<==    Updates: 1
2019-06-10 18:42:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:42:52 -HTTP METHOD : GET
2019-06-10 18:42:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:42:52 -参数 : []
2019-06-10 18:42:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:42:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:42:52 -<==      Total: 0
2019-06-10 18:42:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:42:52 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:42:52 -<==      Total: 1
2019-06-10 18:42:52 -耗时 : 15
2019-06-10 18:42:52 -返回值 : com.bootdo.common.utils.PageUtils@394576ee
2019-06-10 18:42:52 -请求地址 : http://localhost:8081/main
2019-06-10 18:42:52 -HTTP METHOD : GET
2019-06-10 18:42:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:42:52 -参数 : []
2019-06-10 18:42:52 -耗时 : 0
2019-06-10 18:42:52 -返回值 : main
2019-06-10 18:42:56 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:42:56 -HTTP METHOD : GET
2019-06-10 18:42:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:42:56 -参数 : []
2019-06-10 18:42:56 -耗时 : 0
2019-06-10 18:42:56 -返回值 : print/print/print
2019-06-10 18:42:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:42:56 -HTTP METHOD : GET
2019-06-10 18:42:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:42:56 -参数 : [userType]
2019-06-10 18:42:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:42:56 -==> Parameters: userType(String)
2019-06-10 18:42:56 -<==      Total: 4
2019-06-10 18:42:56 -耗时 : 3
2019-06-10 18:42:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:42:56 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:42:56 -HTTP METHOD : GET
2019-06-10 18:42:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:42:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:42:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:42:56 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:42:56 -<==      Total: 3
2019-06-10 18:42:56 -==>  Preparing: select count(*) from print 
2019-06-10 18:42:56 -==> Parameters: 
2019-06-10 18:42:56 -<==      Total: 1
2019-06-10 18:42:56 -耗时 : 14
2019-06-10 18:42:56 -返回值 : com.bootdo.common.utils.PageUtils@5483137d
2019-06-10 18:44:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 19 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(19)-CONNECTED(19)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 225], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 37], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 425]
2019-06-10 18:44:19 -请求地址 : http://localhost:8081/index
2019-06-10 18:44:19 -HTTP METHOD : GET
2019-06-10 18:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:44:19 -参数 : [{}]
2019-06-10 18:44:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:44:19 -==> Parameters: 1(Long)
2019-06-10 18:44:19 -<==      Total: 50
2019-06-10 18:44:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:44:19 -==> Parameters: 138(Long)
2019-06-10 18:44:19 -<==      Total: 1
2019-06-10 18:44:19 -耗时 : 88
2019-06-10 18:44:19 -返回值 : index_v1
2019-06-10 18:44:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:44:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:44:19.159(Timestamp)
2019-06-10 18:44:19 -<==    Updates: 1
2019-06-10 18:44:19 -请求地址 : http://localhost:8081/main
2019-06-10 18:44:19 -HTTP METHOD : GET
2019-06-10 18:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:44:19 -参数 : []
2019-06-10 18:44:19 -耗时 : 0
2019-06-10 18:44:19 -返回值 : main
2019-06-10 18:44:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:44:19 -HTTP METHOD : GET
2019-06-10 18:44:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:44:19 -参数 : []
2019-06-10 18:44:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:44:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:44:19 -<==      Total: 0
2019-06-10 18:44:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:44:19 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:44:19 -<==      Total: 1
2019-06-10 18:44:19 -耗时 : 24
2019-06-10 18:44:19 -返回值 : com.bootdo.common.utils.PageUtils@41e9b227
2019-06-10 18:44:19 -请求地址 : http://localhost:8081/main
2019-06-10 18:44:19 -HTTP METHOD : GET
2019-06-10 18:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:44:19 -参数 : []
2019-06-10 18:44:19 -耗时 : 0
2019-06-10 18:44:19 -返回值 : main
2019-06-10 18:44:39 -请求地址 : http://localhost:8081/index
2019-06-10 18:44:39 -HTTP METHOD : GET
2019-06-10 18:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:44:39 -参数 : [{}]
2019-06-10 18:44:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:44:39 -==> Parameters: 1(Long)
2019-06-10 18:44:39 -<==      Total: 50
2019-06-10 18:44:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:44:39 -==> Parameters: 138(Long)
2019-06-10 18:44:39 -<==      Total: 1
2019-06-10 18:44:39 -耗时 : 14
2019-06-10 18:44:39 -返回值 : index_v1
2019-06-10 18:44:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:44:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:44:39.409(Timestamp)
2019-06-10 18:44:39 -<==    Updates: 1
2019-06-10 18:44:39 -请求地址 : http://localhost:8081/main
2019-06-10 18:44:39 -HTTP METHOD : GET
2019-06-10 18:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:44:39 -参数 : []
2019-06-10 18:44:39 -耗时 : 1
2019-06-10 18:44:39 -返回值 : main
2019-06-10 18:44:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:44:39 -HTTP METHOD : GET
2019-06-10 18:44:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:44:39 -参数 : []
2019-06-10 18:44:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:44:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:44:39 -<==      Total: 0
2019-06-10 18:44:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:44:39 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:44:39 -<==      Total: 1
2019-06-10 18:44:39 -耗时 : 8
2019-06-10 18:44:39 -返回值 : com.bootdo.common.utils.PageUtils@3176c96
2019-06-10 18:44:40 -请求地址 : http://localhost:8081/main
2019-06-10 18:44:40 -HTTP METHOD : GET
2019-06-10 18:44:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:44:40 -参数 : []
2019-06-10 18:44:40 -耗时 : 0
2019-06-10 18:44:40 -返回值 : main
2019-06-10 18:44:45 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:44:45 -HTTP METHOD : GET
2019-06-10 18:44:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:44:45 -参数 : []
2019-06-10 18:44:45 -耗时 : 0
2019-06-10 18:44:45 -返回值 : print/print/print
2019-06-10 18:48:43 -请求地址 : http://localhost:8081/index
2019-06-10 18:48:43 -HTTP METHOD : GET
2019-06-10 18:48:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:48:43 -参数 : [{}]
2019-06-10 18:48:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:48:43 -==> Parameters: 1(Long)
2019-06-10 18:48:43 -<==      Total: 50
2019-06-10 18:48:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:48:43 -==> Parameters: 138(Long)
2019-06-10 18:48:43 -<==      Total: 1
2019-06-10 18:48:43 -耗时 : 24
2019-06-10 18:48:43 -返回值 : index_v1
2019-06-10 18:48:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:48:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:48:43.153(Timestamp)
2019-06-10 18:48:43 -请求地址 : http://localhost:8081/main
2019-06-10 18:48:43 -HTTP METHOD : GET
2019-06-10 18:48:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:48:43 -参数 : []
2019-06-10 18:48:43 -耗时 : 3
2019-06-10 18:48:43 -返回值 : main
2019-06-10 18:48:43 -<==    Updates: 1
2019-06-10 18:48:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:48:43 -HTTP METHOD : GET
2019-06-10 18:48:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:48:43 -参数 : []
2019-06-10 18:48:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:48:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:48:43 -<==      Total: 0
2019-06-10 18:48:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:48:43 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:48:43 -<==      Total: 1
2019-06-10 18:48:43 -耗时 : 7
2019-06-10 18:48:43 -返回值 : com.bootdo.common.utils.PageUtils@76af4750
2019-06-10 18:48:43 -请求地址 : http://localhost:8081/main
2019-06-10 18:48:43 -HTTP METHOD : GET
2019-06-10 18:48:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:48:43 -参数 : []
2019-06-10 18:48:43 -耗时 : 0
2019-06-10 18:48:43 -返回值 : main
2019-06-10 18:48:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:48:46 -==> Parameters: 1(Long)
2019-06-10 18:48:46 -<==      Total: 94
2019-06-10 18:48:46 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:48:46 -HTTP METHOD : GET
2019-06-10 18:48:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:48:46 -参数 : []
2019-06-10 18:48:46 -耗时 : 0
2019-06-10 18:48:46 -返回值 : print/print/print
2019-06-10 18:51:45 -请求地址 : http://localhost:8081/index
2019-06-10 18:51:45 -HTTP METHOD : GET
2019-06-10 18:51:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:51:45 -参数 : [{}]
2019-06-10 18:51:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:51:45 -==> Parameters: 1(Long)
2019-06-10 18:51:45 -<==      Total: 50
2019-06-10 18:51:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:51:45 -==> Parameters: 138(Long)
2019-06-10 18:51:45 -<==      Total: 1
2019-06-10 18:51:45 -耗时 : 33
2019-06-10 18:51:45 -返回值 : index_v1
2019-06-10 18:51:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:51:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:51:45.624(Timestamp)
2019-06-10 18:51:45 -<==    Updates: 1
2019-06-10 18:51:45 -请求地址 : http://localhost:8081/main
2019-06-10 18:51:45 -HTTP METHOD : GET
2019-06-10 18:51:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:51:45 -参数 : []
2019-06-10 18:51:45 -耗时 : 0
2019-06-10 18:51:45 -返回值 : main
2019-06-10 18:51:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:51:46 -HTTP METHOD : GET
2019-06-10 18:51:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:51:46 -参数 : []
2019-06-10 18:51:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:51:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:51:46 -<==      Total: 0
2019-06-10 18:51:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:51:46 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:51:46 -<==      Total: 1
2019-06-10 18:51:46 -耗时 : 6
2019-06-10 18:51:46 -返回值 : com.bootdo.common.utils.PageUtils@a043c7d
2019-06-10 18:51:46 -请求地址 : http://localhost:8081/main
2019-06-10 18:51:46 -HTTP METHOD : GET
2019-06-10 18:51:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:51:46 -参数 : []
2019-06-10 18:51:46 -耗时 : 1
2019-06-10 18:51:46 -返回值 : main
2019-06-10 18:51:48 -请求地址 : http://localhost:8081/index
2019-06-10 18:51:48 -HTTP METHOD : GET
2019-06-10 18:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:51:48 -参数 : [{}]
2019-06-10 18:51:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:51:48 -==> Parameters: 1(Long)
2019-06-10 18:51:48 -<==      Total: 50
2019-06-10 18:51:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:51:48 -==> Parameters: 138(Long)
2019-06-10 18:51:48 -<==      Total: 1
2019-06-10 18:51:48 -耗时 : 17
2019-06-10 18:51:48 -返回值 : index_v1
2019-06-10 18:51:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:51:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:51:48.732(Timestamp)
2019-06-10 18:51:48 -请求地址 : http://localhost:8081/main
2019-06-10 18:51:48 -HTTP METHOD : GET
2019-06-10 18:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:51:48 -参数 : []
2019-06-10 18:51:48 -耗时 : 0
2019-06-10 18:51:48 -返回值 : main
2019-06-10 18:51:48 -<==    Updates: 1
2019-06-10 18:51:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:51:49 -HTTP METHOD : GET
2019-06-10 18:51:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:51:49 -参数 : []
2019-06-10 18:51:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:51:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:51:49 -<==      Total: 0
2019-06-10 18:51:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:51:49 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:51:49 -<==      Total: 1
2019-06-10 18:51:49 -耗时 : 9
2019-06-10 18:51:49 -返回值 : com.bootdo.common.utils.PageUtils@5e18e707
2019-06-10 18:51:49 -请求地址 : http://localhost:8081/main
2019-06-10 18:51:49 -HTTP METHOD : GET
2019-06-10 18:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:51:49 -参数 : []
2019-06-10 18:51:49 -耗时 : 0
2019-06-10 18:51:49 -返回值 : main
2019-06-10 18:51:51 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:51:51 -HTTP METHOD : GET
2019-06-10 18:51:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:51:51 -参数 : []
2019-06-10 18:51:51 -耗时 : 1
2019-06-10 18:51:51 -返回值 : print/print/print
2019-06-10 18:51:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:51:51 -HTTP METHOD : GET
2019-06-10 18:51:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:51:51 -参数 : [userType]
2019-06-10 18:51:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:51:51 -==> Parameters: userType(String)
2019-06-10 18:51:51 -<==      Total: 4
2019-06-10 18:51:51 -耗时 : 4
2019-06-10 18:51:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:51:51 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:51:51 -HTTP METHOD : GET
2019-06-10 18:51:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:51:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:51:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:51:51 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:51:51 -<==      Total: 3
2019-06-10 18:51:51 -==>  Preparing: select count(*) from print 
2019-06-10 18:51:51 -==> Parameters: 
2019-06-10 18:51:51 -<==      Total: 1
2019-06-10 18:51:51 -耗时 : 9
2019-06-10 18:51:51 -返回值 : com.bootdo.common.utils.PageUtils@499681cd
2019-06-10 18:52:23 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 18:52:23 -HTTP METHOD : POST
2019-06-10 18:52:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 18:52:23 -参数 : [[Ljava.lang.Long;@718c5de5]
2019-06-10 18:52:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 18:52:23 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 18:52:23 -<==      Total: 3
2019-06-10 18:52:23 -耗时 : 18
2019-06-10 18:52:23 -返回值 : [com.bootdo.print.vo.PrintVo@1bc958a8, com.bootdo.print.vo.PrintVo@1d3bc8ce, com.bootdo.print.vo.PrintVo@6837d1a8]
2019-06-10 18:53:13 -请求地址 : http://localhost:8081/index
2019-06-10 18:53:13 -HTTP METHOD : GET
2019-06-10 18:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:53:13 -参数 : [{}]
2019-06-10 18:53:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:53:13 -==> Parameters: 1(Long)
2019-06-10 18:53:13 -<==      Total: 50
2019-06-10 18:53:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:53:13 -==> Parameters: 138(Long)
2019-06-10 18:53:13 -<==      Total: 1
2019-06-10 18:53:13 -耗时 : 15
2019-06-10 18:53:13 -返回值 : index_v1
2019-06-10 18:53:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:53:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:53:13.472(Timestamp)
2019-06-10 18:53:13 -请求地址 : http://localhost:8081/main
2019-06-10 18:53:13 -HTTP METHOD : GET
2019-06-10 18:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:53:13 -参数 : []
2019-06-10 18:53:13 -耗时 : 0
2019-06-10 18:53:13 -返回值 : main
2019-06-10 18:53:13 -<==    Updates: 1
2019-06-10 18:53:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:53:13 -HTTP METHOD : GET
2019-06-10 18:53:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:53:13 -参数 : []
2019-06-10 18:53:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:53:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:53:13 -<==      Total: 0
2019-06-10 18:53:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:53:13 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:53:13 -<==      Total: 1
2019-06-10 18:53:13 -耗时 : 18
2019-06-10 18:53:13 -返回值 : com.bootdo.common.utils.PageUtils@4828267c
2019-06-10 18:53:13 -请求地址 : http://localhost:8081/main
2019-06-10 18:53:13 -HTTP METHOD : GET
2019-06-10 18:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:53:13 -参数 : []
2019-06-10 18:53:13 -耗时 : 0
2019-06-10 18:53:13 -返回值 : main
2019-06-10 18:53:18 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:53:18 -HTTP METHOD : GET
2019-06-10 18:53:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:53:18 -参数 : []
2019-06-10 18:53:18 -耗时 : 0
2019-06-10 18:53:18 -返回值 : print/print/print
2019-06-10 18:53:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:53:18 -HTTP METHOD : GET
2019-06-10 18:53:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:53:18 -参数 : [userType]
2019-06-10 18:53:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:53:18 -==> Parameters: userType(String)
2019-06-10 18:53:18 -<==      Total: 4
2019-06-10 18:53:18 -耗时 : 5
2019-06-10 18:53:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:53:18 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:53:18 -HTTP METHOD : GET
2019-06-10 18:53:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:53:18 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:53:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:53:18 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:53:18 -<==      Total: 3
2019-06-10 18:53:18 -==>  Preparing: select count(*) from print 
2019-06-10 18:53:18 -==> Parameters: 
2019-06-10 18:53:18 -<==      Total: 1
2019-06-10 18:53:18 -耗时 : 9
2019-06-10 18:53:18 -返回值 : com.bootdo.common.utils.PageUtils@e797981
2019-06-10 18:53:22 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 18:53:22 -HTTP METHOD : POST
2019-06-10 18:53:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 18:53:22 -参数 : [[Ljava.lang.Long;@3ef4d96c]
2019-06-10 18:53:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 18:53:22 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 18:53:22 -<==      Total: 3
2019-06-10 18:53:22 -耗时 : 5
2019-06-10 18:53:22 -返回值 : [com.bootdo.print.vo.PrintVo@4733d415, com.bootdo.print.vo.PrintVo@1091ecd4, com.bootdo.print.vo.PrintVo@8366813]
2019-06-10 18:55:01 -请求地址 : http://localhost:8081/index
2019-06-10 18:55:01 -HTTP METHOD : GET
2019-06-10 18:55:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:55:01 -参数 : [{}]
2019-06-10 18:55:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:55:01 -==> Parameters: 1(Long)
2019-06-10 18:55:01 -<==      Total: 50
2019-06-10 18:55:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:55:01 -==> Parameters: 138(Long)
2019-06-10 18:55:01 -<==      Total: 1
2019-06-10 18:55:01 -耗时 : 22
2019-06-10 18:55:01 -返回值 : index_v1
2019-06-10 18:55:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:55:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:55:01.191(Timestamp)
2019-06-10 18:55:01 -<==    Updates: 1
2019-06-10 18:55:01 -请求地址 : http://localhost:8081/main
2019-06-10 18:55:01 -HTTP METHOD : GET
2019-06-10 18:55:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:55:01 -参数 : []
2019-06-10 18:55:01 -耗时 : 0
2019-06-10 18:55:01 -返回值 : main
2019-06-10 18:55:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:55:01 -HTTP METHOD : GET
2019-06-10 18:55:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:55:01 -参数 : []
2019-06-10 18:55:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:55:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:55:01 -<==      Total: 0
2019-06-10 18:55:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:55:01 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:55:01 -<==      Total: 1
2019-06-10 18:55:01 -耗时 : 5
2019-06-10 18:55:01 -返回值 : com.bootdo.common.utils.PageUtils@178d1230
2019-06-10 18:55:01 -请求地址 : http://localhost:8081/main
2019-06-10 18:55:01 -HTTP METHOD : GET
2019-06-10 18:55:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:55:01 -参数 : []
2019-06-10 18:55:01 -耗时 : 0
2019-06-10 18:55:01 -返回值 : main
2019-06-10 18:55:04 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:55:04 -HTTP METHOD : GET
2019-06-10 18:55:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:55:04 -参数 : []
2019-06-10 18:55:04 -耗时 : 0
2019-06-10 18:55:04 -返回值 : print/print/print
2019-06-10 18:55:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:55:05 -HTTP METHOD : GET
2019-06-10 18:55:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:55:05 -参数 : [userType]
2019-06-10 18:55:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:55:05 -==> Parameters: userType(String)
2019-06-10 18:55:05 -<==      Total: 4
2019-06-10 18:55:05 -耗时 : 4
2019-06-10 18:55:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:55:05 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:55:05 -HTTP METHOD : GET
2019-06-10 18:55:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:55:05 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:55:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:55:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:55:05 -<==      Total: 3
2019-06-10 18:55:05 -==>  Preparing: select count(*) from print 
2019-06-10 18:55:05 -==> Parameters: 
2019-06-10 18:55:05 -<==      Total: 1
2019-06-10 18:55:05 -耗时 : 8
2019-06-10 18:55:05 -返回值 : com.bootdo.common.utils.PageUtils@262bbd69
2019-06-10 18:55:11 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 18:55:11 -HTTP METHOD : POST
2019-06-10 18:55:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 18:55:11 -参数 : [[Ljava.lang.Long;@aeafd5f]
2019-06-10 18:55:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 18:55:11 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 18:55:11 -<==      Total: 3
2019-06-10 18:55:11 -耗时 : 5
2019-06-10 18:55:11 -返回值 : [com.bootdo.print.vo.PrintVo@431dc6a0, com.bootdo.print.vo.PrintVo@1587800, com.bootdo.print.vo.PrintVo@5c057d71]
2019-06-10 18:56:25 -请求地址 : http://localhost:8081/index
2019-06-10 18:56:25 -HTTP METHOD : GET
2019-06-10 18:56:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:56:25 -参数 : [{}]
2019-06-10 18:56:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:56:25 -==> Parameters: 1(Long)
2019-06-10 18:56:25 -<==      Total: 50
2019-06-10 18:56:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:56:25 -==> Parameters: 138(Long)
2019-06-10 18:56:25 -<==      Total: 1
2019-06-10 18:56:25 -耗时 : 17
2019-06-10 18:56:25 -返回值 : index_v1
2019-06-10 18:56:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:56:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:56:25.585(Timestamp)
2019-06-10 18:56:25 -<==    Updates: 1
2019-06-10 18:56:25 -请求地址 : http://localhost:8081/main
2019-06-10 18:56:25 -HTTP METHOD : GET
2019-06-10 18:56:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:56:25 -参数 : []
2019-06-10 18:56:25 -耗时 : 0
2019-06-10 18:56:25 -返回值 : main
2019-06-10 18:56:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:56:25 -HTTP METHOD : GET
2019-06-10 18:56:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:56:25 -参数 : []
2019-06-10 18:56:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:56:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:56:25 -<==      Total: 0
2019-06-10 18:56:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:56:25 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:56:25 -<==      Total: 1
2019-06-10 18:56:25 -耗时 : 6
2019-06-10 18:56:25 -返回值 : com.bootdo.common.utils.PageUtils@60d2068b
2019-06-10 18:56:25 -请求地址 : http://localhost:8081/main
2019-06-10 18:56:25 -HTTP METHOD : GET
2019-06-10 18:56:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:56:25 -参数 : []
2019-06-10 18:56:25 -耗时 : 0
2019-06-10 18:56:25 -返回值 : main
2019-06-10 18:56:28 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:56:28 -HTTP METHOD : GET
2019-06-10 18:56:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:56:28 -参数 : []
2019-06-10 18:56:28 -耗时 : 0
2019-06-10 18:56:28 -返回值 : print/print/print
2019-06-10 18:56:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:56:29 -HTTP METHOD : GET
2019-06-10 18:56:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:56:29 -参数 : [userType]
2019-06-10 18:56:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:56:29 -==> Parameters: userType(String)
2019-06-10 18:56:29 -<==      Total: 4
2019-06-10 18:56:29 -耗时 : 5
2019-06-10 18:56:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:56:29 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:56:29 -HTTP METHOD : GET
2019-06-10 18:56:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:56:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:56:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:56:29 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:56:29 -<==      Total: 3
2019-06-10 18:56:29 -==>  Preparing: select count(*) from print 
2019-06-10 18:56:29 -==> Parameters: 
2019-06-10 18:56:29 -<==      Total: 1
2019-06-10 18:56:29 -耗时 : 9
2019-06-10 18:56:29 -返回值 : com.bootdo.common.utils.PageUtils@638be3cf
2019-06-10 18:56:34 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 18:56:34 -HTTP METHOD : POST
2019-06-10 18:56:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 18:56:34 -参数 : [[Ljava.lang.Long;@483d8098]
2019-06-10 18:56:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 18:56:34 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 18:56:34 -<==      Total: 3
2019-06-10 18:56:34 -耗时 : 10
2019-06-10 18:56:34 -返回值 : [com.bootdo.print.vo.PrintVo@4c5f512b, com.bootdo.print.vo.PrintVo@1b27f447, com.bootdo.print.vo.PrintVo@717581df]
2019-06-10 18:59:52 -请求地址 : http://localhost:8081/index
2019-06-10 18:59:52 -HTTP METHOD : GET
2019-06-10 18:59:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 18:59:52 -参数 : [{}]
2019-06-10 18:59:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 18:59:52 -==> Parameters: 1(Long)
2019-06-10 18:59:52 -<==      Total: 50
2019-06-10 18:59:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 18:59:52 -==> Parameters: 138(Long)
2019-06-10 18:59:52 -<==      Total: 1
2019-06-10 18:59:52 -耗时 : 16
2019-06-10 18:59:52 -返回值 : index_v1
2019-06-10 18:59:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 18:59:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 18:59:52.73(Timestamp)
2019-06-10 18:59:52 -<==    Updates: 1
2019-06-10 18:59:52 -请求地址 : http://localhost:8081/main
2019-06-10 18:59:52 -HTTP METHOD : GET
2019-06-10 18:59:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:59:52 -参数 : []
2019-06-10 18:59:52 -耗时 : 0
2019-06-10 18:59:52 -返回值 : main
2019-06-10 18:59:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 18:59:53 -HTTP METHOD : GET
2019-06-10 18:59:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 18:59:53 -参数 : []
2019-06-10 18:59:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 18:59:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 18:59:53 -<==      Total: 0
2019-06-10 18:59:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 18:59:53 -==> Parameters: 1(Long), 0(String)
2019-06-10 18:59:53 -<==      Total: 1
2019-06-10 18:59:53 -耗时 : 11
2019-06-10 18:59:53 -返回值 : com.bootdo.common.utils.PageUtils@2c59acf9
2019-06-10 18:59:53 -请求地址 : http://localhost:8081/main
2019-06-10 18:59:53 -HTTP METHOD : GET
2019-06-10 18:59:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 18:59:53 -参数 : []
2019-06-10 18:59:53 -耗时 : 1
2019-06-10 18:59:53 -返回值 : main
2019-06-10 18:59:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 18:59:55 -==> Parameters: 1(Long)
2019-06-10 18:59:55 -<==      Total: 94
2019-06-10 18:59:55 -请求地址 : http://localhost:8081/print/print
2019-06-10 18:59:55 -HTTP METHOD : GET
2019-06-10 18:59:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 18:59:55 -参数 : []
2019-06-10 18:59:55 -耗时 : 1
2019-06-10 18:59:55 -返回值 : print/print/print
2019-06-10 18:59:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 18:59:55 -HTTP METHOD : GET
2019-06-10 18:59:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 18:59:55 -参数 : [userType]
2019-06-10 18:59:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 18:59:55 -==> Parameters: userType(String)
2019-06-10 18:59:55 -<==      Total: 4
2019-06-10 18:59:55 -耗时 : 6
2019-06-10 18:59:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 18:59:55 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 18:59:55 -HTTP METHOD : GET
2019-06-10 18:59:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 18:59:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 18:59:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 18:59:55 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 18:59:55 -<==      Total: 3
2019-06-10 18:59:55 -==>  Preparing: select count(*) from print 
2019-06-10 18:59:55 -==> Parameters: 
2019-06-10 18:59:55 -<==      Total: 1
2019-06-10 18:59:55 -耗时 : 5
2019-06-10 18:59:55 -返回值 : com.bootdo.common.utils.PageUtils@26b1227a
2019-06-10 19:00:00 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-06-10 19:00:00 -HTTP METHOD : GET
2019-06-10 19:00:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-06-10 19:00:00 -参数 : [1, {}]
2019-06-10 19:00:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-06-10 19:00:00 -==> Parameters: 1(Long)
2019-06-10 19:00:00 -<==      Total: 1
2019-06-10 19:00:00 -耗时 : 4
2019-06-10 19:00:00 -返回值 : print/print/printEdit
2019-06-10 19:00:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:00:00 -HTTP METHOD : GET
2019-06-10 19:00:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:00:00 -参数 : [userType]
2019-06-10 19:00:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:00:00 -==> Parameters: userType(String)
2019-06-10 19:00:00 -<==      Total: 4
2019-06-10 19:00:00 -耗时 : 3
2019-06-10 19:00:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:00:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:00:00 -HTTP METHOD : GET
2019-06-10 19:00:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:00:00 -参数 : [userType]
2019-06-10 19:00:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:00:00 -==> Parameters: userType(String)
2019-06-10 19:00:00 -<==      Total: 4
2019-06-10 19:00:00 -耗时 : 4
2019-06-10 19:00:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:13:45 -Validating all active sessions...
2019-06-10 19:13:45 -Finished session validation.  No sessions were stopped.
2019-06-10 19:14:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 854]
2019-06-10 19:14:39 -请求地址 : http://localhost:8081/index
2019-06-10 19:14:39 -HTTP METHOD : GET
2019-06-10 19:14:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:14:39 -参数 : [{}]
2019-06-10 19:14:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:14:39 -==> Parameters: 1(Long)
2019-06-10 19:14:39 -<==      Total: 50
2019-06-10 19:14:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:14:39 -==> Parameters: 138(Long)
2019-06-10 19:14:39 -<==      Total: 1
2019-06-10 19:14:39 -耗时 : 25
2019-06-10 19:14:39 -返回值 : index_v1
2019-06-10 19:14:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:14:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:14:39.699(Timestamp)
2019-06-10 19:14:39 -<==    Updates: 1
2019-06-10 19:14:39 -请求地址 : http://localhost:8081/main
2019-06-10 19:14:39 -HTTP METHOD : GET
2019-06-10 19:14:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:14:39 -参数 : []
2019-06-10 19:14:39 -耗时 : 0
2019-06-10 19:14:39 -返回值 : main
2019-06-10 19:14:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:14:40 -HTTP METHOD : GET
2019-06-10 19:14:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:14:40 -参数 : []
2019-06-10 19:14:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:14:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:14:40 -<==      Total: 0
2019-06-10 19:14:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:14:40 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:14:40 -<==      Total: 1
2019-06-10 19:14:40 -耗时 : 6
2019-06-10 19:14:40 -返回值 : com.bootdo.common.utils.PageUtils@1d62cea9
2019-06-10 19:14:40 -请求地址 : http://localhost:8081/main
2019-06-10 19:14:40 -HTTP METHOD : GET
2019-06-10 19:14:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:14:40 -参数 : []
2019-06-10 19:14:40 -耗时 : 1
2019-06-10 19:14:40 -返回值 : main
2019-06-10 19:14:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 19:14:42 -==> Parameters: 1(Long)
2019-06-10 19:14:42 -<==      Total: 94
2019-06-10 19:14:42 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:14:42 -HTTP METHOD : GET
2019-06-10 19:14:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:14:42 -参数 : []
2019-06-10 19:14:42 -耗时 : 1
2019-06-10 19:14:42 -返回值 : print/print/print
2019-06-10 19:14:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:14:43 -HTTP METHOD : GET
2019-06-10 19:14:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:14:43 -参数 : [userType]
2019-06-10 19:14:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:14:43 -==> Parameters: userType(String)
2019-06-10 19:14:43 -<==      Total: 4
2019-06-10 19:14:43 -耗时 : 4
2019-06-10 19:14:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:14:43 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:14:43 -HTTP METHOD : GET
2019-06-10 19:14:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:14:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:14:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:14:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:14:43 -<==      Total: 3
2019-06-10 19:14:43 -==>  Preparing: select count(*) from print 
2019-06-10 19:14:43 -==> Parameters: 
2019-06-10 19:14:43 -<==      Total: 1
2019-06-10 19:14:43 -耗时 : 6
2019-06-10 19:14:43 -返回值 : com.bootdo.common.utils.PageUtils@2cb7c598
2019-06-10 19:14:46 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:14:46 -HTTP METHOD : POST
2019-06-10 19:14:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:14:46 -参数 : [[Ljava.lang.Long;@56b44fda]
2019-06-10 19:14:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:14:46 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:14:46 -<==      Total: 3
2019-06-10 19:14:46 -耗时 : 3
2019-06-10 19:14:46 -返回值 : [com.bootdo.print.vo.PrintVo@5f643c26, com.bootdo.print.vo.PrintVo@aff8885, com.bootdo.print.vo.PrintVo@7e41cc9f]
2019-06-10 19:14:47 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:14:47 -HTTP METHOD : POST
2019-06-10 19:14:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:14:47 -参数 : [[Ljava.lang.Long;@64c33344]
2019-06-10 19:14:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:14:47 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:14:47 -<==      Total: 3
2019-06-10 19:14:47 -耗时 : 12
2019-06-10 19:14:47 -返回值 : [com.bootdo.print.vo.PrintVo@6c367433, com.bootdo.print.vo.PrintVo@32087bd7, com.bootdo.print.vo.PrintVo@4fac37c1]
2019-06-10 19:15:07 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:15:07 -HTTP METHOD : POST
2019-06-10 19:15:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:15:07 -参数 : [[Ljava.lang.Long;@30da00dd]
2019-06-10 19:15:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:15:07 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:15:07 -<==      Total: 3
2019-06-10 19:15:07 -耗时 : 5
2019-06-10 19:15:07 -返回值 : [com.bootdo.print.vo.PrintVo@6e5cc87f, com.bootdo.print.vo.PrintVo@65a0a0cb, com.bootdo.print.vo.PrintVo@51c884a]
2019-06-10 19:16:32 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:16:32 -HTTP METHOD : GET
2019-06-10 19:16:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:16:32 -参数 : []
2019-06-10 19:16:32 -耗时 : 1
2019-06-10 19:16:32 -返回值 : print/print/print
2019-06-10 19:16:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:16:32 -HTTP METHOD : GET
2019-06-10 19:16:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:16:32 -参数 : [userType]
2019-06-10 19:16:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:16:32 -==> Parameters: userType(String)
2019-06-10 19:16:32 -<==      Total: 4
2019-06-10 19:16:32 -耗时 : 4
2019-06-10 19:16:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:16:32 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:16:32 -HTTP METHOD : GET
2019-06-10 19:16:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:16:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:16:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:16:32 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:16:32 -<==      Total: 3
2019-06-10 19:16:32 -==>  Preparing: select count(*) from print 
2019-06-10 19:16:32 -==> Parameters: 
2019-06-10 19:16:32 -<==      Total: 1
2019-06-10 19:16:32 -耗时 : 10
2019-06-10 19:16:32 -返回值 : com.bootdo.common.utils.PageUtils@270c9919
2019-06-10 19:16:37 -请求地址 : http://localhost:8081/index
2019-06-10 19:16:37 -HTTP METHOD : GET
2019-06-10 19:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:16:37 -参数 : [{}]
2019-06-10 19:16:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:16:37 -==> Parameters: 1(Long)
2019-06-10 19:16:37 -<==      Total: 50
2019-06-10 19:16:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:16:37 -==> Parameters: 138(Long)
2019-06-10 19:16:37 -<==      Total: 1
2019-06-10 19:16:37 -耗时 : 17
2019-06-10 19:16:37 -返回值 : index_v1
2019-06-10 19:16:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:16:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:16:37.258(Timestamp)
2019-06-10 19:16:37 -请求地址 : http://localhost:8081/main
2019-06-10 19:16:37 -HTTP METHOD : GET
2019-06-10 19:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:16:37 -参数 : []
2019-06-10 19:16:37 -耗时 : 0
2019-06-10 19:16:37 -返回值 : main
2019-06-10 19:16:37 -<==    Updates: 1
2019-06-10 19:16:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:16:37 -HTTP METHOD : GET
2019-06-10 19:16:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:16:37 -参数 : []
2019-06-10 19:16:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:16:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:16:37 -<==      Total: 0
2019-06-10 19:16:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:16:37 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:16:37 -<==      Total: 1
2019-06-10 19:16:37 -耗时 : 10
2019-06-10 19:16:37 -返回值 : com.bootdo.common.utils.PageUtils@16e4a0d2
2019-06-10 19:16:37 -请求地址 : http://localhost:8081/main
2019-06-10 19:16:37 -HTTP METHOD : GET
2019-06-10 19:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:16:37 -参数 : []
2019-06-10 19:16:37 -耗时 : 0
2019-06-10 19:16:37 -返回值 : main
2019-06-10 19:16:39 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:16:39 -HTTP METHOD : GET
2019-06-10 19:16:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:16:39 -参数 : []
2019-06-10 19:16:39 -耗时 : 0
2019-06-10 19:16:39 -返回值 : print/print/print
2019-06-10 19:16:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:16:39 -HTTP METHOD : GET
2019-06-10 19:16:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:16:39 -参数 : [userType]
2019-06-10 19:16:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:16:39 -==> Parameters: userType(String)
2019-06-10 19:16:39 -<==      Total: 4
2019-06-10 19:16:39 -耗时 : 7
2019-06-10 19:16:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:16:39 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:16:39 -HTTP METHOD : GET
2019-06-10 19:16:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:16:39 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:16:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:16:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:16:39 -<==      Total: 3
2019-06-10 19:16:39 -==>  Preparing: select count(*) from print 
2019-06-10 19:16:39 -==> Parameters: 
2019-06-10 19:16:39 -<==      Total: 1
2019-06-10 19:16:39 -耗时 : 12
2019-06-10 19:16:39 -返回值 : com.bootdo.common.utils.PageUtils@32e765ce
2019-06-10 19:16:42 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:16:42 -HTTP METHOD : POST
2019-06-10 19:16:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:16:42 -参数 : [[Ljava.lang.Long;@15abfe37]
2019-06-10 19:16:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:16:42 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:16:42 -<==      Total: 3
2019-06-10 19:16:42 -耗时 : 6
2019-06-10 19:16:42 -返回值 : [com.bootdo.print.vo.PrintVo@3ad2f035, com.bootdo.print.vo.PrintVo@4ae439d1, com.bootdo.print.vo.PrintVo@f43cfc]
2019-06-10 19:17:39 -请求地址 : http://localhost:8081/index
2019-06-10 19:17:39 -HTTP METHOD : GET
2019-06-10 19:17:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:17:39 -参数 : [{}]
2019-06-10 19:17:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:17:39 -==> Parameters: 1(Long)
2019-06-10 19:17:40 -<==      Total: 50
2019-06-10 19:17:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:17:40 -==> Parameters: 138(Long)
2019-06-10 19:17:40 -<==      Total: 1
2019-06-10 19:17:40 -耗时 : 16
2019-06-10 19:17:40 -返回值 : index_v1
2019-06-10 19:17:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:17:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:17:40.014(Timestamp)
2019-06-10 19:17:40 -<==    Updates: 1
2019-06-10 19:17:40 -请求地址 : http://localhost:8081/main
2019-06-10 19:17:40 -HTTP METHOD : GET
2019-06-10 19:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:17:40 -参数 : []
2019-06-10 19:17:40 -耗时 : 1
2019-06-10 19:17:40 -返回值 : main
2019-06-10 19:17:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:17:40 -HTTP METHOD : GET
2019-06-10 19:17:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:17:40 -参数 : []
2019-06-10 19:17:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:17:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:17:40 -<==      Total: 0
2019-06-10 19:17:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:17:40 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:17:40 -<==      Total: 1
2019-06-10 19:17:40 -耗时 : 8
2019-06-10 19:17:40 -返回值 : com.bootdo.common.utils.PageUtils@2519b20c
2019-06-10 19:17:40 -请求地址 : http://localhost:8081/main
2019-06-10 19:17:40 -HTTP METHOD : GET
2019-06-10 19:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:17:40 -参数 : []
2019-06-10 19:17:40 -耗时 : 3
2019-06-10 19:17:40 -返回值 : main
2019-06-10 19:17:43 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:17:43 -HTTP METHOD : GET
2019-06-10 19:17:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:17:43 -参数 : []
2019-06-10 19:17:43 -耗时 : 0
2019-06-10 19:17:43 -返回值 : print/print/print
2019-06-10 19:17:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:17:44 -HTTP METHOD : GET
2019-06-10 19:17:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:17:44 -参数 : [userType]
2019-06-10 19:17:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:17:44 -==> Parameters: userType(String)
2019-06-10 19:17:44 -<==      Total: 4
2019-06-10 19:17:44 -耗时 : 3
2019-06-10 19:17:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:17:44 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:17:44 -HTTP METHOD : GET
2019-06-10 19:17:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:17:44 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:17:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:17:44 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:17:44 -<==      Total: 3
2019-06-10 19:17:44 -==>  Preparing: select count(*) from print 
2019-06-10 19:17:44 -==> Parameters: 
2019-06-10 19:17:44 -<==      Total: 1
2019-06-10 19:17:44 -耗时 : 8
2019-06-10 19:17:44 -返回值 : com.bootdo.common.utils.PageUtils@32f0113d
2019-06-10 19:17:47 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:17:47 -HTTP METHOD : POST
2019-06-10 19:17:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:17:47 -参数 : [[Ljava.lang.Long;@6374cf47]
2019-06-10 19:17:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:17:47 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:17:47 -<==      Total: 3
2019-06-10 19:17:47 -耗时 : 5
2019-06-10 19:17:47 -返回值 : [com.bootdo.print.vo.PrintVo@1aff104e, com.bootdo.print.vo.PrintVo@222fb734, com.bootdo.print.vo.PrintVo@67e44ac1]
2019-06-10 19:18:41 -请求地址 : http://localhost:8081/index
2019-06-10 19:18:41 -HTTP METHOD : GET
2019-06-10 19:18:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:18:41 -参数 : [{}]
2019-06-10 19:18:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:18:41 -==> Parameters: 1(Long)
2019-06-10 19:18:41 -<==      Total: 50
2019-06-10 19:18:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:18:41 -==> Parameters: 138(Long)
2019-06-10 19:18:41 -<==      Total: 1
2019-06-10 19:18:41 -耗时 : 23
2019-06-10 19:18:41 -返回值 : index_v1
2019-06-10 19:18:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:18:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:18:41.849(Timestamp)
2019-06-10 19:18:41 -请求地址 : http://localhost:8081/main
2019-06-10 19:18:41 -HTTP METHOD : GET
2019-06-10 19:18:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:18:41 -参数 : []
2019-06-10 19:18:41 -耗时 : 0
2019-06-10 19:18:41 -返回值 : main
2019-06-10 19:18:41 -<==    Updates: 1
2019-06-10 19:18:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:18:42 -HTTP METHOD : GET
2019-06-10 19:18:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:18:42 -参数 : []
2019-06-10 19:18:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:18:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:18:42 -<==      Total: 0
2019-06-10 19:18:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:18:42 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:18:42 -<==      Total: 1
2019-06-10 19:18:42 -耗时 : 29
2019-06-10 19:18:42 -返回值 : com.bootdo.common.utils.PageUtils@49107d94
2019-06-10 19:18:42 -请求地址 : http://localhost:8081/main
2019-06-10 19:18:42 -HTTP METHOD : GET
2019-06-10 19:18:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:18:42 -参数 : []
2019-06-10 19:18:42 -耗时 : 0
2019-06-10 19:18:42 -返回值 : main
2019-06-10 19:18:46 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:18:46 -HTTP METHOD : GET
2019-06-10 19:18:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:18:46 -参数 : []
2019-06-10 19:18:46 -耗时 : 1
2019-06-10 19:18:46 -返回值 : print/print/print
2019-06-10 19:21:01 -请求地址 : http://localhost:8081/index
2019-06-10 19:21:01 -HTTP METHOD : GET
2019-06-10 19:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:21:01 -参数 : [{}]
2019-06-10 19:21:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:21:01 -==> Parameters: 1(Long)
2019-06-10 19:21:01 -<==      Total: 50
2019-06-10 19:21:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:21:01 -==> Parameters: 138(Long)
2019-06-10 19:21:01 -<==      Total: 1
2019-06-10 19:21:01 -耗时 : 20
2019-06-10 19:21:01 -返回值 : index_v1
2019-06-10 19:21:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:21:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:21:01.883(Timestamp)
2019-06-10 19:21:01 -请求地址 : http://localhost:8081/main
2019-06-10 19:21:01 -HTTP METHOD : GET
2019-06-10 19:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:21:01 -参数 : []
2019-06-10 19:21:01 -耗时 : 0
2019-06-10 19:21:01 -返回值 : main
2019-06-10 19:21:02 -<==    Updates: 1
2019-06-10 19:21:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:21:02 -HTTP METHOD : GET
2019-06-10 19:21:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:21:02 -参数 : []
2019-06-10 19:21:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:21:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:21:02 -<==      Total: 0
2019-06-10 19:21:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:21:02 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:21:02 -<==      Total: 1
2019-06-10 19:21:02 -耗时 : 111
2019-06-10 19:21:02 -返回值 : com.bootdo.common.utils.PageUtils@2fd4c9b5
2019-06-10 19:21:02 -请求地址 : http://localhost:8081/main
2019-06-10 19:21:02 -HTTP METHOD : GET
2019-06-10 19:21:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:21:02 -参数 : []
2019-06-10 19:21:02 -耗时 : 1
2019-06-10 19:21:02 -返回值 : main
2019-06-10 19:21:04 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:21:04 -HTTP METHOD : GET
2019-06-10 19:21:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:21:04 -参数 : []
2019-06-10 19:21:04 -耗时 : 0
2019-06-10 19:21:04 -返回值 : print/print/print
2019-06-10 19:21:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:21:04 -HTTP METHOD : GET
2019-06-10 19:21:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:21:04 -参数 : [userType]
2019-06-10 19:21:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:21:04 -==> Parameters: userType(String)
2019-06-10 19:21:04 -<==      Total: 4
2019-06-10 19:21:04 -耗时 : 7
2019-06-10 19:21:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:21:04 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:21:04 -HTTP METHOD : GET
2019-06-10 19:21:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:21:04 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:21:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:21:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:21:04 -<==      Total: 3
2019-06-10 19:21:04 -==>  Preparing: select count(*) from print 
2019-06-10 19:21:04 -==> Parameters: 
2019-06-10 19:21:04 -<==      Total: 1
2019-06-10 19:21:04 -耗时 : 6
2019-06-10 19:21:04 -返回值 : com.bootdo.common.utils.PageUtils@f943fad
2019-06-10 19:21:09 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:21:09 -HTTP METHOD : POST
2019-06-10 19:21:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:21:09 -参数 : [[Ljava.lang.Long;@34f9bbf8]
2019-06-10 19:21:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:21:09 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:21:09 -<==      Total: 3
2019-06-10 19:21:09 -耗时 : 5
2019-06-10 19:21:09 -返回值 : [com.bootdo.print.vo.PrintVo@17a3cbab, com.bootdo.print.vo.PrintVo@5c1cff54, com.bootdo.print.vo.PrintVo@25c3b954]
2019-06-10 19:21:12 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:21:12 -HTTP METHOD : POST
2019-06-10 19:21:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:21:12 -参数 : [[Ljava.lang.Long;@6f787c73]
2019-06-10 19:21:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:21:12 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:21:12 -<==      Total: 3
2019-06-10 19:21:12 -耗时 : 5
2019-06-10 19:21:12 -返回值 : [com.bootdo.print.vo.PrintVo@3550edff, com.bootdo.print.vo.PrintVo@7abe7dbe, com.bootdo.print.vo.PrintVo@56891d7e]
2019-06-10 19:22:12 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:22:12 -HTTP METHOD : POST
2019-06-10 19:22:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:22:12 -参数 : [[Ljava.lang.Long;@18cee635]
2019-06-10 19:22:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:22:12 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:22:12 -<==      Total: 3
2019-06-10 19:22:12 -耗时 : 7
2019-06-10 19:22:12 -返回值 : [com.bootdo.print.vo.PrintVo@7a4023e7, com.bootdo.print.vo.PrintVo@7350c47b, com.bootdo.print.vo.PrintVo@1c407b6a]
2019-06-10 19:23:55 -请求地址 : http://localhost:8081/index
2019-06-10 19:23:55 -HTTP METHOD : GET
2019-06-10 19:23:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:23:55 -参数 : [{}]
2019-06-10 19:23:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:23:55 -==> Parameters: 1(Long)
2019-06-10 19:23:55 -<==      Total: 50
2019-06-10 19:23:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:23:55 -==> Parameters: 138(Long)
2019-06-10 19:23:55 -<==      Total: 1
2019-06-10 19:23:55 -耗时 : 14
2019-06-10 19:23:55 -返回值 : index_v1
2019-06-10 19:23:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:23:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:23:55.066(Timestamp)
2019-06-10 19:23:55 -<==    Updates: 1
2019-06-10 19:23:55 -请求地址 : http://localhost:8081/main
2019-06-10 19:23:55 -HTTP METHOD : GET
2019-06-10 19:23:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:23:55 -参数 : []
2019-06-10 19:23:55 -耗时 : 0
2019-06-10 19:23:55 -返回值 : main
2019-06-10 19:23:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:23:55 -HTTP METHOD : GET
2019-06-10 19:23:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:23:55 -参数 : []
2019-06-10 19:23:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:23:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:23:55 -<==      Total: 0
2019-06-10 19:23:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:23:55 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:23:55 -<==      Total: 1
2019-06-10 19:23:55 -耗时 : 9
2019-06-10 19:23:55 -返回值 : com.bootdo.common.utils.PageUtils@231d7970
2019-06-10 19:23:55 -请求地址 : http://localhost:8081/main
2019-06-10 19:23:55 -HTTP METHOD : GET
2019-06-10 19:23:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:23:55 -参数 : []
2019-06-10 19:23:55 -耗时 : 0
2019-06-10 19:23:55 -返回值 : main
2019-06-10 19:24:00 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:24:00 -HTTP METHOD : GET
2019-06-10 19:24:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:24:00 -参数 : []
2019-06-10 19:24:00 -耗时 : 1
2019-06-10 19:24:00 -返回值 : print/print/print
2019-06-10 19:24:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:24:00 -HTTP METHOD : GET
2019-06-10 19:24:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:24:00 -参数 : [userType]
2019-06-10 19:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:24:00 -==> Parameters: userType(String)
2019-06-10 19:24:00 -<==      Total: 4
2019-06-10 19:24:00 -耗时 : 6
2019-06-10 19:24:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:24:00 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:24:00 -HTTP METHOD : GET
2019-06-10 19:24:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:24:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:24:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:24:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:24:00 -<==      Total: 3
2019-06-10 19:24:00 -==>  Preparing: select count(*) from print 
2019-06-10 19:24:00 -==> Parameters: 
2019-06-10 19:24:00 -<==      Total: 1
2019-06-10 19:24:00 -耗时 : 8
2019-06-10 19:24:00 -返回值 : com.bootdo.common.utils.PageUtils@3dda6189
2019-06-10 19:24:04 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:24:04 -HTTP METHOD : POST
2019-06-10 19:24:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:24:04 -参数 : [[Ljava.lang.Long;@47752349]
2019-06-10 19:24:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:24:04 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:24:04 -<==      Total: 3
2019-06-10 19:24:04 -耗时 : 9
2019-06-10 19:24:04 -返回值 : [com.bootdo.print.vo.PrintVo@29ea4d69, com.bootdo.print.vo.PrintVo@1e222ee, com.bootdo.print.vo.PrintVo@6fe336f0]
2019-06-10 19:26:12 -请求地址 : http://localhost:8081/index
2019-06-10 19:26:12 -HTTP METHOD : GET
2019-06-10 19:26:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:26:12 -参数 : [{}]
2019-06-10 19:26:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:26:12 -==> Parameters: 1(Long)
2019-06-10 19:26:12 -<==      Total: 50
2019-06-10 19:26:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:26:12 -==> Parameters: 138(Long)
2019-06-10 19:26:12 -<==      Total: 1
2019-06-10 19:26:12 -耗时 : 19
2019-06-10 19:26:12 -返回值 : index_v1
2019-06-10 19:26:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:26:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:26:12.777(Timestamp)
2019-06-10 19:26:12 -请求地址 : http://localhost:8081/main
2019-06-10 19:26:12 -HTTP METHOD : GET
2019-06-10 19:26:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:26:12 -参数 : []
2019-06-10 19:26:12 -耗时 : 0
2019-06-10 19:26:12 -返回值 : main
2019-06-10 19:26:13 -<==    Updates: 1
2019-06-10 19:26:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:26:13 -HTTP METHOD : GET
2019-06-10 19:26:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:26:13 -参数 : []
2019-06-10 19:26:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:26:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:26:13 -<==      Total: 0
2019-06-10 19:26:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:26:13 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:26:13 -<==      Total: 1
2019-06-10 19:26:13 -耗时 : 10
2019-06-10 19:26:13 -返回值 : com.bootdo.common.utils.PageUtils@73020e0c
2019-06-10 19:26:13 -请求地址 : http://localhost:8081/main
2019-06-10 19:26:13 -HTTP METHOD : GET
2019-06-10 19:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:26:13 -参数 : []
2019-06-10 19:26:13 -耗时 : 0
2019-06-10 19:26:13 -返回值 : main
2019-06-10 19:26:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 19:26:17 -==> Parameters: 1(Long)
2019-06-10 19:26:17 -<==      Total: 94
2019-06-10 19:26:17 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:26:17 -HTTP METHOD : GET
2019-06-10 19:26:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:26:17 -参数 : []
2019-06-10 19:26:17 -耗时 : 0
2019-06-10 19:26:17 -返回值 : print/print/print
2019-06-10 19:26:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:26:17 -HTTP METHOD : GET
2019-06-10 19:26:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:26:17 -参数 : [userType]
2019-06-10 19:26:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:26:17 -==> Parameters: userType(String)
2019-06-10 19:26:17 -<==      Total: 4
2019-06-10 19:26:17 -耗时 : 4
2019-06-10 19:26:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:26:17 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:26:17 -HTTP METHOD : GET
2019-06-10 19:26:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:26:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:26:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:26:17 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:26:17 -<==      Total: 3
2019-06-10 19:26:17 -==>  Preparing: select count(*) from print 
2019-06-10 19:26:17 -==> Parameters: 
2019-06-10 19:26:17 -<==      Total: 1
2019-06-10 19:26:17 -耗时 : 10
2019-06-10 19:26:17 -返回值 : com.bootdo.common.utils.PageUtils@5a090b5e
2019-06-10 19:26:24 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:26:24 -HTTP METHOD : POST
2019-06-10 19:26:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:26:24 -参数 : [[Ljava.lang.Long;@9401b8f]
2019-06-10 19:26:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:26:24 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:26:24 -<==      Total: 3
2019-06-10 19:26:24 -耗时 : 5
2019-06-10 19:26:24 -返回值 : [com.bootdo.print.vo.PrintVo@63677068, com.bootdo.print.vo.PrintVo@7126c4a1, com.bootdo.print.vo.PrintVo@78b32569]
2019-06-10 19:27:59 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:27:59 -HTTP METHOD : POST
2019-06-10 19:27:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:27:59 -参数 : [[Ljava.lang.Long;@52ed4c39]
2019-06-10 19:27:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:27:59 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:27:59 -<==      Total: 3
2019-06-10 19:27:59 -耗时 : 5
2019-06-10 19:27:59 -返回值 : [com.bootdo.print.vo.PrintVo@5adf1cba, com.bootdo.print.vo.PrintVo@5a8bc58, com.bootdo.print.vo.PrintVo@3d1cb450]
2019-06-10 19:28:36 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:28:36 -HTTP METHOD : POST
2019-06-10 19:28:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:28:36 -参数 : [[Ljava.lang.Long;@78f46a74]
2019-06-10 19:28:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:28:36 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:28:36 -<==      Total: 3
2019-06-10 19:28:36 -耗时 : 4
2019-06-10 19:28:36 -返回值 : [com.bootdo.print.vo.PrintVo@e7d66f1, com.bootdo.print.vo.PrintVo@49b41029, com.bootdo.print.vo.PrintVo@12c864a1]
2019-06-10 19:31:00 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:31:00 -HTTP METHOD : POST
2019-06-10 19:31:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:31:00 -参数 : [[Ljava.lang.Long;@45ef4a36]
2019-06-10 19:31:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:31:00 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:31:00 -<==      Total: 3
2019-06-10 19:31:00 -耗时 : 6
2019-06-10 19:31:00 -返回值 : [com.bootdo.print.vo.PrintVo@4abd9ec9, com.bootdo.print.vo.PrintVo@56f13811, com.bootdo.print.vo.PrintVo@69706603]
2019-06-10 19:32:07 -请求地址 : http://localhost:8081/index
2019-06-10 19:32:07 -HTTP METHOD : GET
2019-06-10 19:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:32:07 -参数 : [{}]
2019-06-10 19:32:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:32:07 -==> Parameters: 1(Long)
2019-06-10 19:32:07 -<==      Total: 50
2019-06-10 19:32:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:32:07 -==> Parameters: 138(Long)
2019-06-10 19:32:07 -<==      Total: 1
2019-06-10 19:32:07 -耗时 : 12
2019-06-10 19:32:07 -返回值 : index_v1
2019-06-10 19:32:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:32:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:32:07.053(Timestamp)
2019-06-10 19:32:07 -请求地址 : http://localhost:8081/main
2019-06-10 19:32:07 -HTTP METHOD : GET
2019-06-10 19:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:32:07 -参数 : []
2019-06-10 19:32:07 -耗时 : 0
2019-06-10 19:32:07 -返回值 : main
2019-06-10 19:32:07 -<==    Updates: 1
2019-06-10 19:32:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:32:07 -HTTP METHOD : GET
2019-06-10 19:32:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:32:07 -参数 : []
2019-06-10 19:32:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:32:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:32:07 -<==      Total: 0
2019-06-10 19:32:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:32:07 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:32:07 -<==      Total: 1
2019-06-10 19:32:07 -耗时 : 8
2019-06-10 19:32:07 -返回值 : com.bootdo.common.utils.PageUtils@2b269cd4
2019-06-10 19:32:07 -请求地址 : http://localhost:8081/main
2019-06-10 19:32:07 -HTTP METHOD : GET
2019-06-10 19:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:32:07 -参数 : []
2019-06-10 19:32:07 -耗时 : 2
2019-06-10 19:32:07 -返回值 : main
2019-06-10 19:32:12 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:32:12 -HTTP METHOD : GET
2019-06-10 19:32:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:32:12 -参数 : []
2019-06-10 19:32:12 -耗时 : 1
2019-06-10 19:32:12 -返回值 : print/print/print
2019-06-10 19:32:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:32:13 -HTTP METHOD : GET
2019-06-10 19:32:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:32:13 -参数 : [userType]
2019-06-10 19:32:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:32:13 -==> Parameters: userType(String)
2019-06-10 19:32:13 -<==      Total: 4
2019-06-10 19:32:13 -耗时 : 5
2019-06-10 19:32:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:32:13 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:32:13 -HTTP METHOD : GET
2019-06-10 19:32:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:32:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:32:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:32:13 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:32:13 -<==      Total: 3
2019-06-10 19:32:13 -==>  Preparing: select count(*) from print 
2019-06-10 19:32:13 -==> Parameters: 
2019-06-10 19:32:13 -<==      Total: 1
2019-06-10 19:32:13 -耗时 : 8
2019-06-10 19:32:13 -返回值 : com.bootdo.common.utils.PageUtils@3d61c5f6
2019-06-10 19:32:18 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:32:18 -HTTP METHOD : POST
2019-06-10 19:32:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:32:18 -参数 : [[Ljava.lang.Long;@fe1bfc5]
2019-06-10 19:32:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:32:18 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:32:18 -<==      Total: 3
2019-06-10 19:32:18 -耗时 : 5
2019-06-10 19:32:18 -返回值 : [com.bootdo.print.vo.PrintVo@2eb510b6, com.bootdo.print.vo.PrintVo@4f6e4037, com.bootdo.print.vo.PrintVo@4df3d188]
2019-06-10 19:34:43 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:34:43 -HTTP METHOD : POST
2019-06-10 19:34:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:34:43 -参数 : [[Ljava.lang.Long;@6e9aa713]
2019-06-10 19:34:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:34:43 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:34:43 -<==      Total: 3
2019-06-10 19:34:43 -耗时 : 6
2019-06-10 19:34:43 -返回值 : [com.bootdo.print.vo.PrintVo@5bbad90e, com.bootdo.print.vo.PrintVo@1d12d298, com.bootdo.print.vo.PrintVo@260b4c16]
2019-06-10 19:35:38 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:35:38 -HTTP METHOD : POST
2019-06-10 19:35:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:35:38 -参数 : [[Ljava.lang.Long;@3bf79f8b]
2019-06-10 19:35:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:35:38 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:35:38 -<==      Total: 3
2019-06-10 19:35:38 -耗时 : 4
2019-06-10 19:35:38 -返回值 : [com.bootdo.print.vo.PrintVo@12968ca6, com.bootdo.print.vo.PrintVo@2d4dd3da, com.bootdo.print.vo.PrintVo@2a411a3f]
2019-06-10 19:39:28 -请求地址 : http://localhost:8081/index
2019-06-10 19:39:28 -HTTP METHOD : GET
2019-06-10 19:39:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:39:28 -参数 : [{}]
2019-06-10 19:39:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:39:28 -==> Parameters: 1(Long)
2019-06-10 19:39:28 -<==      Total: 50
2019-06-10 19:39:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:39:28 -==> Parameters: 138(Long)
2019-06-10 19:39:28 -<==      Total: 1
2019-06-10 19:39:28 -耗时 : 12
2019-06-10 19:39:28 -返回值 : index_v1
2019-06-10 19:39:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:39:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:39:28.19(Timestamp)
2019-06-10 19:39:28 -请求地址 : http://localhost:8081/main
2019-06-10 19:39:28 -HTTP METHOD : GET
2019-06-10 19:39:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:39:28 -参数 : []
2019-06-10 19:39:28 -耗时 : 0
2019-06-10 19:39:28 -返回值 : main
2019-06-10 19:39:28 -<==    Updates: 1
2019-06-10 19:39:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:39:28 -HTTP METHOD : GET
2019-06-10 19:39:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:39:28 -参数 : []
2019-06-10 19:39:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:39:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:39:28 -<==      Total: 0
2019-06-10 19:39:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:39:28 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:39:28 -<==      Total: 1
2019-06-10 19:39:28 -耗时 : 11
2019-06-10 19:39:28 -返回值 : com.bootdo.common.utils.PageUtils@206133fe
2019-06-10 19:39:28 -请求地址 : http://localhost:8081/main
2019-06-10 19:39:28 -HTTP METHOD : GET
2019-06-10 19:39:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:39:28 -参数 : []
2019-06-10 19:39:28 -耗时 : 0
2019-06-10 19:39:28 -返回值 : main
2019-06-10 19:39:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 19:39:31 -==> Parameters: 1(Long)
2019-06-10 19:39:31 -<==      Total: 94
2019-06-10 19:39:31 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:39:31 -HTTP METHOD : GET
2019-06-10 19:39:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:39:31 -参数 : []
2019-06-10 19:39:31 -耗时 : 0
2019-06-10 19:39:31 -返回值 : print/print/print
2019-06-10 19:39:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:39:32 -HTTP METHOD : GET
2019-06-10 19:39:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:39:32 -参数 : [userType]
2019-06-10 19:39:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:39:32 -==> Parameters: userType(String)
2019-06-10 19:39:32 -<==      Total: 4
2019-06-10 19:39:32 -耗时 : 11
2019-06-10 19:39:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:39:32 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:39:32 -HTTP METHOD : GET
2019-06-10 19:39:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:39:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:39:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:39:32 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:39:32 -<==      Total: 3
2019-06-10 19:39:32 -==>  Preparing: select count(*) from print 
2019-06-10 19:39:32 -==> Parameters: 
2019-06-10 19:39:32 -<==      Total: 1
2019-06-10 19:39:32 -耗时 : 6
2019-06-10 19:39:32 -返回值 : com.bootdo.common.utils.PageUtils@4a3066bb
2019-06-10 19:39:36 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:39:36 -HTTP METHOD : POST
2019-06-10 19:39:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:39:36 -参数 : [[Ljava.lang.Long;@49146a7a]
2019-06-10 19:39:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:39:36 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:39:36 -<==      Total: 3
2019-06-10 19:39:36 -耗时 : 9
2019-06-10 19:39:36 -返回值 : [com.bootdo.print.vo.PrintVo@2c29940c, com.bootdo.print.vo.PrintVo@2acc90db, com.bootdo.print.vo.PrintVo@40e17842]
2019-06-10 19:40:33 -请求地址 : http://localhost:8081/index
2019-06-10 19:40:33 -HTTP METHOD : GET
2019-06-10 19:40:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:40:33 -参数 : [{}]
2019-06-10 19:40:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:40:33 -==> Parameters: 1(Long)
2019-06-10 19:40:33 -<==      Total: 50
2019-06-10 19:40:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:40:33 -==> Parameters: 138(Long)
2019-06-10 19:40:33 -<==      Total: 1
2019-06-10 19:40:33 -耗时 : 15
2019-06-10 19:40:33 -返回值 : index_v1
2019-06-10 19:40:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:40:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:40:33.837(Timestamp)
2019-06-10 19:40:33 -请求地址 : http://localhost:8081/main
2019-06-10 19:40:33 -HTTP METHOD : GET
2019-06-10 19:40:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:40:33 -参数 : []
2019-06-10 19:40:33 -耗时 : 0
2019-06-10 19:40:33 -返回值 : main
2019-06-10 19:40:33 -<==    Updates: 1
2019-06-10 19:40:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:40:34 -HTTP METHOD : GET
2019-06-10 19:40:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:40:34 -参数 : []
2019-06-10 19:40:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:40:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:40:34 -<==      Total: 0
2019-06-10 19:40:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:40:34 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:40:34 -<==      Total: 1
2019-06-10 19:40:34 -耗时 : 10
2019-06-10 19:40:34 -返回值 : com.bootdo.common.utils.PageUtils@6ddaf2cb
2019-06-10 19:40:34 -请求地址 : http://localhost:8081/main
2019-06-10 19:40:34 -HTTP METHOD : GET
2019-06-10 19:40:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:40:34 -参数 : []
2019-06-10 19:40:34 -耗时 : 0
2019-06-10 19:40:34 -返回值 : main
2019-06-10 19:40:38 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:40:38 -HTTP METHOD : GET
2019-06-10 19:40:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:40:38 -参数 : []
2019-06-10 19:40:38 -耗时 : 1
2019-06-10 19:40:38 -返回值 : print/print/print
2019-06-10 19:40:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:40:39 -HTTP METHOD : GET
2019-06-10 19:40:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:40:39 -参数 : [userType]
2019-06-10 19:40:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:40:39 -==> Parameters: userType(String)
2019-06-10 19:40:39 -<==      Total: 4
2019-06-10 19:40:39 -耗时 : 7
2019-06-10 19:40:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:40:39 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:40:39 -HTTP METHOD : GET
2019-06-10 19:40:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:40:39 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:40:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:40:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:40:39 -<==      Total: 3
2019-06-10 19:40:39 -==>  Preparing: select count(*) from print 
2019-06-10 19:40:39 -==> Parameters: 
2019-06-10 19:40:39 -<==      Total: 1
2019-06-10 19:40:39 -耗时 : 6
2019-06-10 19:40:39 -返回值 : com.bootdo.common.utils.PageUtils@7cfff66f
2019-06-10 19:40:42 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:40:42 -HTTP METHOD : POST
2019-06-10 19:40:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:40:42 -参数 : [[Ljava.lang.Long;@76d73cb1]
2019-06-10 19:40:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:40:42 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:40:42 -<==      Total: 3
2019-06-10 19:40:42 -耗时 : 6
2019-06-10 19:40:42 -返回值 : [com.bootdo.print.vo.PrintVo@17f596c7, com.bootdo.print.vo.PrintVo@54797ab3, com.bootdo.print.vo.PrintVo@1b84f639]
2019-06-10 19:42:49 -请求地址 : http://localhost:8081/index
2019-06-10 19:42:49 -HTTP METHOD : GET
2019-06-10 19:42:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:42:49 -参数 : [{}]
2019-06-10 19:42:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:42:49 -==> Parameters: 1(Long)
2019-06-10 19:42:49 -<==      Total: 50
2019-06-10 19:42:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:42:49 -==> Parameters: 138(Long)
2019-06-10 19:42:49 -<==      Total: 1
2019-06-10 19:42:49 -耗时 : 17
2019-06-10 19:42:49 -返回值 : index_v1
2019-06-10 19:42:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:42:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:42:49.191(Timestamp)
2019-06-10 19:42:49 -请求地址 : http://localhost:8081/main
2019-06-10 19:42:49 -HTTP METHOD : GET
2019-06-10 19:42:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:42:49 -参数 : []
2019-06-10 19:42:49 -耗时 : 0
2019-06-10 19:42:49 -返回值 : main
2019-06-10 19:42:49 -<==    Updates: 1
2019-06-10 19:42:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:42:49 -HTTP METHOD : GET
2019-06-10 19:42:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:42:49 -参数 : []
2019-06-10 19:42:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:42:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:42:49 -<==      Total: 0
2019-06-10 19:42:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:42:49 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:42:49 -<==      Total: 1
2019-06-10 19:42:49 -耗时 : 13
2019-06-10 19:42:49 -返回值 : com.bootdo.common.utils.PageUtils@95bbee8
2019-06-10 19:42:49 -请求地址 : http://localhost:8081/main
2019-06-10 19:42:49 -HTTP METHOD : GET
2019-06-10 19:42:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:42:49 -参数 : []
2019-06-10 19:42:49 -耗时 : 1
2019-06-10 19:42:49 -返回值 : main
2019-06-10 19:42:51 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:42:51 -HTTP METHOD : GET
2019-06-10 19:42:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:42:51 -参数 : []
2019-06-10 19:42:51 -耗时 : 0
2019-06-10 19:42:51 -返回值 : print/print/print
2019-06-10 19:42:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:42:52 -HTTP METHOD : GET
2019-06-10 19:42:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:42:52 -参数 : [userType]
2019-06-10 19:42:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:42:52 -==> Parameters: userType(String)
2019-06-10 19:42:52 -<==      Total: 4
2019-06-10 19:42:52 -耗时 : 3
2019-06-10 19:42:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:42:52 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:42:52 -HTTP METHOD : GET
2019-06-10 19:42:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:42:52 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:42:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:42:52 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:42:52 -<==      Total: 3
2019-06-10 19:42:52 -==>  Preparing: select count(*) from print 
2019-06-10 19:42:52 -==> Parameters: 
2019-06-10 19:42:52 -<==      Total: 1
2019-06-10 19:42:52 -耗时 : 5
2019-06-10 19:42:52 -返回值 : com.bootdo.common.utils.PageUtils@48365efb
2019-06-10 19:42:57 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:42:57 -HTTP METHOD : POST
2019-06-10 19:42:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:42:57 -参数 : [[Ljava.lang.Long;@75e00fa6]
2019-06-10 19:42:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:42:57 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:42:57 -<==      Total: 3
2019-06-10 19:42:57 -耗时 : 8
2019-06-10 19:42:57 -返回值 : [com.bootdo.print.vo.PrintVo@1705fe4, com.bootdo.print.vo.PrintVo@375d2466, com.bootdo.print.vo.PrintVo@42b58014]
2019-06-10 19:44:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 39 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(39)-CONNECTED(39)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 465], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 77], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1281]
2019-06-10 19:47:55 -请求地址 : http://localhost:8081/index
2019-06-10 19:47:55 -HTTP METHOD : GET
2019-06-10 19:47:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 19:47:55 -参数 : [{}]
2019-06-10 19:47:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 19:47:55 -==> Parameters: 1(Long)
2019-06-10 19:47:55 -<==      Total: 50
2019-06-10 19:47:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 19:47:55 -==> Parameters: 138(Long)
2019-06-10 19:47:55 -<==      Total: 1
2019-06-10 19:47:55 -耗时 : 34
2019-06-10 19:47:55 -返回值 : index_v1
2019-06-10 19:47:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 19:47:55 -请求地址 : http://localhost:8081/main
2019-06-10 19:47:55 -HTTP METHOD : GET
2019-06-10 19:47:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:47:55 -参数 : []
2019-06-10 19:47:55 -耗时 : 23
2019-06-10 19:47:55 -返回值 : main
2019-06-10 19:47:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 19:47:55.774(Timestamp)
2019-06-10 19:47:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 19:47:55 -HTTP METHOD : GET
2019-06-10 19:47:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 19:47:55 -参数 : []
2019-06-10 19:47:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 19:47:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 19:47:56 -<==    Updates: 1
2019-06-10 19:47:56 -<==      Total: 0
2019-06-10 19:47:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 19:47:56 -==> Parameters: 1(Long), 0(String)
2019-06-10 19:47:56 -<==      Total: 1
2019-06-10 19:47:56 -耗时 : 81
2019-06-10 19:47:56 -返回值 : com.bootdo.common.utils.PageUtils@4a3d60d7
2019-06-10 19:47:56 -请求地址 : http://localhost:8081/main
2019-06-10 19:47:56 -HTTP METHOD : GET
2019-06-10 19:47:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 19:47:56 -参数 : []
2019-06-10 19:47:56 -耗时 : 0
2019-06-10 19:47:56 -返回值 : main
2019-06-10 19:47:59 -请求地址 : http://localhost:8081/print/print
2019-06-10 19:47:59 -HTTP METHOD : GET
2019-06-10 19:47:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 19:47:59 -参数 : []
2019-06-10 19:47:59 -耗时 : 0
2019-06-10 19:47:59 -返回值 : print/print/print
2019-06-10 19:48:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 19:48:00 -HTTP METHOD : GET
2019-06-10 19:48:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 19:48:00 -参数 : [userType]
2019-06-10 19:48:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 19:48:00 -==> Parameters: userType(String)
2019-06-10 19:48:00 -<==      Total: 4
2019-06-10 19:48:00 -耗时 : 3
2019-06-10 19:48:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 19:48:00 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 19:48:00 -HTTP METHOD : GET
2019-06-10 19:48:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 19:48:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 19:48:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 19:48:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 19:48:00 -<==      Total: 3
2019-06-10 19:48:00 -==>  Preparing: select count(*) from print 
2019-06-10 19:48:00 -==> Parameters: 
2019-06-10 19:48:00 -<==      Total: 1
2019-06-10 19:48:00 -耗时 : 212
2019-06-10 19:48:00 -返回值 : com.bootdo.common.utils.PageUtils@58d511af
2019-06-10 19:48:03 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 19:48:03 -HTTP METHOD : POST
2019-06-10 19:48:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 19:48:03 -参数 : [[Ljava.lang.Long;@3126225a]
2019-06-10 19:48:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 19:48:03 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 19:48:03 -<==      Total: 3
2019-06-10 19:48:03 -耗时 : 11
2019-06-10 19:48:03 -返回值 : [com.bootdo.print.vo.PrintVo@6be0e520, com.bootdo.print.vo.PrintVo@7157ff7f, com.bootdo.print.vo.PrintVo@71e337fd]
2019-06-10 21:53:51 -Starting BootdoApplication on PC-201905091110 with PID 8448 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-10 21:53:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-10 21:53:51 -The following profiles are active: dev
2019-06-10 21:53:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5241cf67: startup date [Mon Jun 10 21:53:51 CST 2019]; root of context hierarchy
2019-06-10 21:54:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 21:54:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$137b4418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5d472bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-10 21:54:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-10 21:54:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:54:07 -Tomcat initialized with port(s): 8081 (http)
2019-06-10 21:54:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-10 21:54:07 -Starting service [Tomcat]
2019-06-10 21:54:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-10 21:54:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-10 21:54:08 -Initializing Spring embedded WebApplicationContext
2019-06-10 21:54:08 -Root WebApplicationContext: initialization completed in 16623 ms
2019-06-10 21:54:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-10 21:54:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-10 21:54:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-10 21:54:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-10 21:54:09 -Filter xssFilter was not registered (disabled)
2019-06-10 21:54:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-10 21:54:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-10 21:54:09 -Servlet statViewServlet mapped to [/druid/*]
2019-06-10 21:54:09 -Servlet dispatcherServlet mapped to [/]
2019-06-10 21:54:11 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-06-10 21:54:11 -Stopping service [Tomcat]
2019-06-10 21:54:12 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-10 21:54:12 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-06-10 21:55:38 -Starting BootdoApplication on PC-201905091110 with PID 8868 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-10 21:55:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-10 21:55:38 -The following profiles are active: dev
2019-06-10 21:55:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@292d1c71: startup date [Mon Jun 10 21:55:39 CST 2019]; root of context hierarchy
2019-06-10 21:55:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 21:55:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3e0d128c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30664133] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-10 21:55:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-10 21:55:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:55:47 -Tomcat initialized with port(s): 8081 (http)
2019-06-10 21:55:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-10 21:55:47 -Starting service [Tomcat]
2019-06-10 21:55:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-10 21:55:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-10 21:55:48 -Initializing Spring embedded WebApplicationContext
2019-06-10 21:55:48 -Root WebApplicationContext: initialization completed in 9035 ms
2019-06-10 21:55:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-10 21:55:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-10 21:55:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-10 21:55:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-10 21:55:48 -Filter xssFilter was not registered (disabled)
2019-06-10 21:55:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-10 21:55:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-10 21:55:48 -Servlet statViewServlet mapped to [/druid/*]
2019-06-10 21:55:48 -Servlet dispatcherServlet mapped to [/]
2019-06-10 21:55:50 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-06-10 21:55:50 -Stopping service [Tomcat]
2019-06-10 21:55:50 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-10 21:55:50 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-06-10 21:58:53 -Starting BootdoApplication on PC-201905091110 with PID 252 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-10 21:58:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-10 21:58:53 -The following profiles are active: dev
2019-06-10 21:58:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@458342d3: startup date [Mon Jun 10 21:58:53 CST 2019]; root of context hierarchy
2019-06-10 21:58:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-10 21:59:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f770910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$61d037b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-10 21:59:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-10 21:59:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-10 21:59:02 -Tomcat initialized with port(s): 8081 (http)
2019-06-10 21:59:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-10 21:59:02 -Starting service [Tomcat]
2019-06-10 21:59:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-10 21:59:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-10 21:59:03 -Initializing Spring embedded WebApplicationContext
2019-06-10 21:59:03 -Root WebApplicationContext: initialization completed in 9099 ms
2019-06-10 21:59:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-10 21:59:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-10 21:59:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-10 21:59:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-10 21:59:03 -Filter xssFilter was not registered (disabled)
2019-06-10 21:59:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-10 21:59:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-10 21:59:03 -Servlet statViewServlet mapped to [/druid/*]
2019-06-10 21:59:03 -Servlet dispatcherServlet mapped to [/]
2019-06-10 21:59:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@458342d3: startup date [Mon Jun 10 21:58:53 CST 2019]; root of context hierarchy
2019-06-10 21:59:08 -Using default implementation for ThreadExecutor
2019-06-10 21:59:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-10 21:59:08 -Quartz Scheduler v.2.3.0 created.
2019-06-10 21:59:08 -RAMJobStore initialized.
2019-06-10 21:59:08 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-10 21:59:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-10 21:59:08 -Quartz scheduler version: 2.3.0
2019-06-10 21:59:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3bb4c2b2
2019-06-10 21:59:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-10 21:59:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-10 21:59:13 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-10 21:59:13 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-10 21:59:13 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-10 21:59:13 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-10 21:59:13 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-10 21:59:13 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-10 21:59:13 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-10 21:59:13 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-10 21:59:13 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-10 21:59:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-10 21:59:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-10 21:59:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-10 21:59:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-10 21:59:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-10 21:59:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 21:59:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-10 21:59:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-10 21:59:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-10 21:59:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-10 21:59:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-10 21:59:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-10 21:59:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-10 21:59:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-10 21:59:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-10 21:59:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-10 21:59:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-10 21:59:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-10 21:59:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-10 21:59:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-10 21:59:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-10 21:59:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-10 21:59:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-10 21:59:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-10 21:59:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-10 21:59:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-10 21:59:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-10 21:59:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-10 21:59:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-10 21:59:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-10 21:59:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-10 21:59:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-10 21:59:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-10 21:59:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-10 21:59:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-10 21:59:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-10 21:59:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-10 21:59:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-10 21:59:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-10 21:59:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-10 21:59:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-10 21:59:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-10 21:59:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-10 21:59:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-10 21:59:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-10 21:59:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-10 21:59:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-10 21:59:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-10 21:59:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-10 21:59:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-10 21:59:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-10 21:59:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-10 21:59:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-10 21:59:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-10 21:59:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-10 21:59:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-10 21:59:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 21:59:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-10 21:59:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-10 21:59:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-10 21:59:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-10 21:59:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-10 21:59:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-10 21:59:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-10 21:59:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-10 21:59:13 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-10 21:59:13 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-10 21:59:13 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-10 21:59:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-10 21:59:13 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-10 21:59:13 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-10 21:59:13 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-10 21:59:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-10 21:59:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-10 21:59:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-10 21:59:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 21:59:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@458342d3: startup date [Mon Jun 10 21:58:53 CST 2019]; root of context hierarchy
2019-06-10 21:59:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 21:59:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-10 21:59:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-10 21:59:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-10 21:59:19 -Registering beans for JMX exposure on startup
2019-06-10 21:59:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-10 21:59:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-10 21:59:19 -Starting beans in phase 2147483647
2019-06-10 21:59:19 -Context refreshed
2019-06-10 21:59:19 -Found 1 custom documentation plugin(s)
2019-06-10 21:59:19 -Scanning for api listing references
2019-06-10 21:59:21 -Generating unique operation named: removeUsingPOST_1
2019-06-10 21:59:21 -Generating unique operation named: addUsingGET_1
2019-06-10 21:59:21 -Generating unique operation named: editUsingGET_1
2019-06-10 21:59:21 -Generating unique operation named: listUsingGET_1
2019-06-10 21:59:21 -Generating unique operation named: removeUsingPOST_2
2019-06-10 21:59:21 -Generating unique operation named: removeUsingPOST_3
2019-06-10 21:59:21 -Generating unique operation named: saveUsingPOST_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingGET_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingHEAD_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingPOST_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingPUT_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingPATCH_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingDELETE_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-10 21:59:21 -Generating unique operation named: updateUsingTRACE_1
2019-06-10 21:59:21 -Generating unique operation named: addUsingGET_2
2019-06-10 21:59:21 -Generating unique operation named: editUsingGET_2
2019-06-10 21:59:21 -Generating unique operation named: listUsingGET_2
2019-06-10 21:59:21 -Generating unique operation named: removeUsingPOST_4
2019-06-10 21:59:21 -Generating unique operation named: removeUsingPOST_5
2019-06-10 21:59:21 -Generating unique operation named: saveUsingPOST_2
2019-06-10 21:59:21 -Generating unique operation named: updateUsingPOST_2
2019-06-10 21:59:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-10 21:59:21 -Generating unique operation named: addUsingGET_3
2019-06-10 21:59:21 -Generating unique operation named: editUsingGET_3
2019-06-10 21:59:21 -Generating unique operation named: listUsingGET_3
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_6
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_7
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_2
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_4
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_4
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_4
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_8
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_9
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_3
2019-06-10 21:59:22 -Generating unique operation named: ElecUsingGET_1
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_5
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_5
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_5
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_10
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_11
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_4
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_6
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_6
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_6
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_7
2019-06-10 21:59:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_7
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_12
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_13
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_5
2019-06-10 21:59:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_7
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_8
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_8
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_14
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_15
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_8
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_6
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_8
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_9
2019-06-10 21:59:22 -Generating unique operation named: listUsingGET_9
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_16
2019-06-10 21:59:22 -Generating unique operation named: removeUsingPOST_17
2019-06-10 21:59:22 -Generating unique operation named: saveUsingPOST_8
2019-06-10 21:59:22 -Generating unique operation named: updateUsingGET_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingHEAD_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPOST_9
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPUT_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingPATCH_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingDELETE_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-10 21:59:22 -Generating unique operation named: updateUsingTRACE_7
2019-06-10 21:59:22 -Generating unique operation named: addUsingGET_9
2019-06-10 21:59:22 -Generating unique operation named: editUsingGET_10
2019-06-10 21:59:22 -Generating unique operation named: infoUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingHEAD_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingPOST_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingPUT_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingPATCH_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingDELETE_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-10 21:59:23 -Generating unique operation named: infoUsingTRACE_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_10
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_18
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_19
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_10
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_11
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_20
2019-06-10 21:59:23 -Generating unique operation named: welcomeUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: addUsingGET_10
2019-06-10 21:59:23 -Generating unique operation named: editUsingGET_11
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_12
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_21
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_10
2019-06-10 21:59:23 -Generating unique operation named: treeUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: treeUsingGET_2
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_11
2019-06-10 21:59:23 -Generating unique operation named: addUsingGET_11
2019-06-10 21:59:23 -Generating unique operation named: editUsingGET_12
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_13
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_22
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_23
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_12
2019-06-10 21:59:23 -Generating unique operation named: addUsingGET_12
2019-06-10 21:59:23 -Generating unique operation named: editUsingGET_13
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_14
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_24
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_25
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_11
2019-06-10 21:59:23 -Generating unique operation named: updateUsingGET_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingHEAD_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_13
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPUT_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPATCH_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingDELETE_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-10 21:59:23 -Generating unique operation named: updateUsingTRACE_8
2019-06-10 21:59:23 -Generating unique operation named: addUsingGET_13
2019-06-10 21:59:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-10 21:59:23 -Generating unique operation named: editUsingGET_14
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_15
2019-06-10 21:59:23 -Generating unique operation named: printEditUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: removeUsingPOST_26
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_12
2019-06-10 21:59:23 -Generating unique operation named: updateUsingGET_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingHEAD_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_14
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPUT_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPATCH_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingDELETE_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-10 21:59:23 -Generating unique operation named: updateUsingTRACE_9
2019-06-10 21:59:23 -Generating unique operation named: addUsingGET_14
2019-06-10 21:59:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-10 21:59:23 -Generating unique operation named: editUsingGET_15
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_16
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_13
2019-06-10 21:59:23 -Generating unique operation named: saveUsingPOST_14
2019-06-10 21:59:23 -Generating unique operation named: updateUsingPOST_15
2019-06-10 21:59:23 -Generating unique operation named: listUsingGET_17
2019-06-10 21:59:23 -Generating unique operation named: listUsingHEAD_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingPOST_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingPUT_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingPATCH_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingDELETE_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingOPTIONS_1
2019-06-10 21:59:23 -Generating unique operation named: listUsingTRACE_1
2019-06-10 21:59:23 -Generating unique operation named: countDDUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: exportDDUsingGET_1
2019-06-10 21:59:23 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-10 21:59:24 -Generating unique operation named: addUsingGET_15
2019-06-10 21:59:24 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-10 21:59:24 -Generating unique operation named: editUsingGET_16
2019-06-10 21:59:24 -Generating unique operation named: listUsingGET_18
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_27
2019-06-10 21:59:24 -Generating unique operation named: saveUsingPOST_15
2019-06-10 21:59:24 -Generating unique operation named: treeUsingGET_3
2019-06-10 21:59:24 -Generating unique operation named: treeViewUsingGET_1
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPOST_16
2019-06-10 21:59:24 -Generating unique operation named: addUsingGET_16
2019-06-10 21:59:24 -Generating unique operation named: editUsingGET_17
2019-06-10 21:59:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-10 21:59:24 -Generating unique operation named: listUsingGET_19
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_28
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_29
2019-06-10 21:59:24 -Generating unique operation named: saveUsingPOST_16
2019-06-10 21:59:24 -Generating unique operation named: updateUsingGET_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingHEAD_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPOST_17
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPUT_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPATCH_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingDELETE_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-10 21:59:24 -Generating unique operation named: updateUsingTRACE_10
2019-06-10 21:59:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-10 21:59:24 -Generating unique operation named: addUsingGET_17
2019-06-10 21:59:24 -Generating unique operation named: editUsingGET_18
2019-06-10 21:59:24 -Generating unique operation named: listUsingGET_20
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_30
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_31
2019-06-10 21:59:24 -Generating unique operation named: saveUsingPOST_17
2019-06-10 21:59:24 -Generating unique operation named: updateUsingGET_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingHEAD_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPOST_18
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPUT_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPATCH_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingDELETE_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-10 21:59:24 -Generating unique operation named: updateUsingTRACE_11
2019-06-10 21:59:24 -Generating unique operation named: addUsingGET_18
2019-06-10 21:59:24 -Generating unique operation named: editUsingGET_19
2019-06-10 21:59:24 -Generating unique operation named: listUsingGET_21
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_32
2019-06-10 21:59:24 -Generating unique operation named: removeUsingPOST_33
2019-06-10 21:59:24 -Generating unique operation named: saveUsingPOST_18
2019-06-10 21:59:24 -Generating unique operation named: updateUsingGET_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingHEAD_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPOST_19
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPUT_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingPATCH_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingDELETE_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-10 21:59:24 -Generating unique operation named: updateUsingTRACE_12
2019-06-10 21:59:24 -Starting Quartz Scheduler now
2019-06-10 21:59:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-10 21:59:24 -Starting...
2019-06-10 21:59:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-10 21:59:24 -Started.
2019-06-10 21:59:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-10 21:59:24 -Using a shared selector for servlet write/read
2019-06-10 21:59:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-10 21:59:24 -Started BootdoApplication in 33.259 seconds (JVM running for 34.701)
2019-06-10 21:59:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-10 21:59:25 -==> Parameters: 
2019-06-10 21:59:25 -<==      Total: 1
2019-06-10 21:59:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-10 21:59:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-10 21:59:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2019-06-10 21:59:48 -Enabling session validation scheduler...
2019-06-10 21:59:48 -请求地址 : http://localhost:8081/login;JSESSIONID=cf8cac30-f83c-4dda-abd5-f7a971157434
2019-06-10 21:59:48 -HTTP METHOD : GET
2019-06-10 21:59:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 21:59:48 -参数 : [{}]
2019-06-10 21:59:48 -耗时 : 11
2019-06-10 21:59:48 -返回值 : login
2019-06-10 21:59:51 -请求地址 : http://localhost:8081/getVerify
2019-06-10 21:59:51 -HTTP METHOD : GET
2019-06-10 21:59:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-10 21:59:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4fe8d39e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@412f3413]
2019-06-10 21:59:57 -1080
2019-06-10 21:59:58 -耗时 : 6595
2019-06-10 21:59:58 -返回值 : null
2019-06-10 22:00:07 -请求地址 : http://localhost:8081/login
2019-06-10 22:00:07 -HTTP METHOD : POST
2019-06-10 22:00:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-10 22:00:07 -参数 : [admin, 111111, 1080, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bccf02f]
2019-06-10 22:00:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-10 22:00:07 -==> Parameters: admin(String)
2019-06-10 22:00:08 -<==      Total: 1
2019-06-10 22:00:08 -耗时 : 353
2019-06-10 22:00:08 -返回值 : {msg=操作成功, code=0}
2019-06-10 22:00:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-10 22:00:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 22:00:08 -==> Parameters: 1(Long), admin(String), 登录(String), 354(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-10 22:00:08.102(Timestamp)
2019-06-10 22:00:08 -请求地址 : http://localhost:8081/index
2019-06-10 22:00:08 -HTTP METHOD : GET
2019-06-10 22:00:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 22:00:08 -参数 : [{}]
2019-06-10 22:00:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 22:00:08 -<==    Updates: 1
2019-06-10 22:00:08 -==> Parameters: 1(Long)
2019-06-10 22:00:09 -<==      Total: 50
2019-06-10 22:00:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 22:00:09 -==> Parameters: 138(Long)
2019-06-10 22:00:09 -<==      Total: 1
2019-06-10 22:00:09 -耗时 : 633
2019-06-10 22:00:09 -返回值 : index_v1
2019-06-10 22:00:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 22:00:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 633(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 22:00:09.22(Timestamp)
2019-06-10 22:00:09 -<==    Updates: 1
2019-06-10 22:00:09 -请求地址 : http://localhost:8081/main
2019-06-10 22:00:09 -HTTP METHOD : GET
2019-06-10 22:00:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:00:09 -参数 : []
2019-06-10 22:00:09 -耗时 : 0
2019-06-10 22:00:09 -返回值 : main
2019-06-10 22:00:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 22:00:12 -HTTP METHOD : GET
2019-06-10 22:00:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 22:00:12 -参数 : []
2019-06-10 22:00:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 22:00:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 22:00:12 -请求地址 : http://localhost:8081/main
2019-06-10 22:00:12 -HTTP METHOD : GET
2019-06-10 22:00:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:00:12 -参数 : []
2019-06-10 22:00:12 -耗时 : 1
2019-06-10 22:00:12 -返回值 : main
2019-06-10 22:00:12 -<==      Total: 0
2019-06-10 22:00:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 22:00:12 -==> Parameters: 1(Long), 0(String)
2019-06-10 22:00:12 -<==      Total: 1
2019-06-10 22:00:12 -耗时 : 565
2019-06-10 22:00:12 -返回值 : com.bootdo.common.utils.PageUtils@c5770c2
2019-06-10 22:00:14 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-06-10 22:00:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 22:00:42 -==> Parameters: 1(Long)
2019-06-10 22:00:42 -<==      Total: 94
2019-06-10 22:00:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-10 22:00:42 -HTTP METHOD : GET
2019-06-10 22:00:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-10 22:00:42 -参数 : []
2019-06-10 22:00:42 -耗时 : 0
2019-06-10 22:00:42 -返回值 : moneyList/moneyList
2019-06-10 22:01:05 -请求地址 : http://localhost:8081/print/print
2019-06-10 22:01:05 -HTTP METHOD : GET
2019-06-10 22:01:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 22:01:05 -参数 : []
2019-06-10 22:01:05 -耗时 : 1
2019-06-10 22:01:05 -返回值 : print/print/print
2019-06-10 22:01:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:01:06 -HTTP METHOD : GET
2019-06-10 22:01:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:01:06 -参数 : [userType]
2019-06-10 22:01:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:01:06 -==> Parameters: userType(String)
2019-06-10 22:01:06 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 22:01:06 -HTTP METHOD : GET
2019-06-10 22:01:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 22:01:06 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 22:01:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 22:01:06 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:01:06 -<==      Total: 4
2019-06-10 22:01:06 -耗时 : 122
2019-06-10 22:01:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:01:06 -<==      Total: 3
2019-06-10 22:01:06 -==>  Preparing: select count(*) from print 
2019-06-10 22:01:06 -==> Parameters: 
2019-06-10 22:01:06 -<==      Total: 1
2019-06-10 22:01:06 -耗时 : 293
2019-06-10 22:01:06 -返回值 : com.bootdo.common.utils.PageUtils@1a382abf
2019-06-10 22:01:13 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:01:13 -HTTP METHOD : POST
2019-06-10 22:01:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:01:13 -参数 : [[Ljava.lang.Long;@7eb3ce43]
2019-06-10 22:01:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:01:13 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:01:13 -<==      Total: 3
2019-06-10 22:01:13 -耗时 : 83
2019-06-10 22:01:13 -返回值 : [com.bootdo.print.vo.PrintVo@11c12e41, com.bootdo.print.vo.PrintVo@8df66d6, com.bootdo.print.vo.PrintVo@44a8c998]
2019-06-10 22:01:17 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:01:17 -HTTP METHOD : POST
2019-06-10 22:01:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:01:17 -参数 : [[Ljava.lang.Long;@25a8756]
2019-06-10 22:01:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:01:17 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:01:17 -<==      Total: 3
2019-06-10 22:01:17 -耗时 : 8
2019-06-10 22:01:17 -返回值 : [com.bootdo.print.vo.PrintVo@355c893b, com.bootdo.print.vo.PrintVo@72bbc34b, com.bootdo.print.vo.PrintVo@248d9a7d]
2019-06-10 22:05:14 -请求地址 : http://localhost:8081/common/job
2019-06-10 22:05:14 -HTTP METHOD : GET
2019-06-10 22:05:14 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-06-10 22:05:14 -参数 : []
2019-06-10 22:05:14 -耗时 : 1
2019-06-10 22:05:14 -返回值 : common/job/job
2019-06-10 22:05:37 -请求地址 : http://localhost:8081/common/long
2019-06-10 22:05:37 -HTTP METHOD : GET
2019-06-10 22:05:37 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-06-10 22:05:37 -参数 : []
2019-06-10 22:05:37 -耗时 : 0
2019-06-10 22:05:37 -返回值 : common/job/Long
2019-06-10 22:05:40 -请求地址 : http://localhost:8081/common/time
2019-06-10 22:05:40 -HTTP METHOD : GET
2019-06-10 22:05:40 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-06-10 22:05:40 -参数 : []
2019-06-10 22:05:40 -耗时 : 1
2019-06-10 22:05:40 -返回值 : common/job/time
2019-06-10 22:07:04 -请求地址 : http://localhost:8081/print/print
2019-06-10 22:07:04 -HTTP METHOD : GET
2019-06-10 22:07:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 22:07:04 -参数 : []
2019-06-10 22:07:04 -耗时 : 0
2019-06-10 22:07:04 -返回值 : print/print/print
2019-06-10 22:07:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:07:04 -HTTP METHOD : GET
2019-06-10 22:07:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:07:04 -参数 : [userType]
2019-06-10 22:07:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:07:04 -==> Parameters: userType(String)
2019-06-10 22:07:04 -<==      Total: 4
2019-06-10 22:07:04 -耗时 : 8
2019-06-10 22:07:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:07:04 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 22:07:04 -HTTP METHOD : GET
2019-06-10 22:07:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 22:07:04 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 22:07:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 22:07:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:07:04 -<==      Total: 3
2019-06-10 22:07:04 -==>  Preparing: select count(*) from print 
2019-06-10 22:07:04 -==> Parameters: 
2019-06-10 22:07:04 -<==      Total: 1
2019-06-10 22:07:04 -耗时 : 14
2019-06-10 22:07:04 -返回值 : com.bootdo.common.utils.PageUtils@3702b5dc
2019-06-10 22:07:09 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:09 -HTTP METHOD : POST
2019-06-10 22:07:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:09 -参数 : [[Ljava.lang.Long;@1d25be11]
2019-06-10 22:07:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:09 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:09 -<==      Total: 3
2019-06-10 22:07:09 -耗时 : 13
2019-06-10 22:07:09 -返回值 : [com.bootdo.print.vo.PrintVo@7a51691f, com.bootdo.print.vo.PrintVo@54349665, com.bootdo.print.vo.PrintVo@293a80b8]
2019-06-10 22:07:13 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:13 -HTTP METHOD : POST
2019-06-10 22:07:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:13 -参数 : [[Ljava.lang.Long;@2669da35]
2019-06-10 22:07:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:13 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:13 -<==      Total: 3
2019-06-10 22:07:13 -耗时 : 12
2019-06-10 22:07:13 -返回值 : [com.bootdo.print.vo.PrintVo@6db22ac1, com.bootdo.print.vo.PrintVo@5cff2713, com.bootdo.print.vo.PrintVo@56998f63]
2019-06-10 22:07:16 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:16 -HTTP METHOD : POST
2019-06-10 22:07:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:16 -参数 : [[Ljava.lang.Long;@1c3019d3]
2019-06-10 22:07:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:16 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:16 -<==      Total: 3
2019-06-10 22:07:16 -耗时 : 5
2019-06-10 22:07:16 -返回值 : [com.bootdo.print.vo.PrintVo@3e19e81e, com.bootdo.print.vo.PrintVo@6929f3f4, com.bootdo.print.vo.PrintVo@75cb8183]
2019-06-10 22:07:20 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:20 -HTTP METHOD : POST
2019-06-10 22:07:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:20 -参数 : [[Ljava.lang.Long;@299d7d0a]
2019-06-10 22:07:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:20 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:20 -<==      Total: 3
2019-06-10 22:07:20 -耗时 : 12
2019-06-10 22:07:20 -返回值 : [com.bootdo.print.vo.PrintVo@59f4688b, com.bootdo.print.vo.PrintVo@3640f70a, com.bootdo.print.vo.PrintVo@365d8754]
2019-06-10 22:07:26 -请求地址 : http://localhost:8081/index
2019-06-10 22:07:26 -HTTP METHOD : GET
2019-06-10 22:07:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 22:07:26 -参数 : [{}]
2019-06-10 22:07:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 22:07:26 -==> Parameters: 1(Long)
2019-06-10 22:07:26 -<==      Total: 50
2019-06-10 22:07:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 22:07:26 -==> Parameters: 138(Long)
2019-06-10 22:07:26 -<==      Total: 1
2019-06-10 22:07:26 -耗时 : 41
2019-06-10 22:07:26 -返回值 : index_v1
2019-06-10 22:07:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 22:07:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 22:07:26.218(Timestamp)
2019-06-10 22:07:26 -请求地址 : http://localhost:8081/main
2019-06-10 22:07:26 -HTTP METHOD : GET
2019-06-10 22:07:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:07:26 -参数 : []
2019-06-10 22:07:26 -耗时 : 0
2019-06-10 22:07:26 -返回值 : main
2019-06-10 22:07:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 22:07:26 -HTTP METHOD : GET
2019-06-10 22:07:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 22:07:26 -参数 : []
2019-06-10 22:07:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 22:07:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 22:07:26 -<==      Total: 0
2019-06-10 22:07:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 22:07:26 -==> Parameters: 1(Long), 0(String)
2019-06-10 22:07:26 -<==      Total: 1
2019-06-10 22:07:26 -耗时 : 7
2019-06-10 22:07:26 -返回值 : com.bootdo.common.utils.PageUtils@2d8ba4b4
2019-06-10 22:07:26 -请求地址 : http://localhost:8081/main
2019-06-10 22:07:26 -HTTP METHOD : GET
2019-06-10 22:07:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:07:26 -参数 : []
2019-06-10 22:07:26 -耗时 : 0
2019-06-10 22:07:26 -返回值 : main
2019-06-10 22:07:26 -<==    Updates: 1
2019-06-10 22:07:28 -请求地址 : http://localhost:8081/print/print
2019-06-10 22:07:28 -HTTP METHOD : GET
2019-06-10 22:07:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-06-10 22:07:28 -参数 : []
2019-06-10 22:07:28 -耗时 : 1
2019-06-10 22:07:28 -返回值 : print/print/print
2019-06-10 22:07:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:07:29 -HTTP METHOD : GET
2019-06-10 22:07:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:07:29 -参数 : [userType]
2019-06-10 22:07:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:07:29 -==> Parameters: userType(String)
2019-06-10 22:07:29 -<==      Total: 4
2019-06-10 22:07:29 -耗时 : 5
2019-06-10 22:07:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:07:29 -请求地址 : http://localhost:8081/print/print/list
2019-06-10 22:07:29 -HTTP METHOD : GET
2019-06-10 22:07:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-06-10 22:07:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-06-10 22:07:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-06-10 22:07:29 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:07:29 -<==      Total: 3
2019-06-10 22:07:29 -==>  Preparing: select count(*) from print 
2019-06-10 22:07:29 -==> Parameters: 
2019-06-10 22:07:29 -<==      Total: 1
2019-06-10 22:07:29 -耗时 : 9
2019-06-10 22:07:29 -返回值 : com.bootdo.common.utils.PageUtils@3a0765a7
2019-06-10 22:07:33 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:33 -HTTP METHOD : POST
2019-06-10 22:07:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:33 -参数 : [[Ljava.lang.Long;@7b3ba6da]
2019-06-10 22:07:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:33 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:33 -<==      Total: 3
2019-06-10 22:07:33 -耗时 : 7
2019-06-10 22:07:33 -返回值 : [com.bootdo.print.vo.PrintVo@3657ccf1, com.bootdo.print.vo.PrintVo@48f6b0c4, com.bootdo.print.vo.PrintVo@6eddc276]
2019-06-10 22:07:34 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-06-10 22:07:34 -HTTP METHOD : POST
2019-06-10 22:07:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-06-10 22:07:34 -参数 : [[Ljava.lang.Long;@372c97e0]
2019-06-10 22:07:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? ) 
2019-06-10 22:07:34 -==> Parameters: 1(Long), 2(Long), 3(Long)
2019-06-10 22:07:34 -<==      Total: 3
2019-06-10 22:07:34 -耗时 : 7
2019-06-10 22:07:34 -返回值 : [com.bootdo.print.vo.PrintVo@13bccbf3, com.bootdo.print.vo.PrintVo@467b8179, com.bootdo.print.vo.PrintVo@15bb8dc1]
2019-06-10 22:08:09 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-10 22:13:45 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-10 22:20:08 -请求地址 : http://localhost:8081/login;JSESSIONID=03c2bdb8-6d25-4207-add8-8f17cae14355
2019-06-10 22:20:08 -HTTP METHOD : GET
2019-06-10 22:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-10 22:20:08 -参数 : [{}]
2019-06-10 22:20:08 -耗时 : 0
2019-06-10 22:20:08 -返回值 : login
2019-06-10 22:20:09 -请求地址 : http://localhost:8081/getVerify
2019-06-10 22:20:09 -HTTP METHOD : GET
2019-06-10 22:20:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-10 22:20:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d97c42d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1801693f]
2019-06-10 22:20:09 -4004
2019-06-10 22:20:09 -耗时 : 11
2019-06-10 22:20:09 -返回值 : null
2019-06-10 22:20:15 -请求地址 : http://localhost:8081/login
2019-06-10 22:20:15 -HTTP METHOD : POST
2019-06-10 22:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-10 22:20:15 -参数 : [admin, 111111, 4004, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59ef7642]
2019-06-10 22:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-10 22:20:15 -==> Parameters: admin(String)
2019-06-10 22:20:15 -<==      Total: 1
2019-06-10 22:20:15 -耗时 : 10
2019-06-10 22:20:15 -返回值 : {msg=操作成功, code=0}
2019-06-10 22:20:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 22:20:15 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-10 22:20:15.275(Timestamp)
2019-06-10 22:20:15 -请求地址 : http://localhost:8081/index
2019-06-10 22:20:15 -HTTP METHOD : GET
2019-06-10 22:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-10 22:20:15 -参数 : [{}]
2019-06-10 22:20:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-10 22:20:15 -==> Parameters: 1(Long)
2019-06-10 22:20:15 -<==      Total: 50
2019-06-10 22:20:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-10 22:20:15 -==> Parameters: 138(Long)
2019-06-10 22:20:15 -<==      Total: 1
2019-06-10 22:20:15 -耗时 : 28
2019-06-10 22:20:15 -返回值 : index_v1
2019-06-10 22:20:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-10 22:20:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-10 22:20:15.335(Timestamp)
2019-06-10 22:20:15 -请求地址 : http://localhost:8081/main
2019-06-10 22:20:15 -HTTP METHOD : GET
2019-06-10 22:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:20:15 -参数 : []
2019-06-10 22:20:15 -耗时 : 1
2019-06-10 22:20:15 -返回值 : main
2019-06-10 22:20:15 -<==    Updates: 1
2019-06-10 22:20:15 -<==    Updates: 1
2019-06-10 22:20:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-10 22:20:15 -HTTP METHOD : GET
2019-06-10 22:20:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-10 22:20:15 -参数 : []
2019-06-10 22:20:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-10 22:20:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-10 22:20:15 -<==      Total: 0
2019-06-10 22:20:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-10 22:20:15 -==> Parameters: 1(Long), 0(String)
2019-06-10 22:20:15 -<==      Total: 1
2019-06-10 22:20:15 -耗时 : 7
2019-06-10 22:20:15 -返回值 : com.bootdo.common.utils.PageUtils@25fe93ac
2019-06-10 22:20:15 -请求地址 : http://localhost:8081/main
2019-06-10 22:20:15 -HTTP METHOD : GET
2019-06-10 22:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-10 22:20:15 -参数 : []
2019-06-10 22:20:15 -耗时 : 1
2019-06-10 22:20:15 -返回值 : main
2019-06-10 22:20:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-10 22:20:42 -==> Parameters: 1(Long)
2019-06-10 22:20:42 -<==      Total: 94
2019-06-10 22:20:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:20:42 -HTTP METHOD : GET
2019-06-10 22:20:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:20:42 -参数 : []
2019-06-10 22:20:42 -耗时 : 1
2019-06-10 22:20:42 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:20:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:20:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:20:43 -HTTP METHOD : GET
2019-06-10 22:20:43 -HTTP METHOD : GET
2019-06-10 22:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:20:43 -参数 : [userType]
2019-06-10 22:20:43 -参数 : [elecType]
2019-06-10 22:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:20:43 -==> Parameters: userType(String)
2019-06-10 22:20:43 -==> Parameters: elecType(String)
2019-06-10 22:20:43 -<==      Total: 4
2019-06-10 22:20:43 -耗时 : 8
2019-06-10 22:20:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:20:43 -<==      Total: 11
2019-06-10 22:20:43 -耗时 : 13
2019-06-10 22:20:43 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:20:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:20:43 -HTTP METHOD : GET
2019-06-10 22:20:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:20:43 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:20:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:20:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:20:43 -<==      Total: 0
2019-06-10 22:20:43 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:20:43 -==> Parameters: 
2019-06-10 22:20:43 -<==      Total: 1
2019-06-10 22:20:43 -耗时 : 86
2019-06-10 22:20:43 -返回值 : com.bootdo.common.utils.PageUtils@75793bf9
2019-06-10 22:26:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:33 -HTTP METHOD : GET
2019-06-10 22:26:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:33 -参数 : []
2019-06-10 22:26:33 -耗时 : 0
2019-06-10 22:26:33 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:34 -HTTP METHOD : GET
2019-06-10 22:26:34 -HTTP METHOD : GET
2019-06-10 22:26:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:34 -参数 : [heatType]
2019-06-10 22:26:34 -参数 : [userType]
2019-06-10 22:26:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:34 -==> Parameters: userType(String)
2019-06-10 22:26:34 -==> Parameters: heatType(String)
2019-06-10 22:26:34 -<==      Total: 4
2019-06-10 22:26:34 -耗时 : 6
2019-06-10 22:26:34 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:34 -<==      Total: 4
2019-06-10 22:26:34 -耗时 : 9
2019-06-10 22:26:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:34 -HTTP METHOD : GET
2019-06-10 22:26:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:34 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:34 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:34 -<==      Total: 0
2019-06-10 22:26:34 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:34 -==> Parameters: 
2019-06-10 22:26:34 -<==      Total: 1
2019-06-10 22:26:34 -耗时 : 76
2019-06-10 22:26:34 -返回值 : com.bootdo.common.utils.PageUtils@67c5351b
2019-06-10 22:26:34 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:34 -HTTP METHOD : GET
2019-06-10 22:26:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:34 -参数 : []
2019-06-10 22:26:34 -耗时 : 75
2019-06-10 22:26:34 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:35 -HTTP METHOD : GET
2019-06-10 22:26:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:35 -参数 : [userType]
2019-06-10 22:26:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:35 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:35 -HTTP METHOD : GET
2019-06-10 22:26:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:35 -参数 : [waterType]
2019-06-10 22:26:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:35 -==> Parameters: userType(String)
2019-06-10 22:26:35 -==> Parameters: waterType(String)
2019-06-10 22:26:35 -<==      Total: 4
2019-06-10 22:26:35 -耗时 : 7
2019-06-10 22:26:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:35 -<==      Total: 4
2019-06-10 22:26:35 -耗时 : 6
2019-06-10 22:26:35 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:35 -HTTP METHOD : GET
2019-06-10 22:26:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:35 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:35 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:35 -<==      Total: 0
2019-06-10 22:26:35 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:35 -==> Parameters: 
2019-06-10 22:26:35 -<==      Total: 1
2019-06-10 22:26:35 -耗时 : 77
2019-06-10 22:26:35 -返回值 : com.bootdo.common.utils.PageUtils@2cd5619a
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:36 -参数 : []
2019-06-10 22:26:36 -耗时 : 1
2019-06-10 22:26:36 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:36 -参数 : [userType]
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:36 -参数 : [heatType]
2019-06-10 22:26:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:36 -==> Parameters: userType(String)
2019-06-10 22:26:36 -==> Parameters: heatType(String)
2019-06-10 22:26:36 -<==      Total: 4
2019-06-10 22:26:36 -耗时 : 6
2019-06-10 22:26:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:36 -<==      Total: 4
2019-06-10 22:26:36 -耗时 : 13
2019-06-10 22:26:36 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:36 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:36 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:36 -<==      Total: 0
2019-06-10 22:26:36 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:36 -==> Parameters: 
2019-06-10 22:26:36 -<==      Total: 1
2019-06-10 22:26:36 -耗时 : 6
2019-06-10 22:26:36 -返回值 : com.bootdo.common.utils.PageUtils@73071a59
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:36 -参数 : []
2019-06-10 22:26:36 -耗时 : 0
2019-06-10 22:26:36 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:36 -参数 : [elecType]
2019-06-10 22:26:36 -参数 : [userType]
2019-06-10 22:26:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:36 -==> Parameters: userType(String)
2019-06-10 22:26:36 -==> Parameters: elecType(String)
2019-06-10 22:26:36 -<==      Total: 4
2019-06-10 22:26:36 -耗时 : 4
2019-06-10 22:26:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:36 -<==      Total: 11
2019-06-10 22:26:36 -耗时 : 6
2019-06-10 22:26:36 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:36 -HTTP METHOD : GET
2019-06-10 22:26:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:36 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:36 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:36 -<==      Total: 0
2019-06-10 22:26:36 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:36 -==> Parameters: 
2019-06-10 22:26:36 -<==      Total: 1
2019-06-10 22:26:36 -耗时 : 4
2019-06-10 22:26:36 -返回值 : com.bootdo.common.utils.PageUtils@1ddbe982
2019-06-10 22:26:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:37 -HTTP METHOD : GET
2019-06-10 22:26:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:37 -参数 : []
2019-06-10 22:26:37 -耗时 : 0
2019-06-10 22:26:37 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:37 -HTTP METHOD : GET
2019-06-10 22:26:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:37 -参数 : [userType]
2019-06-10 22:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:37 -==> Parameters: userType(String)
2019-06-10 22:26:37 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:37 -HTTP METHOD : GET
2019-06-10 22:26:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:37 -参数 : [waterType]
2019-06-10 22:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:37 -==> Parameters: waterType(String)
2019-06-10 22:26:37 -<==      Total: 4
2019-06-10 22:26:37 -耗时 : 4
2019-06-10 22:26:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:37 -<==      Total: 4
2019-06-10 22:26:37 -耗时 : 4
2019-06-10 22:26:37 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:37 -HTTP METHOD : GET
2019-06-10 22:26:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:37 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:37 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:37 -<==      Total: 0
2019-06-10 22:26:37 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:37 -==> Parameters: 
2019-06-10 22:26:37 -<==      Total: 1
2019-06-10 22:26:37 -耗时 : 9
2019-06-10 22:26:37 -返回值 : com.bootdo.common.utils.PageUtils@28a87f05
2019-06-10 22:26:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:38 -HTTP METHOD : GET
2019-06-10 22:26:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:38 -参数 : []
2019-06-10 22:26:38 -耗时 : 0
2019-06-10 22:26:38 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:38 -HTTP METHOD : GET
2019-06-10 22:26:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:38 -参数 : [userType]
2019-06-10 22:26:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:38 -==> Parameters: userType(String)
2019-06-10 22:26:38 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:38 -HTTP METHOD : GET
2019-06-10 22:26:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:38 -参数 : [heatType]
2019-06-10 22:26:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:38 -==> Parameters: heatType(String)
2019-06-10 22:26:38 -<==      Total: 4
2019-06-10 22:26:38 -耗时 : 4
2019-06-10 22:26:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:38 -<==      Total: 4
2019-06-10 22:26:38 -耗时 : 4
2019-06-10 22:26:38 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:38 -HTTP METHOD : GET
2019-06-10 22:26:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:38 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:38 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:38 -<==      Total: 0
2019-06-10 22:26:38 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:38 -==> Parameters: 
2019-06-10 22:26:38 -<==      Total: 1
2019-06-10 22:26:38 -耗时 : 8
2019-06-10 22:26:38 -返回值 : com.bootdo.common.utils.PageUtils@579020f8
2019-06-10 22:26:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:38 -HTTP METHOD : GET
2019-06-10 22:26:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:38 -参数 : []
2019-06-10 22:26:38 -耗时 : 0
2019-06-10 22:26:38 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [userType]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [elecType]
2019-06-10 22:26:39 -==> Parameters: userType(String)
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -==> Parameters: elecType(String)
2019-06-10 22:26:39 -<==      Total: 11
2019-06-10 22:26:39 -耗时 : 4
2019-06-10 22:26:39 -<==      Total: 4
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:39 -<==      Total: 0
2019-06-10 22:26:39 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:39 -==> Parameters: 
2019-06-10 22:26:39 -<==      Total: 1
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : com.bootdo.common.utils.PageUtils@6badc01c
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:39 -参数 : []
2019-06-10 22:26:39 -耗时 : 1
2019-06-10 22:26:39 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [userType]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [heatType]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -==> Parameters: userType(String)
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -==> Parameters: heatType(String)
2019-06-10 22:26:39 -<==      Total: 4
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -<==      Total: 4
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:39 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:39 -<==      Total: 0
2019-06-10 22:26:39 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:39 -==> Parameters: 
2019-06-10 22:26:39 -<==      Total: 1
2019-06-10 22:26:39 -耗时 : 7
2019-06-10 22:26:39 -返回值 : com.bootdo.common.utils.PageUtils@5cc520ea
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:39 -参数 : []
2019-06-10 22:26:39 -耗时 : 0
2019-06-10 22:26:39 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [userType]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -==> Parameters: userType(String)
2019-06-10 22:26:39 -<==      Total: 4
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:39 -参数 : [waterType]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:39 -==> Parameters: waterType(String)
2019-06-10 22:26:39 -<==      Total: 4
2019-06-10 22:26:39 -耗时 : 5
2019-06-10 22:26:39 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:39 -HTTP METHOD : GET
2019-06-10 22:26:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:39 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:39 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:39 -<==      Total: 0
2019-06-10 22:26:39 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:39 -==> Parameters: 
2019-06-10 22:26:39 -<==      Total: 1
2019-06-10 22:26:39 -耗时 : 6
2019-06-10 22:26:39 -返回值 : com.bootdo.common.utils.PageUtils@2e7e9be4
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:40 -参数 : []
2019-06-10 22:26:40 -耗时 : 0
2019-06-10 22:26:40 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:40 -参数 : [heatType]
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:40 -参数 : [userType]
2019-06-10 22:26:40 -==> Parameters: heatType(String)
2019-06-10 22:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:40 -==> Parameters: userType(String)
2019-06-10 22:26:40 -<==      Total: 4
2019-06-10 22:26:40 -耗时 : 5
2019-06-10 22:26:40 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:40 -<==      Total: 4
2019-06-10 22:26:40 -耗时 : 4
2019-06-10 22:26:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:40 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:40 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:40 -<==      Total: 0
2019-06-10 22:26:40 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:40 -==> Parameters: 
2019-06-10 22:26:40 -<==      Total: 1
2019-06-10 22:26:40 -耗时 : 6
2019-06-10 22:26:40 -返回值 : com.bootdo.common.utils.PageUtils@4ae23b19
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:40 -参数 : []
2019-06-10 22:26:40 -耗时 : 0
2019-06-10 22:26:40 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:40 -参数 : [userType]
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:40 -参数 : [elecType]
2019-06-10 22:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:40 -==> Parameters: elecType(String)
2019-06-10 22:26:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:40 -HTTP METHOD : GET
2019-06-10 22:26:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:40 -<==      Total: 11
2019-06-10 22:26:40 -==> Parameters: userType(String)
2019-06-10 22:26:40 -<==      Total: 4
2019-06-10 22:26:40 -耗时 : 13
2019-06-10 22:26:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:40 -耗时 : 15
2019-06-10 22:26:40 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:40 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:40 -<==      Total: 0
2019-06-10 22:26:40 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:40 -==> Parameters: 
2019-06-10 22:26:40 -<==      Total: 1
2019-06-10 22:26:40 -耗时 : 47
2019-06-10 22:26:40 -返回值 : com.bootdo.common.utils.PageUtils@3bf21807
2019-06-10 22:26:41 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:41 -HTTP METHOD : GET
2019-06-10 22:26:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:41 -参数 : []
2019-06-10 22:26:41 -耗时 : 0
2019-06-10 22:26:41 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:41 -HTTP METHOD : GET
2019-06-10 22:26:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:41 -参数 : [userType]
2019-06-10 22:26:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:41 -==> Parameters: userType(String)
2019-06-10 22:26:41 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:41 -HTTP METHOD : GET
2019-06-10 22:26:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:41 -参数 : [waterType]
2019-06-10 22:26:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:41 -==> Parameters: waterType(String)
2019-06-10 22:26:41 -<==      Total: 4
2019-06-10 22:26:41 -耗时 : 5
2019-06-10 22:26:41 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:41 -<==      Total: 4
2019-06-10 22:26:41 -耗时 : 33
2019-06-10 22:26:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:41 -HTTP METHOD : GET
2019-06-10 22:26:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:41 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:41 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:41 -<==      Total: 0
2019-06-10 22:26:41 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:41 -==> Parameters: 
2019-06-10 22:26:41 -<==      Total: 1
2019-06-10 22:26:41 -耗时 : 10
2019-06-10 22:26:41 -返回值 : com.bootdo.common.utils.PageUtils@66c5b542
2019-06-10 22:26:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:41 -HTTP METHOD : GET
2019-06-10 22:26:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:41 -参数 : []
2019-06-10 22:26:41 -耗时 : 1
2019-06-10 22:26:41 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:42 -参数 : [heatType]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:42 -==> Parameters: heatType(String)
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:42 -参数 : [userType]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:42 -==> Parameters: userType(String)
2019-06-10 22:26:42 -<==      Total: 4
2019-06-10 22:26:42 -耗时 : 8
2019-06-10 22:26:42 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:42 -<==      Total: 4
2019-06-10 22:26:42 -耗时 : 5
2019-06-10 22:26:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:42 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:42 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:42 -<==      Total: 0
2019-06-10 22:26:42 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:42 -==> Parameters: 
2019-06-10 22:26:42 -<==      Total: 1
2019-06-10 22:26:42 -耗时 : 6
2019-06-10 22:26:42 -返回值 : com.bootdo.common.utils.PageUtils@1b1e1652
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:42 -参数 : []
2019-06-10 22:26:42 -耗时 : 0
2019-06-10 22:26:42 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:42 -参数 : [userType]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:42 -==> Parameters: userType(String)
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:42 -参数 : [heatType]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:42 -==> Parameters: heatType(String)
2019-06-10 22:26:42 -<==      Total: 4
2019-06-10 22:26:42 -<==      Total: 4
2019-06-10 22:26:42 -耗时 : 5
2019-06-10 22:26:42 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:42 -耗时 : 8
2019-06-10 22:26:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:42 -HTTP METHOD : GET
2019-06-10 22:26:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:42 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:42 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:42 -<==      Total: 0
2019-06-10 22:26:42 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:42 -==> Parameters: 
2019-06-10 22:26:42 -<==      Total: 1
2019-06-10 22:26:42 -耗时 : 4
2019-06-10 22:26:42 -返回值 : com.bootdo.common.utils.PageUtils@15212341
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:43 -参数 : []
2019-06-10 22:26:43 -耗时 : 1
2019-06-10 22:26:43 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:43 -参数 : [userType]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:43 -==> Parameters: userType(String)
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:43 -参数 : [waterType]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:43 -==> Parameters: waterType(String)
2019-06-10 22:26:43 -<==      Total: 4
2019-06-10 22:26:43 -耗时 : 3
2019-06-10 22:26:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:43 -<==      Total: 4
2019-06-10 22:26:43 -耗时 : 6
2019-06-10 22:26:43 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:43 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:43 -<==      Total: 0
2019-06-10 22:26:43 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:43 -==> Parameters: 
2019-06-10 22:26:43 -<==      Total: 1
2019-06-10 22:26:43 -耗时 : 5
2019-06-10 22:26:43 -返回值 : com.bootdo.common.utils.PageUtils@7ea38652
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:43 -参数 : []
2019-06-10 22:26:43 -耗时 : 1
2019-06-10 22:26:43 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:43 -参数 : [userType]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:43 -==> Parameters: userType(String)
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:43 -参数 : [heatType]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:43 -==> Parameters: heatType(String)
2019-06-10 22:26:43 -<==      Total: 4
2019-06-10 22:26:43 -耗时 : 6
2019-06-10 22:26:43 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:43 -<==      Total: 4
2019-06-10 22:26:43 -耗时 : 11
2019-06-10 22:26:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:43 -HTTP METHOD : GET
2019-06-10 22:26:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:43 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:43 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:43 -<==      Total: 0
2019-06-10 22:26:43 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:43 -==> Parameters: 
2019-06-10 22:26:43 -<==      Total: 1
2019-06-10 22:26:43 -耗时 : 8
2019-06-10 22:26:43 -返回值 : com.bootdo.common.utils.PageUtils@4fc904d5
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:44 -参数 : []
2019-06-10 22:26:44 -耗时 : 0
2019-06-10 22:26:44 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:44 -参数 : [heatType]
2019-06-10 22:26:44 -参数 : [userType]
2019-06-10 22:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:44 -==> Parameters: heatType(String)
2019-06-10 22:26:44 -==> Parameters: userType(String)
2019-06-10 22:26:44 -<==      Total: 4
2019-06-10 22:26:44 -耗时 : 5
2019-06-10 22:26:44 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:44 -<==      Total: 4
2019-06-10 22:26:44 -耗时 : 6
2019-06-10 22:26:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:44 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:44 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:44 -<==      Total: 0
2019-06-10 22:26:44 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:44 -==> Parameters: 
2019-06-10 22:26:44 -<==      Total: 1
2019-06-10 22:26:44 -耗时 : 5
2019-06-10 22:26:44 -返回值 : com.bootdo.common.utils.PageUtils@4f191c59
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:44 -参数 : []
2019-06-10 22:26:44 -耗时 : 0
2019-06-10 22:26:44 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:44 -参数 : [waterType]
2019-06-10 22:26:44 -参数 : [userType]
2019-06-10 22:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:44 -==> Parameters: waterType(String)
2019-06-10 22:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:44 -==> Parameters: userType(String)
2019-06-10 22:26:44 -<==      Total: 4
2019-06-10 22:26:44 -耗时 : 3
2019-06-10 22:26:44 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:44 -<==      Total: 4
2019-06-10 22:26:44 -耗时 : 3
2019-06-10 22:26:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:44 -HTTP METHOD : GET
2019-06-10 22:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:44 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:44 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:44 -<==      Total: 0
2019-06-10 22:26:44 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:44 -==> Parameters: 
2019-06-10 22:26:44 -<==      Total: 1
2019-06-10 22:26:44 -耗时 : 4
2019-06-10 22:26:44 -返回值 : com.bootdo.common.utils.PageUtils@1f4f7cc3
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:45 -参数 : []
2019-06-10 22:26:45 -耗时 : 1
2019-06-10 22:26:45 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:45 -参数 : [userType]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:45 -==> Parameters: userType(String)
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:45 -参数 : [heatType]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:45 -==> Parameters: heatType(String)
2019-06-10 22:26:45 -<==      Total: 4
2019-06-10 22:26:45 -耗时 : 4
2019-06-10 22:26:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:45 -<==      Total: 4
2019-06-10 22:26:45 -耗时 : 5
2019-06-10 22:26:45 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:45 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:45 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:45 -<==      Total: 0
2019-06-10 22:26:45 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:45 -==> Parameters: 
2019-06-10 22:26:45 -<==      Total: 1
2019-06-10 22:26:45 -耗时 : 6
2019-06-10 22:26:45 -返回值 : com.bootdo.common.utils.PageUtils@2b11800c
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:45 -参数 : []
2019-06-10 22:26:45 -耗时 : 0
2019-06-10 22:26:45 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:45 -参数 : [userType]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:45 -==> Parameters: userType(String)
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:45 -参数 : [elecType]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:45 -==> Parameters: elecType(String)
2019-06-10 22:26:45 -<==      Total: 4
2019-06-10 22:26:45 -耗时 : 4
2019-06-10 22:26:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:45 -<==      Total: 11
2019-06-10 22:26:45 -耗时 : 3
2019-06-10 22:26:45 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:45 -HTTP METHOD : GET
2019-06-10 22:26:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:45 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:45 -<==      Total: 0
2019-06-10 22:26:45 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:45 -==> Parameters: 
2019-06-10 22:26:45 -<==      Total: 1
2019-06-10 22:26:45 -耗时 : 5
2019-06-10 22:26:45 -返回值 : com.bootdo.common.utils.PageUtils@6c713fd0
2019-06-10 22:26:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:46 -HTTP METHOD : GET
2019-06-10 22:26:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:46 -参数 : []
2019-06-10 22:26:46 -耗时 : 0
2019-06-10 22:26:46 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:46 -HTTP METHOD : GET
2019-06-10 22:26:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:46 -参数 : [userType]
2019-06-10 22:26:46 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:46 -HTTP METHOD : GET
2019-06-10 22:26:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:46 -参数 : [heatType]
2019-06-10 22:26:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:46 -==> Parameters: heatType(String)
2019-06-10 22:26:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:46 -<==      Total: 4
2019-06-10 22:26:46 -耗时 : 3
2019-06-10 22:26:46 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:46 -==> Parameters: userType(String)
2019-06-10 22:26:46 -<==      Total: 4
2019-06-10 22:26:46 -耗时 : 10
2019-06-10 22:26:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:46 -HTTP METHOD : GET
2019-06-10 22:26:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:46 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:46 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:46 -<==      Total: 0
2019-06-10 22:26:46 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:46 -==> Parameters: 
2019-06-10 22:26:46 -<==      Total: 1
2019-06-10 22:26:46 -耗时 : 6
2019-06-10 22:26:46 -返回值 : com.bootdo.common.utils.PageUtils@559dbb64
2019-06-10 22:26:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:47 -HTTP METHOD : GET
2019-06-10 22:26:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:47 -参数 : []
2019-06-10 22:26:47 -耗时 : 1
2019-06-10 22:26:47 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:47 -HTTP METHOD : GET
2019-06-10 22:26:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:47 -参数 : [userType]
2019-06-10 22:26:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:47 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:47 -HTTP METHOD : GET
2019-06-10 22:26:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:47 -参数 : [waterType]
2019-06-10 22:26:47 -==> Parameters: userType(String)
2019-06-10 22:26:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:47 -==> Parameters: waterType(String)
2019-06-10 22:26:47 -<==      Total: 4
2019-06-10 22:26:47 -耗时 : 4
2019-06-10 22:26:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:47 -<==      Total: 4
2019-06-10 22:26:47 -耗时 : 6
2019-06-10 22:26:47 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:47 -HTTP METHOD : GET
2019-06-10 22:26:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:47 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:47 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:47 -<==      Total: 0
2019-06-10 22:26:47 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:47 -==> Parameters: 
2019-06-10 22:26:47 -<==      Total: 1
2019-06-10 22:26:47 -耗时 : 5
2019-06-10 22:26:47 -返回值 : com.bootdo.common.utils.PageUtils@3bf508f6
2019-06-10 22:26:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:48 -HTTP METHOD : GET
2019-06-10 22:26:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:48 -参数 : []
2019-06-10 22:26:48 -耗时 : 0
2019-06-10 22:26:48 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:48 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:48 -HTTP METHOD : GET
2019-06-10 22:26:48 -HTTP METHOD : GET
2019-06-10 22:26:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:48 -参数 : [heatType]
2019-06-10 22:26:48 -参数 : [userType]
2019-06-10 22:26:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:48 -==> Parameters: userType(String)
2019-06-10 22:26:48 -==> Parameters: heatType(String)
2019-06-10 22:26:48 -<==      Total: 4
2019-06-10 22:26:48 -<==      Total: 4
2019-06-10 22:26:48 -耗时 : 3
2019-06-10 22:26:48 -耗时 : 3
2019-06-10 22:26:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:48 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:48 -HTTP METHOD : GET
2019-06-10 22:26:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:48 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:48 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:48 -<==      Total: 0
2019-06-10 22:26:48 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:48 -==> Parameters: 
2019-06-10 22:26:48 -<==      Total: 1
2019-06-10 22:26:48 -耗时 : 57
2019-06-10 22:26:48 -返回值 : com.bootdo.common.utils.PageUtils@7c21aa73
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:50 -参数 : []
2019-06-10 22:26:50 -耗时 : 0
2019-06-10 22:26:50 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:50 -参数 : [userType]
2019-06-10 22:26:50 -参数 : [elecType]
2019-06-10 22:26:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:50 -==> Parameters: userType(String)
2019-06-10 22:26:50 -==> Parameters: elecType(String)
2019-06-10 22:26:50 -<==      Total: 4
2019-06-10 22:26:50 -<==      Total: 11
2019-06-10 22:26:50 -耗时 : 3
2019-06-10 22:26:50 -耗时 : 3
2019-06-10 22:26:50 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:50 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:50 -<==      Total: 0
2019-06-10 22:26:50 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:50 -==> Parameters: 
2019-06-10 22:26:50 -<==      Total: 1
2019-06-10 22:26:50 -耗时 : 7
2019-06-10 22:26:50 -返回值 : com.bootdo.common.utils.PageUtils@6bcf2c94
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:50 -参数 : []
2019-06-10 22:26:50 -耗时 : 0
2019-06-10 22:26:50 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:50 -参数 : [userType]
2019-06-10 22:26:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:50 -==> Parameters: userType(String)
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:50 -参数 : [heatType]
2019-06-10 22:26:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:50 -==> Parameters: heatType(String)
2019-06-10 22:26:50 -<==      Total: 4
2019-06-10 22:26:50 -耗时 : 4
2019-06-10 22:26:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:50 -<==      Total: 4
2019-06-10 22:26:50 -耗时 : 3
2019-06-10 22:26:50 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:50 -HTTP METHOD : GET
2019-06-10 22:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:50 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:50 -<==      Total: 0
2019-06-10 22:26:50 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:50 -==> Parameters: 
2019-06-10 22:26:50 -<==      Total: 1
2019-06-10 22:26:50 -耗时 : 5
2019-06-10 22:26:50 -返回值 : com.bootdo.common.utils.PageUtils@3fc4f472
2019-06-10 22:26:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:51 -HTTP METHOD : GET
2019-06-10 22:26:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:51 -参数 : []
2019-06-10 22:26:51 -耗时 : 1
2019-06-10 22:26:51 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:51 -HTTP METHOD : GET
2019-06-10 22:26:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:51 -参数 : [userType]
2019-06-10 22:26:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:51 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:51 -HTTP METHOD : GET
2019-06-10 22:26:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:51 -参数 : [waterType]
2019-06-10 22:26:51 -==> Parameters: userType(String)
2019-06-10 22:26:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:51 -==> Parameters: waterType(String)
2019-06-10 22:26:51 -<==      Total: 4
2019-06-10 22:26:51 -耗时 : 3
2019-06-10 22:26:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:51 -<==      Total: 4
2019-06-10 22:26:51 -耗时 : 5
2019-06-10 22:26:51 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:51 -HTTP METHOD : GET
2019-06-10 22:26:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:51 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:51 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:51 -<==      Total: 0
2019-06-10 22:26:51 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:51 -==> Parameters: 
2019-06-10 22:26:51 -<==      Total: 1
2019-06-10 22:26:51 -耗时 : 4
2019-06-10 22:26:51 -返回值 : com.bootdo.common.utils.PageUtils@48c29dc9
2019-06-10 22:26:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:51 -HTTP METHOD : GET
2019-06-10 22:26:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:51 -参数 : []
2019-06-10 22:26:51 -耗时 : 0
2019-06-10 22:26:51 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:52 -参数 : [heatType]
2019-06-10 22:26:52 -参数 : [userType]
2019-06-10 22:26:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:52 -==> Parameters: userType(String)
2019-06-10 22:26:52 -==> Parameters: heatType(String)
2019-06-10 22:26:52 -<==      Total: 4
2019-06-10 22:26:52 -<==      Total: 4
2019-06-10 22:26:52 -耗时 : 4
2019-06-10 22:26:52 -耗时 : 4
2019-06-10 22:26:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:52 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:52 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:52 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:52 -<==      Total: 0
2019-06-10 22:26:52 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:52 -==> Parameters: 
2019-06-10 22:26:52 -<==      Total: 1
2019-06-10 22:26:52 -耗时 : 5
2019-06-10 22:26:52 -返回值 : com.bootdo.common.utils.PageUtils@4bb5081a
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:52 -参数 : []
2019-06-10 22:26:52 -耗时 : 1
2019-06-10 22:26:52 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:52 -参数 : [userType]
2019-06-10 22:26:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:52 -==> Parameters: userType(String)
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:52 -参数 : [elecType]
2019-06-10 22:26:52 -<==      Total: 4
2019-06-10 22:26:52 -耗时 : 3
2019-06-10 22:26:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:52 -==> Parameters: elecType(String)
2019-06-10 22:26:52 -<==      Total: 11
2019-06-10 22:26:52 -耗时 : 7
2019-06-10 22:26:52 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:52 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:52 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:52 -<==      Total: 0
2019-06-10 22:26:52 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:52 -==> Parameters: 
2019-06-10 22:26:52 -<==      Total: 1
2019-06-10 22:26:52 -耗时 : 4
2019-06-10 22:26:52 -返回值 : com.bootdo.common.utils.PageUtils@7816f598
2019-06-10 22:26:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:52 -HTTP METHOD : GET
2019-06-10 22:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:52 -参数 : []
2019-06-10 22:26:52 -耗时 : 0
2019-06-10 22:26:52 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:53 -参数 : [userType]
2019-06-10 22:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:53 -==> Parameters: userType(String)
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:53 -参数 : [heatType]
2019-06-10 22:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:53 -==> Parameters: heatType(String)
2019-06-10 22:26:53 -<==      Total: 4
2019-06-10 22:26:53 -耗时 : 3
2019-06-10 22:26:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:53 -<==      Total: 4
2019-06-10 22:26:53 -耗时 : 3
2019-06-10 22:26:53 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:53 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:53 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:53 -<==      Total: 0
2019-06-10 22:26:53 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:53 -==> Parameters: 
2019-06-10 22:26:53 -<==      Total: 1
2019-06-10 22:26:53 -耗时 : 4
2019-06-10 22:26:53 -返回值 : com.bootdo.common.utils.PageUtils@53830c22
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:26:53 -参数 : []
2019-06-10 22:26:53 -耗时 : 0
2019-06-10 22:26:53 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:53 -参数 : [userType]
2019-06-10 22:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:53 -参数 : [waterType]
2019-06-10 22:26:53 -==> Parameters: userType(String)
2019-06-10 22:26:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:53 -==> Parameters: waterType(String)
2019-06-10 22:26:53 -<==      Total: 4
2019-06-10 22:26:53 -耗时 : 3
2019-06-10 22:26:53 -<==      Total: 4
2019-06-10 22:26:53 -耗时 : 4
2019-06-10 22:26:53 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:26:53 -HTTP METHOD : GET
2019-06-10 22:26:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:26:53 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:26:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:26:53 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:53 -<==      Total: 0
2019-06-10 22:26:53 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:26:53 -==> Parameters: 
2019-06-10 22:26:53 -<==      Total: 1
2019-06-10 22:26:53 -耗时 : 5
2019-06-10 22:26:53 -返回值 : com.bootdo.common.utils.PageUtils@18ae55ac
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:54 -参数 : []
2019-06-10 22:26:54 -耗时 : 0
2019-06-10 22:26:54 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:26:54 -参数 : []
2019-06-10 22:26:54 -耗时 : 0
2019-06-10 22:26:54 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:54 -参数 : [userType]
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:54 -参数 : [heatType]
2019-06-10 22:26:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:54 -==> Parameters: userType(String)
2019-06-10 22:26:54 -==> Parameters: heatType(String)
2019-06-10 22:26:54 -<==      Total: 4
2019-06-10 22:26:54 -<==      Total: 4
2019-06-10 22:26:54 -耗时 : 2
2019-06-10 22:26:54 -耗时 : 3
2019-06-10 22:26:54 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:26:54 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:26:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:26:54 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:54 -<==      Total: 0
2019-06-10 22:26:54 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:26:54 -==> Parameters: 
2019-06-10 22:26:54 -<==      Total: 1
2019-06-10 22:26:54 -耗时 : 4
2019-06-10 22:26:54 -返回值 : com.bootdo.common.utils.PageUtils@22546fbf
2019-06-10 22:26:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:26:54 -HTTP METHOD : GET
2019-06-10 22:26:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:26:54 -参数 : []
2019-06-10 22:26:54 -耗时 : 1
2019-06-10 22:26:54 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:26:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:26:55 -HTTP METHOD : GET
2019-06-10 22:26:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:55 -参数 : [userType]
2019-06-10 22:26:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:26:55 -HTTP METHOD : GET
2019-06-10 22:26:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:26:55 -参数 : [elecType]
2019-06-10 22:26:55 -==> Parameters: userType(String)
2019-06-10 22:26:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:26:55 -==> Parameters: elecType(String)
2019-06-10 22:26:55 -<==      Total: 4
2019-06-10 22:26:55 -耗时 : 5
2019-06-10 22:26:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:55 -<==      Total: 11
2019-06-10 22:26:55 -耗时 : 5
2019-06-10 22:26:55 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:26:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:26:55 -HTTP METHOD : GET
2019-06-10 22:26:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:26:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:26:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:26:55 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:26:55 -<==      Total: 0
2019-06-10 22:26:55 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:26:55 -==> Parameters: 
2019-06-10 22:26:55 -<==      Total: 1
2019-06-10 22:26:55 -耗时 : 4
2019-06-10 22:26:55 -返回值 : com.bootdo.common.utils.PageUtils@7e6ce679
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:00 -参数 : []
2019-06-10 22:27:00 -耗时 : 0
2019-06-10 22:27:00 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -参数 : [userType]
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:00 -参数 : [heatType]
2019-06-10 22:27:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:00 -==> Parameters: heatType(String)
2019-06-10 22:27:00 -==> Parameters: userType(String)
2019-06-10 22:27:00 -<==      Total: 4
2019-06-10 22:27:00 -耗时 : 3
2019-06-10 22:27:00 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:00 -<==      Total: 4
2019-06-10 22:27:00 -耗时 : 5
2019-06-10 22:27:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:00 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:00 -<==      Total: 0
2019-06-10 22:27:00 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:00 -==> Parameters: 
2019-06-10 22:27:00 -<==      Total: 1
2019-06-10 22:27:00 -耗时 : 4
2019-06-10 22:27:00 -返回值 : com.bootdo.common.utils.PageUtils@3050691a
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:27:00 -参数 : []
2019-06-10 22:27:00 -耗时 : 1
2019-06-10 22:27:00 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:00 -参数 : [userType]
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:00 -参数 : [waterType]
2019-06-10 22:27:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:00 -==> Parameters: userType(String)
2019-06-10 22:27:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:00 -==> Parameters: waterType(String)
2019-06-10 22:27:00 -<==      Total: 4
2019-06-10 22:27:00 -<==      Total: 4
2019-06-10 22:27:00 -耗时 : 3
2019-06-10 22:27:00 -耗时 : 3
2019-06-10 22:27:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:00 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:00 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:27:00 -HTTP METHOD : GET
2019-06-10 22:27:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:27:00 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:27:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:27:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:00 -<==      Total: 0
2019-06-10 22:27:00 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:27:00 -==> Parameters: 
2019-06-10 22:27:00 -<==      Total: 1
2019-06-10 22:27:00 -耗时 : 4
2019-06-10 22:27:00 -返回值 : com.bootdo.common.utils.PageUtils@7a2e8306
2019-06-10 22:27:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:20 -HTTP METHOD : GET
2019-06-10 22:27:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:20 -参数 : []
2019-06-10 22:27:20 -耗时 : 0
2019-06-10 22:27:20 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:21 -参数 : [heatType]
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:21 -参数 : [userType]
2019-06-10 22:27:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:21 -==> Parameters: userType(String)
2019-06-10 22:27:21 -==> Parameters: heatType(String)
2019-06-10 22:27:21 -<==      Total: 4
2019-06-10 22:27:21 -<==      Total: 4
2019-06-10 22:27:21 -耗时 : 3
2019-06-10 22:27:21 -耗时 : 3
2019-06-10 22:27:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:21 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:21 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:21 -<==      Total: 0
2019-06-10 22:27:21 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:21 -==> Parameters: 
2019-06-10 22:27:21 -<==      Total: 1
2019-06-10 22:27:21 -耗时 : 4
2019-06-10 22:27:21 -返回值 : com.bootdo.common.utils.PageUtils@1c2c611b
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:27:21 -参数 : []
2019-06-10 22:27:21 -耗时 : 0
2019-06-10 22:27:21 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:21 -参数 : [userType]
2019-06-10 22:27:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:21 -==> Parameters: userType(String)
2019-06-10 22:27:21 -<==      Total: 4
2019-06-10 22:27:21 -耗时 : 4
2019-06-10 22:27:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:21 -参数 : [elecType]
2019-06-10 22:27:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:21 -==> Parameters: elecType(String)
2019-06-10 22:27:21 -<==      Total: 11
2019-06-10 22:27:21 -耗时 : 4
2019-06-10 22:27:21 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:27:21 -HTTP METHOD : GET
2019-06-10 22:27:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:27:21 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:27:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:27:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:21 -<==      Total: 0
2019-06-10 22:27:21 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:27:21 -==> Parameters: 
2019-06-10 22:27:21 -<==      Total: 1
2019-06-10 22:27:21 -耗时 : 6
2019-06-10 22:27:21 -返回值 : com.bootdo.common.utils.PageUtils@3bdde0ad
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:22 -参数 : []
2019-06-10 22:27:22 -耗时 : 0
2019-06-10 22:27:22 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:22 -参数 : [userType]
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:22 -参数 : [heatType]
2019-06-10 22:27:22 -==> Parameters: userType(String)
2019-06-10 22:27:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:22 -==> Parameters: heatType(String)
2019-06-10 22:27:22 -<==      Total: 4
2019-06-10 22:27:22 -<==      Total: 4
2019-06-10 22:27:22 -耗时 : 4
2019-06-10 22:27:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:22 -耗时 : 4
2019-06-10 22:27:22 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:22 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:22 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:22 -<==      Total: 0
2019-06-10 22:27:22 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:22 -==> Parameters: 
2019-06-10 22:27:22 -<==      Total: 1
2019-06-10 22:27:22 -耗时 : 5
2019-06-10 22:27:22 -返回值 : com.bootdo.common.utils.PageUtils@279fa825
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:27:22 -参数 : []
2019-06-10 22:27:22 -耗时 : 1
2019-06-10 22:27:22 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:22 -参数 : [userType]
2019-06-10 22:27:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:22 -==> Parameters: userType(String)
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:22 -参数 : [waterType]
2019-06-10 22:27:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:22 -==> Parameters: waterType(String)
2019-06-10 22:27:22 -<==      Total: 4
2019-06-10 22:27:22 -耗时 : 3
2019-06-10 22:27:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:22 -<==      Total: 4
2019-06-10 22:27:22 -耗时 : 3
2019-06-10 22:27:22 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:27:22 -HTTP METHOD : GET
2019-06-10 22:27:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:27:22 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:27:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:27:22 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:22 -<==      Total: 0
2019-06-10 22:27:22 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:27:22 -==> Parameters: 
2019-06-10 22:27:22 -<==      Total: 1
2019-06-10 22:27:22 -耗时 : 6
2019-06-10 22:27:22 -返回值 : com.bootdo.common.utils.PageUtils@69bc48f4
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:23 -参数 : []
2019-06-10 22:27:23 -耗时 : 0
2019-06-10 22:27:23 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:23 -参数 : [userType]
2019-06-10 22:27:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:23 -==> Parameters: userType(String)
2019-06-10 22:27:23 -<==      Total: 4
2019-06-10 22:27:23 -耗时 : 5
2019-06-10 22:27:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:23 -参数 : [heatType]
2019-06-10 22:27:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:23 -==> Parameters: heatType(String)
2019-06-10 22:27:23 -<==      Total: 4
2019-06-10 22:27:23 -耗时 : 12
2019-06-10 22:27:23 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:23 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:23 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:23 -<==      Total: 0
2019-06-10 22:27:23 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:23 -==> Parameters: 
2019-06-10 22:27:23 -<==      Total: 1
2019-06-10 22:27:23 -耗时 : 4
2019-06-10 22:27:23 -返回值 : com.bootdo.common.utils.PageUtils@60189a85
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:27:23 -参数 : []
2019-06-10 22:27:23 -耗时 : 1
2019-06-10 22:27:23 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:23 -参数 : [userType]
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:23 -参数 : [elecType]
2019-06-10 22:27:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:23 -==> Parameters: userType(String)
2019-06-10 22:27:23 -==> Parameters: elecType(String)
2019-06-10 22:27:23 -<==      Total: 4
2019-06-10 22:27:23 -<==      Total: 11
2019-06-10 22:27:23 -耗时 : 3
2019-06-10 22:27:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:23 -耗时 : 2
2019-06-10 22:27:23 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:27:23 -HTTP METHOD : GET
2019-06-10 22:27:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:27:23 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:27:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:27:23 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:23 -<==      Total: 0
2019-06-10 22:27:23 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:27:23 -==> Parameters: 
2019-06-10 22:27:23 -<==      Total: 1
2019-06-10 22:27:23 -耗时 : 6
2019-06-10 22:27:23 -返回值 : com.bootdo.common.utils.PageUtils@3b6cec55
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:24 -参数 : []
2019-06-10 22:27:24 -耗时 : 0
2019-06-10 22:27:24 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:24 -参数 : [userType]
2019-06-10 22:27:24 -参数 : [heatType]
2019-06-10 22:27:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:24 -==> Parameters: heatType(String)
2019-06-10 22:27:24 -==> Parameters: userType(String)
2019-06-10 22:27:24 -<==      Total: 4
2019-06-10 22:27:24 -耗时 : 4
2019-06-10 22:27:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:24 -<==      Total: 4
2019-06-10 22:27:24 -耗时 : 8
2019-06-10 22:27:24 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:24 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:24 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:24 -<==      Total: 0
2019-06-10 22:27:24 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:24 -==> Parameters: 
2019-06-10 22:27:24 -<==      Total: 1
2019-06-10 22:27:24 -耗时 : 4
2019-06-10 22:27:24 -返回值 : com.bootdo.common.utils.PageUtils@5094cb2e
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:27:24 -参数 : []
2019-06-10 22:27:24 -耗时 : 0
2019-06-10 22:27:24 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -参数 : [waterType]
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:24 -参数 : [userType]
2019-06-10 22:27:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:24 -==> Parameters: waterType(String)
2019-06-10 22:27:24 -==> Parameters: userType(String)
2019-06-10 22:27:24 -<==      Total: 4
2019-06-10 22:27:24 -<==      Total: 4
2019-06-10 22:27:24 -耗时 : 4
2019-06-10 22:27:24 -耗时 : 4
2019-06-10 22:27:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:24 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:24 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:27:24 -HTTP METHOD : GET
2019-06-10 22:27:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:27:24 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:27:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:27:24 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:24 -<==      Total: 0
2019-06-10 22:27:24 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:27:24 -==> Parameters: 
2019-06-10 22:27:24 -<==      Total: 1
2019-06-10 22:27:24 -耗时 : 4
2019-06-10 22:27:24 -返回值 : com.bootdo.common.utils.PageUtils@4c574358
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:25 -参数 : []
2019-06-10 22:27:25 -耗时 : 1
2019-06-10 22:27:25 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -参数 : [userType]
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -参数 : [heatType]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==> Parameters: heatType(String)
2019-06-10 22:27:25 -==> Parameters: userType(String)
2019-06-10 22:27:25 -<==      Total: 4
2019-06-10 22:27:25 -<==      Total: 4
2019-06-10 22:27:25 -耗时 : 5
2019-06-10 22:27:25 -耗时 : 4
2019-06-10 22:27:25 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:25 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:25 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:25 -<==      Total: 0
2019-06-10 22:27:25 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:25 -==> Parameters: 
2019-06-10 22:27:25 -<==      Total: 1
2019-06-10 22:27:25 -耗时 : 3
2019-06-10 22:27:25 -返回值 : com.bootdo.common.utils.PageUtils@115805c0
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:27:25 -参数 : []
2019-06-10 22:27:25 -耗时 : 1
2019-06-10 22:27:25 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -参数 : [elecType]
2019-06-10 22:27:25 -参数 : [userType]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==> Parameters: userType(String)
2019-06-10 22:27:25 -==> Parameters: elecType(String)
2019-06-10 22:27:25 -<==      Total: 4
2019-06-10 22:27:25 -<==      Total: 11
2019-06-10 22:27:25 -耗时 : 4
2019-06-10 22:27:25 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:25 -耗时 : 6
2019-06-10 22:27:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:27:25 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:27:25 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:25 -<==      Total: 0
2019-06-10 22:27:25 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:27:25 -==> Parameters: 
2019-06-10 22:27:25 -<==      Total: 1
2019-06-10 22:27:25 -耗时 : 4
2019-06-10 22:27:25 -返回值 : com.bootdo.common.utils.PageUtils@7637b8c9
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:25 -参数 : []
2019-06-10 22:27:25 -耗时 : 0
2019-06-10 22:27:25 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -参数 : [userType]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==> Parameters: userType(String)
2019-06-10 22:27:25 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:25 -HTTP METHOD : GET
2019-06-10 22:27:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:25 -参数 : [heatType]
2019-06-10 22:27:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:25 -==> Parameters: heatType(String)
2019-06-10 22:27:25 -<==      Total: 4
2019-06-10 22:27:25 -耗时 : 5
2019-06-10 22:27:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:25 -<==      Total: 4
2019-06-10 22:27:25 -耗时 : 5
2019-06-10 22:27:25 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:26 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:26 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:26 -<==      Total: 0
2019-06-10 22:27:26 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:26 -==> Parameters: 
2019-06-10 22:27:26 -<==      Total: 1
2019-06-10 22:27:26 -耗时 : 4
2019-06-10 22:27:26 -返回值 : com.bootdo.common.utils.PageUtils@29dcdc4a
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:27:26 -参数 : []
2019-06-10 22:27:26 -耗时 : 0
2019-06-10 22:27:26 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:26 -参数 : [waterType]
2019-06-10 22:27:26 -参数 : [userType]
2019-06-10 22:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:26 -==> Parameters: waterType(String)
2019-06-10 22:27:26 -==> Parameters: userType(String)
2019-06-10 22:27:26 -<==      Total: 4
2019-06-10 22:27:26 -<==      Total: 4
2019-06-10 22:27:26 -耗时 : 3
2019-06-10 22:27:26 -耗时 : 3
2019-06-10 22:27:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:26 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:27:26 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:27:26 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:26 -<==      Total: 0
2019-06-10 22:27:26 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:27:26 -==> Parameters: 
2019-06-10 22:27:26 -<==      Total: 1
2019-06-10 22:27:26 -耗时 : 4
2019-06-10 22:27:26 -返回值 : com.bootdo.common.utils.PageUtils@7cb1db5b
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:27:26 -参数 : []
2019-06-10 22:27:26 -耗时 : 1
2019-06-10 22:27:26 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:26 -参数 : [userType]
2019-06-10 22:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:26 -==> Parameters: userType(String)
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:26 -参数 : [heatType]
2019-06-10 22:27:26 -<==      Total: 4
2019-06-10 22:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:26 -==> Parameters: heatType(String)
2019-06-10 22:27:26 -耗时 : 3
2019-06-10 22:27:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:26 -<==      Total: 4
2019-06-10 22:27:26 -耗时 : 3
2019-06-10 22:27:26 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:27:26 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:27:26 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:26 -<==      Total: 0
2019-06-10 22:27:26 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:27:26 -==> Parameters: 
2019-06-10 22:27:26 -<==      Total: 1
2019-06-10 22:27:26 -耗时 : 4
2019-06-10 22:27:26 -返回值 : com.bootdo.common.utils.PageUtils@5d5294ae
2019-06-10 22:27:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:27:26 -HTTP METHOD : GET
2019-06-10 22:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:27:26 -参数 : []
2019-06-10 22:27:26 -耗时 : 1
2019-06-10 22:27:26 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:27:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:27:27 -HTTP METHOD : GET
2019-06-10 22:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:27 -参数 : [userType]
2019-06-10 22:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:27 -==> Parameters: userType(String)
2019-06-10 22:27:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:27:27 -HTTP METHOD : GET
2019-06-10 22:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:27:27 -参数 : [elecType]
2019-06-10 22:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:27:27 -==> Parameters: elecType(String)
2019-06-10 22:27:27 -<==      Total: 4
2019-06-10 22:27:27 -耗时 : 3
2019-06-10 22:27:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:27 -<==      Total: 11
2019-06-10 22:27:27 -耗时 : 3
2019-06-10 22:27:27 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:27:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:27:27 -HTTP METHOD : GET
2019-06-10 22:27:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:27:27 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:27:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:27:27 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:27:27 -<==      Total: 0
2019-06-10 22:27:27 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:27:27 -==> Parameters: 
2019-06-10 22:27:27 -<==      Total: 1
2019-06-10 22:27:27 -耗时 : 5
2019-06-10 22:27:27 -返回值 : com.bootdo.common.utils.PageUtils@373049da
2019-06-10 22:28:02 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-10 22:28:02 -HTTP METHOD : GET
2019-06-10 22:28:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-10 22:28:02 -参数 : []
2019-06-10 22:28:02 -耗时 : 1
2019-06-10 22:28:02 -返回值 : moneyList/moneyList
2019-06-10 22:28:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:28:04 -HTTP METHOD : GET
2019-06-10 22:28:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:28:04 -参数 : []
2019-06-10 22:28:04 -耗时 : 1
2019-06-10 22:28:04 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:28:04 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:28:04 -HTTP METHOD : GET
2019-06-10 22:28:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:04 -参数 : [waterType]
2019-06-10 22:28:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:04 -HTTP METHOD : GET
2019-06-10 22:28:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:04 -参数 : [userType]
2019-06-10 22:28:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:04 -==> Parameters: waterType(String)
2019-06-10 22:28:04 -==> Parameters: userType(String)
2019-06-10 22:28:04 -<==      Total: 4
2019-06-10 22:28:04 -<==      Total: 4
2019-06-10 22:28:04 -耗时 : 3
2019-06-10 22:28:04 -耗时 : 2
2019-06-10 22:28:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:04 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:28:04 -HTTP METHOD : GET
2019-06-10 22:28:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:28:04 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:28:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:28:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:04 -<==      Total: 0
2019-06-10 22:28:04 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:28:04 -==> Parameters: 
2019-06-10 22:28:04 -<==      Total: 1
2019-06-10 22:28:04 -耗时 : 4
2019-06-10 22:28:04 -返回值 : com.bootdo.common.utils.PageUtils@6a775c39
2019-06-10 22:28:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:05 -HTTP METHOD : GET
2019-06-10 22:28:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:05 -参数 : []
2019-06-10 22:28:05 -耗时 : 0
2019-06-10 22:28:05 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:05 -HTTP METHOD : GET
2019-06-10 22:28:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:05 -参数 : [userType]
2019-06-10 22:28:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:05 -==> Parameters: userType(String)
2019-06-10 22:28:05 -<==      Total: 4
2019-06-10 22:28:05 -耗时 : 4
2019-06-10 22:28:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:05 -HTTP METHOD : GET
2019-06-10 22:28:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:05 -参数 : [heatType]
2019-06-10 22:28:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:05 -==> Parameters: heatType(String)
2019-06-10 22:28:05 -<==      Total: 4
2019-06-10 22:28:05 -耗时 : 5
2019-06-10 22:28:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:05 -HTTP METHOD : GET
2019-06-10 22:28:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:05 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:05 -<==      Total: 0
2019-06-10 22:28:05 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:05 -==> Parameters: 
2019-06-10 22:28:05 -<==      Total: 1
2019-06-10 22:28:05 -耗时 : 4
2019-06-10 22:28:05 -返回值 : com.bootdo.common.utils.PageUtils@6016c87a
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:28:06 -参数 : []
2019-06-10 22:28:06 -耗时 : 1
2019-06-10 22:28:06 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:06 -参数 : [userType]
2019-06-10 22:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:06 -==> Parameters: userType(String)
2019-06-10 22:28:06 -<==      Total: 4
2019-06-10 22:28:06 -耗时 : 3
2019-06-10 22:28:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:06 -参数 : [elecType]
2019-06-10 22:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:06 -==> Parameters: elecType(String)
2019-06-10 22:28:06 -<==      Total: 11
2019-06-10 22:28:06 -耗时 : 3
2019-06-10 22:28:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:28:06 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:28:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:28:06 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:06 -<==      Total: 0
2019-06-10 22:28:06 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:28:06 -==> Parameters: 
2019-06-10 22:28:06 -<==      Total: 1
2019-06-10 22:28:06 -耗时 : 4
2019-06-10 22:28:06 -返回值 : com.bootdo.common.utils.PageUtils@5c8195ff
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:06 -参数 : []
2019-06-10 22:28:06 -耗时 : 0
2019-06-10 22:28:06 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:06 -参数 : [heatType]
2019-06-10 22:28:06 -参数 : [userType]
2019-06-10 22:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:06 -==> Parameters: heatType(String)
2019-06-10 22:28:06 -==> Parameters: userType(String)
2019-06-10 22:28:06 -<==      Total: 4
2019-06-10 22:28:06 -耗时 : 3
2019-06-10 22:28:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:06 -<==      Total: 4
2019-06-10 22:28:06 -耗时 : 5
2019-06-10 22:28:06 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:06 -HTTP METHOD : GET
2019-06-10 22:28:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:06 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:06 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:06 -<==      Total: 0
2019-06-10 22:28:06 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:06 -==> Parameters: 
2019-06-10 22:28:06 -<==      Total: 1
2019-06-10 22:28:06 -耗时 : 7
2019-06-10 22:28:06 -返回值 : com.bootdo.common.utils.PageUtils@6f7636e
2019-06-10 22:28:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:28:07 -HTTP METHOD : GET
2019-06-10 22:28:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:28:07 -参数 : []
2019-06-10 22:28:07 -耗时 : 1
2019-06-10 22:28:07 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:28:07 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:28:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:07 -HTTP METHOD : GET
2019-06-10 22:28:07 -HTTP METHOD : GET
2019-06-10 22:28:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:07 -参数 : [userType]
2019-06-10 22:28:07 -参数 : [waterType]
2019-06-10 22:28:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:07 -==> Parameters: userType(String)
2019-06-10 22:28:07 -==> Parameters: waterType(String)
2019-06-10 22:28:07 -<==      Total: 4
2019-06-10 22:28:07 -<==      Total: 4
2019-06-10 22:28:07 -耗时 : 4
2019-06-10 22:28:07 -耗时 : 4
2019-06-10 22:28:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:07 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:28:07 -HTTP METHOD : GET
2019-06-10 22:28:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:28:07 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:28:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:28:07 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:07 -<==      Total: 0
2019-06-10 22:28:07 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:28:07 -==> Parameters: 
2019-06-10 22:28:07 -<==      Total: 1
2019-06-10 22:28:07 -耗时 : 4
2019-06-10 22:28:07 -返回值 : com.bootdo.common.utils.PageUtils@13c82103
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:08 -参数 : []
2019-06-10 22:28:08 -耗时 : 0
2019-06-10 22:28:08 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:08 -参数 : [userType]
2019-06-10 22:28:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:08 -==> Parameters: userType(String)
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:08 -参数 : [heatType]
2019-06-10 22:28:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:08 -==> Parameters: heatType(String)
2019-06-10 22:28:08 -<==      Total: 4
2019-06-10 22:28:08 -耗时 : 3
2019-06-10 22:28:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:08 -<==      Total: 4
2019-06-10 22:28:08 -耗时 : 3
2019-06-10 22:28:08 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:08 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:08 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:08 -<==      Total: 0
2019-06-10 22:28:08 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:08 -==> Parameters: 
2019-06-10 22:28:08 -<==      Total: 1
2019-06-10 22:28:08 -耗时 : 4
2019-06-10 22:28:08 -返回值 : com.bootdo.common.utils.PageUtils@23c0ade3
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:28:08 -参数 : []
2019-06-10 22:28:08 -耗时 : 1
2019-06-10 22:28:08 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:08 -参数 : [elecType]
2019-06-10 22:28:08 -参数 : [userType]
2019-06-10 22:28:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:08 -==> Parameters: userType(String)
2019-06-10 22:28:08 -==> Parameters: elecType(String)
2019-06-10 22:28:08 -<==      Total: 11
2019-06-10 22:28:08 -耗时 : 3
2019-06-10 22:28:08 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:08 -<==      Total: 4
2019-06-10 22:28:08 -耗时 : 11
2019-06-10 22:28:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:28:08 -HTTP METHOD : GET
2019-06-10 22:28:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:28:08 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:28:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:28:08 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:08 -<==      Total: 0
2019-06-10 22:28:08 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:28:08 -==> Parameters: 
2019-06-10 22:28:08 -<==      Total: 1
2019-06-10 22:28:08 -耗时 : 7
2019-06-10 22:28:08 -返回值 : com.bootdo.common.utils.PageUtils@72425280
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:09 -参数 : []
2019-06-10 22:28:09 -耗时 : 0
2019-06-10 22:28:09 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:09 -参数 : [userType]
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:09 -参数 : [heatType]
2019-06-10 22:28:09 -==> Parameters: userType(String)
2019-06-10 22:28:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:09 -==> Parameters: heatType(String)
2019-06-10 22:28:09 -<==      Total: 4
2019-06-10 22:28:09 -<==      Total: 4
2019-06-10 22:28:09 -耗时 : 4
2019-06-10 22:28:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:09 -耗时 : 3
2019-06-10 22:28:09 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:09 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:09 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:09 -<==      Total: 0
2019-06-10 22:28:09 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:09 -==> Parameters: 
2019-06-10 22:28:09 -<==      Total: 1
2019-06-10 22:28:09 -耗时 : 4
2019-06-10 22:28:09 -返回值 : com.bootdo.common.utils.PageUtils@5d2a475
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:28:09 -参数 : []
2019-06-10 22:28:09 -耗时 : 0
2019-06-10 22:28:09 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:09 -参数 : [waterType]
2019-06-10 22:28:09 -参数 : [userType]
2019-06-10 22:28:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:09 -==> Parameters: waterType(String)
2019-06-10 22:28:09 -==> Parameters: userType(String)
2019-06-10 22:28:09 -<==      Total: 4
2019-06-10 22:28:09 -<==      Total: 4
2019-06-10 22:28:09 -耗时 : 3
2019-06-10 22:28:09 -耗时 : 3
2019-06-10 22:28:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:09 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:28:09 -HTTP METHOD : GET
2019-06-10 22:28:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:28:09 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:28:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:28:09 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:09 -<==      Total: 0
2019-06-10 22:28:09 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:28:09 -==> Parameters: 
2019-06-10 22:28:09 -<==      Total: 1
2019-06-10 22:28:09 -耗时 : 5
2019-06-10 22:28:09 -返回值 : com.bootdo.common.utils.PageUtils@2d8a026f
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:10 -参数 : []
2019-06-10 22:28:10 -耗时 : 0
2019-06-10 22:28:10 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:10 -参数 : [heatType]
2019-06-10 22:28:10 -参数 : [userType]
2019-06-10 22:28:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:10 -==> Parameters: userType(String)
2019-06-10 22:28:10 -==> Parameters: heatType(String)
2019-06-10 22:28:10 -<==      Total: 4
2019-06-10 22:28:10 -<==      Total: 4
2019-06-10 22:28:10 -耗时 : 2
2019-06-10 22:28:10 -耗时 : 2
2019-06-10 22:28:10 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:10 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:10 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:10 -<==      Total: 0
2019-06-10 22:28:10 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:10 -==> Parameters: 
2019-06-10 22:28:10 -<==      Total: 1
2019-06-10 22:28:10 -耗时 : 4
2019-06-10 22:28:10 -返回值 : com.bootdo.common.utils.PageUtils@4283fb78
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-10 22:28:10 -参数 : []
2019-06-10 22:28:10 -耗时 : 1
2019-06-10 22:28:10 -返回值 : moneyLog/elecLog/elecLog
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:10 -参数 : [userType]
2019-06-10 22:28:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:10 -参数 : [elecType]
2019-06-10 22:28:10 -==> Parameters: userType(String)
2019-06-10 22:28:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:10 -==> Parameters: elecType(String)
2019-06-10 22:28:10 -<==      Total: 4
2019-06-10 22:28:10 -耗时 : 3
2019-06-10 22:28:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:10 -<==      Total: 11
2019-06-10 22:28:10 -耗时 : 3
2019-06-10 22:28:10 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-10 22:28:10 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-10 22:28:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-10 22:28:10 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:10 -<==      Total: 0
2019-06-10 22:28:10 -==>  Preparing: select count(*) from elec_log 
2019-06-10 22:28:10 -==> Parameters: 
2019-06-10 22:28:10 -<==      Total: 1
2019-06-10 22:28:10 -耗时 : 4
2019-06-10 22:28:10 -返回值 : com.bootdo.common.utils.PageUtils@4a9841f4
2019-06-10 22:28:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:10 -HTTP METHOD : GET
2019-06-10 22:28:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:10 -参数 : []
2019-06-10 22:28:10 -耗时 : 0
2019-06-10 22:28:10 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:11 -参数 : [userType]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:11 -==> Parameters: userType(String)
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:11 -参数 : [heatType]
2019-06-10 22:28:11 -<==      Total: 4
2019-06-10 22:28:11 -耗时 : 3
2019-06-10 22:28:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:11 -==> Parameters: heatType(String)
2019-06-10 22:28:11 -<==      Total: 4
2019-06-10 22:28:11 -耗时 : 6
2019-06-10 22:28:11 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:11 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:11 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:11 -<==      Total: 0
2019-06-10 22:28:11 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:11 -==> Parameters: 
2019-06-10 22:28:11 -<==      Total: 1
2019-06-10 22:28:11 -耗时 : 5
2019-06-10 22:28:11 -返回值 : com.bootdo.common.utils.PageUtils@79c51bb9
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-10 22:28:11 -参数 : []
2019-06-10 22:28:11 -耗时 : 1
2019-06-10 22:28:11 -返回值 : moneyLog/waterLog/waterLog
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:11 -参数 : [userType]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:11 -==> Parameters: userType(String)
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:11 -参数 : [waterType]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:11 -==> Parameters: waterType(String)
2019-06-10 22:28:11 -<==      Total: 4
2019-06-10 22:28:11 -耗时 : 4
2019-06-10 22:28:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:11 -<==      Total: 4
2019-06-10 22:28:11 -耗时 : 3
2019-06-10 22:28:11 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-10 22:28:11 -HTTP METHOD : GET
2019-06-10 22:28:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-10 22:28:11 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-10 22:28:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-10 22:28:11 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:11 -<==      Total: 0
2019-06-10 22:28:11 -==>  Preparing: select count(*) from water_log 
2019-06-10 22:28:11 -==> Parameters: 
2019-06-10 22:28:11 -<==      Total: 1
2019-06-10 22:28:11 -耗时 : 4
2019-06-10 22:28:11 -返回值 : com.bootdo.common.utils.PageUtils@6a07e158
2019-06-10 22:28:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-10 22:28:13 -HTTP METHOD : GET
2019-06-10 22:28:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-10 22:28:13 -参数 : []
2019-06-10 22:28:13 -耗时 : 1
2019-06-10 22:28:13 -返回值 : moneyLog/heatLog/heatLog
2019-06-10 22:28:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-10 22:28:13 -HTTP METHOD : GET
2019-06-10 22:28:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:13 -参数 : [userType]
2019-06-10 22:28:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:13 -==> Parameters: userType(String)
2019-06-10 22:28:13 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-10 22:28:13 -HTTP METHOD : GET
2019-06-10 22:28:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-10 22:28:13 -参数 : [heatType]
2019-06-10 22:28:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-10 22:28:13 -<==      Total: 4
2019-06-10 22:28:13 -耗时 : 3
2019-06-10 22:28:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:13 -==> Parameters: heatType(String)
2019-06-10 22:28:13 -<==      Total: 4
2019-06-10 22:28:13 -耗时 : 4
2019-06-10 22:28:13 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-10 22:28:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-10 22:28:13 -HTTP METHOD : GET
2019-06-10 22:28:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-10 22:28:13 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-10 22:28:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-10 22:28:13 -==> Parameters: 0(Integer), 10(Integer)
2019-06-10 22:28:13 -<==      Total: 0
2019-06-10 22:28:13 -==>  Preparing: select count(*) from heat_log 
2019-06-10 22:28:13 -==> Parameters: 
2019-06-10 22:28:13 -<==      Total: 1
2019-06-10 22:28:13 -耗时 : 4
2019-06-10 22:28:13 -返回值 : com.bootdo.common.utils.PageUtils@14332710
2019-06-10 22:30:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 419]

2019-04-23 08:08:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 13636 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 08:08:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 08:08:36 -The following profiles are active: dev
2019-04-23 08:08:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 08:08:36 CST 2019]; root of context hierarchy
2019-04-23 08:08:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 08:08:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 08:08:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 08:08:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 08:08:48 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 08:08:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 08:08:49 -Starting service [Tomcat]
2019-04-23 08:08:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 08:08:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 08:08:49 -Initializing Spring embedded WebApplicationContext
2019-04-23 08:08:49 -Root WebApplicationContext: initialization completed in 12626 ms
2019-04-23 08:08:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 08:08:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 08:08:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 08:08:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 08:08:50 -Filter xssFilter was not registered (disabled)
2019-04-23 08:08:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 08:08:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 08:08:50 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 08:08:50 -Servlet dispatcherServlet mapped to [/]
2019-04-23 08:08:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 08:08:36 CST 2019]; root of context hierarchy
2019-04-23 08:08:56 -Using default implementation for ThreadExecutor
2019-04-23 08:08:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 08:08:56 -Quartz Scheduler v.2.2.1 created.
2019-04-23 08:08:56 -RAMJobStore initialized.
2019-04-23 08:08:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 08:08:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 08:08:56 -Quartz scheduler version: 2.2.1
2019-04-23 08:08:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b377a53
2019-04-23 08:08:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 08:08:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 08:09:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 08:09:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 08:09:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 08:09:00 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 08:09:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 08:09:00 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 08:09:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 08:09:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 08:09:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 08:09:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 08:09:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 08:09:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 08:09:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 08:09:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 08:09:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 08:09:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 08:09:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 08:09:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 08:09:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 08:09:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 08:09:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 08:09:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 08:09:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 08:09:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 08:09:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 08:09:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 08:09:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 08:09:00 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 08:09:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 08:09:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 08:09:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 08:09:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 08:09:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 08:09:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 08:09:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 08:09:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 08:09:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 08:09:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 08:09:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 08:09:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 08:09:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 08:09:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 08:09:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 08:09:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 08:09:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 08:09:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 08:09:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 08:09:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 08:09:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 08:09:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 08:09:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 08:09:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 08:09:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 08:09:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 08:09:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 08:09:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 08:09:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 08:09:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 08:09:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 08:09:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 08:09:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 08:09:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 08:09:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 08:09:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 08:09:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 08:09:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 08:09:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 08:09:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 08:09:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 08:09:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 08:09:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 08:09:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 08:09:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 08:09:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 08:09:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 08:09:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 08:09:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 08:09:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 08:09:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 08:09:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 08:09:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 08:09:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 08:09:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 08:09:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 08:09:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 08:09:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 08:09:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 08:09:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 08:09:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 08:09:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 08:09:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 08:09:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 08:09:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 08:09:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 08:09:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 08:08:36 CST 2019]; root of context hierarchy
2019-04-23 08:09:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 08:09:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 08:09:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 08:09:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 08:09:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 08:09:05 -Registering beans for JMX exposure on startup
2019-04-23 08:09:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 08:09:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 08:09:06 -Starting beans in phase 2147483647
2019-04-23 08:09:06 -Context refreshed
2019-04-23 08:09:06 -Found 1 custom documentation plugin(s)
2019-04-23 08:09:06 -Scanning for api listing references
2019-04-23 08:09:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 08:09:06 -Generating unique operation named: removeUsingPOST_1
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_2
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_3
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_2
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_2
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_2
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_4
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_5
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_2
2019-04-23 08:09:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_3
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_3
2019-04-23 08:09:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_3
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_6
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_7
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_4
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_4
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_4
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_8
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_9
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 08:09:07 -Generating unique operation named: ElecUsingGET_1
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_5
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_5
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_5
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_10
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_11
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_6
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_6
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_6
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_7
2019-04-23 08:09:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_7
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_12
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_13
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 08:09:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_7
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_8
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_8
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_14
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_15
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_8
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 08:09:07 -Generating unique operation named: addUsingGET_8
2019-04-23 08:09:07 -Generating unique operation named: editUsingGET_9
2019-04-23 08:09:07 -Generating unique operation named: listUsingGET_9
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_16
2019-04-23 08:09:07 -Generating unique operation named: removeUsingPOST_17
2019-04-23 08:09:07 -Generating unique operation named: saveUsingPOST_8
2019-04-23 08:09:07 -Generating unique operation named: updateUsingGET_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPOST_9
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPUT_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 08:09:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_9
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_10
2019-04-23 08:09:08 -Generating unique operation named: infoUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingPOST_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingPUT_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 08:09:08 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_10
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_18
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_19
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_10
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_11
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_20
2019-04-23 08:09:08 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_10
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_11
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_12
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_21
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_10
2019-04-23 08:09:08 -Generating unique operation named: treeUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: treeUsingGET_2
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_11
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_11
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_12
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_13
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_22
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_23
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_11
2019-04-23 08:09:08 -Generating unique operation named: updateUsingGET_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_12
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPUT_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 08:09:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_12
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_13
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_14
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_24
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_25
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_12
2019-04-23 08:09:08 -Generating unique operation named: updateUsingGET_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_13
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPUT_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 08:09:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_13
2019-04-23 08:09:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_14
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_15
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_13
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_14
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_14
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_16
2019-04-23 08:09:08 -Generating unique operation named: listUsingHEAD_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingPOST_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingPUT_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingPATCH_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingDELETE_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 08:09:08 -Generating unique operation named: listUsingTRACE_1
2019-04-23 08:09:08 -Generating unique operation named: countDDUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 08:09:08 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 08:09:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 08:09:08 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_14
2019-04-23 08:09:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_15
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_17
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_26
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_15
2019-04-23 08:09:08 -Generating unique operation named: treeUsingGET_3
2019-04-23 08:09:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_15
2019-04-23 08:09:08 -Generating unique operation named: addUsingGET_15
2019-04-23 08:09:08 -Generating unique operation named: editUsingGET_16
2019-04-23 08:09:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 08:09:08 -Generating unique operation named: listUsingGET_18
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_27
2019-04-23 08:09:08 -Generating unique operation named: removeUsingPOST_28
2019-04-23 08:09:08 -Generating unique operation named: saveUsingPOST_16
2019-04-23 08:09:08 -Generating unique operation named: updateUsingGET_10
2019-04-23 08:09:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 08:09:08 -Generating unique operation named: updateUsingPOST_16
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPUT_10
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 08:09:09 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 08:09:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 08:09:09 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 08:09:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 08:09:09 -Generating unique operation named: addUsingGET_16
2019-04-23 08:09:09 -Generating unique operation named: editUsingGET_17
2019-04-23 08:09:09 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 08:09:09 -Generating unique operation named: listUsingGET_19
2019-04-23 08:09:09 -Generating unique operation named: removeUsingPOST_29
2019-04-23 08:09:09 -Generating unique operation named: removeUsingPOST_30
2019-04-23 08:09:09 -Generating unique operation named: saveUsingPOST_17
2019-04-23 08:09:09 -Generating unique operation named: updateUsingGET_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPOST_17
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPUT_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 08:09:09 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 08:09:09 -Generating unique operation named: addUsingGET_17
2019-04-23 08:09:09 -Generating unique operation named: editUsingGET_18
2019-04-23 08:09:09 -Generating unique operation named: listUsingGET_20
2019-04-23 08:09:09 -Generating unique operation named: removeUsingPOST_31
2019-04-23 08:09:09 -Generating unique operation named: removeUsingPOST_32
2019-04-23 08:09:09 -Generating unique operation named: saveUsingPOST_18
2019-04-23 08:09:09 -Generating unique operation named: updateUsingGET_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPOST_18
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPUT_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 08:09:09 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 08:09:09 -Starting Quartz Scheduler now
2019-04-23 08:09:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 08:09:09 -Starting...
2019-04-23 08:09:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 08:09:09 -Started.
2019-04-23 08:09:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 08:09:09 -Using a shared selector for servlet write/read
2019-04-23 08:09:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 08:09:09 -Started BootdoApplication in 34.052 seconds (JVM running for 34.955)
2019-04-23 08:09:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 08:09:10 -==> Parameters: 
2019-04-23 08:09:10 -<==      Total: 1
2019-04-23 08:10:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-23 08:23:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 08:23:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 08:23:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2019-04-23 08:23:26 -Enabling session validation scheduler...
2019-04-23 08:23:27 -请求地址 : http://localhost:8081/login;JSESSIONID=662d6e86-5a17-471c-b860-d60c5ad7b939
2019-04-23 08:23:27 -HTTP METHOD : GET
2019-04-23 08:23:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 08:23:27 -参数 : [{}]
2019-04-23 08:23:27 -耗时 : 5
2019-04-23 08:23:27 -返回值 : login
2019-04-23 08:23:31 -请求地址 : http://localhost:8081/getVerify
2019-04-23 08:23:31 -HTTP METHOD : GET
2019-04-23 08:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 08:23:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35aff461, org.apache.shiro.web.servlet.ShiroHttpServletResponse@c0847ef]
2019-04-23 08:23:37 -6939
2019-04-23 08:23:37 -耗时 : 6131
2019-04-23 08:23:37 -返回值 : null
2019-04-23 08:24:24 -请求地址 : http://localhost:8081/login
2019-04-23 08:24:24 -HTTP METHOD : POST
2019-04-23 08:24:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 08:24:24 -参数 : [admin, 111111, 6939, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43159541]
2019-04-23 08:24:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 08:24:24 -==> Parameters: admin(String)
2019-04-23 08:24:24 -<==      Total: 1
2019-04-23 08:24:24 -耗时 : 417
2019-04-23 08:24:24 -返回值 : {msg=操作成功, code=0}
2019-04-23 08:24:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 08:24:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 08:24:25 -==> Parameters: 1(Long), admin(String), 登录(String), 417(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 08:24:25.14(Timestamp)
2019-04-23 08:24:25 -<==    Updates: 1
2019-04-23 08:24:25 -请求地址 : http://localhost:8081/index
2019-04-23 08:24:25 -HTTP METHOD : GET
2019-04-23 08:24:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 08:24:25 -参数 : [{}]
2019-04-23 08:24:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 08:24:25 -==> Parameters: 1(Long)
2019-04-23 08:24:26 -<==      Total: 49
2019-04-23 08:24:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 08:24:26 -==> Parameters: 138(Long)
2019-04-23 08:24:26 -<==      Total: 1
2019-04-23 08:24:26 -耗时 : 824
2019-04-23 08:24:26 -返回值 : index_v1
2019-04-23 08:24:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 08:24:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 824(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 08:24:26.53(Timestamp)
2019-04-23 08:24:26 -<==    Updates: 1
2019-04-23 08:24:27 -请求地址 : http://localhost:8081/main
2019-04-23 08:24:27 -HTTP METHOD : GET
2019-04-23 08:24:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 08:24:27 -参数 : []
2019-04-23 08:24:27 -耗时 : 0
2019-04-23 08:24:27 -返回值 : main
2019-04-23 08:24:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 08:24:29 -HTTP METHOD : GET
2019-04-23 08:24:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 08:24:29 -参数 : []
2019-04-23 08:24:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 08:24:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 08:24:29 -<==      Total: 0
2019-04-23 08:24:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 08:24:29 -==> Parameters: 1(Long), 0(String)
2019-04-23 08:24:29 -<==      Total: 1
2019-04-23 08:24:29 -耗时 : 167
2019-04-23 08:24:29 -返回值 : com.bootdo.common.utils.PageUtils@47fa4aa9
2019-04-23 08:24:30 -请求地址 : http://localhost:8081/main
2019-04-23 08:24:30 -HTTP METHOD : GET
2019-04-23 08:24:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 08:24:30 -参数 : []
2019-04-23 08:24:30 -耗时 : 1
2019-04-23 08:24:30 -返回值 : main
2019-04-23 08:24:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 08:24:54 -==> Parameters: 1(Long)
2019-04-23 08:24:54 -<==      Total: 93
2019-04-23 08:24:54 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 08:24:54 -HTTP METHOD : GET
2019-04-23 08:24:54 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 08:24:54 -参数 : []
2019-04-23 08:24:54 -耗时 : 13
2019-04-23 08:24:54 -返回值 : charts/countDD
2019-04-23 08:24:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 08:24:56 -HTTP METHOD : GET
2019-04-23 08:24:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 08:24:56 -参数 : [userType]
2019-04-23 08:24:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 08:24:56 -==> Parameters: userType(String)
2019-04-23 08:24:56 -<==      Total: 4
2019-04-23 08:24:56 -耗时 : 91
2019-04-23 08:24:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 08:24:57 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-23 08:24:57 -HTTP METHOD : GET
2019-04-23 08:24:57 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-23 08:24:57 -参数 : []
2019-04-23 08:24:57 -耗时 : 14
2019-04-23 08:24:57 -返回值 : charts/tableDD
2019-04-23 08:24:58 -请求地址 : http://localhost:8081/charts/countMM
2019-04-23 08:24:58 -HTTP METHOD : GET
2019-04-23 08:24:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-23 08:24:58 -参数 : []
2019-04-23 08:24:58 -耗时 : 9
2019-04-23 08:24:58 -返回值 : charts/countMM
2019-04-23 08:24:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 08:24:58 -HTTP METHOD : GET
2019-04-23 08:24:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 08:24:58 -参数 : [userType]
2019-04-23 08:24:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 08:24:58 -==> Parameters: userType(String)
2019-04-23 08:24:58 -<==      Total: 4
2019-04-23 08:24:58 -耗时 : 6
2019-04-23 08:24:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 08:24:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-23 08:24:59 -HTTP METHOD : GET
2019-04-23 08:24:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-23 08:24:59 -参数 : []
2019-04-23 08:24:59 -耗时 : 10
2019-04-23 08:24:59 -返回值 : charts/tableElecMM
2019-04-23 08:25:01 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 08:25:01 -HTTP METHOD : GET
2019-04-23 08:25:01 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 08:25:01 -参数 : []
2019-04-23 08:25:01 -耗时 : 0
2019-04-23 08:25:01 -返回值 : charts/countYY
2019-04-23 08:25:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 08:25:01 -HTTP METHOD : GET
2019-04-23 08:25:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 08:25:01 -参数 : [userType]
2019-04-23 08:25:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 08:25:01 -==> Parameters: userType(String)
2019-04-23 08:25:01 -<==      Total: 4
2019-04-23 08:25:01 -耗时 : 6
2019-04-23 08:25:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 08:25:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-23 08:25:02 -HTTP METHOD : GET
2019-04-23 08:25:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-23 08:25:02 -参数 : []
2019-04-23 08:25:02 -耗时 : 13
2019-04-23 08:25:02 -返回值 : charts/tableElecYY
2019-04-23 08:25:09 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 08:25:09 -HTTP METHOD : GET
2019-04-23 08:25:09 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 08:25:09 -参数 : []
2019-04-23 08:25:09 -耗时 : 1
2019-04-23 08:25:09 -返回值 : charts/countOwe
2019-04-23 08:25:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 08:25:09 -HTTP METHOD : GET
2019-04-23 08:25:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 08:25:09 -参数 : [userType]
2019-04-23 08:25:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 08:25:09 -==> Parameters: userType(String)
2019-04-23 08:25:09 -<==      Total: 4
2019-04-23 08:25:09 -耗时 : 7
2019-04-23 08:25:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 08:25:12 -请求地址 : http://localhost:8081/charts/countRun
2019-04-23 08:25:12 -HTTP METHOD : GET
2019-04-23 08:25:12 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-23 08:25:12 -参数 : []
2019-04-23 08:25:12 -耗时 : 3
2019-04-23 08:25:12 -返回值 : charts/countRun
2019-04-23 08:25:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 08:25:13 -HTTP METHOD : GET
2019-04-23 08:25:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 08:25:13 -参数 : [userType]
2019-04-23 08:25:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 08:25:13 -==> Parameters: userType(String)
2019-04-23 08:25:13 -<==      Total: 4
2019-04-23 08:25:13 -耗时 : 7
2019-04-23 08:25:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 08:25:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 08:25:20 -HTTP METHOD : GET
2019-04-23 08:25:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 08:25:20 -参数 : []
2019-04-23 08:25:20 -耗时 : 0
2019-04-23 08:25:20 -返回值 : system/dept/deptTree
2019-04-23 08:25:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 08:25:21 -HTTP METHOD : GET
2019-04-23 08:25:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 08:25:21 -参数 : []
2019-04-23 08:25:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 08:25:21 -==> Parameters: 
2019-04-23 08:25:21 -<==      Total: 3
2019-04-23 08:25:21 -耗时 : 64
2019-04-23 08:25:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 08:25:26 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:26 -HTTP METHOD : POST
2019-04-23 08:25:26 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:26 -参数 : [com.bootdo.elec.vo.ElecVo@4ce44ba7, com.bootdo.water.vo.WaterVo@58bcbe64, com.bootdo.heat.vo.HeatVo@511da5ce, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@356d1fee]
2019-04-23 08:25:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:26 -==> Parameters: 
2019-04-23 08:25:26 -<==      Total: 1
2019-04-23 08:25:26 -耗时 : 154
2019-04-23 08:25:26 -返回值 : com.bootdo.charts.vo.CountOweVo@45778e43
2019-04-23 08:25:50 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:50 -HTTP METHOD : POST
2019-04-23 08:25:50 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:50 -参数 : [com.bootdo.elec.vo.ElecVo@7f2d6996, com.bootdo.water.vo.WaterVo@2ba42563, com.bootdo.heat.vo.HeatVo@1a9339ee, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@40389ed6]
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -耗时 : 16
2019-04-23 08:25:50 -返回值 : com.bootdo.charts.vo.CountOweVo@1f8ede4a
2019-04-23 08:25:50 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:50 -HTTP METHOD : POST
2019-04-23 08:25:50 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:50 -参数 : [com.bootdo.elec.vo.ElecVo@10112819, com.bootdo.water.vo.WaterVo@56148cfa, com.bootdo.heat.vo.HeatVo@8592840, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5cef1169]
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:50 -==> Parameters: 
2019-04-23 08:25:50 -<==      Total: 1
2019-04-23 08:25:50 -耗时 : 27
2019-04-23 08:25:50 -返回值 : com.bootdo.charts.vo.CountOweVo@c849d19
2019-04-23 08:25:52 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:52 -HTTP METHOD : POST
2019-04-23 08:25:52 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:52 -参数 : [com.bootdo.elec.vo.ElecVo@565632d2, com.bootdo.water.vo.WaterVo@62c0c424, com.bootdo.heat.vo.HeatVo@56004e21, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4f78d581]
2019-04-23 08:25:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:52 -==> Parameters: 
2019-04-23 08:25:52 -<==      Total: 1
2019-04-23 08:25:52 -耗时 : 16
2019-04-23 08:25:52 -返回值 : com.bootdo.charts.vo.CountOweVo@39f7f69a
2019-04-23 08:25:53 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:53 -HTTP METHOD : POST
2019-04-23 08:25:53 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:53 -参数 : [com.bootdo.elec.vo.ElecVo@79f73a07, com.bootdo.water.vo.WaterVo@3973eefe, com.bootdo.heat.vo.HeatVo@65d0bb80, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@47b288cc]
2019-04-23 08:25:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:53 -==> Parameters: 
2019-04-23 08:25:53 -<==      Total: 1
2019-04-23 08:25:53 -耗时 : 13
2019-04-23 08:25:53 -返回值 : com.bootdo.charts.vo.CountOweVo@3d9b570e
2019-04-23 08:25:54 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 08:25:54 -HTTP METHOD : POST
2019-04-23 08:25:54 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 08:25:54 -参数 : [com.bootdo.elec.vo.ElecVo@6f9bf8d1, com.bootdo.water.vo.WaterVo@4f45fe78, com.bootdo.heat.vo.HeatVo@7fdd6c8e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5bb8452d]
2019-04-23 08:25:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 08:25:54 -==> Parameters: 
2019-04-23 08:25:54 -<==      Total: 1
2019-04-23 08:25:54 -耗时 : 14
2019-04-23 08:25:54 -返回值 : com.bootdo.charts.vo.CountOweVo@3f5f3086
2019-04-23 08:30:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 08:30:20 -HTTP METHOD : GET
2019-04-23 08:30:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 08:30:20 -参数 : []
2019-04-23 08:30:20 -耗时 : 1
2019-04-23 08:30:20 -返回值 : system/dept/deptTree
2019-04-23 08:30:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 08:30:20 -HTTP METHOD : GET
2019-04-23 08:30:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 08:30:20 -参数 : []
2019-04-23 08:30:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 08:30:20 -==> Parameters: 
2019-04-23 08:30:20 -<==      Total: 3
2019-04-23 08:30:20 -耗时 : 4
2019-04-23 08:30:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 08:30:35 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 08:30:35 -HTTP METHOD : POST
2019-04-23 08:30:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 08:30:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5e227f21, com.bootdo.moneyLog.vo.WaterLogVo@680e668c, com.bootdo.moneyLog.vo.HeatLogVo@63355ad5]
2019-04-23 08:30:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:30:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:30:35 -<==      Total: 1
2019-04-23 08:30:35 -耗时 : 191
2019-04-23 08:30:35 -返回值 : com.bootdo.charts.vo.CountDayVo@2a2caaad
2019-04-23 08:31:05 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 08:31:05 -HTTP METHOD : POST
2019-04-23 08:31:05 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 08:31:05 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3c03da04, com.bootdo.moneyLog.vo.WaterLogVo@3b144493, com.bootdo.moneyLog.vo.HeatLogVo@c909b5c]
2019-04-23 08:31:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:31:05 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:31:05 -<==      Total: 1
2019-04-23 08:31:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 08:31:05 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 08:31:05 -<==      Total: 1
2019-04-23 08:31:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 08:31:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).(String), null, 2019-04-23 08:31:05.806(Timestamp)
2019-04-23 08:31:05 -Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
org.apache.ibatis.binding.BindingException: Mapper method 'com.bootdo.moneyLog.dao.ElecLogDao.getElecSumD attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:93)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.getElecSumD(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.getElecSumD(ElecLogServiceImpl.java:66)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:72)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$dbbdaefa.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 08:31:05 -<==    Updates: 1
2019-04-23 08:40:01 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 225]
2019-04-23 09:06:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 11712 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 09:06:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 09:06:31 -The following profiles are active: dev
2019-04-23 09:06:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 09:06:31 CST 2019]; root of context hierarchy
2019-04-23 09:06:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 09:06:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 09:06:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 09:06:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 09:06:39 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 09:06:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 09:06:40 -Starting service [Tomcat]
2019-04-23 09:06:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 09:06:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 09:06:40 -Initializing Spring embedded WebApplicationContext
2019-04-23 09:06:40 -Root WebApplicationContext: initialization completed in 8558 ms
2019-04-23 09:06:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 09:06:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 09:06:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 09:06:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 09:06:41 -Filter xssFilter was not registered (disabled)
2019-04-23 09:06:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 09:06:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 09:06:41 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 09:06:41 -Servlet dispatcherServlet mapped to [/]
2019-04-23 09:06:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 09:06:31 CST 2019]; root of context hierarchy
2019-04-23 09:06:45 -Using default implementation for ThreadExecutor
2019-04-23 09:06:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 09:06:45 -Quartz Scheduler v.2.2.1 created.
2019-04-23 09:06:45 -RAMJobStore initialized.
2019-04-23 09:06:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 09:06:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 09:06:45 -Quartz scheduler version: 2.2.1
2019-04-23 09:06:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c212536
2019-04-23 09:06:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 09:06:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 09:06:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 09:06:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 09:06:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 09:06:48 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 09:06:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 09:06:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 09:06:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 09:06:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 09:06:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 09:06:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 09:06:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 09:06:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 09:06:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 09:06:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 09:06:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 09:06:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 09:06:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 09:06:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 09:06:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 09:06:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 09:06:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 09:06:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 09:06:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 09:06:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 09:06:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 09:06:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 09:06:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 09:06:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 09:06:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 09:06:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 09:06:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 09:06:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 09:06:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 09:06:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 09:06:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 09:06:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 09:06:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 09:06:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 09:06:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 09:06:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 09:06:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 09:06:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 09:06:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 09:06:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 09:06:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 09:06:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 09:06:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 09:06:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 09:06:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 09:06:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 09:06:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 09:06:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 09:06:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 09:06:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 09:06:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 09:06:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 09:06:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 09:06:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 09:06:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 09:06:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 09:06:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 09:06:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 09:06:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 09:06:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 09:06:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 09:06:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 09:06:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 09:06:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 09:06:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 09:06:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 09:06:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 09:06:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 09:06:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 09:06:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 09:06:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 09:06:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 09:06:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 09:06:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 09:06:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 09:06:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 09:06:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 09:06:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 09:06:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 09:06:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 09:06:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 09:06:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 09:06:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 09:06:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 09:06:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 09:06:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 09:06:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 09:06:31 CST 2019]; root of context hierarchy
2019-04-23 09:06:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 09:06:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 09:06:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 09:06:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 09:06:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 09:06:51 -Registering beans for JMX exposure on startup
2019-04-23 09:06:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 09:06:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 09:06:51 -Starting beans in phase 2147483647
2019-04-23 09:06:51 -Context refreshed
2019-04-23 09:06:52 -Found 1 custom documentation plugin(s)
2019-04-23 09:06:53 -Scanning for api listing references
2019-04-23 09:06:56 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_1
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_2
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_3
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 09:06:56 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_2
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_2
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_2
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_4
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_5
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_2
2019-04-23 09:06:56 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_3
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_3
2019-04-23 09:06:56 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_3
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_6
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_7
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 09:06:56 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_4
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_4
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_4
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_8
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_9
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 09:06:56 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 09:06:56 -Generating unique operation named: ElecUsingGET_1
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_5
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_5
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_5
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_10
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_11
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 09:06:56 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_6
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_6
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_6
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_6
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_7
2019-04-23 09:06:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_7
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_12
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_13
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_6
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_7
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 09:06:56 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 09:06:56 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 09:06:56 -Generating unique operation named: addUsingGET_7
2019-04-23 09:06:56 -Generating unique operation named: editUsingGET_8
2019-04-23 09:06:56 -Generating unique operation named: listUsingGET_8
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_14
2019-04-23 09:06:56 -Generating unique operation named: removeUsingPOST_15
2019-04-23 09:06:56 -Generating unique operation named: saveUsingPOST_7
2019-04-23 09:06:56 -Generating unique operation named: updateUsingGET_6
2019-04-23 09:06:56 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPOST_8
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPUT_6
2019-04-23 09:06:56 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_8
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_9
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_9
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_16
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_17
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingGET_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPUT_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_9
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_10
2019-04-23 09:06:57 -Generating unique operation named: infoUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingPOST_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingPUT_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 09:06:57 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_10
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_18
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_19
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_10
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_11
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_20
2019-04-23 09:06:57 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_10
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_11
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_12
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_21
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_10
2019-04-23 09:06:57 -Generating unique operation named: treeUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: treeUsingGET_2
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_11
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_11
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_12
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_13
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_22
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_23
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingGET_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_12
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPUT_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_12
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_13
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_14
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_24
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_25
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_12
2019-04-23 09:06:57 -Generating unique operation named: updateUsingGET_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_13
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPUT_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_13
2019-04-23 09:06:57 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_14
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_15
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_13
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_14
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_14
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_16
2019-04-23 09:06:57 -Generating unique operation named: listUsingHEAD_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingPOST_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingPUT_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingPATCH_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingDELETE_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingTRACE_1
2019-04-23 09:06:57 -Generating unique operation named: countDDUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 09:06:57 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 09:06:57 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 09:06:57 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_14
2019-04-23 09:06:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_15
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_17
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_26
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_15
2019-04-23 09:06:57 -Generating unique operation named: treeUsingGET_3
2019-04-23 09:06:57 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_15
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_15
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_16
2019-04-23 09:06:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_18
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_27
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_28
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_16
2019-04-23 09:06:57 -Generating unique operation named: updateUsingGET_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_16
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPUT_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 09:06:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_16
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_17
2019-04-23 09:06:57 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_19
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_29
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_30
2019-04-23 09:06:57 -Generating unique operation named: saveUsingPOST_17
2019-04-23 09:06:57 -Generating unique operation named: updateUsingGET_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPOST_17
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPUT_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 09:06:57 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 09:06:57 -Generating unique operation named: addUsingGET_17
2019-04-23 09:06:57 -Generating unique operation named: editUsingGET_18
2019-04-23 09:06:57 -Generating unique operation named: listUsingGET_20
2019-04-23 09:06:57 -Generating unique operation named: removeUsingPOST_31
2019-04-23 09:06:58 -Generating unique operation named: removeUsingPOST_32
2019-04-23 09:06:58 -Generating unique operation named: saveUsingPOST_18
2019-04-23 09:06:58 -Generating unique operation named: updateUsingGET_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingPOST_18
2019-04-23 09:06:58 -Generating unique operation named: updateUsingPUT_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 09:06:58 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 09:06:58 -Starting Quartz Scheduler now
2019-04-23 09:06:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 09:06:58 -Starting...
2019-04-23 09:06:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 09:06:58 -Started.
2019-04-23 09:06:58 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 09:06:58 -Using a shared selector for servlet write/read
2019-04-23 09:06:58 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 09:06:58 -Started BootdoApplication in 27.577 seconds (JVM running for 28.412)
2019-04-23 09:06:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 09:06:58 -==> Parameters: 
2019-04-23 09:06:58 -<==      Total: 1
2019-04-23 09:07:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 09:07:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 09:07:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-23 09:07:08 -Enabling session validation scheduler...
2019-04-23 09:07:08 -请求地址 : http://localhost:8081/login;JSESSIONID=b7030d28-e7bf-407d-8a94-cde91fc06c4d
2019-04-23 09:07:08 -HTTP METHOD : GET
2019-04-23 09:07:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 09:07:08 -参数 : [{}]
2019-04-23 09:07:08 -耗时 : 6
2019-04-23 09:07:08 -返回值 : login
2019-04-23 09:07:10 -请求地址 : http://localhost:8081/getVerify
2019-04-23 09:07:10 -HTTP METHOD : GET
2019-04-23 09:07:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 09:07:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@61fd86fe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@288fbc11]
2019-04-23 09:07:16 -6720
2019-04-23 09:07:16 -耗时 : 5935
2019-04-23 09:07:16 -返回值 : null
2019-04-23 09:07:16 -请求地址 : http://localhost:8081/login
2019-04-23 09:07:16 -HTTP METHOD : GET
2019-04-23 09:07:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 09:07:16 -参数 : [{}]
2019-04-23 09:07:16 -耗时 : 2
2019-04-23 09:07:16 -返回值 : login
2019-04-23 09:07:27 -请求地址 : http://localhost:8081/login
2019-04-23 09:07:27 -HTTP METHOD : POST
2019-04-23 09:07:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 09:07:27 -参数 : [admin, 111111, 6720, org.apache.shiro.web.servlet.ShiroHttpServletRequest@51d0dd73]
2019-04-23 09:07:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 09:07:27 -==> Parameters: admin(String)
2019-04-23 09:07:27 -<==      Total: 1
2019-04-23 09:07:27 -耗时 : 279
2019-04-23 09:07:27 -返回值 : {msg=操作成功, code=0}
2019-04-23 09:07:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 09:07:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:07:27 -==> Parameters: 1(Long), admin(String), 登录(String), 279(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 09:07:27.472(Timestamp)
2019-04-23 09:07:27 -请求地址 : http://localhost:8081/index
2019-04-23 09:07:27 -HTTP METHOD : GET
2019-04-23 09:07:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:07:27 -参数 : [{}]
2019-04-23 09:07:28 -<==    Updates: 1
2019-04-23 09:07:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:07:28 -==> Parameters: 1(Long)
2019-04-23 09:07:28 -<==      Total: 49
2019-04-23 09:07:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:07:28 -==> Parameters: 138(Long)
2019-04-23 09:07:28 -<==      Total: 1
2019-04-23 09:07:28 -耗时 : 883
2019-04-23 09:07:28 -返回值 : index_v1
2019-04-23 09:07:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:07:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 883(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:07:28.604(Timestamp)
2019-04-23 09:07:28 -请求地址 : http://localhost:8081/main
2019-04-23 09:07:28 -HTTP METHOD : GET
2019-04-23 09:07:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:07:28 -参数 : []
2019-04-23 09:07:28 -耗时 : 0
2019-04-23 09:07:28 -返回值 : main
2019-04-23 09:07:28 -<==    Updates: 1
2019-04-23 09:07:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:07:29 -HTTP METHOD : GET
2019-04-23 09:07:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:07:29 -参数 : []
2019-04-23 09:07:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:07:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:07:29 -<==      Total: 0
2019-04-23 09:07:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:07:29 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:07:29 -<==      Total: 1
2019-04-23 09:07:29 -耗时 : 162
2019-04-23 09:07:29 -返回值 : com.bootdo.common.utils.PageUtils@691be07c
2019-04-23 09:07:29 -请求地址 : http://localhost:8081/main
2019-04-23 09:07:29 -HTTP METHOD : GET
2019-04-23 09:07:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:07:29 -参数 : []
2019-04-23 09:07:29 -耗时 : 1
2019-04-23 09:07:29 -返回值 : main
2019-04-23 09:07:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 09:07:34 -==> Parameters: 1(Long)
2019-04-23 09:07:34 -<==      Total: 93
2019-04-23 09:07:34 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 09:07:34 -HTTP METHOD : GET
2019-04-23 09:07:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 09:07:34 -参数 : []
2019-04-23 09:07:34 -耗时 : 15
2019-04-23 09:07:34 -返回值 : charts/countDD
2019-04-23 09:07:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:07:35 -HTTP METHOD : GET
2019-04-23 09:07:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:07:35 -参数 : [userType]
2019-04-23 09:07:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:07:35 -==> Parameters: userType(String)
2019-04-23 09:07:35 -<==      Total: 4
2019-04-23 09:07:35 -耗时 : 62
2019-04-23 09:07:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:07:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:07:40 -HTTP METHOD : GET
2019-04-23 09:07:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:07:40 -参数 : []
2019-04-23 09:07:40 -耗时 : 3
2019-04-23 09:07:40 -返回值 : system/dept/deptTree
2019-04-23 09:07:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:07:40 -HTTP METHOD : GET
2019-04-23 09:07:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:07:40 -参数 : []
2019-04-23 09:07:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:07:40 -==> Parameters: 
2019-04-23 09:07:40 -<==      Total: 3
2019-04-23 09:07:40 -耗时 : 29
2019-04-23 09:07:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:07:47 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:07:47 -HTTP METHOD : POST
2019-04-23 09:07:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:07:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@e740575, com.bootdo.moneyLog.vo.WaterLogVo@1312fe12, com.bootdo.moneyLog.vo.HeatLogVo@d81fc8c]
2019-04-23 09:07:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:47 -<==      Total: 1
2019-04-23 09:07:47 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:47 -<==      Total: 1
2019-04-23 09:07:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:48 -<==      Total: 1
2019-04-23 09:07:48 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:48 -<==      Total: 1
2019-04-23 09:07:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:48 -<==      Total: 1
2019-04-23 09:07:48 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:48 -<==      Total: 1
2019-04-23 09:07:48 -耗时 : 243
2019-04-23 09:07:48 -返回值 : com.bootdo.charts.vo.CountDayVo@620138fb
2019-04-23 09:07:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-23 09:07:58 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:07:58 -HTTP METHOD : POST
2019-04-23 09:07:58 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:07:58 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4cc562d0, com.bootdo.moneyLog.vo.WaterLogVo@6c083a8c, com.bootdo.moneyLog.vo.HeatLogVo@1f658d62]
2019-04-23 09:07:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:07:58 -==> Parameters: 2019-11-19 00:00:00(String), 2019-11-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:07:58 -<==      Total: 1
2019-04-23 09:07:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:07:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), java.lang.NullPointerException(String), null, 2019-04-23 09:07:58.278(Timestamp)
2019-04-23 09:07:58 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.vo.CountDayVo.calTotal(CountDayVo.java:38)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:99)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$5375f180.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 09:07:58 -<==    Updates: 1
2019-04-23 09:31:26 -请求地址 : http://localhost:8081/index
2019-04-23 09:31:26 -HTTP METHOD : GET
2019-04-23 09:31:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:31:26 -参数 : [{}]
2019-04-23 09:31:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:31:26 -==> Parameters: 1(Long)
2019-04-23 09:31:26 -<==      Total: 49
2019-04-23 09:31:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:31:26 -==> Parameters: 138(Long)
2019-04-23 09:31:26 -<==      Total: 1
2019-04-23 09:31:26 -耗时 : 56
2019-04-23 09:31:26 -返回值 : index_v1
2019-04-23 09:31:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:31:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 56(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:31:26.361(Timestamp)
2019-04-23 09:31:26 -请求地址 : http://localhost:8081/main
2019-04-23 09:31:26 -HTTP METHOD : GET
2019-04-23 09:31:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:31:26 -参数 : []
2019-04-23 09:31:26 -耗时 : 0
2019-04-23 09:31:26 -返回值 : main
2019-04-23 09:31:26 -<==    Updates: 1
2019-04-23 09:31:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:31:27 -HTTP METHOD : GET
2019-04-23 09:31:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:31:27 -参数 : []
2019-04-23 09:31:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:31:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:31:27 -<==      Total: 0
2019-04-23 09:31:27 -请求地址 : http://localhost:8081/main
2019-04-23 09:31:27 -HTTP METHOD : GET
2019-04-23 09:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:31:27 -参数 : []
2019-04-23 09:31:27 -耗时 : 1
2019-04-23 09:31:27 -返回值 : main
2019-04-23 09:31:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:31:27 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:31:27 -<==      Total: 1
2019-04-23 09:31:27 -耗时 : 76
2019-04-23 09:31:27 -返回值 : com.bootdo.common.utils.PageUtils@50e44a18
2019-04-23 09:32:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 09:32:16 -==> Parameters: 1(Long)
2019-04-23 09:32:16 -<==      Total: 93
2019-04-23 09:32:16 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-23 09:32:16 -HTTP METHOD : GET
2019-04-23 09:32:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-23 09:32:16 -参数 : []
2019-04-23 09:32:16 -耗时 : 10
2019-04-23 09:32:16 -返回值 : charts/tableDD
2019-04-23 09:32:17 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 09:32:17 -HTTP METHOD : GET
2019-04-23 09:32:17 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 09:32:17 -参数 : []
2019-04-23 09:32:17 -耗时 : 0
2019-04-23 09:32:17 -返回值 : charts/countDD
2019-04-23 09:32:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:32:17 -HTTP METHOD : GET
2019-04-23 09:32:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:32:17 -参数 : [userType]
2019-04-23 09:32:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:32:17 -==> Parameters: userType(String)
2019-04-23 09:32:17 -<==      Total: 4
2019-04-23 09:32:17 -耗时 : 5
2019-04-23 09:32:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:32:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:32:22 -HTTP METHOD : GET
2019-04-23 09:32:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:32:22 -参数 : []
2019-04-23 09:32:22 -耗时 : 3
2019-04-23 09:32:22 -返回值 : system/dept/deptTree
2019-04-23 09:32:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:32:22 -HTTP METHOD : GET
2019-04-23 09:32:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:32:22 -参数 : []
2019-04-23 09:32:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:32:22 -==> Parameters: 
2019-04-23 09:32:22 -<==      Total: 3
2019-04-23 09:32:22 -耗时 : 4
2019-04-23 09:32:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:32:25 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:32:25 -HTTP METHOD : POST
2019-04-23 09:32:25 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:32:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@59d3d434, com.bootdo.moneyLog.vo.WaterLogVo@84ac762, com.bootdo.moneyLog.vo.HeatLogVo@45f556ff]
2019-04-23 09:32:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:25 -<==      Total: 1
2019-04-23 09:32:25 -耗时 : 18
2019-04-23 09:32:25 -返回值 : com.bootdo.charts.vo.CountDayVo@3a1a3a97
2019-04-23 09:32:36 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:32:36 -HTTP METHOD : POST
2019-04-23 09:32:36 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:32:36 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@46e6a2bd, com.bootdo.moneyLog.vo.WaterLogVo@d2c2a95, com.bootdo.moneyLog.vo.HeatLogVo@400dfee1]
2019-04-23 09:32:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:32:36 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:32:36 -<==      Total: 1
2019-04-23 09:32:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:32:36 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.vo.CountDayVo.calTotal(CountDayVo.java:38)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:99)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$5375f180.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 09:32:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), java.lang.NullPointerException(String), null, 2019-04-23 09:32:36.59(Timestamp)
2019-04-23 09:32:36 -<==    Updates: 1
2019-04-23 09:37:22 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:37:22 -HTTP METHOD : POST
2019-04-23 09:37:22 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:37:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@43a73d0b, com.bootdo.moneyLog.vo.WaterLogVo@18544642, com.bootdo.moneyLog.vo.HeatLogVo@19c1bda7]
2019-04-23 09:37:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:37:22 -==> Parameters: 2019-12-19 00:00:00(String), 2019-12-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:37:22 -<==      Total: 1
2019-04-23 09:37:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:37:22 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.vo.CountDayVo.calTotal(CountDayVo.java:38)
	at com.bootdo.charts.controller.countDDController.getCountD(countDDController.java:99)
	at com.bootdo.charts.controller.countDDController$$FastClassBySpringCGLIB$$b1700e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countDDController$$EnhancerBySpringCGLIB$$5375f180.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 09:37:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countDD/getCountDD(String), java.lang.NullPointerException(String), null, 2019-04-23 09:37:22.424(Timestamp)
2019-04-23 09:37:22 -<==    Updates: 1
2019-04-23 09:37:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 437]
2019-04-23 09:39:27 -请求地址 : http://localhost:8081/index
2019-04-23 09:39:27 -HTTP METHOD : GET
2019-04-23 09:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:39:27 -参数 : [{}]
2019-04-23 09:39:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:39:27 -==> Parameters: 1(Long)
2019-04-23 09:39:27 -<==      Total: 49
2019-04-23 09:39:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:39:27 -==> Parameters: 138(Long)
2019-04-23 09:39:27 -<==      Total: 1
2019-04-23 09:39:27 -耗时 : 93
2019-04-23 09:39:27 -返回值 : index_v1
2019-04-23 09:39:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:39:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 93(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:39:27.514(Timestamp)
2019-04-23 09:39:27 -请求地址 : http://localhost:8081/main
2019-04-23 09:39:27 -HTTP METHOD : GET
2019-04-23 09:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:39:27 -参数 : []
2019-04-23 09:39:27 -耗时 : 1
2019-04-23 09:39:27 -返回值 : main
2019-04-23 09:39:27 -请求地址 : http://localhost:8081/main
2019-04-23 09:39:27 -HTTP METHOD : GET
2019-04-23 09:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:39:27 -参数 : []
2019-04-23 09:39:27 -耗时 : 1
2019-04-23 09:39:27 -返回值 : main
2019-04-23 09:39:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:39:27 -HTTP METHOD : GET
2019-04-23 09:39:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:39:27 -参数 : []
2019-04-23 09:39:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:39:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:39:28 -<==    Updates: 1
2019-04-23 09:39:28 -<==      Total: 0
2019-04-23 09:39:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:39:28 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:39:28 -<==      Total: 1
2019-04-23 09:39:28 -耗时 : 785
2019-04-23 09:39:28 -返回值 : com.bootdo.common.utils.PageUtils@63d68372
2019-04-23 09:42:34 -请求地址 : http://localhost:8081/index
2019-04-23 09:42:34 -HTTP METHOD : GET
2019-04-23 09:42:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:42:34 -参数 : [{}]
2019-04-23 09:42:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:42:34 -==> Parameters: 1(Long)
2019-04-23 09:42:34 -<==      Total: 49
2019-04-23 09:42:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:42:34 -==> Parameters: 138(Long)
2019-04-23 09:42:34 -<==      Total: 1
2019-04-23 09:42:34 -耗时 : 112
2019-04-23 09:42:34 -返回值 : index_v1
2019-04-23 09:42:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:42:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 114(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:42:34.254(Timestamp)
2019-04-23 09:42:34 -请求地址 : http://localhost:8081/main
2019-04-23 09:42:34 -HTTP METHOD : GET
2019-04-23 09:42:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:42:34 -参数 : []
2019-04-23 09:42:34 -耗时 : 2
2019-04-23 09:42:34 -返回值 : main
2019-04-23 09:42:34 -<==    Updates: 1
2019-04-23 09:42:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:42:34 -HTTP METHOD : GET
2019-04-23 09:42:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:42:34 -参数 : []
2019-04-23 09:42:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:42:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:42:34 -<==      Total: 0
2019-04-23 09:42:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:42:34 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:42:34 -<==      Total: 1
2019-04-23 09:42:34 -耗时 : 10
2019-04-23 09:42:34 -返回值 : com.bootdo.common.utils.PageUtils@417e0a2e
2019-04-23 09:42:34 -请求地址 : http://localhost:8081/main
2019-04-23 09:42:34 -HTTP METHOD : GET
2019-04-23 09:42:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:42:34 -参数 : []
2019-04-23 09:42:34 -耗时 : 1
2019-04-23 09:42:34 -返回值 : main
2019-04-23 09:42:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 09:42:37 -==> Parameters: 1(Long)
2019-04-23 09:42:37 -<==      Total: 93
2019-04-23 09:42:37 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-23 09:42:37 -HTTP METHOD : GET
2019-04-23 09:42:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-23 09:42:37 -参数 : []
2019-04-23 09:42:37 -耗时 : 1
2019-04-23 09:42:37 -返回值 : /moneyList/moneyList
2019-04-23 09:42:43 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-23 09:42:43 -HTTP METHOD : GET
2019-04-23 09:42:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-23 09:42:43 -参数 : []
2019-04-23 09:42:43 -耗时 : 1
2019-04-23 09:42:43 -返回值 : charts/tableDD
2019-04-23 09:42:46 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 09:42:46 -HTTP METHOD : GET
2019-04-23 09:42:46 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 09:42:46 -参数 : []
2019-04-23 09:42:46 -耗时 : 1
2019-04-23 09:42:46 -返回值 : charts/countDD
2019-04-23 09:42:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:42:46 -HTTP METHOD : GET
2019-04-23 09:42:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:42:46 -参数 : [userType]
2019-04-23 09:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:42:46 -==> Parameters: userType(String)
2019-04-23 09:42:46 -<==      Total: 4
2019-04-23 09:42:46 -耗时 : 167
2019-04-23 09:42:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:42:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:42:57 -HTTP METHOD : GET
2019-04-23 09:42:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:42:57 -参数 : []
2019-04-23 09:42:57 -耗时 : 0
2019-04-23 09:42:57 -返回值 : system/dept/deptTree
2019-04-23 09:42:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:42:57 -HTTP METHOD : GET
2019-04-23 09:42:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:42:57 -参数 : []
2019-04-23 09:42:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:42:57 -==> Parameters: 
2019-04-23 09:42:57 -<==      Total: 3
2019-04-23 09:42:57 -耗时 : 75
2019-04-23 09:42:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:42:59 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:42:59 -HTTP METHOD : POST
2019-04-23 09:42:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:42:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@698c73e7, com.bootdo.moneyLog.vo.WaterLogVo@70ced27f, com.bootdo.moneyLog.vo.HeatLogVo@5ed20c15]
2019-04-23 09:42:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-23 09:42:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 09:42:59 -<==      Total: 1
2019-04-23 09:42:59 -耗时 : 148
2019-04-23 09:42:59 -返回值 : com.bootdo.charts.vo.CountDayVo@1752a8f7
2019-04-23 09:43:12 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 09:43:12 -HTTP METHOD : POST
2019-04-23 09:43:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 09:43:12 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6cdc97fd, com.bootdo.moneyLog.vo.WaterLogVo@6e154034, com.bootdo.moneyLog.vo.HeatLogVo@56d354e5]
2019-04-23 09:43:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-04-23 09:43:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-04-23 09:43:12 -<==      Total: 1
2019-04-23 09:43:12 -耗时 : 22
2019-04-23 09:43:12 -返回值 : com.bootdo.charts.vo.CountDayVo@6151231
2019-04-23 09:46:18 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 09:46:18 -HTTP METHOD : GET
2019-04-23 09:46:18 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 09:46:18 -参数 : []
2019-04-23 09:46:18 -耗时 : 0
2019-04-23 09:46:18 -返回值 : charts/countOwe
2019-04-23 09:46:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:46:18 -HTTP METHOD : GET
2019-04-23 09:46:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:46:18 -参数 : [userType]
2019-04-23 09:46:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:46:18 -==> Parameters: userType(String)
2019-04-23 09:46:18 -<==      Total: 4
2019-04-23 09:46:18 -耗时 : 7
2019-04-23 09:46:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:46:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:46:37 -HTTP METHOD : GET
2019-04-23 09:46:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:46:37 -参数 : []
2019-04-23 09:46:37 -耗时 : 1
2019-04-23 09:46:37 -返回值 : system/dept/deptTree
2019-04-23 09:46:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:46:37 -HTTP METHOD : GET
2019-04-23 09:46:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:46:37 -参数 : []
2019-04-23 09:46:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:46:37 -==> Parameters: 
2019-04-23 09:46:37 -<==      Total: 3
2019-04-23 09:46:37 -耗时 : 6
2019-04-23 09:46:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:50:52 -请求地址 : http://localhost:8081/index
2019-04-23 09:50:52 -HTTP METHOD : GET
2019-04-23 09:50:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:50:52 -参数 : [{}]
2019-04-23 09:50:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:50:52 -==> Parameters: 1(Long)
2019-04-23 09:50:52 -<==      Total: 49
2019-04-23 09:50:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:50:52 -==> Parameters: 138(Long)
2019-04-23 09:50:52 -<==      Total: 1
2019-04-23 09:50:52 -耗时 : 30
2019-04-23 09:50:52 -返回值 : index_v1
2019-04-23 09:50:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:50:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:50:52.339(Timestamp)
2019-04-23 09:50:52 -<==    Updates: 1
2019-04-23 09:50:52 -请求地址 : http://localhost:8081/main
2019-04-23 09:50:52 -HTTP METHOD : GET
2019-04-23 09:50:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:50:52 -参数 : []
2019-04-23 09:50:52 -耗时 : 0
2019-04-23 09:50:52 -返回值 : main
2019-04-23 09:50:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:50:53 -HTTP METHOD : GET
2019-04-23 09:50:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:50:53 -参数 : []
2019-04-23 09:50:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:50:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:50:53 -<==      Total: 0
2019-04-23 09:50:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:50:53 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:50:53 -<==      Total: 1
2019-04-23 09:50:53 -耗时 : 11
2019-04-23 09:50:53 -返回值 : com.bootdo.common.utils.PageUtils@33482009
2019-04-23 09:50:53 -请求地址 : http://localhost:8081/main
2019-04-23 09:50:53 -HTTP METHOD : GET
2019-04-23 09:50:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:50:53 -参数 : []
2019-04-23 09:50:53 -耗时 : 2
2019-04-23 09:50:53 -返回值 : main
2019-04-23 09:51:01 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 09:51:01 -HTTP METHOD : GET
2019-04-23 09:51:01 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 09:51:01 -参数 : []
2019-04-23 09:51:01 -耗时 : 1
2019-04-23 09:51:01 -返回值 : charts/countOwe
2019-04-23 09:51:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:51:01 -HTTP METHOD : GET
2019-04-23 09:51:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:51:01 -参数 : [userType]
2019-04-23 09:51:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:51:01 -==> Parameters: userType(String)
2019-04-23 09:51:01 -<==      Total: 4
2019-04-23 09:51:01 -耗时 : 5
2019-04-23 09:51:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:51:09 -请求地址 : http://localhost:8081/index
2019-04-23 09:51:09 -HTTP METHOD : GET
2019-04-23 09:51:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:51:09 -参数 : [{}]
2019-04-23 09:51:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:51:09 -==> Parameters: 1(Long)
2019-04-23 09:51:09 -<==      Total: 49
2019-04-23 09:51:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:51:09 -==> Parameters: 138(Long)
2019-04-23 09:51:09 -<==      Total: 1
2019-04-23 09:51:09 -耗时 : 23
2019-04-23 09:51:09 -返回值 : index_v1
2019-04-23 09:51:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:51:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:51:09.246(Timestamp)
2019-04-23 09:51:09 -请求地址 : http://localhost:8081/main
2019-04-23 09:51:09 -HTTP METHOD : GET
2019-04-23 09:51:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:51:09 -参数 : []
2019-04-23 09:51:09 -耗时 : 0
2019-04-23 09:51:09 -返回值 : main
2019-04-23 09:51:09 -<==    Updates: 1
2019-04-23 09:51:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:51:09 -HTTP METHOD : GET
2019-04-23 09:51:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:51:09 -参数 : []
2019-04-23 09:51:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:51:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:51:09 -<==      Total: 0
2019-04-23 09:51:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:51:09 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:51:09 -<==      Total: 1
2019-04-23 09:51:09 -耗时 : 11
2019-04-23 09:51:09 -返回值 : com.bootdo.common.utils.PageUtils@3284bd5b
2019-04-23 09:51:09 -请求地址 : http://localhost:8081/main
2019-04-23 09:51:09 -HTTP METHOD : GET
2019-04-23 09:51:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:51:09 -参数 : []
2019-04-23 09:51:09 -耗时 : 0
2019-04-23 09:51:09 -返回值 : main
2019-04-23 09:51:15 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 09:51:15 -HTTP METHOD : GET
2019-04-23 09:51:15 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 09:51:15 -参数 : []
2019-04-23 09:51:15 -耗时 : 0
2019-04-23 09:51:15 -返回值 : charts/countOwe
2019-04-23 09:51:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:51:15 -HTTP METHOD : GET
2019-04-23 09:51:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:51:15 -参数 : [userType]
2019-04-23 09:51:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:51:15 -==> Parameters: userType(String)
2019-04-23 09:51:15 -<==      Total: 4
2019-04-23 09:51:15 -耗时 : 4
2019-04-23 09:51:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:52:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:52:43 -HTTP METHOD : GET
2019-04-23 09:52:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:52:43 -参数 : []
2019-04-23 09:52:43 -耗时 : 1
2019-04-23 09:52:43 -返回值 : system/dept/deptTree
2019-04-23 09:52:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:52:44 -HTTP METHOD : GET
2019-04-23 09:52:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:52:44 -参数 : []
2019-04-23 09:52:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:52:44 -==> Parameters: 
2019-04-23 09:52:44 -<==      Total: 3
2019-04-23 09:52:44 -耗时 : 4
2019-04-23 09:52:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:52:46 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:52:46 -HTTP METHOD : POST
2019-04-23 09:52:46 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:52:46 -参数 : [com.bootdo.elec.vo.ElecVo@795554a3, com.bootdo.water.vo.WaterVo@5d0d96eb, com.bootdo.heat.vo.HeatVo@73d3cbe6, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5bf86b6f]
2019-04-23 09:52:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:52:46 -==> Parameters: 
2019-04-23 09:52:46 -<==      Total: 1
2019-04-23 09:52:46 -耗时 : 221
2019-04-23 09:52:46 -返回值 : com.bootdo.charts.vo.CountOweVo@67827f30
2019-04-23 09:53:10 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:10 -HTTP METHOD : POST
2019-04-23 09:53:10 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:10 -参数 : [com.bootdo.elec.vo.ElecVo@59ecff88, com.bootdo.water.vo.WaterVo@3249f41c, com.bootdo.heat.vo.HeatVo@3a333647, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@11e71604]
2019-04-23 09:53:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:10 -==> Parameters: 
2019-04-23 09:53:10 -<==      Total: 1
2019-04-23 09:53:10 -耗时 : 14
2019-04-23 09:53:10 -返回值 : com.bootdo.charts.vo.CountOweVo@dcfe8a5
2019-04-23 09:53:11 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:11 -HTTP METHOD : POST
2019-04-23 09:53:11 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:11 -参数 : [com.bootdo.elec.vo.ElecVo@14f664eb, com.bootdo.water.vo.WaterVo@7a28429c, com.bootdo.heat.vo.HeatVo@8f6f66e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1f8fec4e]
2019-04-23 09:53:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:11 -==> Parameters: 
2019-04-23 09:53:11 -<==      Total: 1
2019-04-23 09:53:11 -耗时 : 11
2019-04-23 09:53:11 -返回值 : com.bootdo.charts.vo.CountOweVo@469c8e52
2019-04-23 09:53:36 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:36 -HTTP METHOD : POST
2019-04-23 09:53:36 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:36 -参数 : [com.bootdo.elec.vo.ElecVo@6e68c89f, com.bootdo.water.vo.WaterVo@74198674, com.bootdo.heat.vo.HeatVo@42b0a37e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4174070b]
2019-04-23 09:53:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:36 -==> Parameters: 
2019-04-23 09:53:36 -<==      Total: 1
2019-04-23 09:53:36 -耗时 : 13
2019-04-23 09:53:36 -返回值 : com.bootdo.charts.vo.CountOweVo@3efa5e92
2019-04-23 09:53:37 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:37 -HTTP METHOD : POST
2019-04-23 09:53:37 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:37 -参数 : [com.bootdo.elec.vo.ElecVo@1be8bf57, com.bootdo.water.vo.WaterVo@4adda8c0, com.bootdo.heat.vo.HeatVo@757fe48f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4d5fcbc4]
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -耗时 : 13
2019-04-23 09:53:37 -返回值 : com.bootdo.charts.vo.CountOweVo@432ebf7
2019-04-23 09:53:37 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:37 -HTTP METHOD : POST
2019-04-23 09:53:37 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:37 -参数 : [com.bootdo.elec.vo.ElecVo@7d4c057c, com.bootdo.water.vo.WaterVo@73b4ed75, com.bootdo.heat.vo.HeatVo@69bd2f57, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@aa85ae9]
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:37 -==> Parameters: 
2019-04-23 09:53:37 -<==      Total: 1
2019-04-23 09:53:37 -耗时 : 15
2019-04-23 09:53:37 -返回值 : com.bootdo.charts.vo.CountOweVo@308b84fd
2019-04-23 09:53:38 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:38 -HTTP METHOD : POST
2019-04-23 09:53:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:38 -参数 : [com.bootdo.elec.vo.ElecVo@3682d31b, com.bootdo.water.vo.WaterVo@6beeb5c4, com.bootdo.heat.vo.HeatVo@732fc234, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5c6db5a2]
2019-04-23 09:53:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:38 -==> Parameters: 
2019-04-23 09:53:38 -<==      Total: 1
2019-04-23 09:53:38 -耗时 : 12
2019-04-23 09:53:38 -返回值 : com.bootdo.charts.vo.CountOweVo@800f16c
2019-04-23 09:53:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:53:39 -HTTP METHOD : POST
2019-04-23 09:53:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:53:39 -参数 : [com.bootdo.elec.vo.ElecVo@7b4094d6, com.bootdo.water.vo.WaterVo@710a0b0e, com.bootdo.heat.vo.HeatVo@18918e0d, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@7725538c]
2019-04-23 09:53:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:53:39 -==> Parameters: 
2019-04-23 09:53:39 -<==      Total: 1
2019-04-23 09:53:39 -耗时 : 15
2019-04-23 09:53:39 -返回值 : com.bootdo.charts.vo.CountOweVo@34f02e8b
2019-04-23 09:54:48 -请求地址 : http://localhost:8081/index
2019-04-23 09:54:48 -HTTP METHOD : GET
2019-04-23 09:54:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:54:48 -参数 : [{}]
2019-04-23 09:54:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:54:48 -==> Parameters: 1(Long)
2019-04-23 09:54:48 -<==      Total: 49
2019-04-23 09:54:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:54:48 -==> Parameters: 138(Long)
2019-04-23 09:54:48 -<==      Total: 1
2019-04-23 09:54:48 -耗时 : 23
2019-04-23 09:54:48 -返回值 : index_v1
2019-04-23 09:54:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:54:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:54:48.293(Timestamp)
2019-04-23 09:54:48 -请求地址 : http://localhost:8081/main
2019-04-23 09:54:48 -HTTP METHOD : GET
2019-04-23 09:54:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:54:48 -参数 : []
2019-04-23 09:54:48 -耗时 : 0
2019-04-23 09:54:48 -返回值 : main
2019-04-23 09:54:48 -<==    Updates: 1
2019-04-23 09:54:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:54:48 -HTTP METHOD : GET
2019-04-23 09:54:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:54:48 -参数 : []
2019-04-23 09:54:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:54:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:54:48 -<==      Total: 0
2019-04-23 09:54:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:54:48 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:54:48 -<==      Total: 1
2019-04-23 09:54:48 -耗时 : 21
2019-04-23 09:54:48 -返回值 : com.bootdo.common.utils.PageUtils@62fb3a64
2019-04-23 09:54:48 -请求地址 : http://localhost:8081/main
2019-04-23 09:54:48 -HTTP METHOD : GET
2019-04-23 09:54:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:54:48 -参数 : []
2019-04-23 09:54:48 -耗时 : 0
2019-04-23 09:54:48 -返回值 : main
2019-04-23 09:55:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 09:55:00 -==> Parameters: 1(Long)
2019-04-23 09:55:00 -<==      Total: 93
2019-04-23 09:55:00 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 09:55:00 -HTTP METHOD : GET
2019-04-23 09:55:00 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 09:55:00 -参数 : []
2019-04-23 09:55:00 -耗时 : 1
2019-04-23 09:55:00 -返回值 : charts/countOwe
2019-04-23 09:55:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:55:00 -HTTP METHOD : GET
2019-04-23 09:55:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:55:00 -参数 : [userType]
2019-04-23 09:55:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:55:00 -==> Parameters: userType(String)
2019-04-23 09:55:00 -<==      Total: 4
2019-04-23 09:55:00 -耗时 : 4
2019-04-23 09:55:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:55:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:55:25 -HTTP METHOD : GET
2019-04-23 09:55:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:55:25 -参数 : []
2019-04-23 09:55:25 -耗时 : 1
2019-04-23 09:55:25 -返回值 : system/dept/deptTree
2019-04-23 09:55:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:55:25 -HTTP METHOD : GET
2019-04-23 09:55:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:55:25 -参数 : []
2019-04-23 09:55:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:55:25 -==> Parameters: 
2019-04-23 09:55:25 -<==      Total: 3
2019-04-23 09:55:25 -耗时 : 8
2019-04-23 09:55:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:55:28 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:55:28 -HTTP METHOD : POST
2019-04-23 09:55:28 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:55:28 -参数 : [com.bootdo.elec.vo.ElecVo@553e774e, com.bootdo.water.vo.WaterVo@67d80ab6, com.bootdo.heat.vo.HeatVo@7dd5e4ba, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4646c97e]
2019-04-23 09:55:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:28 -==> Parameters: 
2019-04-23 09:55:28 -<==      Total: 1
2019-04-23 09:55:28 -耗时 : 11
2019-04-23 09:55:28 -返回值 : com.bootdo.charts.vo.CountOweVo@63a5e510
2019-04-23 09:55:36 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:55:36 -HTTP METHOD : POST
2019-04-23 09:55:36 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:55:36 -参数 : [com.bootdo.elec.vo.ElecVo@4a77b50f, com.bootdo.water.vo.WaterVo@321e8285, com.bootdo.heat.vo.HeatVo@1ab798ce, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@6a026ed9]
2019-04-23 09:55:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:36 -==> Parameters: 
2019-04-23 09:55:36 -<==      Total: 1
2019-04-23 09:55:36 -耗时 : 14
2019-04-23 09:55:36 -返回值 : com.bootdo.charts.vo.CountOweVo@508d9e8c
2019-04-23 09:55:37 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:55:37 -HTTP METHOD : POST
2019-04-23 09:55:37 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:55:37 -参数 : [com.bootdo.elec.vo.ElecVo@7dafa2d1, com.bootdo.water.vo.WaterVo@42ad0dab, com.bootdo.heat.vo.HeatVo@39a616a6, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@78a70242]
2019-04-23 09:55:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:37 -==> Parameters: 
2019-04-23 09:55:37 -<==      Total: 1
2019-04-23 09:55:37 -耗时 : 13
2019-04-23 09:55:37 -返回值 : com.bootdo.charts.vo.CountOweVo@4f402cce
2019-04-23 09:55:38 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:55:38 -HTTP METHOD : POST
2019-04-23 09:55:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:55:38 -参数 : [com.bootdo.elec.vo.ElecVo@7486336b, com.bootdo.water.vo.WaterVo@68e55a18, com.bootdo.heat.vo.HeatVo@5b20a8c4, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@6e97ea61]
2019-04-23 09:55:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:38 -==> Parameters: 
2019-04-23 09:55:38 -<==      Total: 1
2019-04-23 09:55:38 -耗时 : 12
2019-04-23 09:55:38 -返回值 : com.bootdo.charts.vo.CountOweVo@28ba3271
2019-04-23 09:55:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:55:39 -HTTP METHOD : POST
2019-04-23 09:55:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:55:39 -参数 : [com.bootdo.elec.vo.ElecVo@7298acc6, com.bootdo.water.vo.WaterVo@6932d707, com.bootdo.heat.vo.HeatVo@157a8741, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@2c1f588d]
2019-04-23 09:55:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:55:39 -==> Parameters: 
2019-04-23 09:55:39 -<==      Total: 1
2019-04-23 09:55:39 -耗时 : 13
2019-04-23 09:55:39 -返回值 : com.bootdo.charts.vo.CountOweVo@167ddfa0
2019-04-23 09:56:42 -请求地址 : http://localhost:8081/login;JSESSIONID=5fb16d15-1e55-4453-8677-4c25662e1fc9
2019-04-23 09:56:42 -HTTP METHOD : GET
2019-04-23 09:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 09:56:42 -参数 : [{}]
2019-04-23 09:56:42 -耗时 : 0
2019-04-23 09:56:42 -返回值 : login
2019-04-23 09:56:43 -请求地址 : http://localhost:8081/getVerify
2019-04-23 09:56:43 -HTTP METHOD : GET
2019-04-23 09:56:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 09:56:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f17d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ec221f1]
2019-04-23 09:56:43 -7548
2019-04-23 09:56:43 -耗时 : 34
2019-04-23 09:56:43 -返回值 : null
2019-04-23 09:56:43 -请求地址 : http://localhost:8081/login
2019-04-23 09:56:43 -HTTP METHOD : GET
2019-04-23 09:56:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 09:56:43 -参数 : [{}]
2019-04-23 09:56:43 -耗时 : 1
2019-04-23 09:56:43 -返回值 : login
2019-04-23 09:56:49 -请求地址 : http://localhost:8081/login
2019-04-23 09:56:49 -HTTP METHOD : POST
2019-04-23 09:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 09:56:49 -参数 : [admin, 111111, 7548, org.apache.shiro.web.servlet.ShiroHttpServletRequest@198e21c4]
2019-04-23 09:56:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 09:56:49 -==> Parameters: admin(String)
2019-04-23 09:56:49 -<==      Total: 1
2019-04-23 09:56:49 -耗时 : 85
2019-04-23 09:56:49 -返回值 : {msg=操作成功, code=0}
2019-04-23 09:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:56:49 -==> Parameters: 1(Long), admin(String), 登录(String), 85(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 09:56:49.46(Timestamp)
2019-04-23 09:56:49 -请求地址 : http://localhost:8081/index
2019-04-23 09:56:49 -HTTP METHOD : GET
2019-04-23 09:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 09:56:49 -参数 : [{}]
2019-04-23 09:56:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 09:56:49 -==> Parameters: 1(Long)
2019-04-23 09:56:49 -<==      Total: 49
2019-04-23 09:56:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 09:56:49 -==> Parameters: 138(Long)
2019-04-23 09:56:49 -<==      Total: 1
2019-04-23 09:56:49 -耗时 : 19
2019-04-23 09:56:49 -返回值 : index_v1
2019-04-23 09:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 09:56:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 09:56:49.513(Timestamp)
2019-04-23 09:56:49 -<==    Updates: 1
2019-04-23 09:56:49 -请求地址 : http://localhost:8081/main
2019-04-23 09:56:49 -HTTP METHOD : GET
2019-04-23 09:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:56:49 -参数 : []
2019-04-23 09:56:49 -耗时 : 1
2019-04-23 09:56:49 -返回值 : main
2019-04-23 09:56:49 -<==    Updates: 1
2019-04-23 09:56:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 09:56:50 -HTTP METHOD : GET
2019-04-23 09:56:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 09:56:50 -参数 : []
2019-04-23 09:56:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 09:56:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 09:56:50 -<==      Total: 0
2019-04-23 09:56:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 09:56:50 -==> Parameters: 1(Long), 0(String)
2019-04-23 09:56:50 -<==      Total: 1
2019-04-23 09:56:50 -耗时 : 6
2019-04-23 09:56:50 -返回值 : com.bootdo.common.utils.PageUtils@65f6413d
2019-04-23 09:56:50 -请求地址 : http://localhost:8081/main
2019-04-23 09:56:50 -HTTP METHOD : GET
2019-04-23 09:56:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 09:56:50 -参数 : []
2019-04-23 09:56:50 -耗时 : 0
2019-04-23 09:56:50 -返回值 : main
2019-04-23 09:56:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 09:56:54 -==> Parameters: 1(Long)
2019-04-23 09:56:54 -<==      Total: 93
2019-04-23 09:56:54 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 09:56:54 -HTTP METHOD : GET
2019-04-23 09:56:54 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 09:56:54 -参数 : []
2019-04-23 09:56:54 -耗时 : 1
2019-04-23 09:56:54 -返回值 : charts/countOwe
2019-04-23 09:56:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 09:56:55 -HTTP METHOD : GET
2019-04-23 09:56:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 09:56:55 -参数 : [userType]
2019-04-23 09:56:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 09:56:55 -==> Parameters: userType(String)
2019-04-23 09:56:55 -<==      Total: 4
2019-04-23 09:56:55 -耗时 : 4
2019-04-23 09:56:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 09:56:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 09:56:59 -HTTP METHOD : GET
2019-04-23 09:56:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 09:56:59 -参数 : []
2019-04-23 09:56:59 -耗时 : 1
2019-04-23 09:56:59 -返回值 : system/dept/deptTree
2019-04-23 09:56:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 09:56:59 -HTTP METHOD : GET
2019-04-23 09:56:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 09:56:59 -参数 : []
2019-04-23 09:56:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 09:56:59 -==> Parameters: 
2019-04-23 09:56:59 -<==      Total: 3
2019-04-23 09:56:59 -耗时 : 5
2019-04-23 09:56:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 09:57:02 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:57:02 -HTTP METHOD : POST
2019-04-23 09:57:02 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:57:02 -参数 : [com.bootdo.elec.vo.ElecVo@71e5ec5c, com.bootdo.water.vo.WaterVo@1d4c6ee2, com.bootdo.heat.vo.HeatVo@66a0923f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@7f4fe951]
2019-04-23 09:57:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:02 -==> Parameters: 
2019-04-23 09:57:02 -<==      Total: 1
2019-04-23 09:57:02 -耗时 : 307
2019-04-23 09:57:02 -返回值 : com.bootdo.charts.vo.CountOweVo@57c03a55
2019-04-23 09:57:17 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:57:17 -HTTP METHOD : POST
2019-04-23 09:57:17 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:57:17 -参数 : [com.bootdo.elec.vo.ElecVo@7f0cb5af, com.bootdo.water.vo.WaterVo@60b7b81f, com.bootdo.heat.vo.HeatVo@58ec6174, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@22ce2f6c]
2019-04-23 09:57:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:17 -==> Parameters: 
2019-04-23 09:57:17 -<==      Total: 1
2019-04-23 09:57:17 -耗时 : 13
2019-04-23 09:57:17 -返回值 : com.bootdo.charts.vo.CountOweVo@456e4874
2019-04-23 09:57:18 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:57:18 -HTTP METHOD : POST
2019-04-23 09:57:18 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:57:18 -参数 : [com.bootdo.elec.vo.ElecVo@1ec7eca, com.bootdo.water.vo.WaterVo@489813d9, com.bootdo.heat.vo.HeatVo@65fd56b6, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@36fd2ffd]
2019-04-23 09:57:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:18 -==> Parameters: 
2019-04-23 09:57:18 -<==      Total: 1
2019-04-23 09:57:18 -耗时 : 9
2019-04-23 09:57:18 -返回值 : com.bootdo.charts.vo.CountOweVo@42dd3308
2019-04-23 09:57:38 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:57:38 -HTTP METHOD : POST
2019-04-23 09:57:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:57:38 -参数 : [com.bootdo.elec.vo.ElecVo@16e5c756, com.bootdo.water.vo.WaterVo@5a749c24, com.bootdo.heat.vo.HeatVo@7082cac3, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@535d69e0]
2019-04-23 09:57:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:38 -==> Parameters: 
2019-04-23 09:57:38 -<==      Total: 1
2019-04-23 09:57:38 -耗时 : 10
2019-04-23 09:57:38 -返回值 : com.bootdo.charts.vo.CountOweVo@7233f2
2019-04-23 09:57:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 09:57:39 -HTTP METHOD : POST
2019-04-23 09:57:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 09:57:39 -参数 : [com.bootdo.elec.vo.ElecVo@2768cefb, com.bootdo.water.vo.WaterVo@223ddae3, com.bootdo.heat.vo.HeatVo@669168f1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@69585da8]
2019-04-23 09:57:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 09:57:39 -==> Parameters: 
2019-04-23 09:57:39 -<==      Total: 1
2019-04-23 09:57:39 -耗时 : 12
2019-04-23 09:57:39 -返回值 : com.bootdo.charts.vo.CountOweVo@c09d694
2019-04-23 10:07:08 -Validating all active sessions...
2019-04-23 10:07:08 -Finished session validation.  No sessions were stopped.
2019-04-23 10:07:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 93], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 866]
2019-04-23 10:37:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 93], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1299]
2019-04-23 10:49:59 -请求地址 : http://localhost:8081/login;JSESSIONID=2448c15f-579f-4f45-bc32-ffdab839d583
2019-04-23 10:49:59 -HTTP METHOD : GET
2019-04-23 10:49:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 10:49:59 -参数 : [{}]
2019-04-23 10:49:59 -耗时 : 2
2019-04-23 10:49:59 -返回值 : login
2019-04-23 10:50:00 -请求地址 : http://localhost:8081/getVerify
2019-04-23 10:50:00 -HTTP METHOD : GET
2019-04-23 10:50:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 10:50:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d620142, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6621883d]
2019-04-23 10:50:00 -2045
2019-04-23 10:50:00 -耗时 : 28
2019-04-23 10:50:00 -返回值 : null
2019-04-23 10:50:12 -请求地址 : http://localhost:8081/login
2019-04-23 10:50:12 -HTTP METHOD : POST
2019-04-23 10:50:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 10:50:12 -参数 : [admin, 111111, 2045, org.apache.shiro.web.servlet.ShiroHttpServletRequest@422b8993]
2019-04-23 10:50:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 10:50:12 -==> Parameters: admin(String)
2019-04-23 10:50:12 -<==      Total: 1
2019-04-23 10:50:12 -耗时 : 29
2019-04-23 10:50:12 -返回值 : {msg=操作成功, code=0}
2019-04-23 10:50:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:50:12 -==> Parameters: 1(Long), admin(String), 登录(String), 30(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 10:50:12.1(Timestamp)
2019-04-23 10:50:12 -请求地址 : http://localhost:8081/index
2019-04-23 10:50:12 -HTTP METHOD : GET
2019-04-23 10:50:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 10:50:12 -参数 : [{}]
2019-04-23 10:50:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 10:50:12 -==> Parameters: 1(Long)
2019-04-23 10:50:12 -<==      Total: 49
2019-04-23 10:50:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 10:50:12 -==> Parameters: 138(Long)
2019-04-23 10:50:12 -<==      Total: 1
2019-04-23 10:50:12 -耗时 : 68
2019-04-23 10:50:12 -返回值 : index_v1
2019-04-23 10:50:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:50:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 68(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 10:50:12.201(Timestamp)
2019-04-23 10:50:12 -请求地址 : http://localhost:8081/main
2019-04-23 10:50:12 -HTTP METHOD : GET
2019-04-23 10:50:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:50:12 -参数 : []
2019-04-23 10:50:12 -耗时 : 0
2019-04-23 10:50:12 -返回值 : main
2019-04-23 10:50:12 -<==    Updates: 1
2019-04-23 10:50:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 10:50:12 -<==    Updates: 1
2019-04-23 10:50:12 -HTTP METHOD : GET
2019-04-23 10:50:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 10:50:12 -参数 : []
2019-04-23 10:50:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 10:50:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 10:50:12 -请求地址 : http://localhost:8081/main
2019-04-23 10:50:12 -HTTP METHOD : GET
2019-04-23 10:50:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:50:12 -参数 : []
2019-04-23 10:50:12 -耗时 : 1
2019-04-23 10:50:12 -返回值 : main
2019-04-23 10:50:12 -<==      Total: 0
2019-04-23 10:50:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 10:50:12 -==> Parameters: 1(Long), 0(String)
2019-04-23 10:50:12 -<==      Total: 1
2019-04-23 10:50:12 -耗时 : 97
2019-04-23 10:50:12 -返回值 : com.bootdo.common.utils.PageUtils@2a8e143d
2019-04-23 10:50:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 10:50:24 -==> Parameters: 1(Long)
2019-04-23 10:50:24 -<==      Total: 93
2019-04-23 10:50:24 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 10:50:24 -HTTP METHOD : GET
2019-04-23 10:50:24 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 10:50:24 -参数 : []
2019-04-23 10:50:24 -耗时 : 1
2019-04-23 10:50:24 -返回值 : charts/countOwe
2019-04-23 10:50:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 10:50:24 -HTTP METHOD : GET
2019-04-23 10:50:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 10:50:24 -参数 : [userType]
2019-04-23 10:50:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 10:50:24 -==> Parameters: userType(String)
2019-04-23 10:50:24 -<==      Total: 4
2019-04-23 10:50:24 -耗时 : 5
2019-04-23 10:50:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 10:50:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 10:50:34 -HTTP METHOD : GET
2019-04-23 10:50:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 10:50:34 -参数 : []
2019-04-23 10:50:34 -耗时 : 2
2019-04-23 10:50:34 -返回值 : system/dept/deptTree
2019-04-23 10:50:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 10:50:34 -HTTP METHOD : GET
2019-04-23 10:50:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 10:50:34 -参数 : []
2019-04-23 10:50:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 10:50:34 -==> Parameters: 
2019-04-23 10:50:34 -<==      Total: 3
2019-04-23 10:50:34 -耗时 : 4
2019-04-23 10:50:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 10:50:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 10:50:39 -HTTP METHOD : GET
2019-04-23 10:50:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 10:50:39 -参数 : []
2019-04-23 10:50:39 -耗时 : 1
2019-04-23 10:50:39 -返回值 : system/dept/deptTree
2019-04-23 10:50:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 10:50:39 -HTTP METHOD : GET
2019-04-23 10:50:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 10:50:39 -参数 : []
2019-04-23 10:50:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 10:50:39 -==> Parameters: 
2019-04-23 10:50:39 -<==      Total: 3
2019-04-23 10:50:39 -耗时 : 2
2019-04-23 10:50:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 10:52:44 -请求地址 : http://localhost:8081/index
2019-04-23 10:52:44 -HTTP METHOD : GET
2019-04-23 10:52:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 10:52:44 -参数 : [{}]
2019-04-23 10:52:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 10:52:44 -==> Parameters: 1(Long)
2019-04-23 10:52:44 -<==      Total: 49
2019-04-23 10:52:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 10:52:44 -==> Parameters: 138(Long)
2019-04-23 10:52:44 -<==      Total: 1
2019-04-23 10:52:44 -耗时 : 21
2019-04-23 10:52:44 -返回值 : index_v1
2019-04-23 10:52:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:52:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 10:52:44.923(Timestamp)
2019-04-23 10:52:45 -<==    Updates: 1
2019-04-23 10:52:45 -请求地址 : http://localhost:8081/main
2019-04-23 10:52:45 -HTTP METHOD : GET
2019-04-23 10:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:52:45 -参数 : []
2019-04-23 10:52:45 -耗时 : 34
2019-04-23 10:52:45 -返回值 : main
2019-04-23 10:52:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 10:52:45 -HTTP METHOD : GET
2019-04-23 10:52:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 10:52:45 -参数 : []
2019-04-23 10:52:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 10:52:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 10:52:45 -<==      Total: 0
2019-04-23 10:52:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 10:52:45 -==> Parameters: 1(Long), 0(String)
2019-04-23 10:52:45 -<==      Total: 1
2019-04-23 10:52:45 -耗时 : 6
2019-04-23 10:52:45 -返回值 : com.bootdo.common.utils.PageUtils@1678df3
2019-04-23 10:52:45 -请求地址 : http://localhost:8081/main
2019-04-23 10:52:45 -HTTP METHOD : GET
2019-04-23 10:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:52:45 -参数 : []
2019-04-23 10:52:45 -耗时 : 1
2019-04-23 10:52:45 -返回值 : main
2019-04-23 10:52:51 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 10:52:51 -HTTP METHOD : GET
2019-04-23 10:52:51 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 10:52:51 -参数 : []
2019-04-23 10:52:51 -耗时 : 0
2019-04-23 10:52:51 -返回值 : charts/countOwe
2019-04-23 10:52:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 10:52:51 -HTTP METHOD : GET
2019-04-23 10:52:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 10:52:51 -参数 : [userType]
2019-04-23 10:52:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 10:52:51 -==> Parameters: userType(String)
2019-04-23 10:52:51 -<==      Total: 4
2019-04-23 10:52:51 -耗时 : 3
2019-04-23 10:52:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 10:52:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 10:52:57 -HTTP METHOD : GET
2019-04-23 10:52:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 10:52:57 -参数 : []
2019-04-23 10:52:57 -耗时 : 0
2019-04-23 10:52:57 -返回值 : system/dept/deptTree
2019-04-23 10:52:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 10:52:57 -HTTP METHOD : GET
2019-04-23 10:52:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 10:52:57 -参数 : []
2019-04-23 10:52:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 10:52:57 -==> Parameters: 
2019-04-23 10:52:57 -<==      Total: 3
2019-04-23 10:52:57 -耗时 : 3
2019-04-23 10:52:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 10:53:00 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 10:53:00 -HTTP METHOD : POST
2019-04-23 10:53:00 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 10:53:00 -参数 : [com.bootdo.elec.vo.ElecVo@7353d83b, com.bootdo.water.vo.WaterVo@3e0189c, com.bootdo.heat.vo.HeatVo@fba8447, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4262bffe]
2019-04-23 10:53:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 10:53:00 -==> Parameters: 
2019-04-23 10:53:00 -<==      Total: 1
2019-04-23 10:53:00 -耗时 : 36
2019-04-23 10:53:00 -返回值 : com.bootdo.charts.vo.CountOweVo@244ecf17
2019-04-23 10:53:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 11768 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 10:53:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 10:53:58 -The following profiles are active: dev
2019-04-23 10:53:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 10:53:58 CST 2019]; root of context hierarchy
2019-04-23 10:54:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 10:54:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 10:54:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 10:54:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 10:54:07 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 10:54:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 10:54:07 -Starting service [Tomcat]
2019-04-23 10:54:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 10:54:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 10:54:09 -Initializing Spring embedded WebApplicationContext
2019-04-23 10:54:09 -Root WebApplicationContext: initialization completed in 10946 ms
2019-04-23 10:54:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 10:54:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 10:54:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 10:54:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 10:54:15 -Filter xssFilter was not registered (disabled)
2019-04-23 10:54:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 10:54:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 10:54:15 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 10:54:15 -Servlet dispatcherServlet mapped to [/]
2019-04-23 10:54:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 10:53:58 CST 2019]; root of context hierarchy
2019-04-23 10:54:18 -Using default implementation for ThreadExecutor
2019-04-23 10:54:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 10:54:18 -Quartz Scheduler v.2.2.1 created.
2019-04-23 10:54:18 -RAMJobStore initialized.
2019-04-23 10:54:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 10:54:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 10:54:18 -Quartz scheduler version: 2.2.1
2019-04-23 10:54:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-04-23 10:54:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 10:54:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 10:54:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 10:54:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 10:54:21 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 10:54:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 10:54:21 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 10:54:21 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 10:54:21 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 10:54:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 10:54:21 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 10:54:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 10:54:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 10:54:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 10:54:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 10:54:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 10:54:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 10:54:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 10:54:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 10:54:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 10:54:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 10:54:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 10:54:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 10:54:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 10:54:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 10:54:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 10:54:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 10:54:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 10:54:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 10:54:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 10:54:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 10:54:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 10:54:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 10:54:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 10:54:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 10:54:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 10:54:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 10:54:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 10:54:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 10:54:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 10:54:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 10:54:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 10:54:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 10:54:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 10:54:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 10:54:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 10:54:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 10:54:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 10:54:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 10:54:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 10:54:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 10:54:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 10:54:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 10:54:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 10:54:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 10:54:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 10:54:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 10:54:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 10:54:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 10:54:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 10:54:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 10:54:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 10:54:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 10:54:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 10:54:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 10:54:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 10:54:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 10:54:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 10:54:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 10:54:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 10:54:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 10:54:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 10:54:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 10:54:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 10:54:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 10:54:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 10:54:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 10:54:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 10:54:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 10:54:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 10:54:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 10:54:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 10:54:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 10:54:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 10:54:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 10:54:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 10:54:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 10:54:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 10:54:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 10:54:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 10:54:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 10:54:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 10:54:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 10:54:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 10:53:58 CST 2019]; root of context hierarchy
2019-04-23 10:54:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 10:54:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 10:54:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 10:54:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 10:54:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 10:54:25 -Registering beans for JMX exposure on startup
2019-04-23 10:54:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 10:54:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 10:54:25 -Starting beans in phase 2147483647
2019-04-23 10:54:25 -Context refreshed
2019-04-23 10:54:25 -Found 1 custom documentation plugin(s)
2019-04-23 10:54:25 -Scanning for api listing references
2019-04-23 10:54:26 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_1
2019-04-23 10:54:26 -Generating unique operation named: addUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: listUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_2
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_3
2019-04-23 10:54:26 -Generating unique operation named: saveUsingPOST_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPOST_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPUT_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 10:54:26 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 10:54:26 -Generating unique operation named: addUsingGET_2
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_2
2019-04-23 10:54:26 -Generating unique operation named: listUsingGET_2
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_4
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_5
2019-04-23 10:54:26 -Generating unique operation named: saveUsingPOST_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPOST_2
2019-04-23 10:54:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: addUsingGET_3
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_3
2019-04-23 10:54:26 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: listUsingGET_3
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_6
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_7
2019-04-23 10:54:26 -Generating unique operation named: saveUsingPOST_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingGET_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPOST_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPUT_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 10:54:26 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 10:54:26 -Generating unique operation named: addUsingGET_4
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_4
2019-04-23 10:54:26 -Generating unique operation named: listUsingGET_4
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_8
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_9
2019-04-23 10:54:26 -Generating unique operation named: saveUsingPOST_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingGET_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPOST_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPUT_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 10:54:26 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 10:54:26 -Generating unique operation named: ElecUsingGET_1
2019-04-23 10:54:26 -Generating unique operation named: addUsingGET_5
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_5
2019-04-23 10:54:26 -Generating unique operation named: listUsingGET_5
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_10
2019-04-23 10:54:26 -Generating unique operation named: removeUsingPOST_11
2019-04-23 10:54:26 -Generating unique operation named: saveUsingPOST_5
2019-04-23 10:54:26 -Generating unique operation named: updateUsingGET_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPOST_5
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPUT_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 10:54:26 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 10:54:26 -Generating unique operation named: editUsingGET_6
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_6
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_6
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_7
2019-04-23 10:54:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_7
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_12
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_13
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingGET_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPUT_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 10:54:27 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 10:54:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_7
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_8
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_8
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_14
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_15
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingGET_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPUT_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 10:54:27 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_8
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_9
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_9
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_16
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_17
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingGET_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPUT_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 10:54:27 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_9
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_10
2019-04-23 10:54:27 -Generating unique operation named: infoUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingPOST_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingPUT_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 10:54:27 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_10
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_18
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_19
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_10
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_11
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_20
2019-04-23 10:54:27 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_10
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_11
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_12
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_21
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_10
2019-04-23 10:54:27 -Generating unique operation named: treeUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: treeUsingGET_2
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_11
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_11
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_12
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_13
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_22
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_23
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_11
2019-04-23 10:54:27 -Generating unique operation named: updateUsingGET_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_12
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPUT_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 10:54:27 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_12
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_13
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_14
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_24
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_25
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_12
2019-04-23 10:54:27 -Generating unique operation named: updateUsingGET_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_13
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPUT_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 10:54:27 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_13
2019-04-23 10:54:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_14
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_15
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_13
2019-04-23 10:54:27 -Generating unique operation named: saveUsingPOST_14
2019-04-23 10:54:27 -Generating unique operation named: updateUsingPOST_14
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_16
2019-04-23 10:54:27 -Generating unique operation named: listUsingHEAD_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingPOST_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingPUT_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingPATCH_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingDELETE_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 10:54:27 -Generating unique operation named: listUsingTRACE_1
2019-04-23 10:54:27 -Generating unique operation named: countDDUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 10:54:27 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 10:54:27 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 10:54:27 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 10:54:27 -Generating unique operation named: addUsingGET_14
2019-04-23 10:54:27 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 10:54:27 -Generating unique operation named: editUsingGET_15
2019-04-23 10:54:27 -Generating unique operation named: listUsingGET_17
2019-04-23 10:54:27 -Generating unique operation named: removeUsingPOST_26
2019-04-23 10:54:28 -Generating unique operation named: saveUsingPOST_15
2019-04-23 10:54:28 -Generating unique operation named: treeUsingGET_3
2019-04-23 10:54:28 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPOST_15
2019-04-23 10:54:28 -Generating unique operation named: addUsingGET_15
2019-04-23 10:54:28 -Generating unique operation named: editUsingGET_16
2019-04-23 10:54:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 10:54:28 -Generating unique operation named: listUsingGET_18
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_27
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_28
2019-04-23 10:54:28 -Generating unique operation named: saveUsingPOST_16
2019-04-23 10:54:28 -Generating unique operation named: updateUsingGET_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPOST_16
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPUT_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 10:54:28 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 10:54:28 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 10:54:28 -Generating unique operation named: addUsingGET_16
2019-04-23 10:54:28 -Generating unique operation named: editUsingGET_17
2019-04-23 10:54:28 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 10:54:28 -Generating unique operation named: listUsingGET_19
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_29
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_30
2019-04-23 10:54:28 -Generating unique operation named: saveUsingPOST_17
2019-04-23 10:54:28 -Generating unique operation named: updateUsingGET_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPOST_17
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPUT_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 10:54:28 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 10:54:28 -Generating unique operation named: addUsingGET_17
2019-04-23 10:54:28 -Generating unique operation named: editUsingGET_18
2019-04-23 10:54:28 -Generating unique operation named: listUsingGET_20
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_31
2019-04-23 10:54:28 -Generating unique operation named: removeUsingPOST_32
2019-04-23 10:54:28 -Generating unique operation named: saveUsingPOST_18
2019-04-23 10:54:28 -Generating unique operation named: updateUsingGET_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPOST_18
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPUT_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 10:54:28 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 10:54:28 -Starting Quartz Scheduler now
2019-04-23 10:54:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 10:54:28 -Starting...
2019-04-23 10:54:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 10:54:28 -Started.
2019-04-23 10:54:28 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 10:54:28 -Using a shared selector for servlet write/read
2019-04-23 10:54:28 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 10:54:28 -Started BootdoApplication in 31.06 seconds (JVM running for 31.895)
2019-04-23 10:54:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 10:54:28 -==> Parameters: 
2019-04-23 10:54:29 -<==      Total: 1
2019-04-23 10:54:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 10:54:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 10:54:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-04-23 10:54:32 -Enabling session validation scheduler...
2019-04-23 10:54:32 -请求地址 : http://localhost:8081/login;JSESSIONID=7c2a55da-1d4b-4dad-8e9b-e79333696341
2019-04-23 10:54:32 -HTTP METHOD : GET
2019-04-23 10:54:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 10:54:32 -参数 : [{}]
2019-04-23 10:54:32 -耗时 : 3
2019-04-23 10:54:32 -返回值 : login
2019-04-23 10:54:34 -请求地址 : http://localhost:8081/getVerify
2019-04-23 10:54:34 -HTTP METHOD : GET
2019-04-23 10:54:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 10:54:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@767b7f36, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7244e521]
2019-04-23 10:54:38 -9992
2019-04-23 10:54:38 -耗时 : 4500
2019-04-23 10:54:38 -返回值 : null
2019-04-23 10:54:43 -请求地址 : http://localhost:8081/login
2019-04-23 10:54:43 -HTTP METHOD : POST
2019-04-23 10:54:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 10:54:43 -参数 : [admin, 111111, 9992, org.apache.shiro.web.servlet.ShiroHttpServletRequest@106ba848]
2019-04-23 10:54:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 10:54:43 -==> Parameters: admin(String)
2019-04-23 10:54:43 -<==      Total: 1
2019-04-23 10:54:43 -耗时 : 461
2019-04-23 10:54:43 -返回值 : {msg=操作成功, code=0}
2019-04-23 10:54:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 10:54:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:54:43 -==> Parameters: 1(Long), admin(String), 登录(String), 477(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 10:54:43.966(Timestamp)
2019-04-23 10:54:44 -请求地址 : http://localhost:8081/index
2019-04-23 10:54:44 -HTTP METHOD : GET
2019-04-23 10:54:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 10:54:44 -参数 : [{}]
2019-04-23 10:54:44 -<==    Updates: 1
2019-04-23 10:54:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 10:54:44 -==> Parameters: 1(Long)
2019-04-23 10:54:45 -<==      Total: 49
2019-04-23 10:54:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 10:54:45 -==> Parameters: 138(Long)
2019-04-23 10:54:45 -<==      Total: 1
2019-04-23 10:54:45 -耗时 : 1255
2019-04-23 10:54:45 -返回值 : index_v1
2019-04-23 10:54:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:54:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1256(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 10:54:45.427(Timestamp)
2019-04-23 10:54:45 -请求地址 : http://localhost:8081/main
2019-04-23 10:54:45 -HTTP METHOD : GET
2019-04-23 10:54:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:54:45 -参数 : []
2019-04-23 10:54:45 -耗时 : 0
2019-04-23 10:54:45 -返回值 : main
2019-04-23 10:54:45 -<==    Updates: 1
2019-04-23 10:54:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 10:54:45 -HTTP METHOD : GET
2019-04-23 10:54:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 10:54:45 -参数 : []
2019-04-23 10:54:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 10:54:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 10:54:45 -<==      Total: 0
2019-04-23 10:54:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 10:54:45 -==> Parameters: 1(Long), 0(String)
2019-04-23 10:54:46 -<==      Total: 1
2019-04-23 10:54:46 -耗时 : 204
2019-04-23 10:54:46 -返回值 : com.bootdo.common.utils.PageUtils@4757464f
2019-04-23 10:54:46 -请求地址 : http://localhost:8081/main
2019-04-23 10:54:46 -HTTP METHOD : GET
2019-04-23 10:54:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:54:46 -参数 : []
2019-04-23 10:54:46 -耗时 : 1
2019-04-23 10:54:46 -返回值 : main
2019-04-23 10:54:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 10:54:53 -==> Parameters: 1(Long)
2019-04-23 10:54:53 -<==      Total: 93
2019-04-23 10:54:53 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 10:54:53 -HTTP METHOD : GET
2019-04-23 10:54:53 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 10:54:53 -参数 : []
2019-04-23 10:54:53 -耗时 : 1
2019-04-23 10:54:53 -返回值 : charts/countOwe
2019-04-23 10:54:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 10:54:54 -HTTP METHOD : GET
2019-04-23 10:54:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 10:54:54 -参数 : [userType]
2019-04-23 10:54:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 10:54:54 -==> Parameters: userType(String)
2019-04-23 10:54:54 -<==      Total: 4
2019-04-23 10:54:54 -耗时 : 81
2019-04-23 10:54:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 10:55:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 10:55:01 -HTTP METHOD : GET
2019-04-23 10:55:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 10:55:01 -参数 : []
2019-04-23 10:55:01 -耗时 : 0
2019-04-23 10:55:01 -返回值 : system/dept/deptTree
2019-04-23 10:55:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 10:55:01 -HTTP METHOD : GET
2019-04-23 10:55:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 10:55:01 -参数 : []
2019-04-23 10:55:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 10:55:01 -==> Parameters: 
2019-04-23 10:55:02 -<==      Total: 3
2019-04-23 10:55:02 -耗时 : 76
2019-04-23 10:55:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 10:55:03 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 10:55:03 -HTTP METHOD : GET
2019-04-23 10:55:03 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 10:55:03 -参数 : [com.bootdo.elec.vo.ElecVo@3a4b1dea, com.bootdo.heat.vo.HeatVo@309d55ef, com.bootdo.water.vo.WaterVo@1f421c7a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@938e858]
2019-04-23 10:55:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:55:04 -<==      Total: 0
2019-04-23 10:55:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:55:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:55:04 -<==      Total: 0
2019-04-23 10:55:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:55:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:55:04 -<==      Total: 1
2019-04-23 10:55:04 -耗时 : 1384
2019-04-23 10:55:04 -返回值 : null
2019-04-23 10:55:22 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-23 10:59:41 -请求地址 : http://localhost:8081/index
2019-04-23 10:59:41 -HTTP METHOD : GET
2019-04-23 10:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 10:59:41 -参数 : [{}]
2019-04-23 10:59:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 10:59:41 -==> Parameters: 1(Long)
2019-04-23 10:59:41 -<==      Total: 49
2019-04-23 10:59:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 10:59:41 -==> Parameters: 138(Long)
2019-04-23 10:59:41 -<==      Total: 1
2019-04-23 10:59:41 -耗时 : 95
2019-04-23 10:59:41 -返回值 : index_v1
2019-04-23 10:59:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 10:59:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 95(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 10:59:41.754(Timestamp)
2019-04-23 10:59:41 -<==    Updates: 1
2019-04-23 10:59:41 -请求地址 : http://localhost:8081/main
2019-04-23 10:59:41 -HTTP METHOD : GET
2019-04-23 10:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:59:41 -参数 : []
2019-04-23 10:59:41 -耗时 : 1
2019-04-23 10:59:41 -返回值 : main
2019-04-23 10:59:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 10:59:42 -HTTP METHOD : GET
2019-04-23 10:59:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 10:59:42 -参数 : []
2019-04-23 10:59:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 10:59:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 10:59:42 -<==      Total: 0
2019-04-23 10:59:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 10:59:42 -==> Parameters: 1(Long), 0(String)
2019-04-23 10:59:42 -<==      Total: 1
2019-04-23 10:59:42 -耗时 : 11
2019-04-23 10:59:42 -返回值 : com.bootdo.common.utils.PageUtils@2e5c121c
2019-04-23 10:59:42 -请求地址 : http://localhost:8081/main
2019-04-23 10:59:42 -HTTP METHOD : GET
2019-04-23 10:59:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 10:59:42 -参数 : []
2019-04-23 10:59:42 -耗时 : 1
2019-04-23 10:59:42 -返回值 : main
2019-04-23 10:59:44 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-23 10:59:44 -HTTP METHOD : GET
2019-04-23 10:59:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-23 10:59:44 -参数 : []
2019-04-23 10:59:44 -耗时 : 14
2019-04-23 10:59:44 -返回值 : charts/tableElecYY
2019-04-23 10:59:46 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 10:59:46 -HTTP METHOD : GET
2019-04-23 10:59:46 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 10:59:46 -参数 : []
2019-04-23 10:59:46 -耗时 : 0
2019-04-23 10:59:46 -返回值 : charts/countOwe
2019-04-23 10:59:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 10:59:47 -HTTP METHOD : GET
2019-04-23 10:59:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 10:59:47 -参数 : [userType]
2019-04-23 10:59:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 10:59:47 -==> Parameters: userType(String)
2019-04-23 10:59:47 -<==      Total: 4
2019-04-23 10:59:47 -耗时 : 6
2019-04-23 10:59:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 10:59:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 10:59:51 -HTTP METHOD : GET
2019-04-23 10:59:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 10:59:51 -参数 : []
2019-04-23 10:59:51 -耗时 : 1
2019-04-23 10:59:51 -返回值 : system/dept/deptTree
2019-04-23 10:59:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 10:59:51 -HTTP METHOD : GET
2019-04-23 10:59:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 10:59:51 -参数 : []
2019-04-23 10:59:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 10:59:51 -==> Parameters: 
2019-04-23 10:59:51 -<==      Total: 3
2019-04-23 10:59:51 -耗时 : 7
2019-04-23 10:59:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 10:59:53 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 10:59:53 -HTTP METHOD : GET
2019-04-23 10:59:53 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 10:59:53 -参数 : [com.bootdo.elec.vo.ElecVo@113760d6, com.bootdo.heat.vo.HeatVo@545f0769, com.bootdo.water.vo.WaterVo@44756360, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41edf819]
2019-04-23 10:59:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:59:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:59:53 -<==      Total: 0
2019-04-23 10:59:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:59:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:59:53 -<==      Total: 0
2019-04-23 10:59:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 10:59:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 10:59:53 -<==      Total: 1
2019-04-23 10:59:53 -耗时 : 26
2019-04-23 10:59:53 -返回值 : null
2019-04-23 11:00:14 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 11:00:40 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 11:00:40 -HTTP METHOD : POST
2019-04-23 11:00:40 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 11:00:40 -参数 : [com.bootdo.elec.vo.ElecVo@11a47d91, com.bootdo.water.vo.WaterVo@34a32df1, com.bootdo.heat.vo.HeatVo@3a7a97a3]
2019-04-23 11:00:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 11:00:40 -==> Parameters: 
2019-04-23 11:00:40 -<==      Total: 1
2019-04-23 11:00:40 -耗时 : 79
2019-04-23 11:00:40 -返回值 : com.bootdo.charts.vo.CountOweVo@1ea452ca
2019-04-23 11:05:14 -请求地址 : http://localhost:8081/index
2019-04-23 11:05:14 -HTTP METHOD : GET
2019-04-23 11:05:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 11:05:14 -参数 : [{}]
2019-04-23 11:05:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 11:05:14 -==> Parameters: 1(Long)
2019-04-23 11:05:14 -<==      Total: 49
2019-04-23 11:05:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 11:05:14 -==> Parameters: 138(Long)
2019-04-23 11:05:14 -<==      Total: 1
2019-04-23 11:05:14 -耗时 : 110
2019-04-23 11:05:14 -返回值 : index_v1
2019-04-23 11:05:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 11:05:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 110(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 11:05:14.425(Timestamp)
2019-04-23 11:05:14 -请求地址 : http://localhost:8081/main
2019-04-23 11:05:14 -HTTP METHOD : GET
2019-04-23 11:05:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 11:05:14 -参数 : []
2019-04-23 11:05:14 -耗时 : 0
2019-04-23 11:05:14 -返回值 : main
2019-04-23 11:05:15 -<==    Updates: 1
2019-04-23 11:05:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 11:05:19 -HTTP METHOD : GET
2019-04-23 11:05:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 11:05:19 -参数 : []
2019-04-23 11:05:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 11:05:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 11:05:19 -<==      Total: 0
2019-04-23 11:05:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 11:05:19 -==> Parameters: 1(Long), 0(String)
2019-04-23 11:05:19 -<==      Total: 1
2019-04-23 11:05:19 -耗时 : 13
2019-04-23 11:05:19 -返回值 : com.bootdo.common.utils.PageUtils@5267db42
2019-04-23 11:05:19 -请求地址 : http://localhost:8081/main
2019-04-23 11:05:19 -HTTP METHOD : GET
2019-04-23 11:05:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 11:05:19 -参数 : []
2019-04-23 11:05:19 -耗时 : 0
2019-04-23 11:05:19 -返回值 : main
2019-04-23 11:05:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 11:05:23 -==> Parameters: 1(Long)
2019-04-23 11:05:23 -<==      Total: 93
2019-04-23 11:05:23 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 11:05:23 -HTTP METHOD : GET
2019-04-23 11:05:23 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 11:05:23 -参数 : []
2019-04-23 11:05:23 -耗时 : 0
2019-04-23 11:05:23 -返回值 : charts/countOwe
2019-04-23 11:05:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 11:05:24 -HTTP METHOD : GET
2019-04-23 11:05:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 11:05:24 -参数 : [userType]
2019-04-23 11:05:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 11:05:24 -==> Parameters: userType(String)
2019-04-23 11:05:24 -<==      Total: 4
2019-04-23 11:05:24 -耗时 : 8
2019-04-23 11:05:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 11:05:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 11:05:30 -HTTP METHOD : GET
2019-04-23 11:05:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 11:05:30 -参数 : []
2019-04-23 11:05:30 -耗时 : 0
2019-04-23 11:05:30 -返回值 : system/dept/deptTree
2019-04-23 11:05:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 11:05:30 -HTTP METHOD : GET
2019-04-23 11:05:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 11:05:30 -参数 : []
2019-04-23 11:05:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 11:05:30 -==> Parameters: 
2019-04-23 11:05:30 -<==      Total: 3
2019-04-23 11:05:30 -耗时 : 3
2019-04-23 11:05:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 11:05:32 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 11:05:32 -HTTP METHOD : GET
2019-04-23 11:05:32 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 11:05:32 -参数 : [com.bootdo.elec.vo.ElecVo@4f356d6a, com.bootdo.heat.vo.HeatVo@4132bd0f, com.bootdo.water.vo.WaterVo@5f2adfd7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e21e13e]
2019-04-23 11:05:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:05:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:05:32 -<==      Total: 0
2019-04-23 11:05:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:05:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:05:32 -<==      Total: 0
2019-04-23 11:05:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:05:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:05:32 -<==      Total: 1
2019-04-23 11:05:32 -耗时 : 20
2019-04-23 11:05:32 -返回值 : null
2019-04-23 11:16:00 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 11:16:00 -HTTP METHOD : GET
2019-04-23 11:16:00 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 11:16:00 -参数 : [com.bootdo.elec.vo.ElecVo@384feeb0, com.bootdo.heat.vo.HeatVo@99e6ee1, com.bootdo.water.vo.WaterVo@16a9f2cc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@150d8672]
2019-04-23 11:16:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:00 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:00 -<==      Total: 0
2019-04-23 11:16:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:00 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:00 -<==      Total: 0
2019-04-23 11:16:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:00 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:00 -<==      Total: 1
2019-04-23 11:16:00 -耗时 : 23
2019-04-23 11:16:00 -返回值 : null
2019-04-23 11:16:47 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 11:16:47 -HTTP METHOD : POST
2019-04-23 11:16:47 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 11:16:47 -参数 : [com.bootdo.elec.vo.ElecVo@5ddf8d93, com.bootdo.water.vo.WaterVo@467ec808, com.bootdo.heat.vo.HeatVo@7088fdd0]
2019-04-23 11:16:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 11:16:47 -==> Parameters: 
2019-04-23 11:16:47 -<==      Total: 1
2019-04-23 11:16:47 -耗时 : 21
2019-04-23 11:16:47 -返回值 : com.bootdo.charts.vo.CountOweVo@6dde6623
2019-04-23 11:16:54 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 11:16:54 -HTTP METHOD : GET
2019-04-23 11:16:54 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 11:16:54 -参数 : [com.bootdo.elec.vo.ElecVo@46183390, com.bootdo.heat.vo.HeatVo@25076b7, com.bootdo.water.vo.WaterVo@6d9eb53a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ddc0d3]
2019-04-23 11:16:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:54 -<==      Total: 0
2019-04-23 11:16:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:54 -<==      Total: 0
2019-04-23 11:16:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 11:16:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 11:16:54 -<==      Total: 1
2019-04-23 11:16:54 -耗时 : 19
2019-04-23 11:16:54 -返回值 : null
2019-04-23 11:25:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 443]
2019-04-23 11:42:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 2848 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 11:42:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 11:42:31 -The following profiles are active: dev
2019-04-23 11:42:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 11:42:31 CST 2019]; root of context hierarchy
2019-04-23 11:42:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 11:42:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 11:42:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 11:42:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 11:42:38 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 11:42:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 11:42:39 -Starting service [Tomcat]
2019-04-23 11:42:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 11:42:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 11:42:39 -Initializing Spring embedded WebApplicationContext
2019-04-23 11:42:39 -Root WebApplicationContext: initialization completed in 7925 ms
2019-04-23 11:42:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 11:42:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 11:42:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 11:42:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 11:42:40 -Filter xssFilter was not registered (disabled)
2019-04-23 11:42:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 11:42:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 11:42:40 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 11:42:40 -Servlet dispatcherServlet mapped to [/]
2019-04-23 11:42:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 11:42:31 CST 2019]; root of context hierarchy
2019-04-23 11:42:43 -Using default implementation for ThreadExecutor
2019-04-23 11:42:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 11:42:43 -Quartz Scheduler v.2.2.1 created.
2019-04-23 11:42:43 -RAMJobStore initialized.
2019-04-23 11:42:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 11:42:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 11:42:43 -Quartz scheduler version: 2.2.1
2019-04-23 11:42:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-04-23 11:42:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 11:42:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 11:42:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 11:42:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 11:42:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 11:42:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 11:42:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 11:42:46 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 11:42:46 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 11:42:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 11:42:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 11:42:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 11:42:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 11:42:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 11:42:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 11:42:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 11:42:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 11:42:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 11:42:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 11:42:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 11:42:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 11:42:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 11:42:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 11:42:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 11:42:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 11:42:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 11:42:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 11:42:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 11:42:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 11:42:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 11:42:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 11:42:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 11:42:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 11:42:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 11:42:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 11:42:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 11:42:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 11:42:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 11:42:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 11:42:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 11:42:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 11:42:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 11:42:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 11:42:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 11:42:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 11:42:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 11:42:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 11:42:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 11:42:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 11:42:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 11:42:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 11:42:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 11:42:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 11:42:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 11:42:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 11:42:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 11:42:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 11:42:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 11:42:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 11:42:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 11:42:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 11:42:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 11:42:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 11:42:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 11:42:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 11:42:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 11:42:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 11:42:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 11:42:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 11:42:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 11:42:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 11:42:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 11:42:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 11:42:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 11:42:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 11:42:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 11:42:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 11:42:46 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 11:42:46 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 11:42:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 11:42:46 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 11:42:46 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 11:42:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 11:42:46 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 11:42:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 11:42:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 11:42:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 11:42:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 11:42:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 11:42:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 11:42:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 11:42:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 11:42:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 11:42:31 CST 2019]; root of context hierarchy
2019-04-23 11:42:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 11:42:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 11:42:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 11:42:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 11:42:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 11:42:49 -Registering beans for JMX exposure on startup
2019-04-23 11:42:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 11:42:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 11:42:49 -Starting beans in phase 2147483647
2019-04-23 11:42:49 -Context refreshed
2019-04-23 11:42:50 -Found 1 custom documentation plugin(s)
2019-04-23 11:42:50 -Scanning for api listing references
2019-04-23 11:42:53 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 11:42:53 -Generating unique operation named: removeUsingPOST_1
2019-04-23 11:42:53 -Generating unique operation named: addUsingGET_1
2019-04-23 11:42:53 -Generating unique operation named: editUsingGET_1
2019-04-23 11:42:53 -Generating unique operation named: listUsingGET_1
2019-04-23 11:42:53 -Generating unique operation named: removeUsingPOST_2
2019-04-23 11:42:53 -Generating unique operation named: removeUsingPOST_3
2019-04-23 11:42:53 -Generating unique operation named: saveUsingPOST_1
2019-04-23 11:42:53 -Generating unique operation named: updateUsingGET_1
2019-04-23 11:42:53 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 11:42:53 -Generating unique operation named: updateUsingPOST_1
2019-04-23 11:42:53 -Generating unique operation named: updateUsingPUT_1
2019-04-23 11:42:53 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_4
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_5
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_2
2019-04-23 11:42:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_3
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_3
2019-04-23 11:42:54 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_3
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_6
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_7
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_4
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_4
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_4
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_8
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_9
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 11:42:54 -Generating unique operation named: ElecUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_5
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_5
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_5
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_10
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_11
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_6
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_6
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_6
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_7
2019-04-23 11:42:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_7
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_12
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_13
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 11:42:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_7
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_8
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_8
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_14
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_15
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_8
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_9
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_9
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_16
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_17
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_9
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_10
2019-04-23 11:42:54 -Generating unique operation named: infoUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingPOST_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingPUT_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 11:42:54 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_10
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_18
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_19
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_10
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_11
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_20
2019-04-23 11:42:54 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_10
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_11
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_12
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_21
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_10
2019-04-23 11:42:54 -Generating unique operation named: treeUsingGET_1
2019-04-23 11:42:54 -Generating unique operation named: treeUsingGET_2
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_11
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_11
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_12
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_13
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_22
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_23
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_11
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_12
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_12
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_13
2019-04-23 11:42:54 -Generating unique operation named: listUsingGET_14
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_24
2019-04-23 11:42:54 -Generating unique operation named: removeUsingPOST_25
2019-04-23 11:42:54 -Generating unique operation named: saveUsingPOST_12
2019-04-23 11:42:54 -Generating unique operation named: updateUsingGET_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPOST_13
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPUT_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 11:42:54 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 11:42:54 -Generating unique operation named: addUsingGET_13
2019-04-23 11:42:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 11:42:54 -Generating unique operation named: editUsingGET_14
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_15
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_13
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_14
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPOST_14
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_16
2019-04-23 11:42:55 -Generating unique operation named: listUsingHEAD_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingPOST_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingPUT_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingPATCH_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingDELETE_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingTRACE_1
2019-04-23 11:42:55 -Generating unique operation named: countDDUsingGET_1
2019-04-23 11:42:55 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 11:42:55 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 11:42:55 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 11:42:55 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 11:42:55 -Generating unique operation named: addUsingGET_14
2019-04-23 11:42:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 11:42:55 -Generating unique operation named: editUsingGET_15
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_17
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_26
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_15
2019-04-23 11:42:55 -Generating unique operation named: treeUsingGET_3
2019-04-23 11:42:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPOST_15
2019-04-23 11:42:55 -Generating unique operation named: addUsingGET_15
2019-04-23 11:42:55 -Generating unique operation named: editUsingGET_16
2019-04-23 11:42:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_18
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_27
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_28
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_16
2019-04-23 11:42:55 -Generating unique operation named: updateUsingGET_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPOST_16
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPUT_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 11:42:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 11:42:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 11:42:55 -Generating unique operation named: addUsingGET_16
2019-04-23 11:42:55 -Generating unique operation named: editUsingGET_17
2019-04-23 11:42:55 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_19
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_29
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_30
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_17
2019-04-23 11:42:55 -Generating unique operation named: updateUsingGET_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPOST_17
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPUT_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 11:42:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 11:42:55 -Generating unique operation named: addUsingGET_17
2019-04-23 11:42:55 -Generating unique operation named: editUsingGET_18
2019-04-23 11:42:55 -Generating unique operation named: listUsingGET_20
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_31
2019-04-23 11:42:55 -Generating unique operation named: removeUsingPOST_32
2019-04-23 11:42:55 -Generating unique operation named: saveUsingPOST_18
2019-04-23 11:42:55 -Generating unique operation named: updateUsingGET_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPOST_18
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPUT_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 11:42:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 11:42:55 -Starting Quartz Scheduler now
2019-04-23 11:42:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 11:42:55 -Starting...
2019-04-23 11:42:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 11:42:55 -Started.
2019-04-23 11:42:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 11:42:55 -Using a shared selector for servlet write/read
2019-04-23 11:42:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 11:42:55 -Started BootdoApplication in 25.306 seconds (JVM running for 26.09)
2019-04-23 11:42:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 11:42:55 -==> Parameters: 
2019-04-23 11:42:56 -<==      Total: 1
2019-04-23 11:43:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-23 12:27:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-04-23 12:43:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-04-23 13:59:22 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 13:59:22 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 13:59:22 -FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2019-04-23 13:59:22 -Enabling session validation scheduler...
2019-04-23 13:59:22 -请求地址 : http://localhost:8081/login;JSESSIONID=020c308e-11f5-41c2-8b11-543109602870
2019-04-23 13:59:22 -HTTP METHOD : GET
2019-04-23 13:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 13:59:22 -参数 : [{}]
2019-04-23 13:59:22 -耗时 : 5
2019-04-23 13:59:22 -返回值 : login
2019-04-23 13:59:24 -请求地址 : http://localhost:8081/getVerify
2019-04-23 13:59:24 -HTTP METHOD : GET
2019-04-23 13:59:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 13:59:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51bee0a4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14bc64f7]
2019-04-23 13:59:34 -6084
2019-04-23 13:59:34 -耗时 : 10374
2019-04-23 13:59:34 -返回值 : null
2019-04-23 13:59:34 -请求地址 : http://localhost:8081/login
2019-04-23 13:59:34 -HTTP METHOD : GET
2019-04-23 13:59:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 13:59:34 -参数 : [{}]
2019-04-23 13:59:34 -耗时 : 0
2019-04-23 13:59:34 -返回值 : login
2019-04-23 13:59:49 -请求地址 : http://localhost:8081/login
2019-04-23 13:59:49 -HTTP METHOD : POST
2019-04-23 13:59:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 13:59:49 -参数 : [admin, 111111, 6084, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f5934a7]
2019-04-23 13:59:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 13:59:49 -==> Parameters: admin(String)
2019-04-23 13:59:49 -<==      Total: 1
2019-04-23 13:59:49 -耗时 : 362
2019-04-23 13:59:49 -返回值 : {msg=操作成功, code=0}
2019-04-23 13:59:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 13:59:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 13:59:50 -==> Parameters: 1(Long), admin(String), 登录(String), 362(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 13:59:50.104(Timestamp)
2019-04-23 13:59:50 -请求地址 : http://localhost:8081/index
2019-04-23 13:59:50 -HTTP METHOD : GET
2019-04-23 13:59:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 13:59:50 -参数 : [{}]
2019-04-23 13:59:50 -<==    Updates: 1
2019-04-23 13:59:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 13:59:50 -==> Parameters: 1(Long)
2019-04-23 13:59:50 -<==      Total: 49
2019-04-23 13:59:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 13:59:50 -==> Parameters: 138(Long)
2019-04-23 13:59:51 -<==      Total: 1
2019-04-23 13:59:51 -耗时 : 623
2019-04-23 13:59:51 -返回值 : index_v1
2019-04-23 13:59:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 13:59:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 624(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 13:59:51.131(Timestamp)
2019-04-23 13:59:51 -<==    Updates: 1
2019-04-23 13:59:51 -请求地址 : http://localhost:8081/main
2019-04-23 13:59:51 -HTTP METHOD : GET
2019-04-23 13:59:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 13:59:51 -参数 : []
2019-04-23 13:59:51 -耗时 : 5
2019-04-23 13:59:51 -返回值 : main
2019-04-23 13:59:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 13:59:51 -HTTP METHOD : GET
2019-04-23 13:59:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 13:59:51 -参数 : []
2019-04-23 13:59:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 13:59:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 13:59:52 -请求地址 : http://localhost:8081/main
2019-04-23 13:59:52 -HTTP METHOD : GET
2019-04-23 13:59:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 13:59:52 -参数 : []
2019-04-23 13:59:52 -耗时 : 1
2019-04-23 13:59:52 -返回值 : main
2019-04-23 13:59:52 -<==      Total: 0
2019-04-23 13:59:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 13:59:52 -==> Parameters: 1(Long), 0(String)
2019-04-23 13:59:52 -<==      Total: 1
2019-04-23 13:59:52 -耗时 : 633
2019-04-23 13:59:52 -返回值 : com.bootdo.common.utils.PageUtils@30a4d251
2019-04-23 14:03:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 14:03:43 -==> Parameters: 1(Long)
2019-04-23 14:03:43 -<==      Total: 93
2019-04-23 14:03:43 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 14:03:43 -HTTP METHOD : GET
2019-04-23 14:03:43 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 14:03:43 -参数 : []
2019-04-23 14:03:43 -耗时 : 0
2019-04-23 14:03:43 -返回值 : charts/countOwe
2019-04-23 14:03:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:03:44 -HTTP METHOD : GET
2019-04-23 14:03:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:03:44 -参数 : [userType]
2019-04-23 14:03:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:03:44 -==> Parameters: userType(String)
2019-04-23 14:03:44 -<==      Total: 4
2019-04-23 14:03:44 -耗时 : 387
2019-04-23 14:03:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:03:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 14:03:51 -HTTP METHOD : GET
2019-04-23 14:03:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 14:03:51 -参数 : []
2019-04-23 14:03:51 -耗时 : 1
2019-04-23 14:03:51 -返回值 : system/dept/deptTree
2019-04-23 14:03:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 14:03:52 -HTTP METHOD : GET
2019-04-23 14:03:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 14:03:52 -参数 : []
2019-04-23 14:03:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 14:03:52 -==> Parameters: 
2019-04-23 14:03:52 -<==      Total: 3
2019-04-23 14:03:52 -耗时 : 47
2019-04-23 14:03:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 14:03:55 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:03:55 -HTTP METHOD : POST
2019-04-23 14:03:55 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:03:55 -参数 : [com.bootdo.elec.vo.ElecVo@5cb7b9b, com.bootdo.water.vo.WaterVo@60a50c26, com.bootdo.heat.vo.HeatVo@14b5c87b]
2019-04-23 14:03:55 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:03:55 -==> Parameters: 
2019-04-23 14:03:55 -<==      Total: 1
2019-04-23 14:03:55 -耗时 : 315
2019-04-23 14:03:55 -返回值 : com.bootdo.charts.vo.CountOweVo@158334b1
2019-04-23 14:04:14 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:14 -HTTP METHOD : POST
2019-04-23 14:04:14 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:14 -参数 : [com.bootdo.elec.vo.ElecVo@70270ea8, com.bootdo.water.vo.WaterVo@7364908, com.bootdo.heat.vo.HeatVo@50b89483]
2019-04-23 14:04:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:14 -==> Parameters: 
2019-04-23 14:04:14 -<==      Total: 1
2019-04-23 14:04:14 -耗时 : 17
2019-04-23 14:04:14 -返回值 : com.bootdo.charts.vo.CountOweVo@4162eb1b
2019-04-23 14:04:17 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:17 -HTTP METHOD : POST
2019-04-23 14:04:17 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:17 -参数 : [com.bootdo.elec.vo.ElecVo@17f52467, com.bootdo.water.vo.WaterVo@74604a4a, com.bootdo.heat.vo.HeatVo@20b85e9d]
2019-04-23 14:04:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:17 -==> Parameters: 
2019-04-23 14:04:17 -<==      Total: 1
2019-04-23 14:04:17 -耗时 : 16
2019-04-23 14:04:17 -返回值 : com.bootdo.charts.vo.CountOweVo@fd7aea0
2019-04-23 14:04:18 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:18 -HTTP METHOD : POST
2019-04-23 14:04:18 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:18 -参数 : [com.bootdo.elec.vo.ElecVo@7f857a8a, com.bootdo.water.vo.WaterVo@44815020, com.bootdo.heat.vo.HeatVo@2d9ba3ac]
2019-04-23 14:04:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:18 -==> Parameters: 
2019-04-23 14:04:18 -<==      Total: 1
2019-04-23 14:04:18 -耗时 : 20
2019-04-23 14:04:18 -返回值 : com.bootdo.charts.vo.CountOweVo@5cc6366a
2019-04-23 14:04:20 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:20 -HTTP METHOD : POST
2019-04-23 14:04:20 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:20 -参数 : [com.bootdo.elec.vo.ElecVo@225899f4, com.bootdo.water.vo.WaterVo@bf998bf, com.bootdo.heat.vo.HeatVo@5091d962]
2019-04-23 14:04:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:20 -==> Parameters: 
2019-04-23 14:04:20 -<==      Total: 1
2019-04-23 14:04:20 -耗时 : 15
2019-04-23 14:04:20 -返回值 : com.bootdo.charts.vo.CountOweVo@8784842
2019-04-23 14:04:23 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:23 -HTTP METHOD : POST
2019-04-23 14:04:23 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:23 -参数 : [com.bootdo.elec.vo.ElecVo@1b70161a, com.bootdo.water.vo.WaterVo@2f715a3e, com.bootdo.heat.vo.HeatVo@57440848]
2019-04-23 14:04:23 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:23 -==> Parameters: 
2019-04-23 14:04:23 -<==      Total: 1
2019-04-23 14:04:23 -耗时 : 14
2019-04-23 14:04:23 -返回值 : com.bootdo.charts.vo.CountOweVo@3b790fc2
2019-04-23 14:04:28 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:28 -HTTP METHOD : POST
2019-04-23 14:04:28 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:28 -参数 : [com.bootdo.elec.vo.ElecVo@5c7f70a2, com.bootdo.water.vo.WaterVo@39d0772, com.bootdo.heat.vo.HeatVo@5bcc26f5]
2019-04-23 14:04:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:28 -==> Parameters: 
2019-04-23 14:04:28 -<==      Total: 1
2019-04-23 14:04:28 -耗时 : 14
2019-04-23 14:04:28 -返回值 : com.bootdo.charts.vo.CountOweVo@6b856eb8
2019-04-23 14:04:38 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:38 -HTTP METHOD : POST
2019-04-23 14:04:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:38 -参数 : [com.bootdo.elec.vo.ElecVo@1ac2afc2, com.bootdo.water.vo.WaterVo@744c849a, com.bootdo.heat.vo.HeatVo@120c935e]
2019-04-23 14:04:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:38 -==> Parameters: 
2019-04-23 14:04:38 -<==      Total: 1
2019-04-23 14:04:38 -耗时 : 17
2019-04-23 14:04:38 -返回值 : com.bootdo.charts.vo.CountOweVo@281cef75
2019-04-23 14:04:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:39 -HTTP METHOD : POST
2019-04-23 14:04:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:39 -参数 : [com.bootdo.elec.vo.ElecVo@11e4ae07, com.bootdo.water.vo.WaterVo@81f931d, com.bootdo.heat.vo.HeatVo@38fd7d2b]
2019-04-23 14:04:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:39 -==> Parameters: 
2019-04-23 14:04:39 -<==      Total: 1
2019-04-23 14:04:39 -耗时 : 14
2019-04-23 14:04:39 -返回值 : com.bootdo.charts.vo.CountOweVo@314b5d8e
2019-04-23 14:04:40 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:04:40 -HTTP METHOD : POST
2019-04-23 14:04:40 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:04:40 -参数 : [com.bootdo.elec.vo.ElecVo@2bfe05ff, com.bootdo.water.vo.WaterVo@27d48a8d, com.bootdo.heat.vo.HeatVo@324508e4]
2019-04-23 14:04:40 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:04:40 -==> Parameters: 
2019-04-23 14:04:40 -<==      Total: 1
2019-04-23 14:04:40 -耗时 : 18
2019-04-23 14:04:40 -返回值 : com.bootdo.charts.vo.CountOweVo@2cfa5282
2019-04-23 14:04:58 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 14:04:58 -HTTP METHOD : GET
2019-04-23 14:04:58 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 14:04:58 -参数 : [com.bootdo.elec.vo.ElecVo@4c9d2a07, com.bootdo.heat.vo.HeatVo@77f0637a, com.bootdo.water.vo.WaterVo@be136a8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5d0d3efc]
2019-04-23 14:04:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_type = ? and user_org = ? 
2019-04-23 14:04:59 -==> Parameters: 2019-12(String), A(String), 2(String)
2019-04-23 14:04:59 -<==      Total: 0
2019-04-23 14:04:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_type = ? and user_org = ? 
2019-04-23 14:04:59 -==> Parameters: 2019-12(String), A(String), 2(String)
2019-04-23 14:04:59 -<==      Total: 0
2019-04-23 14:04:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_type = ? and user_org = ? 
2019-04-23 14:04:59 -==> Parameters: 2019-12(String), A(String), 2(String)
2019-04-23 14:04:59 -<==      Total: 0
2019-04-23 14:04:59 -耗时 : 1193
2019-04-23 14:04:59 -返回值 : null
2019-04-23 14:06:46 -请求地址 : http://localhost:8081/login;JSESSIONID=831bc263-d5f5-4141-9eb4-15dd7cc3c235
2019-04-23 14:06:46 -HTTP METHOD : GET
2019-04-23 14:06:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 14:06:46 -参数 : [{}]
2019-04-23 14:06:46 -耗时 : 1
2019-04-23 14:06:46 -返回值 : login
2019-04-23 14:06:47 -请求地址 : http://localhost:8081/getVerify
2019-04-23 14:06:47 -HTTP METHOD : GET
2019-04-23 14:06:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 14:06:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@130c57f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5d06c8e]
2019-04-23 14:06:47 -3467
2019-04-23 14:06:47 -耗时 : 20
2019-04-23 14:06:47 -返回值 : null
2019-04-23 14:06:47 -请求地址 : http://localhost:8081/login
2019-04-23 14:06:47 -HTTP METHOD : GET
2019-04-23 14:06:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 14:06:47 -参数 : [{}]
2019-04-23 14:06:47 -耗时 : 1
2019-04-23 14:06:47 -返回值 : login
2019-04-23 14:06:51 -请求地址 : http://localhost:8081/login
2019-04-23 14:06:51 -HTTP METHOD : POST
2019-04-23 14:06:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 14:06:51 -参数 : [admin, 111111, 3467, org.apache.shiro.web.servlet.ShiroHttpServletRequest@73b29d7]
2019-04-23 14:06:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 14:06:51 -==> Parameters: admin(String)
2019-04-23 14:06:51 -<==      Total: 1
2019-04-23 14:06:51 -耗时 : 7
2019-04-23 14:06:51 -返回值 : {msg=操作成功, code=0}
2019-04-23 14:06:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:06:51 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 14:06:51.872(Timestamp)
2019-04-23 14:06:51 -请求地址 : http://localhost:8081/index
2019-04-23 14:06:51 -HTTP METHOD : GET
2019-04-23 14:06:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 14:06:51 -参数 : [{}]
2019-04-23 14:06:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 14:06:51 -==> Parameters: 1(Long)
2019-04-23 14:06:51 -<==    Updates: 1
2019-04-23 14:06:52 -<==      Total: 49
2019-04-23 14:06:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 14:06:52 -==> Parameters: 138(Long)
2019-04-23 14:06:52 -<==      Total: 1
2019-04-23 14:06:52 -耗时 : 388
2019-04-23 14:06:52 -返回值 : index_v1
2019-04-23 14:06:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:06:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 388(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 14:06:52.286(Timestamp)
2019-04-23 14:06:52 -请求地址 : http://localhost:8081/main
2019-04-23 14:06:52 -HTTP METHOD : GET
2019-04-23 14:06:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:06:52 -参数 : []
2019-04-23 14:06:52 -耗时 : 0
2019-04-23 14:06:52 -返回值 : main
2019-04-23 14:06:52 -<==    Updates: 1
2019-04-23 14:06:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 14:06:52 -HTTP METHOD : GET
2019-04-23 14:06:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 14:06:52 -参数 : []
2019-04-23 14:06:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 14:06:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 14:06:52 -<==      Total: 0
2019-04-23 14:06:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 14:06:52 -==> Parameters: 1(Long), 0(String)
2019-04-23 14:06:52 -<==      Total: 1
2019-04-23 14:06:52 -耗时 : 12
2019-04-23 14:06:52 -返回值 : com.bootdo.common.utils.PageUtils@4db4a3c1
2019-04-23 14:06:52 -请求地址 : http://localhost:8081/main
2019-04-23 14:06:52 -HTTP METHOD : GET
2019-04-23 14:06:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:06:52 -参数 : []
2019-04-23 14:06:52 -耗时 : 0
2019-04-23 14:06:52 -返回值 : main
2019-04-23 14:06:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 14:06:59 -==> Parameters: 1(Long)
2019-04-23 14:06:59 -<==      Total: 93
2019-04-23 14:06:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-23 14:06:59 -HTTP METHOD : GET
2019-04-23 14:06:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-23 14:06:59 -参数 : []
2019-04-23 14:06:59 -耗时 : 10
2019-04-23 14:06:59 -返回值 : charts/tableElecMM
2019-04-23 14:07:02 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 14:07:02 -HTTP METHOD : GET
2019-04-23 14:07:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 14:07:02 -参数 : []
2019-04-23 14:07:02 -耗时 : 16
2019-04-23 14:07:02 -返回值 : charts/countDD
2019-04-23 14:07:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:07:02 -HTTP METHOD : GET
2019-04-23 14:07:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:07:02 -参数 : [userType]
2019-04-23 14:07:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:07:02 -==> Parameters: userType(String)
2019-04-23 14:07:02 -<==      Total: 4
2019-04-23 14:07:02 -耗时 : 31
2019-04-23 14:07:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:07:03 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 14:07:03 -HTTP METHOD : GET
2019-04-23 14:07:03 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 14:07:03 -参数 : []
2019-04-23 14:07:03 -耗时 : 0
2019-04-23 14:07:03 -返回值 : charts/countOwe
2019-04-23 14:07:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:07:03 -HTTP METHOD : GET
2019-04-23 14:07:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:07:03 -参数 : [userType]
2019-04-23 14:07:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:07:03 -==> Parameters: userType(String)
2019-04-23 14:07:03 -<==      Total: 4
2019-04-23 14:07:03 -耗时 : 4
2019-04-23 14:07:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:07:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 14:07:09 -HTTP METHOD : GET
2019-04-23 14:07:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 14:07:09 -参数 : []
2019-04-23 14:07:09 -耗时 : 0
2019-04-23 14:07:09 -返回值 : system/dept/deptTree
2019-04-23 14:07:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 14:07:09 -HTTP METHOD : GET
2019-04-23 14:07:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 14:07:09 -参数 : []
2019-04-23 14:07:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 14:07:09 -==> Parameters: 
2019-04-23 14:07:09 -<==      Total: 3
2019-04-23 14:07:09 -耗时 : 50
2019-04-23 14:07:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 14:07:18 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:18 -HTTP METHOD : POST
2019-04-23 14:07:18 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:18 -参数 : [com.bootdo.elec.vo.ElecVo@a4b0d29, com.bootdo.water.vo.WaterVo@c8c562, com.bootdo.heat.vo.HeatVo@718a712a]
2019-04-23 14:07:18 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:18 -==> Parameters: 
2019-04-23 14:07:18 -<==      Total: 1
2019-04-23 14:07:18 -耗时 : 96
2019-04-23 14:07:18 -返回值 : com.bootdo.charts.vo.CountOweVo@57518a8c
2019-04-23 14:07:29 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:29 -HTTP METHOD : POST
2019-04-23 14:07:29 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:29 -参数 : [com.bootdo.elec.vo.ElecVo@2de18765, com.bootdo.water.vo.WaterVo@70fc5c94, com.bootdo.heat.vo.HeatVo@7dba6f2]
2019-04-23 14:07:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:29 -==> Parameters: 
2019-04-23 14:07:29 -<==      Total: 1
2019-04-23 14:07:29 -耗时 : 15
2019-04-23 14:07:29 -返回值 : com.bootdo.charts.vo.CountOweVo@2a74839
2019-04-23 14:07:46 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:46 -HTTP METHOD : POST
2019-04-23 14:07:46 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:46 -参数 : [com.bootdo.elec.vo.ElecVo@8b306fe, com.bootdo.water.vo.WaterVo@53dafcd8, com.bootdo.heat.vo.HeatVo@4013f5a0]
2019-04-23 14:07:46 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:46 -==> Parameters: 
2019-04-23 14:07:46 -<==      Total: 1
2019-04-23 14:07:46 -耗时 : 11
2019-04-23 14:07:46 -返回值 : com.bootdo.charts.vo.CountOweVo@49c26ac2
2019-04-23 14:07:47 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:47 -HTTP METHOD : POST
2019-04-23 14:07:47 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:47 -参数 : [com.bootdo.elec.vo.ElecVo@4754d7c3, com.bootdo.water.vo.WaterVo@4f356d6a, com.bootdo.heat.vo.HeatVo@4132bd0f]
2019-04-23 14:07:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:47 -==> Parameters: 
2019-04-23 14:07:47 -<==      Total: 1
2019-04-23 14:07:47 -耗时 : 13
2019-04-23 14:07:47 -返回值 : com.bootdo.charts.vo.CountOweVo@3061c70a
2019-04-23 14:07:48 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:48 -HTTP METHOD : POST
2019-04-23 14:07:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:48 -参数 : [com.bootdo.elec.vo.ElecVo@6cce44b8, com.bootdo.water.vo.WaterVo@4b98e707, com.bootdo.heat.vo.HeatVo@101fe101]
2019-04-23 14:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:48 -==> Parameters: 
2019-04-23 14:07:48 -<==      Total: 1
2019-04-23 14:07:48 -耗时 : 12
2019-04-23 14:07:48 -返回值 : com.bootdo.charts.vo.CountOweVo@2a72ba4f
2019-04-23 14:07:49 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:07:49 -HTTP METHOD : POST
2019-04-23 14:07:49 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:07:49 -参数 : [com.bootdo.elec.vo.ElecVo@c935916, com.bootdo.water.vo.WaterVo@116bf011, com.bootdo.heat.vo.HeatVo@724f2e73]
2019-04-23 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:07:49 -==> Parameters: 
2019-04-23 14:07:49 -<==      Total: 1
2019-04-23 14:07:49 -耗时 : 15
2019-04-23 14:07:49 -返回值 : com.bootdo.charts.vo.CountOweVo@1c0b4aea
2019-04-23 14:07:54 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 14:07:54 -HTTP METHOD : GET
2019-04-23 14:07:54 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 14:07:54 -参数 : [com.bootdo.elec.vo.ElecVo@181e4fc, com.bootdo.heat.vo.HeatVo@35544f1c, com.bootdo.water.vo.WaterVo@d3fd8d6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@56612617]
2019-04-23 14:07:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:07:54 -==> Parameters: 2018-04(String), 2(String)
2019-04-23 14:07:54 -<==      Total: 0
2019-04-23 14:07:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:07:54 -==> Parameters: 2018-04(String), 2(String)
2019-04-23 14:07:54 -<==      Total: 0
2019-04-23 14:07:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:07:54 -==> Parameters: 2018-04(String), 2(String)
2019-04-23 14:07:54 -<==      Total: 0
2019-04-23 14:07:54 -耗时 : 23
2019-04-23 14:07:54 -返回值 : null
2019-04-23 14:08:47 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:08:47 -HTTP METHOD : POST
2019-04-23 14:08:47 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:08:47 -参数 : [com.bootdo.elec.vo.ElecVo@4b8e1ab6, com.bootdo.water.vo.WaterVo@550c5ead, com.bootdo.heat.vo.HeatVo@21d4ce96]
2019-04-23 14:08:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:47 -==> Parameters: 
2019-04-23 14:08:47 -<==      Total: 1
2019-04-23 14:08:47 -耗时 : 13
2019-04-23 14:08:47 -返回值 : com.bootdo.charts.vo.CountOweVo@d314d5
2019-04-23 14:08:48 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:08:48 -HTTP METHOD : POST
2019-04-23 14:08:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:08:48 -参数 : [com.bootdo.elec.vo.ElecVo@77e2307d, com.bootdo.water.vo.WaterVo@21029a84, com.bootdo.heat.vo.HeatVo@104cb433]
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -耗时 : 11
2019-04-23 14:08:48 -返回值 : com.bootdo.charts.vo.CountOweVo@1e244d74
2019-04-23 14:08:48 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:08:48 -HTTP METHOD : POST
2019-04-23 14:08:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:08:48 -参数 : [com.bootdo.elec.vo.ElecVo@6f7b3782, com.bootdo.water.vo.WaterVo@1073781, com.bootdo.heat.vo.HeatVo@6964f7dd]
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:08:48 -==> Parameters: 
2019-04-23 14:08:48 -<==      Total: 1
2019-04-23 14:08:48 -耗时 : 13
2019-04-23 14:08:48 -返回值 : com.bootdo.charts.vo.CountOweVo@509fb0d8
2019-04-23 14:08:49 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 14:08:49 -HTTP METHOD : GET
2019-04-23 14:08:49 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 14:08:49 -参数 : [com.bootdo.elec.vo.ElecVo@16682453, com.bootdo.heat.vo.HeatVo@e30d4ef, com.bootdo.water.vo.WaterVo@1aaff83, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5be4010e]
2019-04-23 14:08:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:08:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:08:49 -<==      Total: 0
2019-04-23 14:08:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:08:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:08:49 -<==      Total: 0
2019-04-23 14:08:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:08:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:08:49 -<==      Total: 1
2019-04-23 14:08:49 -耗时 : 228
2019-04-23 14:08:49 -返回值 : null
2019-04-23 14:11:10 -请求地址 : http://localhost:8081/index
2019-04-23 14:11:10 -HTTP METHOD : GET
2019-04-23 14:11:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 14:11:10 -参数 : [{}]
2019-04-23 14:11:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 14:11:10 -==> Parameters: 1(Long)
2019-04-23 14:11:10 -<==      Total: 49
2019-04-23 14:11:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 14:11:10 -==> Parameters: 138(Long)
2019-04-23 14:11:10 -<==      Total: 1
2019-04-23 14:11:10 -耗时 : 67
2019-04-23 14:11:10 -返回值 : index_v1
2019-04-23 14:11:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:11:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 67(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 14:11:10.817(Timestamp)
2019-04-23 14:11:10 -请求地址 : http://localhost:8081/main
2019-04-23 14:11:10 -HTTP METHOD : GET
2019-04-23 14:11:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:11:10 -参数 : []
2019-04-23 14:11:10 -耗时 : 1
2019-04-23 14:11:10 -返回值 : main
2019-04-23 14:11:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 14:11:11 -HTTP METHOD : GET
2019-04-23 14:11:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 14:11:11 -参数 : []
2019-04-23 14:11:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 14:11:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 14:11:11 -<==      Total: 0
2019-04-23 14:11:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 14:11:11 -==> Parameters: 1(Long), 0(String)
2019-04-23 14:11:11 -<==      Total: 1
2019-04-23 14:11:11 -耗时 : 9
2019-04-23 14:11:11 -返回值 : com.bootdo.common.utils.PageUtils@2843e2a8
2019-04-23 14:11:11 -<==    Updates: 1
2019-04-23 14:11:11 -请求地址 : http://localhost:8081/main
2019-04-23 14:11:11 -HTTP METHOD : GET
2019-04-23 14:11:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:11:11 -参数 : []
2019-04-23 14:11:11 -耗时 : 1
2019-04-23 14:11:11 -返回值 : main
2019-04-23 14:14:05 -WebSocketSession[2 current WS(1)-HttpStream(1)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 2, completed tasks = 16]
2019-04-23 14:14:05 -WebSocketSession[2 current WS(1)-HttpStream(1)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 2, completed tasks = 42]
2019-04-23 14:14:05 -WebSocketSession[2 current WS(1)-HttpStream(1)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 2, completed tasks = 53]
2019-04-23 14:14:30 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 14:17:05 -Starting BootdoApplication on ZJZL-20180906VX with PID 3052 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 14:17:05 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 14:17:05 -The following profiles are active: dev
2019-04-23 14:17:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1080b026: startup date [Tue Apr 23 14:17:06 CST 2019]; root of context hierarchy
2019-04-23 14:17:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 14:17:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1a940d34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ced3bdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 14:17:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 14:17:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:17:14 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 14:17:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 14:17:17 -Starting service [Tomcat]
2019-04-23 14:17:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 14:17:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 14:17:19 -Initializing Spring embedded WebApplicationContext
2019-04-23 14:17:19 -Root WebApplicationContext: initialization completed in 13690 ms
2019-04-23 14:17:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 14:17:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 14:17:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 14:17:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 14:17:20 -Filter xssFilter was not registered (disabled)
2019-04-23 14:17:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 14:17:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 14:17:20 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 14:17:20 -Servlet dispatcherServlet mapped to [/]
2019-04-23 14:17:34 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1080b026: startup date [Tue Apr 23 14:17:06 CST 2019]; root of context hierarchy
2019-04-23 14:17:35 -Using default implementation for ThreadExecutor
2019-04-23 14:17:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 14:17:35 -Quartz Scheduler v.2.2.1 created.
2019-04-23 14:17:35 -RAMJobStore initialized.
2019-04-23 14:17:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 14:17:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 14:17:35 -Quartz scheduler version: 2.2.1
2019-04-23 14:17:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5bccef9f
2019-04-23 14:17:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 14:17:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 14:17:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 14:17:39 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 14:17:39 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 14:17:39 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 14:17:39 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 14:17:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 14:17:39 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 14:17:39 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 14:17:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 14:17:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 14:17:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 14:17:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 14:17:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 14:17:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 14:17:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 14:17:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 14:17:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 14:17:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 14:17:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 14:17:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 14:17:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 14:17:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 14:17:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 14:17:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 14:17:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 14:17:39 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 14:17:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 14:17:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 14:17:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 14:17:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 14:17:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 14:17:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 14:17:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 14:17:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 14:17:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 14:17:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 14:17:39 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 14:17:39 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 14:17:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 14:17:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:17:39 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:17:39 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 14:17:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 14:17:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 14:17:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 14:17:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 14:17:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 14:17:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 14:17:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 14:17:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 14:17:39 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 14:17:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 14:17:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 14:17:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 14:17:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 14:17:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 14:17:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 14:17:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 14:17:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 14:17:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 14:17:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 14:17:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 14:17:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 14:17:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 14:17:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 14:17:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 14:17:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 14:17:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 14:17:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 14:17:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 14:17:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 14:17:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 14:17:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 14:17:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 14:17:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 14:17:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 14:17:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:17:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 14:17:39 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 14:17:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 14:17:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:17:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 14:17:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:17:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 14:17:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 14:17:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 14:17:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 14:17:40 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 14:17:40 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 14:17:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:17:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1080b026: startup date [Tue Apr 23 14:17:06 CST 2019]; root of context hierarchy
2019-04-23 14:17:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:17:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:17:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:17:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 14:17:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 14:17:44 -Registering beans for JMX exposure on startup
2019-04-23 14:17:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 14:17:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 14:17:44 -Starting beans in phase 2147483647
2019-04-23 14:17:44 -Context refreshed
2019-04-23 14:17:44 -Found 1 custom documentation plugin(s)
2019-04-23 14:17:44 -Scanning for api listing references
2019-04-23 14:17:45 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_1
2019-04-23 14:17:45 -Generating unique operation named: addUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: editUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: listUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_2
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_3
2019-04-23 14:17:45 -Generating unique operation named: saveUsingPOST_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPOST_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPUT_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 14:17:45 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 14:17:45 -Generating unique operation named: addUsingGET_2
2019-04-23 14:17:45 -Generating unique operation named: editUsingGET_2
2019-04-23 14:17:45 -Generating unique operation named: listUsingGET_2
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_4
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_5
2019-04-23 14:17:45 -Generating unique operation named: saveUsingPOST_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPOST_2
2019-04-23 14:17:45 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: addUsingGET_3
2019-04-23 14:17:45 -Generating unique operation named: editUsingGET_3
2019-04-23 14:17:45 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: listUsingGET_3
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_6
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_7
2019-04-23 14:17:45 -Generating unique operation named: saveUsingPOST_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingGET_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPOST_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPUT_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 14:17:45 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 14:17:45 -Generating unique operation named: addUsingGET_4
2019-04-23 14:17:45 -Generating unique operation named: editUsingGET_4
2019-04-23 14:17:45 -Generating unique operation named: listUsingGET_4
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_8
2019-04-23 14:17:45 -Generating unique operation named: removeUsingPOST_9
2019-04-23 14:17:45 -Generating unique operation named: saveUsingPOST_4
2019-04-23 14:17:45 -Generating unique operation named: updateUsingGET_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPOST_4
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPUT_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 14:17:45 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 14:17:45 -Generating unique operation named: ElecUsingGET_1
2019-04-23 14:17:45 -Generating unique operation named: addUsingGET_5
2019-04-23 14:17:45 -Generating unique operation named: editUsingGET_5
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_5
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_10
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_11
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingGET_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPUT_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 14:17:46 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_6
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_6
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_6
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_7
2019-04-23 14:17:46 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_7
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_12
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_13
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingGET_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPUT_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 14:17:46 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 14:17:46 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_7
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_8
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_8
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_14
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_15
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingGET_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_8
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPUT_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 14:17:46 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_8
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_9
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_9
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_16
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_17
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_8
2019-04-23 14:17:46 -Generating unique operation named: updateUsingGET_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_9
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPUT_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 14:17:46 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_9
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_10
2019-04-23 14:17:46 -Generating unique operation named: infoUsingGET_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingPOST_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingPUT_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 14:17:46 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_10
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_18
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_19
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_9
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_10
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_11
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_20
2019-04-23 14:17:46 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_10
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_11
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_12
2019-04-23 14:17:46 -Generating unique operation named: removeUsingPOST_21
2019-04-23 14:17:46 -Generating unique operation named: saveUsingPOST_10
2019-04-23 14:17:46 -Generating unique operation named: treeUsingGET_1
2019-04-23 14:17:46 -Generating unique operation named: treeUsingGET_2
2019-04-23 14:17:46 -Generating unique operation named: updateUsingPOST_11
2019-04-23 14:17:46 -Generating unique operation named: addUsingGET_11
2019-04-23 14:17:46 -Generating unique operation named: editUsingGET_12
2019-04-23 14:17:46 -Generating unique operation named: listUsingGET_13
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_22
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_23
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingGET_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPUT_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 14:17:47 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_12
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_13
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_14
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_24
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_25
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingGET_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_13
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPUT_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 14:17:47 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_13
2019-04-23 14:17:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_14
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_15
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_13
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_14
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_14
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_16
2019-04-23 14:17:47 -Generating unique operation named: listUsingHEAD_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingPOST_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingPUT_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingPATCH_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingDELETE_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingTRACE_1
2019-04-23 14:17:47 -Generating unique operation named: countDDUsingGET_1
2019-04-23 14:17:47 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 14:17:47 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 14:17:47 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 14:17:47 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_14
2019-04-23 14:17:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_15
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_17
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_26
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_15
2019-04-23 14:17:47 -Generating unique operation named: treeUsingGET_3
2019-04-23 14:17:47 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_15
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_15
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_16
2019-04-23 14:17:47 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_18
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_27
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_28
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_16
2019-04-23 14:17:47 -Generating unique operation named: updateUsingGET_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_16
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPUT_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 14:17:47 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 14:17:47 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_16
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_17
2019-04-23 14:17:47 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_19
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_29
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_30
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_17
2019-04-23 14:17:47 -Generating unique operation named: updateUsingGET_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_17
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPUT_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 14:17:47 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 14:17:47 -Generating unique operation named: addUsingGET_17
2019-04-23 14:17:47 -Generating unique operation named: editUsingGET_18
2019-04-23 14:17:47 -Generating unique operation named: listUsingGET_20
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_31
2019-04-23 14:17:47 -Generating unique operation named: removeUsingPOST_32
2019-04-23 14:17:47 -Generating unique operation named: saveUsingPOST_18
2019-04-23 14:17:47 -Generating unique operation named: updateUsingGET_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPOST_18
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPUT_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 14:17:47 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 14:17:48 -Starting Quartz Scheduler now
2019-04-23 14:17:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 14:17:48 -Starting...
2019-04-23 14:17:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 14:17:48 -Started.
2019-04-23 14:17:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 14:17:48 -Using a shared selector for servlet write/read
2019-04-23 14:17:48 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 14:17:48 -Started BootdoApplication in 44.357 seconds (JVM running for 47.296)
2019-04-23 14:17:48 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 14:17:48 -==> Parameters: 
2019-04-23 14:17:49 -<==      Total: 1
2019-04-23 14:18:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 14:18:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 14:18:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2019-04-23 14:18:01 -Enabling session validation scheduler...
2019-04-23 14:18:02 -请求地址 : http://localhost:8081/login;JSESSIONID=640dd60f-69dc-4067-a8c7-6bfeb24555f3
2019-04-23 14:18:02 -HTTP METHOD : GET
2019-04-23 14:18:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 14:18:02 -参数 : [{}]
2019-04-23 14:18:02 -耗时 : 7
2019-04-23 14:18:02 -返回值 : login
2019-04-23 14:18:03 -请求地址 : http://localhost:8081/getVerify
2019-04-23 14:18:03 -HTTP METHOD : GET
2019-04-23 14:18:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 14:18:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dd5e516, org.apache.shiro.web.servlet.ShiroHttpServletResponse@69ea6c74]
2019-04-23 14:18:08 -4725
2019-04-23 14:18:08 -耗时 : 4465
2019-04-23 14:18:08 -返回值 : null
2019-04-23 14:18:13 -请求地址 : http://localhost:8081/login
2019-04-23 14:18:13 -HTTP METHOD : POST
2019-04-23 14:18:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 14:18:13 -参数 : [admin, 111111, 4725, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d685221]
2019-04-23 14:18:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 14:18:13 -==> Parameters: admin(String)
2019-04-23 14:18:13 -<==      Total: 1
2019-04-23 14:18:13 -耗时 : 320
2019-04-23 14:18:13 -返回值 : {msg=操作成功, code=0}
2019-04-23 14:18:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 14:18:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:18:14 -==> Parameters: 1(Long), admin(String), 登录(String), 320(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 14:18:14.16(Timestamp)
2019-04-23 14:18:14 -<==    Updates: 1
2019-04-23 14:18:14 -请求地址 : http://localhost:8081/index
2019-04-23 14:18:14 -HTTP METHOD : GET
2019-04-23 14:18:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 14:18:14 -参数 : [{}]
2019-04-23 14:18:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 14:18:14 -==> Parameters: 1(Long)
2019-04-23 14:18:14 -<==      Total: 49
2019-04-23 14:18:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 14:18:15 -==> Parameters: 138(Long)
2019-04-23 14:18:15 -<==      Total: 1
2019-04-23 14:18:15 -耗时 : 440
2019-04-23 14:18:15 -返回值 : index_v1
2019-04-23 14:18:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:18:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 441(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 14:18:15.175(Timestamp)
2019-04-23 14:18:15 -<==    Updates: 1
2019-04-23 14:18:15 -请求地址 : http://localhost:8081/main
2019-04-23 14:18:15 -HTTP METHOD : GET
2019-04-23 14:18:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:18:15 -参数 : []
2019-04-23 14:18:15 -耗时 : 0
2019-04-23 14:18:15 -返回值 : main
2019-04-23 14:18:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 14:18:15 -HTTP METHOD : GET
2019-04-23 14:18:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 14:18:15 -参数 : []
2019-04-23 14:18:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 14:18:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 14:18:16 -请求地址 : http://localhost:8081/main
2019-04-23 14:18:16 -HTTP METHOD : GET
2019-04-23 14:18:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:18:16 -参数 : []
2019-04-23 14:18:16 -耗时 : 1
2019-04-23 14:18:16 -返回值 : main
2019-04-23 14:18:16 -<==      Total: 0
2019-04-23 14:18:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 14:18:16 -==> Parameters: 1(Long), 0(String)
2019-04-23 14:18:16 -<==      Total: 1
2019-04-23 14:18:16 -耗时 : 375
2019-04-23 14:18:16 -返回值 : com.bootdo.common.utils.PageUtils@461ed460
2019-04-23 14:18:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 14:18:32 -==> Parameters: 1(Long)
2019-04-23 14:18:32 -<==      Total: 93
2019-04-23 14:18:32 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 14:18:32 -HTTP METHOD : GET
2019-04-23 14:18:32 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 14:18:32 -参数 : []
2019-04-23 14:18:32 -耗时 : 0
2019-04-23 14:18:32 -返回值 : charts/countYY
2019-04-23 14:18:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:18:33 -HTTP METHOD : GET
2019-04-23 14:18:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:18:33 -参数 : [userType]
2019-04-23 14:18:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:18:33 -==> Parameters: userType(String)
2019-04-23 14:18:33 -<==      Total: 4
2019-04-23 14:18:33 -耗时 : 44
2019-04-23 14:18:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:18:33 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 14:18:33 -HTTP METHOD : GET
2019-04-23 14:18:33 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 14:18:33 -参数 : []
2019-04-23 14:18:33 -耗时 : 1
2019-04-23 14:18:33 -返回值 : charts/countOwe
2019-04-23 14:18:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:18:34 -HTTP METHOD : GET
2019-04-23 14:18:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:18:34 -参数 : [userType]
2019-04-23 14:18:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:18:34 -==> Parameters: userType(String)
2019-04-23 14:18:34 -<==      Total: 4
2019-04-23 14:18:34 -耗时 : 6
2019-04-23 14:18:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:18:40 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-23 14:18:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 14:18:43 -HTTP METHOD : GET
2019-04-23 14:18:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 14:18:43 -参数 : []
2019-04-23 14:18:43 -耗时 : 1
2019-04-23 14:18:43 -返回值 : system/dept/deptTree
2019-04-23 14:18:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 14:18:43 -HTTP METHOD : GET
2019-04-23 14:18:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 14:18:43 -参数 : []
2019-04-23 14:18:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 14:18:43 -==> Parameters: 
2019-04-23 14:18:43 -<==      Total: 3
2019-04-23 14:18:43 -耗时 : 65
2019-04-23 14:18:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 14:18:45 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:18:45 -HTTP METHOD : POST
2019-04-23 14:18:45 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:18:45 -参数 : [com.bootdo.elec.vo.ElecVo@3293cf46, com.bootdo.water.vo.WaterVo@4cb9bc00, com.bootdo.heat.vo.HeatVo@664aeb08]
2019-04-23 14:18:45 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:18:45 -==> Parameters: 
2019-04-23 14:18:45 -<==      Total: 1
2019-04-23 14:18:45 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:18:45 -==> Parameters: 
2019-04-23 14:18:45 -<==      Total: 1
2019-04-23 14:18:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:18:45 -==> Parameters: 
2019-04-23 14:18:45 -<==      Total: 1
2019-04-23 14:18:45 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:18:46 -==> Parameters: 
2019-04-23 14:18:46 -<==      Total: 1
2019-04-23 14:18:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:18:46 -==> Parameters: 
2019-04-23 14:18:46 -<==      Total: 1
2019-04-23 14:18:46 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:18:46 -==> Parameters: 
2019-04-23 14:18:46 -<==      Total: 1
2019-04-23 14:18:46 -耗时 : 275
2019-04-23 14:18:46 -返回值 : com.bootdo.charts.vo.CountOweVo@503592be
2019-04-23 14:18:50 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 14:18:50 -HTTP METHOD : GET
2019-04-23 14:18:50 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 14:18:50 -参数 : [com.bootdo.elec.vo.ElecVo@3877169b, com.bootdo.heat.vo.HeatVo@d7baa36, com.bootdo.water.vo.WaterVo@4d6bb541, org.apache.shiro.web.servlet.ShiroHttpServletResponse@404ff57a]
2019-04-23 14:20:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:20:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:20:58 -<==      Total: 0
2019-04-23 14:48:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 2616 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 14:48:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 14:48:20 -The following profiles are active: dev
2019-04-23 14:48:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 14:48:20 CST 2019]; root of context hierarchy
2019-04-23 14:48:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 14:48:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 14:48:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 14:48:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 14:48:29 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 14:48:29 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 14:48:29 -Starting service [Tomcat]
2019-04-23 14:48:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 14:48:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 14:48:30 -Initializing Spring embedded WebApplicationContext
2019-04-23 14:48:30 -Root WebApplicationContext: initialization completed in 9510 ms
2019-04-23 14:48:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 14:48:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 14:48:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 14:48:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 14:48:30 -Filter xssFilter was not registered (disabled)
2019-04-23 14:48:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 14:48:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 14:48:30 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 14:48:30 -Servlet dispatcherServlet mapped to [/]
2019-04-23 14:48:33 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 14:48:20 CST 2019]; root of context hierarchy
2019-04-23 14:48:34 -Using default implementation for ThreadExecutor
2019-04-23 14:48:34 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 14:48:34 -Quartz Scheduler v.2.2.1 created.
2019-04-23 14:48:34 -RAMJobStore initialized.
2019-04-23 14:48:34 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 14:48:34 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 14:48:34 -Quartz scheduler version: 2.2.1
2019-04-23 14:48:34 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c212536
2019-04-23 14:48:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 14:48:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 14:48:38 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 14:48:38 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 14:48:38 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 14:48:38 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 14:48:38 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 14:48:38 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 14:48:38 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 14:48:38 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 14:48:38 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 14:48:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 14:48:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 14:48:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 14:48:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 14:48:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 14:48:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 14:48:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 14:48:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 14:48:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 14:48:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 14:48:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 14:48:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 14:48:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 14:48:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 14:48:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 14:48:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 14:48:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 14:48:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 14:48:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 14:48:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 14:48:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 14:48:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 14:48:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 14:48:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 14:48:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 14:48:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 14:48:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 14:48:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 14:48:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 14:48:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 14:48:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 14:48:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:48:38 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:48:38 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 14:48:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 14:48:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 14:48:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 14:48:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 14:48:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 14:48:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 14:48:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 14:48:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 14:48:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 14:48:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 14:48:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 14:48:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 14:48:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 14:48:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 14:48:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 14:48:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 14:48:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 14:48:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 14:48:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 14:48:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 14:48:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 14:48:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 14:48:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 14:48:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 14:48:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 14:48:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 14:48:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 14:48:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 14:48:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 14:48:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 14:48:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 14:48:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 14:48:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 14:48:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 14:48:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 14:48:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 14:48:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 14:48:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 14:48:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 14:48:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 14:48:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 14:48:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 14:48:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 14:48:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 14:48:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 14:48:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 14:48:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 14:48:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:48:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 14:48:20 CST 2019]; root of context hierarchy
2019-04-23 14:48:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:48:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:48:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 14:48:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 14:48:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 14:48:48 -Registering beans for JMX exposure on startup
2019-04-23 14:48:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 14:48:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 14:48:48 -Starting beans in phase 2147483647
2019-04-23 14:48:48 -Context refreshed
2019-04-23 14:48:48 -Found 1 custom documentation plugin(s)
2019-04-23 14:48:48 -Scanning for api listing references
2019-04-23 14:48:48 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_1
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_2
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_3
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPUT_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 14:48:49 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_2
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_2
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_2
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_4
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_5
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_2
2019-04-23 14:48:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_3
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_3
2019-04-23 14:48:49 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_3
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_6
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_7
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingGET_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPUT_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 14:48:49 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_4
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_4
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_4
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_8
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_9
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingGET_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPUT_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 14:48:49 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 14:48:49 -Generating unique operation named: ElecUsingGET_1
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_5
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_5
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_5
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_10
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_11
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingGET_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPUT_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 14:48:49 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_6
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_6
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_6
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_6
2019-04-23 14:48:49 -Generating unique operation named: editUsingGET_7
2019-04-23 14:48:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 14:48:49 -Generating unique operation named: listUsingGET_7
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_12
2019-04-23 14:48:49 -Generating unique operation named: removeUsingPOST_13
2019-04-23 14:48:49 -Generating unique operation named: saveUsingPOST_6
2019-04-23 14:48:49 -Generating unique operation named: updateUsingGET_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPOST_7
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPUT_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 14:48:49 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 14:48:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 14:48:49 -Generating unique operation named: addUsingGET_7
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_8
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_8
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_14
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_15
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingGET_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPUT_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 14:48:50 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_8
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_9
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_9
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_16
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_17
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingGET_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPUT_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 14:48:50 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_9
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_10
2019-04-23 14:48:50 -Generating unique operation named: infoUsingGET_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingPOST_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingPUT_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 14:48:50 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_10
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_18
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_19
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_10
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_11
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_20
2019-04-23 14:48:50 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_10
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_11
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_12
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_21
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_10
2019-04-23 14:48:50 -Generating unique operation named: treeUsingGET_1
2019-04-23 14:48:50 -Generating unique operation named: treeUsingGET_2
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_11
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_11
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_12
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_13
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_22
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_23
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_11
2019-04-23 14:48:50 -Generating unique operation named: updateUsingGET_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_12
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPUT_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 14:48:50 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_12
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_13
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_14
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_24
2019-04-23 14:48:50 -Generating unique operation named: removeUsingPOST_25
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_12
2019-04-23 14:48:50 -Generating unique operation named: updateUsingGET_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_13
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPUT_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 14:48:50 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 14:48:50 -Generating unique operation named: addUsingGET_13
2019-04-23 14:48:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 14:48:50 -Generating unique operation named: editUsingGET_14
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_15
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_13
2019-04-23 14:48:50 -Generating unique operation named: saveUsingPOST_14
2019-04-23 14:48:50 -Generating unique operation named: updateUsingPOST_14
2019-04-23 14:48:50 -Generating unique operation named: listUsingGET_16
2019-04-23 14:48:50 -Generating unique operation named: listUsingHEAD_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingPOST_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingPUT_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingPATCH_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingDELETE_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 14:48:50 -Generating unique operation named: listUsingTRACE_1
2019-04-23 14:48:51 -Generating unique operation named: countDDUsingGET_1
2019-04-23 14:48:51 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 14:48:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 14:48:51 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 14:48:51 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 14:48:51 -Generating unique operation named: addUsingGET_14
2019-04-23 14:48:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 14:48:51 -Generating unique operation named: editUsingGET_15
2019-04-23 14:48:51 -Generating unique operation named: listUsingGET_17
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_26
2019-04-23 14:48:51 -Generating unique operation named: saveUsingPOST_15
2019-04-23 14:48:51 -Generating unique operation named: treeUsingGET_3
2019-04-23 14:48:51 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPOST_15
2019-04-23 14:48:51 -Generating unique operation named: addUsingGET_15
2019-04-23 14:48:51 -Generating unique operation named: editUsingGET_16
2019-04-23 14:48:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 14:48:51 -Generating unique operation named: listUsingGET_18
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_27
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_28
2019-04-23 14:48:51 -Generating unique operation named: saveUsingPOST_16
2019-04-23 14:48:51 -Generating unique operation named: updateUsingGET_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPOST_16
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPUT_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 14:48:51 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 14:48:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 14:48:51 -Generating unique operation named: addUsingGET_16
2019-04-23 14:48:51 -Generating unique operation named: editUsingGET_17
2019-04-23 14:48:51 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 14:48:51 -Generating unique operation named: listUsingGET_19
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_29
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_30
2019-04-23 14:48:51 -Generating unique operation named: saveUsingPOST_17
2019-04-23 14:48:51 -Generating unique operation named: updateUsingGET_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPOST_17
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPUT_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 14:48:51 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 14:48:51 -Generating unique operation named: addUsingGET_17
2019-04-23 14:48:51 -Generating unique operation named: editUsingGET_18
2019-04-23 14:48:51 -Generating unique operation named: listUsingGET_20
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_31
2019-04-23 14:48:51 -Generating unique operation named: removeUsingPOST_32
2019-04-23 14:48:51 -Generating unique operation named: saveUsingPOST_18
2019-04-23 14:48:51 -Generating unique operation named: updateUsingGET_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPOST_18
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPUT_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 14:48:51 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 14:48:51 -Starting Quartz Scheduler now
2019-04-23 14:48:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 14:48:51 -Starting...
2019-04-23 14:48:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 14:48:51 -Started.
2019-04-23 14:48:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 14:48:51 -Using a shared selector for servlet write/read
2019-04-23 14:48:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 14:48:51 -Started BootdoApplication in 32.645 seconds (JVM running for 33.668)
2019-04-23 14:48:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 14:48:52 -==> Parameters: 
2019-04-23 14:48:52 -<==      Total: 1
2019-04-23 14:49:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 14:49:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 14:49:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2019-04-23 14:49:01 -Enabling session validation scheduler...
2019-04-23 14:49:01 -请求地址 : http://localhost:8081/login;JSESSIONID=8f299e9e-7956-4dc0-bcef-0a61edb8f6d6
2019-04-23 14:49:01 -HTTP METHOD : GET
2019-04-23 14:49:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 14:49:01 -参数 : [{}]
2019-04-23 14:49:01 -耗时 : 4
2019-04-23 14:49:01 -返回值 : login
2019-04-23 14:49:03 -请求地址 : http://localhost:8081/getVerify
2019-04-23 14:49:03 -HTTP METHOD : GET
2019-04-23 14:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 14:49:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f0f3348, org.apache.shiro.web.servlet.ShiroHttpServletResponse@616c488b]
2019-04-23 14:49:08 -7079
2019-04-23 14:49:08 -耗时 : 4893
2019-04-23 14:49:08 -返回值 : null
2019-04-23 14:49:13 -请求地址 : http://localhost:8081/login
2019-04-23 14:49:13 -HTTP METHOD : POST
2019-04-23 14:49:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 14:49:13 -参数 : [admin, 111111, 7079, org.apache.shiro.web.servlet.ShiroHttpServletRequest@212ee018]
2019-04-23 14:49:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 14:49:13 -==> Parameters: admin(String)
2019-04-23 14:49:13 -<==      Total: 1
2019-04-23 14:49:13 -耗时 : 200
2019-04-23 14:49:13 -返回值 : {msg=操作成功, code=0}
2019-04-23 14:49:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 14:49:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:49:13 -==> Parameters: 1(Long), admin(String), 登录(String), 201(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 14:49:13.549(Timestamp)
2019-04-23 14:49:13 -请求地址 : http://localhost:8081/index
2019-04-23 14:49:13 -HTTP METHOD : GET
2019-04-23 14:49:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 14:49:13 -参数 : [{}]
2019-04-23 14:49:13 -<==    Updates: 1
2019-04-23 14:49:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 14:49:14 -==> Parameters: 1(Long)
2019-04-23 14:49:14 -<==      Total: 49
2019-04-23 14:49:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 14:49:14 -==> Parameters: 138(Long)
2019-04-23 14:49:14 -<==      Total: 1
2019-04-23 14:49:14 -耗时 : 496
2019-04-23 14:49:14 -返回值 : index_v1
2019-04-23 14:49:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 14:49:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 496(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 14:49:14.339(Timestamp)
2019-04-23 14:49:14 -<==    Updates: 1
2019-04-23 14:49:14 -请求地址 : http://localhost:8081/main
2019-04-23 14:49:14 -HTTP METHOD : GET
2019-04-23 14:49:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:49:14 -参数 : []
2019-04-23 14:49:14 -耗时 : 0
2019-04-23 14:49:14 -返回值 : main
2019-04-23 14:49:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 14:49:14 -HTTP METHOD : GET
2019-04-23 14:49:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 14:49:14 -参数 : []
2019-04-23 14:49:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 14:49:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 14:49:14 -请求地址 : http://localhost:8081/main
2019-04-23 14:49:14 -HTTP METHOD : GET
2019-04-23 14:49:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 14:49:14 -参数 : []
2019-04-23 14:49:14 -耗时 : 1
2019-04-23 14:49:14 -返回值 : main
2019-04-23 14:49:14 -<==      Total: 0
2019-04-23 14:49:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 14:49:14 -==> Parameters: 1(Long), 0(String)
2019-04-23 14:49:14 -<==      Total: 1
2019-04-23 14:49:14 -耗时 : 133
2019-04-23 14:49:14 -返回值 : com.bootdo.common.utils.PageUtils@6609286
2019-04-23 14:49:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 14:49:22 -==> Parameters: 1(Long)
2019-04-23 14:49:22 -<==      Total: 93
2019-04-23 14:49:22 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 14:49:22 -HTTP METHOD : GET
2019-04-23 14:49:22 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 14:49:22 -参数 : []
2019-04-23 14:49:22 -耗时 : 12
2019-04-23 14:49:22 -返回值 : charts/countDD
2019-04-23 14:49:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:49:23 -HTTP METHOD : GET
2019-04-23 14:49:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:49:23 -参数 : [userType]
2019-04-23 14:49:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:49:23 -==> Parameters: userType(String)
2019-04-23 14:49:23 -<==      Total: 4
2019-04-23 14:49:23 -耗时 : 65
2019-04-23 14:49:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:49:24 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-23 14:49:24 -HTTP METHOD : GET
2019-04-23 14:49:24 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-23 14:49:24 -参数 : []
2019-04-23 14:49:24 -耗时 : 0
2019-04-23 14:49:24 -返回值 : charts/countOwe
2019-04-23 14:49:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 14:49:24 -HTTP METHOD : GET
2019-04-23 14:49:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 14:49:24 -参数 : [userType]
2019-04-23 14:49:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 14:49:24 -==> Parameters: userType(String)
2019-04-23 14:49:24 -<==      Total: 4
2019-04-23 14:49:24 -耗时 : 7
2019-04-23 14:49:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 14:49:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 14:49:36 -HTTP METHOD : GET
2019-04-23 14:49:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 14:49:36 -参数 : []
2019-04-23 14:49:36 -耗时 : 1
2019-04-23 14:49:36 -返回值 : system/dept/deptTree
2019-04-23 14:49:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 14:49:36 -HTTP METHOD : GET
2019-04-23 14:49:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 14:49:36 -参数 : []
2019-04-23 14:49:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 14:49:36 -==> Parameters: 
2019-04-23 14:49:36 -<==      Total: 3
2019-04-23 14:49:36 -耗时 : 46
2019-04-23 14:49:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 14:49:39 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-23 14:49:39 -HTTP METHOD : POST
2019-04-23 14:49:39 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-23 14:49:39 -参数 : [com.bootdo.elec.vo.ElecVo@137ab63e, com.bootdo.water.vo.WaterVo@40020e6d, com.bootdo.heat.vo.HeatVo@42f883b5]
2019-04-23 14:49:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:39 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:39 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:39 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-23 14:49:39 -==> Parameters: 
2019-04-23 14:49:39 -<==      Total: 1
2019-04-23 14:49:40 -耗时 : 242
2019-04-23 14:49:40 -返回值 : com.bootdo.charts.vo.CountOweVo@58750a48
2019-04-23 14:49:41 -请求地址 : http://localhost:8081/charts/countOwe/exportOwe
2019-04-23 14:49:41 -HTTP METHOD : GET
2019-04-23 14:49:41 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.exportOwe
2019-04-23 14:49:41 -参数 : [com.bootdo.elec.vo.ElecVo@3a8b369, com.bootdo.heat.vo.HeatVo@6301ba64, com.bootdo.water.vo.WaterVo@2b683380, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c4cbea1]
2019-04-23 14:49:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:49:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:49:42 -<==      Total: 0
2019-04-23 14:49:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:49:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:49:42 -<==      Total: 0
2019-04-23 14:49:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-23 14:49:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-23 14:49:42 -<==      Total: 1
2019-04-23 14:49:42 -耗时 : 1098
2019-04-23 14:49:42 -返回值 : null
2019-04-23 14:49:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-23 15:06:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 15:06:41 -==> Parameters: 1(Long)
2019-04-23 15:06:41 -<==      Total: 93
2019-04-23 15:06:41 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-23 15:06:41 -HTTP METHOD : GET
2019-04-23 15:06:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-23 15:06:41 -参数 : []
2019-04-23 15:06:41 -耗时 : 14
2019-04-23 15:06:41 -返回值 : charts/tableElecYY
2019-04-23 15:06:45 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 15:06:45 -HTTP METHOD : GET
2019-04-23 15:06:45 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 15:06:45 -参数 : []
2019-04-23 15:06:45 -耗时 : 1
2019-04-23 15:06:45 -返回值 : charts/countYY
2019-04-23 15:06:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 15:06:46 -HTTP METHOD : GET
2019-04-23 15:06:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 15:06:46 -参数 : [userType]
2019-04-23 15:06:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 15:06:46 -==> Parameters: userType(String)
2019-04-23 15:06:46 -<==      Total: 4
2019-04-23 15:06:46 -耗时 : 7
2019-04-23 15:06:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 15:19:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-04-23 15:49:01 -Validating all active sessions...
2019-04-23 15:49:01 -Finished session validation.  [1] sessions were stopped.
2019-04-23 15:49:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 872]
2019-04-23 16:19:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1305]
2019-04-23 16:43:42 -请求地址 : http://localhost:8081/login;JSESSIONID=29bff59c-d0d4-4db6-ba97-45fc2c87b2a8
2019-04-23 16:43:42 -HTTP METHOD : GET
2019-04-23 16:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 16:43:42 -参数 : [{}]
2019-04-23 16:43:42 -耗时 : 2
2019-04-23 16:43:42 -返回值 : login
2019-04-23 16:43:42 -请求地址 : http://localhost:8081/getVerify
2019-04-23 16:43:42 -HTTP METHOD : GET
2019-04-23 16:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 16:43:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d052947, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d467ea8]
2019-04-23 16:43:42 -4319
2019-04-23 16:43:42 -耗时 : 40
2019-04-23 16:43:42 -返回值 : null
2019-04-23 16:43:42 -请求地址 : http://localhost:8081/login
2019-04-23 16:43:42 -HTTP METHOD : GET
2019-04-23 16:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 16:43:42 -参数 : [{}]
2019-04-23 16:43:42 -耗时 : 19
2019-04-23 16:43:42 -返回值 : login
2019-04-23 16:43:52 -请求地址 : http://localhost:8081/login
2019-04-23 16:43:52 -HTTP METHOD : POST
2019-04-23 16:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 16:43:52 -参数 : [admin, 111111, 4319, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1605e83a]
2019-04-23 16:43:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 16:43:52 -==> Parameters: admin(String)
2019-04-23 16:43:52 -<==      Total: 1
2019-04-23 16:43:52 -耗时 : 657
2019-04-23 16:43:52 -返回值 : {msg=操作成功, code=0}
2019-04-23 16:43:54 -请求地址 : http://localhost:8081/index
2019-04-23 16:43:54 -HTTP METHOD : GET
2019-04-23 16:43:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 16:43:54 -参数 : [{}]
2019-04-23 16:43:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 16:43:54 -==> Parameters: 1(Long)
2019-04-23 16:43:55 -<==      Total: 49
2019-04-23 16:43:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:43:57 -==> Parameters: 1(Long), admin(String), 登录(String), 658(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 16:43:53.437(Timestamp)
2019-04-23 16:43:57 -<==    Updates: 1
2019-04-23 16:43:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 16:43:57 -==> Parameters: 138(Long)
2019-04-23 16:43:57 -<==      Total: 1
2019-04-23 16:43:57 -耗时 : 3545
2019-04-23 16:43:57 -返回值 : index_v1
2019-04-23 16:43:57 -请求地址 : http://localhost:8081/login
2019-04-23 16:43:57 -HTTP METHOD : POST
2019-04-23 16:43:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 16:43:57 -参数 : [admin, 111111, 4319, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71ed3686]
2019-04-23 16:43:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 16:43:57 -==> Parameters: admin(String)
2019-04-23 16:43:57 -<==      Total: 1
2019-04-23 16:43:57 -耗时 : 178
2019-04-23 16:43:57 -返回值 : {msg=操作成功, code=0}
2019-04-23 16:43:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:43:58 -==> Parameters: 1(Long), admin(String), 登录(String), 178(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 16:43:57.992(Timestamp)
2019-04-23 16:43:58 -<==    Updates: 1
2019-04-23 16:43:58 -请求地址 : http://localhost:8081/index
2019-04-23 16:43:58 -HTTP METHOD : GET
2019-04-23 16:43:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 16:43:58 -参数 : [{}]
2019-04-23 16:43:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 16:43:58 -==> Parameters: 1(Long)
2019-04-23 16:43:58 -<==      Total: 49
2019-04-23 16:43:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:43:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 16:43:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 3545(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 16:43:58.261(Timestamp)
2019-04-23 16:43:58 -==> Parameters: 138(Long)
2019-04-23 16:43:58 -<==      Total: 1
2019-04-23 16:43:58 -耗时 : 362
2019-04-23 16:43:58 -返回值 : index_v1
2019-04-23 16:43:58 -<==    Updates: 1
2019-04-23 16:43:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:43:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 362(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 16:43:58.649(Timestamp)
2019-04-23 16:43:59 -<==    Updates: 1
2019-04-23 16:43:59 -请求地址 : http://localhost:8081/main
2019-04-23 16:43:59 -HTTP METHOD : GET
2019-04-23 16:43:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:43:59 -参数 : []
2019-04-23 16:43:59 -耗时 : 1
2019-04-23 16:43:59 -返回值 : main
2019-04-23 16:44:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 16:44:01 -HTTP METHOD : GET
2019-04-23 16:44:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 16:44:01 -参数 : []
2019-04-23 16:44:01 -请求地址 : http://localhost:8081/main
2019-04-23 16:44:01 -HTTP METHOD : GET
2019-04-23 16:44:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:44:01 -参数 : []
2019-04-23 16:44:01 -耗时 : 1
2019-04-23 16:44:01 -返回值 : main
2019-04-23 16:44:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 16:44:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 16:44:01 -<==      Total: 0
2019-04-23 16:44:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 16:44:01 -==> Parameters: 1(Long), 0(String)
2019-04-23 16:44:01 -<==      Total: 1
2019-04-23 16:44:01 -耗时 : 729
2019-04-23 16:44:01 -返回值 : com.bootdo.common.utils.PageUtils@2e720d21
2019-04-23 16:44:21 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 16:44:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 16:44:25 -==> Parameters: 1(Long)
2019-04-23 16:44:25 -<==      Total: 93
2019-04-23 16:44:25 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-23 16:44:25 -HTTP METHOD : GET
2019-04-23 16:44:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-23 16:44:25 -参数 : []
2019-04-23 16:44:25 -耗时 : 0
2019-04-23 16:44:25 -返回值 : charts/tableElecYY
2019-04-23 16:44:27 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-23 16:44:27 -HTTP METHOD : GET
2019-04-23 16:44:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-23 16:44:27 -参数 : []
2019-04-23 16:44:28 -耗时 : 376
2019-04-23 16:44:28 -返回值 : charts/tableElecMM
2019-04-23 16:44:29 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 16:44:29 -HTTP METHOD : GET
2019-04-23 16:44:29 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 16:44:29 -参数 : []
2019-04-23 16:44:29 -耗时 : 1
2019-04-23 16:44:29 -返回值 : charts/countYY
2019-04-23 16:49:01 -Validating all active sessions...
2019-04-23 16:49:01 -Finished session validation.  No sessions were stopped.
2019-04-23 16:49:43 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1739]
2019-04-23 16:53:57 -请求地址 : http://localhost:8081/index
2019-04-23 16:53:57 -HTTP METHOD : GET
2019-04-23 16:53:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 16:53:57 -参数 : [{}]
2019-04-23 16:53:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 16:53:57 -==> Parameters: 1(Long)
2019-04-23 16:53:57 -<==      Total: 49
2019-04-23 16:53:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 16:53:57 -==> Parameters: 138(Long)
2019-04-23 16:53:57 -<==      Total: 1
2019-04-23 16:53:57 -耗时 : 141
2019-04-23 16:53:57 -返回值 : index_v1
2019-04-23 16:53:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:53:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 141(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 16:53:57.353(Timestamp)
2019-04-23 16:53:57 -<==    Updates: 1
2019-04-23 16:53:58 -请求地址 : http://localhost:8081/main
2019-04-23 16:53:58 -HTTP METHOD : GET
2019-04-23 16:53:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:53:58 -参数 : []
2019-04-23 16:53:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 16:53:58 -耗时 : 0
2019-04-23 16:53:58 -HTTP METHOD : GET
2019-04-23 16:53:58 -返回值 : main
2019-04-23 16:53:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 16:53:58 -参数 : []
2019-04-23 16:53:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 16:53:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 16:53:58 -<==      Total: 0
2019-04-23 16:53:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 16:53:58 -==> Parameters: 1(Long), 0(String)
2019-04-23 16:53:58 -<==      Total: 1
2019-04-23 16:53:58 -耗时 : 8
2019-04-23 16:53:58 -返回值 : com.bootdo.common.utils.PageUtils@42783eca
2019-04-23 16:53:58 -请求地址 : http://localhost:8081/main
2019-04-23 16:53:58 -HTTP METHOD : GET
2019-04-23 16:53:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:53:58 -参数 : []
2019-04-23 16:53:58 -耗时 : 0
2019-04-23 16:53:58 -返回值 : main
2019-04-23 16:54:04 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 16:54:04 -HTTP METHOD : GET
2019-04-23 16:54:04 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 16:54:04 -参数 : []
2019-04-23 16:54:04 -耗时 : 15
2019-04-23 16:54:04 -返回值 : charts/countYY
2019-04-23 16:54:18 -请求地址 : http://localhost:8081/index
2019-04-23 16:54:18 -HTTP METHOD : GET
2019-04-23 16:54:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 16:54:18 -参数 : [{}]
2019-04-23 16:54:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 16:54:18 -==> Parameters: 1(Long)
2019-04-23 16:54:18 -<==      Total: 49
2019-04-23 16:54:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 16:54:18 -==> Parameters: 138(Long)
2019-04-23 16:54:18 -<==      Total: 1
2019-04-23 16:54:18 -耗时 : 102
2019-04-23 16:54:18 -返回值 : index_v1
2019-04-23 16:54:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 16:54:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 102(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 16:54:18.321(Timestamp)
2019-04-23 16:54:18 -请求地址 : http://localhost:8081/main
2019-04-23 16:54:18 -HTTP METHOD : GET
2019-04-23 16:54:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:54:18 -参数 : []
2019-04-23 16:54:18 -耗时 : 1
2019-04-23 16:54:18 -返回值 : main
2019-04-23 16:54:18 -<==    Updates: 1
2019-04-23 16:54:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 16:54:18 -HTTP METHOD : GET
2019-04-23 16:54:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 16:54:18 -参数 : []
2019-04-23 16:54:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 16:54:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 16:54:18 -请求地址 : http://localhost:8081/main
2019-04-23 16:54:18 -HTTP METHOD : GET
2019-04-23 16:54:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 16:54:18 -参数 : []
2019-04-23 16:54:18 -<==      Total: 0
2019-04-23 16:54:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 16:54:18 -==> Parameters: 1(Long), 0(String)
2019-04-23 16:54:18 -<==      Total: 1
2019-04-23 16:54:18 -耗时 : 117
2019-04-23 16:54:18 -返回值 : com.bootdo.common.utils.PageUtils@669fac85
2019-04-23 16:54:18 -耗时 : 24
2019-04-23 16:54:18 -返回值 : main
2019-04-23 16:54:22 -请求地址 : http://localhost:8081/charts/countYY
2019-04-23 16:54:22 -HTTP METHOD : GET
2019-04-23 16:54:22 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-23 16:54:22 -参数 : []
2019-04-23 16:54:22 -耗时 : 1
2019-04-23 16:54:22 -返回值 : charts/countYY
2019-04-23 18:55:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 4776 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 18:55:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 18:55:35 -The following profiles are active: dev
2019-04-23 18:55:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 18:55:35 CST 2019]; root of context hierarchy
2019-04-23 18:55:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 18:55:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 18:55:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 18:55:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 18:55:45 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 18:55:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 18:55:45 -Starting service [Tomcat]
2019-04-23 18:55:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 18:55:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 18:55:45 -Initializing Spring embedded WebApplicationContext
2019-04-23 18:55:45 -Root WebApplicationContext: initialization completed in 10196 ms
2019-04-23 18:55:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 18:55:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 18:55:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 18:55:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 18:55:46 -Filter xssFilter was not registered (disabled)
2019-04-23 18:55:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 18:55:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 18:55:46 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 18:55:46 -Servlet dispatcherServlet mapped to [/]
2019-04-23 18:55:50 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 18:55:35 CST 2019]; root of context hierarchy
2019-04-23 18:55:51 -Using default implementation for ThreadExecutor
2019-04-23 18:55:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 18:55:51 -Quartz Scheduler v.2.2.1 created.
2019-04-23 18:55:51 -RAMJobStore initialized.
2019-04-23 18:55:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 18:55:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 18:55:51 -Quartz scheduler version: 2.2.1
2019-04-23 18:55:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-04-23 18:55:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 18:55:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 18:55:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 18:55:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 18:55:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 18:55:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 18:55:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 18:55:58 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 18:55:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 18:55:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 18:55:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 18:55:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 18:55:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 18:55:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 18:55:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 18:55:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 18:55:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 18:55:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 18:55:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 18:55:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 18:55:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 18:55:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 18:55:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 18:55:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 18:55:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 18:55:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 18:55:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 18:55:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 18:55:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 18:55:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 18:55:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 18:55:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 18:55:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 18:55:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 18:55:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 18:55:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 18:55:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 18:55:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 18:55:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 18:55:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 18:55:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 18:55:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 18:55:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 18:55:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 18:55:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 18:55:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 18:55:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 18:55:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 18:55:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 18:55:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 18:55:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 18:55:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 18:55:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 18:55:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 18:55:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 18:55:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 18:55:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 18:55:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 18:55:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 18:55:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 18:55:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 18:55:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 18:55:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 18:55:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 18:55:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 18:55:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 18:55:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 18:55:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 18:55:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 18:55:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 18:55:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 18:55:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 18:55:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 18:55:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 18:55:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 18:55:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 18:55:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 18:55:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 18:55:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 18:55:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 18:55:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 18:55:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 18:55:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 18:55:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 18:55:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 18:55:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 18:55:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 18:55:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 18:55:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 18:55:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 18:55:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 18:55:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 18:55:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 18:56:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 18:56:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 18:55:35 CST 2019]; root of context hierarchy
2019-04-23 18:56:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 18:56:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 18:56:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 18:56:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 18:56:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 18:56:03 -Registering beans for JMX exposure on startup
2019-04-23 18:56:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 18:56:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 18:56:03 -Starting beans in phase 2147483647
2019-04-23 18:56:03 -Context refreshed
2019-04-23 18:56:03 -Found 1 custom documentation plugin(s)
2019-04-23 18:56:03 -Scanning for api listing references
2019-04-23 18:56:04 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_1
2019-04-23 18:56:04 -Generating unique operation named: addUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: editUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: listUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_2
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_3
2019-04-23 18:56:04 -Generating unique operation named: saveUsingPOST_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPOST_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPUT_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 18:56:04 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 18:56:04 -Generating unique operation named: addUsingGET_2
2019-04-23 18:56:04 -Generating unique operation named: editUsingGET_2
2019-04-23 18:56:04 -Generating unique operation named: listUsingGET_2
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_4
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_5
2019-04-23 18:56:04 -Generating unique operation named: saveUsingPOST_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPOST_2
2019-04-23 18:56:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: addUsingGET_3
2019-04-23 18:56:04 -Generating unique operation named: editUsingGET_3
2019-04-23 18:56:04 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: listUsingGET_3
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_6
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_7
2019-04-23 18:56:04 -Generating unique operation named: saveUsingPOST_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingGET_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPOST_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPUT_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 18:56:04 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 18:56:04 -Generating unique operation named: addUsingGET_4
2019-04-23 18:56:04 -Generating unique operation named: editUsingGET_4
2019-04-23 18:56:04 -Generating unique operation named: listUsingGET_4
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_8
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_9
2019-04-23 18:56:04 -Generating unique operation named: saveUsingPOST_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingGET_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPOST_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPUT_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 18:56:04 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 18:56:04 -Generating unique operation named: ElecUsingGET_1
2019-04-23 18:56:04 -Generating unique operation named: addUsingGET_5
2019-04-23 18:56:04 -Generating unique operation named: editUsingGET_5
2019-04-23 18:56:04 -Generating unique operation named: listUsingGET_5
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_10
2019-04-23 18:56:04 -Generating unique operation named: removeUsingPOST_11
2019-04-23 18:56:04 -Generating unique operation named: saveUsingPOST_5
2019-04-23 18:56:04 -Generating unique operation named: updateUsingGET_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPOST_5
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPUT_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 18:56:04 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_6
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_6
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_6
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_7
2019-04-23 18:56:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_7
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_12
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_13
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingGET_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPUT_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 18:56:05 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 18:56:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_7
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_8
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_8
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_14
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_15
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingGET_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPUT_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 18:56:05 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_8
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_9
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_9
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_16
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_17
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingGET_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPUT_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 18:56:05 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_9
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_10
2019-04-23 18:56:05 -Generating unique operation named: infoUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingPOST_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingPUT_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 18:56:05 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_10
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_18
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_19
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_10
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_11
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_20
2019-04-23 18:56:05 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_10
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_11
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_12
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_21
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_10
2019-04-23 18:56:05 -Generating unique operation named: treeUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: treeUsingGET_2
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_11
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_11
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_12
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_13
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_22
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_23
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_11
2019-04-23 18:56:05 -Generating unique operation named: updateUsingGET_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_12
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPUT_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 18:56:05 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_12
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_13
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_14
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_24
2019-04-23 18:56:05 -Generating unique operation named: removeUsingPOST_25
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_12
2019-04-23 18:56:05 -Generating unique operation named: updateUsingGET_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_13
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPUT_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 18:56:05 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_13
2019-04-23 18:56:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 18:56:05 -Generating unique operation named: editUsingGET_14
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_15
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_13
2019-04-23 18:56:05 -Generating unique operation named: saveUsingPOST_14
2019-04-23 18:56:05 -Generating unique operation named: updateUsingPOST_14
2019-04-23 18:56:05 -Generating unique operation named: listUsingGET_16
2019-04-23 18:56:05 -Generating unique operation named: listUsingHEAD_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingPOST_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingPUT_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingPATCH_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingDELETE_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 18:56:05 -Generating unique operation named: listUsingTRACE_1
2019-04-23 18:56:05 -Generating unique operation named: countDDUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 18:56:05 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 18:56:05 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 18:56:05 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 18:56:05 -Generating unique operation named: addUsingGET_14
2019-04-23 18:56:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 18:56:06 -Generating unique operation named: editUsingGET_15
2019-04-23 18:56:06 -Generating unique operation named: listUsingGET_17
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_26
2019-04-23 18:56:06 -Generating unique operation named: saveUsingPOST_15
2019-04-23 18:56:06 -Generating unique operation named: treeUsingGET_3
2019-04-23 18:56:06 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPOST_15
2019-04-23 18:56:06 -Generating unique operation named: addUsingGET_15
2019-04-23 18:56:06 -Generating unique operation named: editUsingGET_16
2019-04-23 18:56:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 18:56:06 -Generating unique operation named: listUsingGET_18
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_27
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_28
2019-04-23 18:56:06 -Generating unique operation named: saveUsingPOST_16
2019-04-23 18:56:06 -Generating unique operation named: updateUsingGET_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPOST_16
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPUT_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 18:56:06 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 18:56:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 18:56:06 -Generating unique operation named: addUsingGET_16
2019-04-23 18:56:06 -Generating unique operation named: editUsingGET_17
2019-04-23 18:56:06 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 18:56:06 -Generating unique operation named: listUsingGET_19
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_29
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_30
2019-04-23 18:56:06 -Generating unique operation named: saveUsingPOST_17
2019-04-23 18:56:06 -Generating unique operation named: updateUsingGET_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPOST_17
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPUT_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 18:56:06 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 18:56:06 -Generating unique operation named: addUsingGET_17
2019-04-23 18:56:06 -Generating unique operation named: editUsingGET_18
2019-04-23 18:56:06 -Generating unique operation named: listUsingGET_20
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_31
2019-04-23 18:56:06 -Generating unique operation named: removeUsingPOST_32
2019-04-23 18:56:06 -Generating unique operation named: saveUsingPOST_18
2019-04-23 18:56:06 -Generating unique operation named: updateUsingGET_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPOST_18
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPUT_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 18:56:06 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 18:56:06 -Starting Quartz Scheduler now
2019-04-23 18:56:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 18:56:06 -Starting...
2019-04-23 18:56:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 18:56:06 -Started.
2019-04-23 18:56:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 18:56:06 -Using a shared selector for servlet write/read
2019-04-23 18:56:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 18:56:06 -Started BootdoApplication in 32.561 seconds (JVM running for 33.465)
2019-04-23 18:56:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 18:56:07 -==> Parameters: 
2019-04-23 18:56:07 -<==      Total: 1
2019-04-23 18:56:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-23 18:57:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 18:57:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 18:57:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 110 ms
2019-04-23 18:57:12 -Enabling session validation scheduler...
2019-04-23 18:57:13 -请求地址 : http://localhost:8081/login;JSESSIONID=bbce11ff-6f51-462c-98e8-b2157114be82
2019-04-23 18:57:13 -HTTP METHOD : GET
2019-04-23 18:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 18:57:13 -参数 : [{}]
2019-04-23 18:57:13 -耗时 : 4
2019-04-23 18:57:13 -返回值 : login
2019-04-23 18:57:18 -请求地址 : http://localhost:8081/getVerify
2019-04-23 18:57:18 -HTTP METHOD : GET
2019-04-23 18:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 18:57:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@513cab22, org.apache.shiro.web.servlet.ShiroHttpServletResponse@143e2f61]
2019-04-23 18:57:23 -8636
2019-04-23 18:57:23 -耗时 : 5669
2019-04-23 18:57:23 -返回值 : null
2019-04-23 18:57:29 -请求地址 : http://localhost:8081/login
2019-04-23 18:57:29 -HTTP METHOD : POST
2019-04-23 18:57:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 18:57:29 -参数 : [admin, 111111, 8636, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7731ed07]
2019-04-23 18:57:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 18:57:30 -==> Parameters: admin(String)
2019-04-23 18:57:30 -<==      Total: 1
2019-04-23 18:57:30 -耗时 : 363
2019-04-23 18:57:30 -返回值 : {msg=操作成功, code=0}
2019-04-23 18:57:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 18:57:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 18:57:30 -==> Parameters: 1(Long), admin(String), 登录(String), 364(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 18:57:30.522(Timestamp)
2019-04-23 18:57:30 -<==    Updates: 1
2019-04-23 18:57:30 -请求地址 : http://localhost:8081/index
2019-04-23 18:57:30 -HTTP METHOD : GET
2019-04-23 18:57:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 18:57:30 -参数 : [{}]
2019-04-23 18:57:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 18:57:31 -==> Parameters: 1(Long)
2019-04-23 18:57:31 -<==      Total: 49
2019-04-23 18:57:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 18:57:31 -==> Parameters: 138(Long)
2019-04-23 18:57:31 -<==      Total: 1
2019-04-23 18:57:31 -耗时 : 687
2019-04-23 18:57:31 -返回值 : index_v1
2019-04-23 18:57:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 18:57:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 687(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 18:57:31.839(Timestamp)
2019-04-23 18:57:31 -<==    Updates: 1
2019-04-23 18:57:32 -请求地址 : http://localhost:8081/main
2019-04-23 18:57:32 -HTTP METHOD : GET
2019-04-23 18:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 18:57:32 -参数 : []
2019-04-23 18:57:32 -耗时 : 1
2019-04-23 18:57:32 -返回值 : main
2019-04-23 18:57:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 18:57:35 -HTTP METHOD : GET
2019-04-23 18:57:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 18:57:35 -参数 : []
2019-04-23 18:57:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 18:57:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 18:57:35 -<==      Total: 0
2019-04-23 18:57:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 18:57:35 -==> Parameters: 1(Long), 0(String)
2019-04-23 18:57:35 -请求地址 : http://localhost:8081/main
2019-04-23 18:57:35 -HTTP METHOD : GET
2019-04-23 18:57:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 18:57:35 -参数 : []
2019-04-23 18:57:35 -耗时 : 2
2019-04-23 18:57:35 -返回值 : main
2019-04-23 18:57:35 -<==      Total: 1
2019-04-23 18:57:35 -耗时 : 249
2019-04-23 18:57:35 -返回值 : com.bootdo.common.utils.PageUtils@249efe0f
2019-04-23 18:57:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 18:57:55 -==> Parameters: 1(Long)
2019-04-23 18:57:55 -<==      Total: 93
2019-04-23 18:57:55 -请求地址 : http://localhost:8081/charts/countDD
2019-04-23 18:57:55 -HTTP METHOD : GET
2019-04-23 18:57:55 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-23 18:57:55 -参数 : []
2019-04-23 18:57:55 -耗时 : 13
2019-04-23 18:57:55 -返回值 : charts/countDD
2019-04-23 18:57:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 18:57:57 -HTTP METHOD : GET
2019-04-23 18:57:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 18:57:57 -参数 : [userType]
2019-04-23 18:57:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 18:57:57 -==> Parameters: userType(String)
2019-04-23 18:57:57 -<==      Total: 4
2019-04-23 18:57:57 -耗时 : 141
2019-04-23 18:57:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 18:58:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 18:58:12 -HTTP METHOD : GET
2019-04-23 18:58:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 18:58:12 -参数 : []
2019-04-23 18:58:12 -耗时 : 0
2019-04-23 18:58:12 -返回值 : system/dept/deptTree
2019-04-23 18:58:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 18:58:13 -HTTP METHOD : GET
2019-04-23 18:58:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 18:58:13 -参数 : []
2019-04-23 18:58:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 18:58:13 -==> Parameters: 
2019-04-23 18:58:13 -<==      Total: 3
2019-04-23 18:58:13 -耗时 : 20
2019-04-23 18:58:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 18:58:15 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-23 18:58:15 -HTTP METHOD : POST
2019-04-23 18:58:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-23 18:58:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2c57c550, com.bootdo.moneyLog.vo.WaterLogVo@357f2cd, com.bootdo.moneyLog.vo.HeatLogVo@62654a8a]
2019-04-23 18:58:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-23 18:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:15 -<==      Total: 1
2019-04-23 18:58:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-23 18:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:15 -<==      Total: 1
2019-04-23 18:58:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-23 18:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:16 -<==      Total: 1
2019-04-23 18:58:16 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-23 18:58:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:16 -<==      Total: 1
2019-04-23 18:58:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-23 18:58:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:16 -<==      Total: 1
2019-04-23 18:58:16 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-23 18:58:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:16 -<==      Total: 1
2019-04-23 18:58:16 -耗时 : 205
2019-04-23 18:58:16 -返回值 : com.bootdo.charts.vo.CountDayVo@667606af
2019-04-23 18:58:17 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-23 18:58:17 -HTTP METHOD : GET
2019-04-23 18:58:17 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-23 18:58:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4e0b66ac, com.bootdo.moneyLog.vo.HeatLogVo@c2ab37a, com.bootdo.moneyLog.vo.WaterLogVo@99ac505, org.apache.shiro.web.servlet.ShiroHttpServletResponse@728f951c]
2019-04-23 18:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-23 18:58:18 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:18 -<==      Total: 4
2019-04-23 18:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-23 18:58:18 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:18 -<==      Total: 1
2019-04-23 18:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-23 18:58:18 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-23 18:58:18 -<==      Total: 1
2019-04-23 18:58:18 -耗时 : 1310
2019-04-23 18:58:18 -返回值 : null
2019-04-23 19:00:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-23 19:00:15 -HTTP METHOD : GET
2019-04-23 19:00:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-23 19:00:15 -参数 : []
2019-04-23 19:00:15 -耗时 : 0
2019-04-23 19:00:15 -返回值 : /moneyList/moneyList
2019-04-23 19:00:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 19:00:22 -HTTP METHOD : GET
2019-04-23 19:00:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 19:00:22 -参数 : []
2019-04-23 19:00:22 -耗时 : 0
2019-04-23 19:00:22 -返回值 : system/dept/deptTree
2019-04-23 19:00:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 19:00:22 -HTTP METHOD : GET
2019-04-23 19:00:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 19:00:22 -参数 : []
2019-04-23 19:00:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 19:00:22 -==> Parameters: 
2019-04-23 19:00:22 -<==      Total: 3
2019-04-23 19:00:22 -耗时 : 5
2019-04-23 19:00:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 19:00:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 19:00:26 -HTTP METHOD : GET
2019-04-23 19:00:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 19:00:26 -参数 : []
2019-04-23 19:00:26 -耗时 : 1
2019-04-23 19:00:26 -返回值 : system/dept/deptTree
2019-04-23 19:00:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 19:00:26 -HTTP METHOD : GET
2019-04-23 19:00:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 19:00:26 -参数 : []
2019-04-23 19:00:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 19:00:26 -==> Parameters: 
2019-04-23 19:00:26 -<==      Total: 3
2019-04-23 19:00:26 -耗时 : 5
2019-04-23 19:00:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 19:00:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 19:00:35 -HTTP METHOD : POST
2019-04-23 19:00:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 19:00:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@78026ee]
2019-04-23 19:00:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 19:00:35 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 19:00:35 -<==      Total: 3
2019-04-23 19:00:35 -耗时 : 491
2019-04-23 19:00:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@31aad0d0, com.bootdo.moneyList.damain.MoneyListDO@59bae080, com.bootdo.moneyList.damain.MoneyListDO@a44b7b5]
2019-04-23 19:01:03 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-23 19:01:03 -HTTP METHOD : POST
2019-04-23 19:01:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-23 19:01:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@12df6f2f]
2019-04-23 19:01:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 19:01:03 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 19:01:03 -<==      Total: 3
2019-04-23 19:01:03 -==>  Preparing: update ELEC set elec_sum = elec_sum + ? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 19:01:03 -==> Parameters: 1(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 19:01:03 -<==    Updates: 1
2019-04-23 19:01:03 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 19:01:03 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), null, 1(BigDecimal), 2019-04-23 19:01:03.969(Timestamp), 2019-02(String), 1(Long), 2019-04-23 19:01:03.969(Timestamp), 1(Long), null
2019-04-23 19:01:04 -{conn-10001, pstmt-20021} execute error. insert into elec_log
		(
		
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_type`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:44)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:171)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$59275f82.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 19:01:04 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-04-23 19:01:04 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-04-23 19:01:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 19:01:04 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:44)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:171)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$59275f82.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-23 19:01:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null(String), null, 2019-04-23 19:01:04.31(Timestamp)
2019-04-23 19:01:04 -<==    Updates: 1
2019-04-23 19:01:12 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-23 19:01:12 -HTTP METHOD : POST
2019-04-23 19:01:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-23 19:01:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d3d6e2b]
2019-04-23 19:01:12 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 19:01:12 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 19:01:12 -<==      Total: 3
2019-04-23 19:01:12 -==>  Preparing: update ELEC set elec_sum = elec_sum + ? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 19:01:12 -==> Parameters: 1(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 19:01:12 -<==    Updates: 1
2019-04-23 19:01:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 19:01:12 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), null, 1(BigDecimal), 2019-04-23 19:01:12.334(Timestamp), 2019-02(String), 1(Long), 2019-04-23 19:01:12.334(Timestamp), 1(Long), null
2019-04-23 19:01:12 -{conn-10001, pstmt-20022} execute error. insert into elec_log
		(
		
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_type`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:44)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:171)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$59275f82.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 19:01:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 19:01:12 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:44)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:171)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$59275f82.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-23 19:01:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null
; ]; Column 'elec_type' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_type' cannot be null(String), null, 2019-04-23 19:01:12.343(Timestamp)
2019-04-23 19:01:12 -<==    Updates: 1
2019-04-23 19:26:59 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 424]
2019-04-23 19:56:59 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 857]
2019-04-23 19:57:13 -Validating all active sessions...
2019-04-23 19:57:13 -Finished session validation.  [1] sessions were stopped.
2019-04-23 20:42:50 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 996]
2019-04-23 20:42:51 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 20:47:32 -Starting BootdoApplication on ZJZL-20180906VX with PID 10816 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-23 20:47:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-23 20:47:32 -The following profiles are active: dev
2019-04-23 20:47:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 20:47:32 CST 2019]; root of context hierarchy
2019-04-23 20:47:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-23 20:47:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-23 20:47:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-23 20:47:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-23 20:47:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-23 20:47:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-23 20:47:40 -Starting service [Tomcat]
2019-04-23 20:47:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-23 20:47:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-23 20:47:41 -Initializing Spring embedded WebApplicationContext
2019-04-23 20:47:41 -Root WebApplicationContext: initialization completed in 8229 ms
2019-04-23 20:47:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-23 20:47:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-23 20:47:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-23 20:47:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-23 20:47:41 -Filter xssFilter was not registered (disabled)
2019-04-23 20:47:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-23 20:47:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-23 20:47:41 -Servlet statViewServlet mapped to [/druid/*]
2019-04-23 20:47:41 -Servlet dispatcherServlet mapped to [/]
2019-04-23 20:47:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 20:47:32 CST 2019]; root of context hierarchy
2019-04-23 20:47:46 -Using default implementation for ThreadExecutor
2019-04-23 20:47:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-23 20:47:47 -Quartz Scheduler v.2.2.1 created.
2019-04-23 20:47:47 -RAMJobStore initialized.
2019-04-23 20:47:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-23 20:47:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-23 20:47:47 -Quartz scheduler version: 2.2.1
2019-04-23 20:47:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-23 20:47:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-23 20:47:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-23 20:47:49 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:49 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-23 20:47:49 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:49 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:49 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-23 20:47:49 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-23 20:47:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-23 20:47:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-23 20:47:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-23 20:47:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-23 20:47:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-23 20:47:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-23 20:47:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-23 20:47:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-23 20:47:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-23 20:47:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-23 20:47:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 20:47:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-23 20:47:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-23 20:47:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-23 20:47:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-23 20:47:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-23 20:47:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-23 20:47:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-23 20:47:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-23 20:47:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-23 20:47:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-23 20:47:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-23 20:47:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-23 20:47:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-23 20:47:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-23 20:47:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-23 20:47:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-23 20:47:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-23 20:47:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-23 20:47:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-23 20:47:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-23 20:47:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-23 20:47:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-23 20:47:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-23 20:47:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-23 20:47:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-23 20:47:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 20:47:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 20:47:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-23 20:47:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-23 20:47:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-23 20:47:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-23 20:47:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-23 20:47:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-23 20:47:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-23 20:47:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-23 20:47:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-23 20:47:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-23 20:47:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-23 20:47:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-23 20:47:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-23 20:47:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-23 20:47:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-23 20:47:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-23 20:47:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-23 20:47:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-23 20:47:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-23 20:47:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-23 20:47:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-23 20:47:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-23 20:47:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-23 20:47:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-23 20:47:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-23 20:47:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-23 20:47:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-23 20:47:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-23 20:47:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-23 20:47:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-23 20:47:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 20:47:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-23 20:47:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-23 20:47:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-23 20:47:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-23 20:47:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-23 20:47:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-23 20:47:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-23 20:47:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-23 20:47:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-23 20:47:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-23 20:47:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-23 20:47:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-23 20:47:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-23 20:47:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-23 20:47:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-23 20:47:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-23 20:47:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-23 20:47:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-23 20:47:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 20:47:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 23 20:47:32 CST 2019]; root of context hierarchy
2019-04-23 20:47:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 20:47:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 20:47:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-23 20:47:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-23 20:47:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-23 20:47:58 -Registering beans for JMX exposure on startup
2019-04-23 20:47:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-23 20:47:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-23 20:47:58 -Starting beans in phase 2147483647
2019-04-23 20:47:58 -Context refreshed
2019-04-23 20:47:58 -Found 1 custom documentation plugin(s)
2019-04-23 20:47:58 -Scanning for api listing references
2019-04-23 20:47:59 -Generating unique operation named: getCountDUsingPOST_1
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_1
2019-04-23 20:47:59 -Generating unique operation named: addUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: editUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: listUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_2
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_3
2019-04-23 20:47:59 -Generating unique operation named: saveUsingPOST_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingHEAD_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPOST_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPUT_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPATCH_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingDELETE_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-23 20:47:59 -Generating unique operation named: updateUsingTRACE_1
2019-04-23 20:47:59 -Generating unique operation named: addUsingGET_2
2019-04-23 20:47:59 -Generating unique operation named: editUsingGET_2
2019-04-23 20:47:59 -Generating unique operation named: listUsingGET_2
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_4
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_5
2019-04-23 20:47:59 -Generating unique operation named: saveUsingPOST_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPOST_2
2019-04-23 20:47:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: addUsingGET_3
2019-04-23 20:47:59 -Generating unique operation named: editUsingGET_3
2019-04-23 20:47:59 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-23 20:47:59 -Generating unique operation named: listUsingGET_3
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_6
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_7
2019-04-23 20:47:59 -Generating unique operation named: saveUsingPOST_3
2019-04-23 20:47:59 -Generating unique operation named: updateUsingGET_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingHEAD_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPOST_3
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPUT_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPATCH_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingDELETE_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-23 20:47:59 -Generating unique operation named: updateUsingTRACE_2
2019-04-23 20:47:59 -Generating unique operation named: addUsingGET_4
2019-04-23 20:47:59 -Generating unique operation named: editUsingGET_4
2019-04-23 20:47:59 -Generating unique operation named: listUsingGET_4
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_8
2019-04-23 20:47:59 -Generating unique operation named: removeUsingPOST_9
2019-04-23 20:47:59 -Generating unique operation named: saveUsingPOST_4
2019-04-23 20:47:59 -Generating unique operation named: updateUsingGET_3
2019-04-23 20:47:59 -Generating unique operation named: updateUsingHEAD_3
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPOST_4
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPUT_3
2019-04-23 20:47:59 -Generating unique operation named: updateUsingPATCH_3
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_3
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_3
2019-04-23 20:48:00 -Generating unique operation named: ElecUsingGET_1
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_5
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_5
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_5
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_10
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_11
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_4
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_6
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_6
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_6
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_7
2019-04-23 20:48:00 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_7
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_12
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_13
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_5
2019-04-23 20:48:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_7
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_8
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_8
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_14
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_15
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_6
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_8
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_9
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_9
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_16
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_17
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_7
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_9
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_10
2019-04-23 20:48:00 -Generating unique operation named: infoUsingGET_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingHEAD_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingPOST_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingPUT_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingPATCH_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingDELETE_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-23 20:48:00 -Generating unique operation named: infoUsingTRACE_1
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_10
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_18
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_19
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_10
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_11
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_20
2019-04-23 20:48:00 -Generating unique operation named: welcomeUsingGET_1
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_10
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_11
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_12
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_21
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_10
2019-04-23 20:48:00 -Generating unique operation named: treeUsingGET_1
2019-04-23 20:48:00 -Generating unique operation named: treeUsingGET_2
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_11
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_11
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_12
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_13
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_22
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_23
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_11
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_12
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_8
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_12
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_13
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_14
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_24
2019-04-23 20:48:00 -Generating unique operation named: removeUsingPOST_25
2019-04-23 20:48:00 -Generating unique operation named: saveUsingPOST_12
2019-04-23 20:48:00 -Generating unique operation named: updateUsingGET_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingHEAD_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPOST_13
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPUT_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingPATCH_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingDELETE_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-23 20:48:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-23 20:48:00 -Generating unique operation named: addUsingGET_13
2019-04-23 20:48:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-23 20:48:00 -Generating unique operation named: editUsingGET_14
2019-04-23 20:48:00 -Generating unique operation named: listUsingGET_15
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_13
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_14
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPOST_14
2019-04-23 20:48:01 -Generating unique operation named: listUsingGET_16
2019-04-23 20:48:01 -Generating unique operation named: listUsingHEAD_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingPOST_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingPUT_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingPATCH_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingDELETE_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingOPTIONS_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingTRACE_1
2019-04-23 20:48:01 -Generating unique operation named: countDDUsingGET_1
2019-04-23 20:48:01 -Generating unique operation named: exportDDUsingGET_1
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-23 20:48:01 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-23 20:48:01 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-23 20:48:01 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-23 20:48:01 -Generating unique operation named: addUsingGET_14
2019-04-23 20:48:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-23 20:48:01 -Generating unique operation named: editUsingGET_15
2019-04-23 20:48:01 -Generating unique operation named: listUsingGET_17
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_26
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_15
2019-04-23 20:48:01 -Generating unique operation named: treeUsingGET_3
2019-04-23 20:48:01 -Generating unique operation named: treeViewUsingGET_1
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPOST_15
2019-04-23 20:48:01 -Generating unique operation named: addUsingGET_15
2019-04-23 20:48:01 -Generating unique operation named: editUsingGET_16
2019-04-23 20:48:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-23 20:48:01 -Generating unique operation named: listUsingGET_18
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_27
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_28
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_16
2019-04-23 20:48:01 -Generating unique operation named: updateUsingGET_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingHEAD_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPOST_16
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPUT_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPATCH_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingDELETE_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-23 20:48:01 -Generating unique operation named: updateUsingTRACE_10
2019-04-23 20:48:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-23 20:48:01 -Generating unique operation named: addUsingGET_16
2019-04-23 20:48:01 -Generating unique operation named: editUsingGET_17
2019-04-23 20:48:01 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-23 20:48:01 -Generating unique operation named: listUsingGET_19
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_29
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_30
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_17
2019-04-23 20:48:01 -Generating unique operation named: updateUsingGET_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingHEAD_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPOST_17
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPUT_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPATCH_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingDELETE_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-23 20:48:01 -Generating unique operation named: updateUsingTRACE_11
2019-04-23 20:48:01 -Generating unique operation named: addUsingGET_17
2019-04-23 20:48:01 -Generating unique operation named: editUsingGET_18
2019-04-23 20:48:01 -Generating unique operation named: listUsingGET_20
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_31
2019-04-23 20:48:01 -Generating unique operation named: removeUsingPOST_32
2019-04-23 20:48:01 -Generating unique operation named: saveUsingPOST_18
2019-04-23 20:48:01 -Generating unique operation named: updateUsingGET_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingHEAD_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPOST_18
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPUT_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingPATCH_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingDELETE_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-23 20:48:01 -Generating unique operation named: updateUsingTRACE_12
2019-04-23 20:48:01 -Starting Quartz Scheduler now
2019-04-23 20:48:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-23 20:48:01 -Starting...
2019-04-23 20:48:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-23 20:48:01 -Started.
2019-04-23 20:48:01 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-23 20:48:01 -Using a shared selector for servlet write/read
2019-04-23 20:48:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-23 20:48:01 -Started BootdoApplication in 29.984 seconds (JVM running for 30.83)
2019-04-23 20:48:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-23 20:48:02 -==> Parameters: 
2019-04-23 20:48:02 -<==      Total: 1
2019-04-23 20:48:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-23 20:48:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-23 20:48:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
2019-04-23 20:48:12 -Enabling session validation scheduler...
2019-04-23 20:48:12 -请求地址 : http://localhost:8081/login;JSESSIONID=678298fc-ba1a-4ffa-aa44-09d499b0e271
2019-04-23 20:48:12 -HTTP METHOD : GET
2019-04-23 20:48:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 20:48:12 -参数 : [{}]
2019-04-23 20:48:12 -耗时 : 3
2019-04-23 20:48:12 -返回值 : login
2019-04-23 20:48:15 -请求地址 : http://localhost:8081/getVerify
2019-04-23 20:48:15 -HTTP METHOD : GET
2019-04-23 20:48:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-23 20:48:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f7e9e6e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36eeb2af]
2019-04-23 20:48:28 -3254
2019-04-23 20:48:28 -耗时 : 13552
2019-04-23 20:48:28 -返回值 : null
2019-04-23 20:48:28 -请求地址 : http://localhost:8081/login
2019-04-23 20:48:28 -HTTP METHOD : GET
2019-04-23 20:48:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-23 20:48:28 -参数 : [{}]
2019-04-23 20:48:28 -耗时 : 0
2019-04-23 20:48:28 -返回值 : login
2019-04-23 20:48:41 -请求地址 : http://localhost:8081/login
2019-04-23 20:48:41 -HTTP METHOD : POST
2019-04-23 20:48:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-23 20:48:41 -参数 : [admin, 111111, 3254, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b0fc831]
2019-04-23 20:48:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-23 20:48:41 -==> Parameters: admin(String)
2019-04-23 20:48:41 -<==      Total: 1
2019-04-23 20:48:41 -耗时 : 289
2019-04-23 20:48:41 -返回值 : {msg=操作成功, code=0}
2019-04-23 20:48:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-23 20:48:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:48:41 -==> Parameters: 1(Long), admin(String), 登录(String), 289(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-23 20:48:41.859(Timestamp)
2019-04-23 20:48:42 -<==    Updates: 1
2019-04-23 20:48:42 -请求地址 : http://localhost:8081/index
2019-04-23 20:48:42 -HTTP METHOD : GET
2019-04-23 20:48:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 20:48:42 -参数 : [{}]
2019-04-23 20:48:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 20:48:42 -==> Parameters: 1(Long)
2019-04-23 20:48:42 -<==      Total: 49
2019-04-23 20:48:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 20:48:42 -==> Parameters: 138(Long)
2019-04-23 20:48:42 -<==      Total: 1
2019-04-23 20:48:42 -耗时 : 475
2019-04-23 20:48:42 -返回值 : index_v1
2019-04-23 20:48:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:48:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 475(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 20:48:42.817(Timestamp)
2019-04-23 20:48:42 -<==    Updates: 1
2019-04-23 20:48:43 -请求地址 : http://localhost:8081/main
2019-04-23 20:48:43 -HTTP METHOD : GET
2019-04-23 20:48:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 20:48:43 -参数 : []
2019-04-23 20:48:43 -耗时 : 1
2019-04-23 20:48:43 -返回值 : main
2019-04-23 20:48:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 20:48:43 -HTTP METHOD : GET
2019-04-23 20:48:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 20:48:43 -参数 : []
2019-04-23 20:48:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 20:48:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 20:48:43 -请求地址 : http://localhost:8081/main
2019-04-23 20:48:43 -<==      Total: 0
2019-04-23 20:48:43 -HTTP METHOD : GET
2019-04-23 20:48:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 20:48:43 -参数 : []
2019-04-23 20:48:43 -耗时 : 1
2019-04-23 20:48:43 -返回值 : main
2019-04-23 20:48:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 20:48:43 -==> Parameters: 1(Long), 0(String)
2019-04-23 20:48:43 -<==      Total: 1
2019-04-23 20:48:43 -耗时 : 109
2019-04-23 20:48:43 -返回值 : com.bootdo.common.utils.PageUtils@7310e7a1
2019-04-23 20:48:52 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-04-23 20:49:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 20:49:02 -==> Parameters: 1(Long)
2019-04-23 20:49:02 -<==      Total: 93
2019-04-23 20:49:02 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-23 20:49:02 -HTTP METHOD : GET
2019-04-23 20:49:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-23 20:49:02 -参数 : []
2019-04-23 20:49:02 -耗时 : 1
2019-04-23 20:49:02 -返回值 : /moneyList/moneyList
2019-04-23 20:49:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 20:49:06 -HTTP METHOD : GET
2019-04-23 20:49:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 20:49:06 -参数 : []
2019-04-23 20:49:06 -耗时 : 1
2019-04-23 20:49:06 -返回值 : system/dept/deptTree
2019-04-23 20:49:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 20:49:07 -HTTP METHOD : GET
2019-04-23 20:49:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 20:49:07 -参数 : []
2019-04-23 20:49:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 20:49:07 -==> Parameters: 
2019-04-23 20:49:07 -<==      Total: 3
2019-04-23 20:49:07 -耗时 : 93
2019-04-23 20:49:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 20:49:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 20:49:14 -HTTP METHOD : POST
2019-04-23 20:49:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 20:49:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1454e88]
2019-04-23 20:49:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:49:14 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:49:14 -<==      Total: 3
2019-04-23 20:49:14 -耗时 : 177
2019-04-23 20:49:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6f2fe860, com.bootdo.moneyList.damain.MoneyListDO@12bc01a7, com.bootdo.moneyList.damain.MoneyListDO@15b02514]
2019-04-23 20:49:19 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-23 20:49:19 -HTTP METHOD : POST
2019-04-23 20:49:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-23 20:49:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@84a0bf0]
2019-04-23 20:49:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:49:19 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:49:19 -<==      Total: 3
2019-04-23 20:49:19 -==>  Preparing: update ELEC set elec_sum = elec_sum + ? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:49:19 -==> Parameters: 1(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:49:19 -<==    Updates: 1
2019-04-23 20:49:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:49:19 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 1(BigDecimal), 2019-04-23 20:49:19.626(Timestamp), 2019-02(String), 1(Long), 2019-04-23 20:49:19.626(Timestamp), 1(Long), null
2019-04-23 20:49:19 -<==    Updates: 1
2019-04-23 20:49:19 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum, he.heat_area,he.heat_cost,he.heat_price,he.heat_sum,wa.water_price,wa.water_sum from elec el,heat he,water wa WHERE el.user_id = he.user_id and he.user_id = wa.user_id and el.create_time = he.create_time and he.create_time = wa.create_time and el.user_org = he.user_org and he.user_org = wa.user_org and el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-04-23 20:49:19 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-04-23 20:49:19 -<==      Total: 1
2019-04-23 20:49:19 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:49:19 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -53.77(BigDecimal), 1(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 10.00(BigDecimal), null, 15.00(BigDecimal), null, -110.00(BigDecimal), null, null, null, null, null, null, null, null, null
2019-04-23 20:49:20 -{conn-10001, pstmt-20013} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`print_state`, 
			`print_date`, 
			`cost_poper`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:265)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$b132f2a1.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 20:49:20 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-04-23 20:49:20 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-04-23 20:49:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:49:20 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `print_state`,     `print_date`,     `cost_poper`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
; ]; Column 'heat_money' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `print_state`,     `print_date`,     `cost_poper`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
; ]; Column 'heat_money' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:265)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$b132f2a1.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-04-23 20:49:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `print_state`,     `print_date`,     `cost_poper`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null
; ]; Column 'heat_money' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'heat_money' cannot be null(String), null, 2019-04-23 20:49:20.264(Timestamp)
2019-04-23 20:49:20 -<==    Updates: 1
2019-04-23 20:52:15 -请求地址 : http://localhost:8081/index
2019-04-23 20:52:15 -HTTP METHOD : GET
2019-04-23 20:52:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-23 20:52:15 -参数 : [{}]
2019-04-23 20:52:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-23 20:52:15 -==> Parameters: 1(Long)
2019-04-23 20:52:15 -<==      Total: 49
2019-04-23 20:52:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-23 20:52:15 -==> Parameters: 138(Long)
2019-04-23 20:52:15 -<==      Total: 1
2019-04-23 20:52:15 -耗时 : 35
2019-04-23 20:52:15 -返回值 : index_v1
2019-04-23 20:52:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:52:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-23 20:52:15.18(Timestamp)
2019-04-23 20:52:15 -请求地址 : http://localhost:8081/main
2019-04-23 20:52:15 -HTTP METHOD : GET
2019-04-23 20:52:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 20:52:15 -参数 : []
2019-04-23 20:52:15 -耗时 : 1
2019-04-23 20:52:15 -返回值 : main
2019-04-23 20:52:15 -<==    Updates: 1
2019-04-23 20:52:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-23 20:52:15 -HTTP METHOD : GET
2019-04-23 20:52:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-23 20:52:15 -参数 : []
2019-04-23 20:52:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-23 20:52:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-23 20:52:15 -<==      Total: 0
2019-04-23 20:52:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-23 20:52:15 -==> Parameters: 1(Long), 0(String)
2019-04-23 20:52:15 -<==      Total: 1
2019-04-23 20:52:15 -耗时 : 10
2019-04-23 20:52:15 -返回值 : com.bootdo.common.utils.PageUtils@5e82ce4
2019-04-23 20:52:16 -请求地址 : http://localhost:8081/main
2019-04-23 20:52:16 -HTTP METHOD : GET
2019-04-23 20:52:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-23 20:52:16 -参数 : []
2019-04-23 20:52:16 -耗时 : 4
2019-04-23 20:52:16 -返回值 : main
2019-04-23 20:52:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-23 20:52:21 -HTTP METHOD : GET
2019-04-23 20:52:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-23 20:52:21 -参数 : []
2019-04-23 20:52:21 -耗时 : 0
2019-04-23 20:52:21 -返回值 : /moneyList/moneyList
2019-04-23 20:52:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-23 20:52:25 -HTTP METHOD : GET
2019-04-23 20:52:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-23 20:52:25 -参数 : []
2019-04-23 20:52:25 -耗时 : 1
2019-04-23 20:52:25 -返回值 : system/dept/deptTree
2019-04-23 20:52:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-23 20:52:26 -HTTP METHOD : GET
2019-04-23 20:52:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-23 20:52:26 -参数 : []
2019-04-23 20:52:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-23 20:52:26 -==> Parameters: 
2019-04-23 20:52:26 -<==      Total: 3
2019-04-23 20:52:26 -耗时 : 5
2019-04-23 20:52:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-23 20:52:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 20:52:29 -HTTP METHOD : POST
2019-04-23 20:52:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 20:52:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@53239d3f]
2019-04-23 20:52:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:52:29 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:52:29 -<==      Total: 3
2019-04-23 20:52:29 -耗时 : 6
2019-04-23 20:52:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@56584f7a, com.bootdo.moneyList.damain.MoneyListDO@195deaeb, com.bootdo.moneyList.damain.MoneyListDO@426c5251]
2019-04-23 20:52:33 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-23 20:52:33 -HTTP METHOD : POST
2019-04-23 20:52:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-23 20:52:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6f22caf7]
2019-04-23 20:52:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:52:33 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:52:33 -<==      Total: 3
2019-04-23 20:52:33 -==>  Preparing: update ELEC set elec_sum = elec_sum + ? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:52:33 -==> Parameters: 1(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:52:33 -<==    Updates: 1
2019-04-23 20:52:33 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:52:33 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 1(BigDecimal), 2019-04-23 20:52:33.133(Timestamp), 2019-02(String), 1(Long), 2019-04-23 20:52:33.133(Timestamp), 1(Long), null
2019-04-23 20:52:33 -<==    Updates: 1
2019-04-23 20:52:33 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum, he.heat_area,he.heat_cost,he.heat_price,he.heat_sum,wa.water_price,wa.water_sum from elec el,heat he,water wa WHERE el.user_id = he.user_id and he.user_id = wa.user_id and el.create_time = he.create_time and he.create_time = wa.create_time and el.user_org = he.user_org and he.user_org = wa.user_org and el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-04-23 20:52:33 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-04-23 20:52:33 -<==      Total: 1
2019-04-23 20:52:33 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:52:33 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -52.77(BigDecimal), 1(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 10.00(BigDecimal), null, 15.00(BigDecimal), null, -110.00(BigDecimal), null, null, null, null, null, null, null, null, null
2019-04-23 20:52:33 -<==    Updates: 1
2019-04-23 20:52:33 -耗时 : 223
2019-04-23 20:52:33 -返回值 : 0
2019-04-23 20:52:34 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 20:52:34 -HTTP METHOD : POST
2019-04-23 20:52:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 20:52:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6d9b6823]
2019-04-23 20:52:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:52:34 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:52:34 -<==      Total: 3
2019-04-23 20:52:34 -耗时 : 5
2019-04-23 20:52:34 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@479028be, com.bootdo.moneyList.damain.MoneyListDO@71fc8a1f, com.bootdo.moneyList.damain.MoneyListDO@1e510c]
2019-04-23 20:52:56 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-23 20:55:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-23 20:55:02 -HTTP METHOD : POST
2019-04-23 20:55:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-23 20:55:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@70186cc]
2019-04-23 20:55:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:55:02 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:55:02 -<==      Total: 3
2019-04-23 20:55:02 -==>  Preparing: update ELEC set elec_sum = elec_sum + ? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:55:02 -==> Parameters: 12(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:55:02 -<==    Updates: 1
2019-04-23 20:55:02 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:55:02 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 12(BigDecimal), 2019-04-23 20:55:02.337(Timestamp), 2019-02(String), 1(Long), 2019-04-23 20:55:02.337(Timestamp), 1(Long), null
2019-04-23 20:55:02 -<==    Updates: 1
2019-04-23 20:55:02 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum, he.heat_area,he.heat_cost,he.heat_price,he.heat_sum,wa.water_price,wa.water_sum from elec el,heat he,water wa WHERE el.user_id = he.user_id and he.user_id = wa.user_id and el.create_time = he.create_time and he.create_time = wa.create_time and el.user_org = he.user_org and he.user_org = wa.user_org and el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-04-23 20:55:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-04-23 20:55:02 -<==      Total: 1
2019-04-23 20:55:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-23 20:55:02 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 100(String), 250(String), 1(Integer), 1.000(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -40.77(BigDecimal), 12(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 10.00(BigDecimal), null, 15.00(BigDecimal), null, -110.00(BigDecimal), null, null, null, null, null, null, null, null, null
2019-04-23 20:55:02 -<==    Updates: 1
2019-04-23 20:55:02 -耗时 : 245
2019-04-23 20:55:02 -返回值 : 0
2019-04-23 20:55:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 20:55:03 -HTTP METHOD : POST
2019-04-23 20:55:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 20:55:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20092204]
2019-04-23 20:55:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-23 20:55:03 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-23 20:55:03 -<==      Total: 3
2019-04-23 20:55:03 -耗时 : 7
2019-04-23 20:55:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@75936d41, com.bootdo.moneyList.damain.MoneyListDO@6fcd0769, com.bootdo.moneyList.damain.MoneyListDO@63d0196]
2019-04-23 20:55:12 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-23 20:55:12 -HTTP METHOD : POST
2019-04-23 20:55:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-23 20:55:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@755dbc8f]
2019-04-23 20:55:12 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-04-23 20:55:12 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-04-23 20:55:12 -<==      Total: 1
2019-04-23 20:55:12 -耗时 : 22
2019-04-23 20:55:12 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7120e1ad]
2019-04-23 20:55:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-23 20:55:13 -HTTP METHOD : POST
2019-04-23 20:55:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-23 20:55:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@79849308]
2019-04-23 20:55:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-04-23 20:55:13 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String), 2019-02(String), 2(String), 1-0001(String), 李文英(String), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-04-23 20:55:13 -<==      Total: 3
2019-04-23 20:55:13 -耗时 : 12
2019-04-23 20:55:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1b4f8522, com.bootdo.moneyList.damain.MoneyListDO@3b11b2c0, com.bootdo.moneyList.damain.MoneyListDO@66507a79]
2019-04-23 21:01:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-23 21:01:37 -==> Parameters: 1(Long)
2019-04-23 21:01:37 -<==      Total: 93
2019-04-23 21:01:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-23 21:01:37 -HTTP METHOD : GET
2019-04-23 21:01:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-23 21:01:37 -参数 : []
2019-04-23 21:01:37 -耗时 : 0
2019-04-23 21:01:37 -返回值 : /moneyLog/elecLog/elecLog
2019-04-23 21:01:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-23 21:01:38 -HTTP METHOD : GET
2019-04-23 21:01:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-23 21:01:38 -参数 : [userType]
2019-04-23 21:01:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-23 21:01:38 -==> Parameters: userType(String)
2019-04-23 21:01:38 -<==      Total: 4
2019-04-23 21:01:38 -耗时 : 136
2019-04-23 21:01:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-23 21:01:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-23 21:01:39 -HTTP METHOD : GET
2019-04-23 21:01:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-23 21:01:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-23 21:01:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-23 21:01:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-23 21:01:39 -<==      Total: 10
2019-04-23 21:01:39 -==>  Preparing: select count(*) from elec_log 
2019-04-23 21:01:39 -==> Parameters: 
2019-04-23 21:01:39 -<==      Total: 1
2019-04-23 21:01:39 -耗时 : 109
2019-04-23 21:01:39 -返回值 : com.bootdo.common.utils.PageUtils@58ca4010
